(set-option :print-success false)
(set-info :smt-lib-version 2.0)
(set-option :AUTO_CONFIG false)
(set-option :pp.bv_literals false)
(set-option :MODEL.V2 true)
(set-option :smt.PHASE_SELECTION 0)
(set-option :smt.RESTART_STRATEGY 0)
(set-option :smt.RESTART_FACTOR |1.5|)
(set-option :smt.ARITH.RANDOM_INITIAL_VALUE true)
(set-option :smt.CASE_SPLIT 3)
(set-option :smt.DELAY_UNITS true)
(set-option :NNF.SK_HACK true)
(set-option :smt.MBQI false)
(set-option :smt.QI.EAGER_THRESHOLD 100)
(set-option :TYPE_CHECK true)
(set-option :smt.BV.REFLECT true)
(set-option :TIMEOUT 0)
; done setting options


(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-sort T@ref 0)
(declare-fun r0 () T@ref)
(declare-fun r1 () T@ref)
(declare-fun r2 () T@ref)
(declare-fun %lbl%+2321 () Bool)
(declare-fun %lbl%@4900 () Bool)
(declare-sort |T@[ref]Int| 0)
(declare-fun |Select_[ref]$int| (|T@[ref]Int| T@ref) Int)
(declare-fun heap@78 () |T@[ref]Int|)
(declare-fun %lbl%+2319 () Bool)
(declare-fun heap@77 () |T@[ref]Int|)
(declare-fun |Store_[ref]$int| (|T@[ref]Int| T@ref Int) |T@[ref]Int|)
(assert (forall ( ( ?x0 |T@[ref]Int|) ( ?x1 T@ref) ( ?x2 Int)) (= (|Select_[ref]$int| (|Store_[ref]$int| ?x0 ?x1 ?x2) ?x1)  ?x2)))
(assert (forall ( ( ?x0 |T@[ref]Int|) ( ?x1 T@ref) ( ?y1 T@ref) ( ?x2 Int)) (=>  (not (= ?x1 ?y1)) (= (|Select_[ref]$int| (|Store_[ref]$int| ?x0 ?x1 ?x2) ?y1) (|Select_[ref]$int| ?x0 ?y1)))))
(declare-fun heap@75 () |T@[ref]Int|)
(declare-fun %lbl%+2317 () Bool)
(declare-fun heap@76 () |T@[ref]Int|)
(declare-fun %lbl%+2315 () Bool)
(declare-fun heap@74 () |T@[ref]Int|)
(declare-fun %lbl%+2313 () Bool)
(declare-fun heap@73 () |T@[ref]Int|)
(declare-fun heap@71 () |T@[ref]Int|)
(declare-fun %lbl%+2311 () Bool)
(declare-fun heap@72 () |T@[ref]Int|)
(declare-fun %lbl%+2307 () Bool)
(declare-fun heap@70 () |T@[ref]Int|)
(declare-fun heap@68 () |T@[ref]Int|)
(declare-fun %lbl%+2305 () Bool)
(declare-fun heap@69 () |T@[ref]Int|)
(declare-fun %lbl%+2303 () Bool)
(declare-fun heap@67 () |T@[ref]Int|)
(declare-fun %lbl%+2301 () Bool)
(declare-fun heap@66 () |T@[ref]Int|)
(declare-fun heap@64 () |T@[ref]Int|)
(declare-fun %lbl%+2299 () Bool)
(declare-fun heap@65 () |T@[ref]Int|)
(declare-fun %lbl%+2297 () Bool)
(declare-fun heap@63 () |T@[ref]Int|)
(declare-fun %lbl%+2295 () Bool)
(declare-fun heap@62 () |T@[ref]Int|)
(declare-fun heap@60 () |T@[ref]Int|)
(declare-fun %lbl%+2293 () Bool)
(declare-fun heap@61 () |T@[ref]Int|)
(declare-fun %lbl%+2291 () Bool)
(declare-fun heap@59 () |T@[ref]Int|)
(declare-fun %lbl%+2289 () Bool)
(declare-fun heap@58 () |T@[ref]Int|)
(declare-fun heap@56 () |T@[ref]Int|)
(declare-fun %lbl%+2287 () Bool)
(declare-fun heap@57 () |T@[ref]Int|)
(declare-fun %lbl%+2285 () Bool)
(declare-fun heap@55 () |T@[ref]Int|)
(declare-fun %lbl%+2283 () Bool)
(declare-fun heap@54 () |T@[ref]Int|)
(declare-fun heap@52 () |T@[ref]Int|)
(declare-fun %lbl%+2281 () Bool)
(declare-fun heap@53 () |T@[ref]Int|)
(declare-fun %lbl%+2277 () Bool)
(declare-fun heap@51 () |T@[ref]Int|)
(declare-fun heap@49 () |T@[ref]Int|)
(declare-fun %lbl%+2275 () Bool)
(declare-fun heap@50 () |T@[ref]Int|)
(declare-fun %lbl%+2273 () Bool)
(declare-fun heap@48 () |T@[ref]Int|)
(declare-fun %lbl%+2271 () Bool)
(declare-fun heap@47 () |T@[ref]Int|)
(declare-fun heap@45 () |T@[ref]Int|)
(declare-fun %lbl%+2269 () Bool)
(declare-fun heap@46 () |T@[ref]Int|)
(declare-fun %lbl%+2267 () Bool)
(declare-fun heap@44 () |T@[ref]Int|)
(declare-fun %lbl%+2265 () Bool)
(declare-fun heap@43 () |T@[ref]Int|)
(declare-fun heap@41 () |T@[ref]Int|)
(declare-fun %lbl%+2263 () Bool)
(declare-fun heap@42 () |T@[ref]Int|)
(declare-fun %lbl%+2261 () Bool)
(declare-fun heap@40 () |T@[ref]Int|)
(declare-fun %lbl%+2259 () Bool)
(declare-fun heap@39 () |T@[ref]Int|)
(declare-fun heap@37 () |T@[ref]Int|)
(declare-fun %lbl%+2257 () Bool)
(declare-fun heap@38 () |T@[ref]Int|)
(declare-fun %lbl%+2255 () Bool)
(declare-fun heap@36 () |T@[ref]Int|)
(declare-fun %lbl%+2253 () Bool)
(declare-fun heap@35 () |T@[ref]Int|)
(declare-fun heap@33 () |T@[ref]Int|)
(declare-fun %lbl%+2251 () Bool)
(declare-fun heap@34 () |T@[ref]Int|)
(declare-fun %lbl%+2247 () Bool)
(declare-fun heap@32 () |T@[ref]Int|)
(declare-fun heap@30 () |T@[ref]Int|)
(declare-fun %lbl%+2245 () Bool)
(declare-fun heap@31 () |T@[ref]Int|)
(declare-fun %lbl%+2243 () Bool)
(declare-fun heap@29 () |T@[ref]Int|)
(declare-fun %lbl%+2241 () Bool)
(declare-fun heap@28 () |T@[ref]Int|)
(declare-fun heap@26 () |T@[ref]Int|)
(declare-fun %lbl%+2239 () Bool)
(declare-fun heap@27 () |T@[ref]Int|)
(declare-fun %lbl%+2237 () Bool)
(declare-fun heap@25 () |T@[ref]Int|)
(declare-fun %lbl%+2235 () Bool)
(declare-fun heap@24 () |T@[ref]Int|)
(declare-fun heap@22 () |T@[ref]Int|)
(declare-fun %lbl%+2233 () Bool)
(declare-fun heap@23 () |T@[ref]Int|)
(declare-fun %lbl%+2231 () Bool)
(declare-fun heap@21 () |T@[ref]Int|)
(declare-fun %lbl%+2229 () Bool)
(declare-fun heap@20 () |T@[ref]Int|)
(declare-fun heap@18 () |T@[ref]Int|)
(declare-fun %lbl%+2227 () Bool)
(declare-fun heap@19 () |T@[ref]Int|)
(declare-fun %lbl%+2225 () Bool)
(declare-fun heap@17 () |T@[ref]Int|)
(declare-fun %lbl%+2223 () Bool)
(declare-fun heap@16 () |T@[ref]Int|)
(declare-fun heap@14 () |T@[ref]Int|)
(declare-fun %lbl%+2221 () Bool)
(declare-fun heap@15 () |T@[ref]Int|)
(declare-fun %lbl%+2217 () Bool)
(declare-fun heap@13 () |T@[ref]Int|)
(declare-fun heap@11 () |T@[ref]Int|)
(declare-fun %lbl%+2215 () Bool)
(declare-fun heap@12 () |T@[ref]Int|)
(declare-fun %lbl%+2213 () Bool)
(declare-fun heap@10 () |T@[ref]Int|)
(declare-fun %lbl%+2211 () Bool)
(declare-fun heap@9 () |T@[ref]Int|)
(declare-fun heap@7 () |T@[ref]Int|)
(declare-fun %lbl%+2209 () Bool)
(declare-fun heap@8 () |T@[ref]Int|)
(declare-fun %lbl%+2207 () Bool)
(declare-fun heap@6 () |T@[ref]Int|)
(declare-fun %lbl%+2205 () Bool)
(declare-fun heap@5 () |T@[ref]Int|)
(declare-fun heap@3 () |T@[ref]Int|)
(declare-fun %lbl%+2203 () Bool)
(declare-fun heap@4 () |T@[ref]Int|)
(declare-fun %lbl%+2201 () Bool)
(declare-fun heap@0 () |T@[ref]Int|)
(declare-fun heap () |T@[ref]Int|)
(declare-fun heap@1 () |T@[ref]Int|)
(declare-fun heap@2 () |T@[ref]Int|)
(declare-fun %lbl%+3706 () Bool)
(assert (distinct r0 r1 r2)
)
(push 1)
(set-info :boogie-vc-id m20)
(assert (not
(let ((anon60_correct  (=> (! (and %lbl%+2321 true) :lblpos +2321) (! (or %lbl%@4900 (= (|Select_[ref]$int| heap@78 r0) 0)) :lblneg @4900))))
(let ((anon80_Else_correct  (=> (! (and %lbl%+2319 true) :lblpos +2319) (=> (and (= heap@77 (|Store_[ref]$int| heap@75 r2 10)) (= heap@78 heap@77)) anon60_correct))))
(let ((anon80_Then_correct  (=> (! (and %lbl%+2317 true) :lblpos +2317) (=> (and (= heap@76 (|Store_[ref]$int| heap@75 r1 10)) (= heap@78 heap@76)) anon60_correct))))
(let ((anon57_correct  (=> (! (and %lbl%+2315 true) :lblpos +2315) (=> (= heap@75 (|Store_[ref]$int| heap@74 r2 1)) (and anon80_Then_correct anon80_Else_correct)))))
(let ((anon79_Else_correct  (=> (! (and %lbl%+2313 true) :lblpos +2313) (=> (and (= heap@73 (|Store_[ref]$int| heap@71 r2 9)) (= heap@74 heap@73)) anon57_correct))))
(let ((anon79_Then_correct  (=> (! (and %lbl%+2311 true) :lblpos +2311) (=> (and (= heap@72 (|Store_[ref]$int| heap@71 r1 9)) (= heap@74 heap@72)) anon57_correct))))
(let ((anon78_Else_correct  (=> (! (and %lbl%+2307 true) :lblpos +2307) (=> (and (= heap@70 (|Store_[ref]$int| heap@68 r2 8)) (= heap@71 heap@70)) (and anon79_Then_correct anon79_Else_correct)))))
(let ((anon78_Then_correct  (=> (! (and %lbl%+2305 true) :lblpos +2305) (=> (and (= heap@69 (|Store_[ref]$int| heap@68 r1 8)) (= heap@71 heap@69)) (and anon79_Then_correct anon79_Else_correct)))))
(let ((anon51_correct  (=> (! (and %lbl%+2303 true) :lblpos +2303) (=> (= heap@68 (|Store_[ref]$int| heap@67 r2 1)) (and anon78_Then_correct anon78_Else_correct)))))
(let ((anon77_Else_correct  (=> (! (and %lbl%+2301 true) :lblpos +2301) (=> (and (= heap@66 (|Store_[ref]$int| heap@64 r2 7)) (= heap@67 heap@66)) anon51_correct))))
(let ((anon77_Then_correct  (=> (! (and %lbl%+2299 true) :lblpos +2299) (=> (and (= heap@65 (|Store_[ref]$int| heap@64 r1 7)) (= heap@67 heap@65)) anon51_correct))))
(let ((anon48_correct  (=> (! (and %lbl%+2297 true) :lblpos +2297) (=> (= heap@64 (|Store_[ref]$int| heap@63 r2 1)) (and anon77_Then_correct anon77_Else_correct)))))
(let ((anon76_Else_correct  (=> (! (and %lbl%+2295 true) :lblpos +2295) (=> (and (= heap@62 (|Store_[ref]$int| heap@60 r2 6)) (= heap@63 heap@62)) anon48_correct))))
(let ((anon76_Then_correct  (=> (! (and %lbl%+2293 true) :lblpos +2293) (=> (and (= heap@61 (|Store_[ref]$int| heap@60 r1 6)) (= heap@63 heap@61)) anon48_correct))))
(let ((anon45_correct  (=> (! (and %lbl%+2291 true) :lblpos +2291) (=> (= heap@60 (|Store_[ref]$int| heap@59 r1 1)) (and anon76_Then_correct anon76_Else_correct)))))
(let ((anon75_Else_correct  (=> (! (and %lbl%+2289 true) :lblpos +2289) (=> (and (= heap@58 (|Store_[ref]$int| heap@56 r2 5)) (= heap@59 heap@58)) anon45_correct))))
(let ((anon75_Then_correct  (=> (! (and %lbl%+2287 true) :lblpos +2287) (=> (and (= heap@57 (|Store_[ref]$int| heap@56 r1 5)) (= heap@59 heap@57)) anon45_correct))))
(let ((anon42_correct  (=> (! (and %lbl%+2285 true) :lblpos +2285) (=> (= heap@56 (|Store_[ref]$int| heap@55 r2 1)) (and anon75_Then_correct anon75_Else_correct)))))
(let ((anon74_Else_correct  (=> (! (and %lbl%+2283 true) :lblpos +2283) (=> (and (= heap@54 (|Store_[ref]$int| heap@52 r2 4)) (= heap@55 heap@54)) anon42_correct))))
(let ((anon74_Then_correct  (=> (! (and %lbl%+2281 true) :lblpos +2281) (=> (and (= heap@53 (|Store_[ref]$int| heap@52 r1 4)) (= heap@55 heap@53)) anon42_correct))))
(let ((anon73_Else_correct  (=> (! (and %lbl%+2277 true) :lblpos +2277) (=> (and (= heap@51 (|Store_[ref]$int| heap@49 r2 3)) (= heap@52 heap@51)) (and anon74_Then_correct anon74_Else_correct)))))
(let ((anon73_Then_correct  (=> (! (and %lbl%+2275 true) :lblpos +2275) (=> (and (= heap@50 (|Store_[ref]$int| heap@49 r1 3)) (= heap@52 heap@50)) (and anon74_Then_correct anon74_Else_correct)))))
(let ((anon36_correct  (=> (! (and %lbl%+2273 true) :lblpos +2273) (=> (= heap@49 (|Store_[ref]$int| heap@48 r2 1)) (and anon73_Then_correct anon73_Else_correct)))))
(let ((anon72_Else_correct  (=> (! (and %lbl%+2271 true) :lblpos +2271) (=> (and (= heap@47 (|Store_[ref]$int| heap@45 r2 2)) (= heap@48 heap@47)) anon36_correct))))
(let ((anon72_Then_correct  (=> (! (and %lbl%+2269 true) :lblpos +2269) (=> (and (= heap@46 (|Store_[ref]$int| heap@45 r1 2)) (= heap@48 heap@46)) anon36_correct))))
(let ((anon33_correct  (=> (! (and %lbl%+2267 true) :lblpos +2267) (=> (= heap@45 (|Store_[ref]$int| heap@44 r2 1)) (and anon72_Then_correct anon72_Else_correct)))))
(let ((anon71_Else_correct  (=> (! (and %lbl%+2265 true) :lblpos +2265) (=> (and (= heap@43 (|Store_[ref]$int| heap@41 r2 1)) (= heap@44 heap@43)) anon33_correct))))
(let ((anon71_Then_correct  (=> (! (and %lbl%+2263 true) :lblpos +2263) (=> (and (= heap@42 (|Store_[ref]$int| heap@41 r1 1)) (= heap@44 heap@42)) anon33_correct))))
(let ((anon30_correct  (=> (! (and %lbl%+2261 true) :lblpos +2261) (=> (= heap@41 (|Store_[ref]$int| heap@40 r1 1)) (and anon71_Then_correct anon71_Else_correct)))))
(let ((anon70_Else_correct  (=> (! (and %lbl%+2259 true) :lblpos +2259) (=> (and (= heap@39 (|Store_[ref]$int| heap@37 r2 10)) (= heap@40 heap@39)) anon30_correct))))
(let ((anon70_Then_correct  (=> (! (and %lbl%+2257 true) :lblpos +2257) (=> (and (= heap@38 (|Store_[ref]$int| heap@37 r1 10)) (= heap@40 heap@38)) anon30_correct))))
(let ((anon27_correct  (=> (! (and %lbl%+2255 true) :lblpos +2255) (=> (= heap@37 (|Store_[ref]$int| heap@36 r2 1)) (and anon70_Then_correct anon70_Else_correct)))))
(let ((anon69_Else_correct  (=> (! (and %lbl%+2253 true) :lblpos +2253) (=> (and (= heap@35 (|Store_[ref]$int| heap@33 r2 9)) (= heap@36 heap@35)) anon27_correct))))
(let ((anon69_Then_correct  (=> (! (and %lbl%+2251 true) :lblpos +2251) (=> (and (= heap@34 (|Store_[ref]$int| heap@33 r1 9)) (= heap@36 heap@34)) anon27_correct))))
(let ((anon68_Else_correct  (=> (! (and %lbl%+2247 true) :lblpos +2247) (=> (and (= heap@32 (|Store_[ref]$int| heap@30 r2 8)) (= heap@33 heap@32)) (and anon69_Then_correct anon69_Else_correct)))))
(let ((anon68_Then_correct  (=> (! (and %lbl%+2245 true) :lblpos +2245) (=> (and (= heap@31 (|Store_[ref]$int| heap@30 r1 8)) (= heap@33 heap@31)) (and anon69_Then_correct anon69_Else_correct)))))
(let ((anon21_correct  (=> (! (and %lbl%+2243 true) :lblpos +2243) (=> (= heap@30 (|Store_[ref]$int| heap@29 r2 1)) (and anon68_Then_correct anon68_Else_correct)))))
(let ((anon67_Else_correct  (=> (! (and %lbl%+2241 true) :lblpos +2241) (=> (and (= heap@28 (|Store_[ref]$int| heap@26 r2 7)) (= heap@29 heap@28)) anon21_correct))))
(let ((anon67_Then_correct  (=> (! (and %lbl%+2239 true) :lblpos +2239) (=> (and (= heap@27 (|Store_[ref]$int| heap@26 r1 7)) (= heap@29 heap@27)) anon21_correct))))
(let ((anon18_correct  (=> (! (and %lbl%+2237 true) :lblpos +2237) (=> (= heap@26 (|Store_[ref]$int| heap@25 r2 1)) (and anon67_Then_correct anon67_Else_correct)))))
(let ((anon66_Else_correct  (=> (! (and %lbl%+2235 true) :lblpos +2235) (=> (and (= heap@24 (|Store_[ref]$int| heap@22 r2 6)) (= heap@25 heap@24)) anon18_correct))))
(let ((anon66_Then_correct  (=> (! (and %lbl%+2233 true) :lblpos +2233) (=> (and (= heap@23 (|Store_[ref]$int| heap@22 r1 6)) (= heap@25 heap@23)) anon18_correct))))
(let ((anon15_correct  (=> (! (and %lbl%+2231 true) :lblpos +2231) (=> (= heap@22 (|Store_[ref]$int| heap@21 r1 1)) (and anon66_Then_correct anon66_Else_correct)))))
(let ((anon65_Else_correct  (=> (! (and %lbl%+2229 true) :lblpos +2229) (=> (and (= heap@20 (|Store_[ref]$int| heap@18 r2 5)) (= heap@21 heap@20)) anon15_correct))))
(let ((anon65_Then_correct  (=> (! (and %lbl%+2227 true) :lblpos +2227) (=> (and (= heap@19 (|Store_[ref]$int| heap@18 r1 5)) (= heap@21 heap@19)) anon15_correct))))
(let ((anon12_correct  (=> (! (and %lbl%+2225 true) :lblpos +2225) (=> (= heap@18 (|Store_[ref]$int| heap@17 r2 1)) (and anon65_Then_correct anon65_Else_correct)))))
(let ((anon64_Else_correct  (=> (! (and %lbl%+2223 true) :lblpos +2223) (=> (and (= heap@16 (|Store_[ref]$int| heap@14 r2 4)) (= heap@17 heap@16)) anon12_correct))))
(let ((anon64_Then_correct  (=> (! (and %lbl%+2221 true) :lblpos +2221) (=> (and (= heap@15 (|Store_[ref]$int| heap@14 r1 4)) (= heap@17 heap@15)) anon12_correct))))
(let ((anon63_Else_correct  (=> (! (and %lbl%+2217 true) :lblpos +2217) (=> (and (= heap@13 (|Store_[ref]$int| heap@11 r2 3)) (= heap@14 heap@13)) (and anon64_Then_correct anon64_Else_correct)))))
(let ((anon63_Then_correct  (=> (! (and %lbl%+2215 true) :lblpos +2215) (=> (and (= heap@12 (|Store_[ref]$int| heap@11 r1 3)) (= heap@14 heap@12)) (and anon64_Then_correct anon64_Else_correct)))))
(let ((anon6_correct  (=> (! (and %lbl%+2213 true) :lblpos +2213) (=> (= heap@11 (|Store_[ref]$int| heap@10 r2 1)) (and anon63_Then_correct anon63_Else_correct)))))
(let ((anon62_Else_correct  (=> (! (and %lbl%+2211 true) :lblpos +2211) (=> (and (= heap@9 (|Store_[ref]$int| heap@7 r2 2)) (= heap@10 heap@9)) anon6_correct))))
(let ((anon62_Then_correct  (=> (! (and %lbl%+2209 true) :lblpos +2209) (=> (and (= heap@8 (|Store_[ref]$int| heap@7 r1 2)) (= heap@10 heap@8)) anon6_correct))))
(let ((anon3_correct  (=> (! (and %lbl%+2207 true) :lblpos +2207) (=> (= heap@7 (|Store_[ref]$int| heap@6 r2 1)) (and anon62_Then_correct anon62_Else_correct)))))
(let ((anon61_Else_correct  (=> (! (and %lbl%+2205 true) :lblpos +2205) (=> (and (= heap@5 (|Store_[ref]$int| heap@3 r2 1)) (= heap@6 heap@5)) anon3_correct))))
(let ((anon61_Then_correct  (=> (! (and %lbl%+2203 true) :lblpos +2203) (=> (and (= heap@4 (|Store_[ref]$int| heap@3 r1 1)) (= heap@6 heap@4)) anon3_correct))))
(let ((anon0_correct  (=> (! (and %lbl%+2201 true) :lblpos +2201) (=> (and (and (= heap@0 (|Store_[ref]$int| heap r0 0)) (= heap@1 (|Store_[ref]$int| heap@0 r1 1))) (and (= heap@2 (|Store_[ref]$int| heap@1 r2 2)) (= heap@3 (|Store_[ref]$int| heap@2 r1 1)))) (and anon61_Then_correct anon61_Else_correct)))))
(let ((PreconditionGeneratedEntry_correct  (=> (! (and %lbl%+3706 true) :lblpos +3706) anon0_correct)))
PreconditionGeneratedEntry_correct))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
))
(check-sat)
