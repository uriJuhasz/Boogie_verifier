(set-option :print-success false)
(set-info :smt-lib-version 2.0)
(set-option :AUTO_CONFIG false)
(set-option :pp.bv_literals false)
(set-option :MODEL.V2 true)
(set-option :smt.PHASE_SELECTION 0)
(set-option :smt.RESTART_STRATEGY 0)
(set-option :smt.RESTART_FACTOR |1.5|)
(set-option :smt.ARITH.RANDOM_INITIAL_VALUE true)
(set-option :smt.CASE_SPLIT 3)
(set-option :smt.DELAY_UNITS true)
(set-option :NNF.SK_HACK true)
(set-option :smt.MBQI false)
(set-option :smt.QI.EAGER_THRESHOLD 100)
(set-option :TYPE_CHECK true)
(set-option :smt.BV.REFLECT true)
(set-option :TIMEOUT 0)
(set-option :smt.qi.profile true)
; done setting options


(declare-fun tickleBool (Bool) Bool)
(assert (and (tickleBool true) (tickleBool false)))
(declare-sort T@ref 0)
(declare-fun r0 () T@ref)
(declare-fun r1 () T@ref)
(declare-fun r2 () T@ref)
(declare-fun %lbl%+895 () Bool)
(declare-fun %lbl%@2117 () Bool)
(declare-sort |T@[ref]Int| 0)
(declare-fun |Select_[ref]$int| (|T@[ref]Int| T@ref) Int)
(declare-fun heap@40 () |T@[ref]Int|)
(declare-fun %lbl%+893 () Bool)
(declare-fun heap@39 () |T@[ref]Int|)
(declare-fun |Store_[ref]$int| (|T@[ref]Int| T@ref Int) |T@[ref]Int|)
(assert (forall ( ( ?x0 |T@[ref]Int|) ( ?x1 T@ref) ( ?x2 Int)) (= (|Select_[ref]$int| (|Store_[ref]$int| ?x0 ?x1 ?x2) ?x1)  ?x2)))
(assert (forall ( ( ?x0 |T@[ref]Int|) ( ?x1 T@ref) ( ?y1 T@ref) ( ?x2 Int)) (=>  (not (= ?x1 ?y1)) (= (|Select_[ref]$int| (|Store_[ref]$int| ?x0 ?x1 ?x2) ?y1) (|Select_[ref]$int| ?x0 ?y1)))))
(declare-fun heap@37 () |T@[ref]Int|)
(declare-fun %lbl%+891 () Bool)
(declare-fun heap@38 () |T@[ref]Int|)
(declare-fun %lbl%+889 () Bool)
(declare-fun %lbl%@2057 () Bool)
(declare-fun heap@36 () |T@[ref]Int|)
(declare-fun %lbl%+887 () Bool)
(declare-fun heap@35 () |T@[ref]Int|)
(declare-fun heap@33 () |T@[ref]Int|)
(declare-fun %lbl%+885 () Bool)
(declare-fun heap@34 () |T@[ref]Int|)
(declare-fun %lbl%+883 () Bool)
(declare-fun %lbl%@2011 () Bool)
(declare-fun %lbl%+881 () Bool)
(declare-fun heap@32 () |T@[ref]Int|)
(declare-fun heap@30 () |T@[ref]Int|)
(declare-fun %lbl%+879 () Bool)
(declare-fun heap@31 () |T@[ref]Int|)
(declare-fun %lbl%+877 () Bool)
(declare-fun %lbl%@1951 () Bool)
(declare-fun heap@29 () |T@[ref]Int|)
(declare-fun %lbl%+875 () Bool)
(declare-fun heap@28 () |T@[ref]Int|)
(declare-fun heap@26 () |T@[ref]Int|)
(declare-fun %lbl%+873 () Bool)
(declare-fun heap@27 () |T@[ref]Int|)
(declare-fun %lbl%+871 () Bool)
(declare-fun %lbl%@1891 () Bool)
(declare-fun heap@25 () |T@[ref]Int|)
(declare-fun %lbl%+869 () Bool)
(declare-fun heap@24 () |T@[ref]Int|)
(declare-fun heap@22 () |T@[ref]Int|)
(declare-fun %lbl%+867 () Bool)
(declare-fun heap@23 () |T@[ref]Int|)
(declare-fun %lbl%+865 () Bool)
(declare-fun %lbl%@1831 () Bool)
(declare-fun heap@21 () |T@[ref]Int|)
(declare-fun %lbl%+863 () Bool)
(declare-fun heap@20 () |T@[ref]Int|)
(declare-fun heap@18 () |T@[ref]Int|)
(declare-fun %lbl%+861 () Bool)
(declare-fun heap@19 () |T@[ref]Int|)
(declare-fun %lbl%+859 () Bool)
(declare-fun %lbl%@1771 () Bool)
(declare-fun heap@17 () |T@[ref]Int|)
(declare-fun %lbl%+857 () Bool)
(declare-fun heap@16 () |T@[ref]Int|)
(declare-fun heap@14 () |T@[ref]Int|)
(declare-fun %lbl%+855 () Bool)
(declare-fun heap@15 () |T@[ref]Int|)
(declare-fun %lbl%+853 () Bool)
(declare-fun %lbl%@1725 () Bool)
(declare-fun %lbl%+851 () Bool)
(declare-fun heap@13 () |T@[ref]Int|)
(declare-fun heap@11 () |T@[ref]Int|)
(declare-fun %lbl%+849 () Bool)
(declare-fun heap@12 () |T@[ref]Int|)
(declare-fun %lbl%+847 () Bool)
(declare-fun %lbl%@1665 () Bool)
(declare-fun heap@10 () |T@[ref]Int|)
(declare-fun %lbl%+845 () Bool)
(declare-fun heap@9 () |T@[ref]Int|)
(declare-fun heap@7 () |T@[ref]Int|)
(declare-fun %lbl%+843 () Bool)
(declare-fun heap@8 () |T@[ref]Int|)
(declare-fun %lbl%+841 () Bool)
(declare-fun %lbl%@1605 () Bool)
(declare-fun heap@6 () |T@[ref]Int|)
(declare-fun %lbl%+839 () Bool)
(declare-fun heap@5 () |T@[ref]Int|)
(declare-fun heap@3 () |T@[ref]Int|)
(declare-fun %lbl%+837 () Bool)
(declare-fun heap@4 () |T@[ref]Int|)
(declare-fun %lbl%+835 () Bool)
(declare-fun heap@0 () |T@[ref]Int|)
(declare-fun heap () |T@[ref]Int|)
(declare-fun heap@1 () |T@[ref]Int|)
(declare-fun heap@2 () |T@[ref]Int|)
(declare-fun %lbl%+1408 () Bool)
(assert (distinct r0 r1 r2)
)
(push 1)
(set-info :boogie-vc-id m10h)
(assert (not
(let ((anon30_correct  (=> (! (and %lbl%+895 true) :lblpos +895) (! (or %lbl%@2117 (= (|Select_[ref]$int| heap@40 r0) 0)) :lblneg @2117))))
(let ((anon40_Else_correct  (=> (! (and %lbl%+893 true) :lblpos +893) (=> (and (= heap@39 (|Store_[ref]$int| heap@37 r2 10)) (= heap@40 heap@39)) anon30_correct))))
(let ((anon40_Then_correct  (=> (! (and %lbl%+891 true) :lblpos +891) (=> (and (= heap@38 (|Store_[ref]$int| heap@37 r1 10)) (= heap@40 heap@38)) anon30_correct))))
(let ((anon27_correct  (=> (! (and %lbl%+889 true) :lblpos +889) (and (! (or %lbl%@2057 (= (|Select_[ref]$int| heap@36 r0) 0)) :lblneg @2057) (=> (= (|Select_[ref]$int| heap@36 r0) 0) (=> (= heap@37 (|Store_[ref]$int| heap@36 r2 1)) (and anon40_Then_correct anon40_Else_correct)))))))
(let ((anon39_Else_correct  (=> (! (and %lbl%+887 true) :lblpos +887) (=> (and (= heap@35 (|Store_[ref]$int| heap@33 r2 9)) (= heap@36 heap@35)) anon27_correct))))
(let ((anon39_Then_correct  (=> (! (and %lbl%+885 true) :lblpos +885) (=> (and (= heap@34 (|Store_[ref]$int| heap@33 r1 9)) (= heap@36 heap@34)) anon27_correct))))
(let ((anon24_correct  (=> (! (and %lbl%+883 true) :lblpos +883) (and (! (or %lbl%@2011 (= (|Select_[ref]$int| heap@33 r0) 0)) :lblneg @2011) (=> (= (|Select_[ref]$int| heap@33 r0) 0) (and anon39_Then_correct anon39_Else_correct))))))
(let ((anon38_Else_correct  (=> (! (and %lbl%+881 true) :lblpos +881) (=> (and (= heap@32 (|Store_[ref]$int| heap@30 r2 8)) (= heap@33 heap@32)) anon24_correct))))
(let ((anon38_Then_correct  (=> (! (and %lbl%+879 true) :lblpos +879) (=> (and (= heap@31 (|Store_[ref]$int| heap@30 r1 8)) (= heap@33 heap@31)) anon24_correct))))
(let ((anon21_correct  (=> (! (and %lbl%+877 true) :lblpos +877) (and (! (or %lbl%@1951 (= (|Select_[ref]$int| heap@29 r0) 0)) :lblneg @1951) (=> (= (|Select_[ref]$int| heap@29 r0) 0) (=> (= heap@30 (|Store_[ref]$int| heap@29 r2 1)) (and anon38_Then_correct anon38_Else_correct)))))))
(let ((anon37_Else_correct  (=> (! (and %lbl%+875 true) :lblpos +875) (=> (and (= heap@28 (|Store_[ref]$int| heap@26 r2 7)) (= heap@29 heap@28)) anon21_correct))))
(let ((anon37_Then_correct  (=> (! (and %lbl%+873 true) :lblpos +873) (=> (and (= heap@27 (|Store_[ref]$int| heap@26 r1 7)) (= heap@29 heap@27)) anon21_correct))))
(let ((anon18_correct  (=> (! (and %lbl%+871 true) :lblpos +871) (and (! (or %lbl%@1891 (= (|Select_[ref]$int| heap@25 r0) 0)) :lblneg @1891) (=> (= (|Select_[ref]$int| heap@25 r0) 0) (=> (= heap@26 (|Store_[ref]$int| heap@25 r2 1)) (and anon37_Then_correct anon37_Else_correct)))))))
(let ((anon36_Else_correct  (=> (! (and %lbl%+869 true) :lblpos +869) (=> (and (= heap@24 (|Store_[ref]$int| heap@22 r2 6)) (= heap@25 heap@24)) anon18_correct))))
(let ((anon36_Then_correct  (=> (! (and %lbl%+867 true) :lblpos +867) (=> (and (= heap@23 (|Store_[ref]$int| heap@22 r1 6)) (= heap@25 heap@23)) anon18_correct))))
(let ((anon15_correct  (=> (! (and %lbl%+865 true) :lblpos +865) (and (! (or %lbl%@1831 (= (|Select_[ref]$int| heap@21 r0) 0)) :lblneg @1831) (=> (= (|Select_[ref]$int| heap@21 r0) 0) (=> (= heap@22 (|Store_[ref]$int| heap@21 r1 1)) (and anon36_Then_correct anon36_Else_correct)))))))
(let ((anon35_Else_correct  (=> (! (and %lbl%+863 true) :lblpos +863) (=> (and (= heap@20 (|Store_[ref]$int| heap@18 r2 5)) (= heap@21 heap@20)) anon15_correct))))
(let ((anon35_Then_correct  (=> (! (and %lbl%+861 true) :lblpos +861) (=> (and (= heap@19 (|Store_[ref]$int| heap@18 r1 5)) (= heap@21 heap@19)) anon15_correct))))
(let ((anon12_correct  (=> (! (and %lbl%+859 true) :lblpos +859) (and (! (or %lbl%@1771 (= (|Select_[ref]$int| heap@17 r0) 0)) :lblneg @1771) (=> (= (|Select_[ref]$int| heap@17 r0) 0) (=> (= heap@18 (|Store_[ref]$int| heap@17 r2 1)) (and anon35_Then_correct anon35_Else_correct)))))))
(let ((anon34_Else_correct  (=> (! (and %lbl%+857 true) :lblpos +857) (=> (and (= heap@16 (|Store_[ref]$int| heap@14 r2 4)) (= heap@17 heap@16)) anon12_correct))))
(let ((anon34_Then_correct  (=> (! (and %lbl%+855 true) :lblpos +855) (=> (and (= heap@15 (|Store_[ref]$int| heap@14 r1 4)) (= heap@17 heap@15)) anon12_correct))))
(let ((anon9_correct  (=> (! (and %lbl%+853 true) :lblpos +853) (and (! (or %lbl%@1725 (= (|Select_[ref]$int| heap@14 r0) 0)) :lblneg @1725) (=> (= (|Select_[ref]$int| heap@14 r0) 0) (and anon34_Then_correct anon34_Else_correct))))))
(let ((anon33_Else_correct  (=> (! (and %lbl%+851 true) :lblpos +851) (=> (and (= heap@13 (|Store_[ref]$int| heap@11 r2 3)) (= heap@14 heap@13)) anon9_correct))))
(let ((anon33_Then_correct  (=> (! (and %lbl%+849 true) :lblpos +849) (=> (and (= heap@12 (|Store_[ref]$int| heap@11 r1 3)) (= heap@14 heap@12)) anon9_correct))))
(let ((anon6_correct  (=> (! (and %lbl%+847 true) :lblpos +847) (and (! (or %lbl%@1665 (= (|Select_[ref]$int| heap@10 r0) 0)) :lblneg @1665) (=> (= (|Select_[ref]$int| heap@10 r0) 0) (=> (= heap@11 (|Store_[ref]$int| heap@10 r2 1)) (and anon33_Then_correct anon33_Else_correct)))))))
(let ((anon32_Else_correct  (=> (! (and %lbl%+845 true) :lblpos +845) (=> (and (= heap@9 (|Store_[ref]$int| heap@7 r2 2)) (= heap@10 heap@9)) anon6_correct))))
(let ((anon32_Then_correct  (=> (! (and %lbl%+843 true) :lblpos +843) (=> (and (= heap@8 (|Store_[ref]$int| heap@7 r1 2)) (= heap@10 heap@8)) anon6_correct))))
(let ((anon3_correct  (=> (! (and %lbl%+841 true) :lblpos +841) (and (! (or %lbl%@1605 (= (|Select_[ref]$int| heap@6 r0) 0)) :lblneg @1605) (=> (= (|Select_[ref]$int| heap@6 r0) 0) (=> (= heap@7 (|Store_[ref]$int| heap@6 r2 1)) (and anon32_Then_correct anon32_Else_correct)))))))
(let ((anon31_Else_correct  (=> (! (and %lbl%+839 true) :lblpos +839) (=> (and (= heap@5 (|Store_[ref]$int| heap@3 r2 1)) (= heap@6 heap@5)) anon3_correct))))
(let ((anon31_Then_correct  (=> (! (and %lbl%+837 true) :lblpos +837) (=> (and (= heap@4 (|Store_[ref]$int| heap@3 r1 1)) (= heap@6 heap@4)) anon3_correct))))
(let ((anon0_correct  (=> (! (and %lbl%+835 true) :lblpos +835) (=> (and (and (= heap@0 (|Store_[ref]$int| heap r0 0)) (= heap@1 (|Store_[ref]$int| heap@0 r1 1))) (and (= heap@2 (|Store_[ref]$int| heap@1 r2 2)) (= heap@3 (|Store_[ref]$int| heap@2 r1 1)))) (and anon31_Then_correct anon31_Else_correct)))))
(let ((PreconditionGeneratedEntry_correct  (=> (! (and %lbl%+1408 true) :lblpos +1408) anon0_correct)))
PreconditionGeneratedEntry_correct))))))))))))))))))))))))))))))))
))
(check-sat)
