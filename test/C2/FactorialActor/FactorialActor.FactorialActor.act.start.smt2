;Analysis time until now:    13s
(set-option :print-success false)
(set-info :smt-lib-version 2.0)
(set-option :AUTO_CONFIG false)
(set-option :pp.bv_literals false)
(set-option :MODEL.V2 true)
(set-option :smt.PHASE_SELECTION 0)
(set-option :smt.RESTART_STRATEGY 0)
(set-option :smt.RESTART_FACTOR |1.5|)
(set-option :smt.ARITH.RANDOM_INITIAL_VALUE true)
(set-option :smt.CASE_SPLIT 3)
(set-option :smt.DELAY_UNITS true)
(set-option :NNF.SK_HACK true)
(set-option :smt.MBQI false)
(set-option :smt.QI.EAGER_THRESHOLD 100)
(set-option :TYPE_CHECK true)
(set-option :smt.BV.REFLECT true)
(set-option :TIMEOUT 0)
(set-logic  UFNIA)
;(set-option :produce-unsat-cores true)
; done setting options
;Sorts
(declare-sort $@Map@@$T0@@Int@To@$T0@@ 0)
(declare-sort $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ 0)
(declare-sort $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ 0)
(declare-sort $@Map@@PermissionComponent@To@Int@@ 0)
(declare-sort $@Map@@ref@To@Int@@ 0)
(declare-sort Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ 0)
(declare-sort Field$Bool$ 0)
(declare-sort Field$Int$ 0)
(declare-sort Field$Mu$ 0)
(declare-sort Field$ref$ 0)
(declare-sort ModuleName 0)
(declare-sort Mu 0)
(declare-sort PermissionComponent 0)
(declare-sort ref 0)
(declare-sort TypeName 0)

;Functions
(declare-fun $@@FactorialActor.getQ ( $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ ref ) ref)
(declare-fun $@@FactorialCont.getQ ( $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ ref ) ref)
(declare-fun $@@Future.getQ ( $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ ref ) ref)
(declare-fun $@@Message.factorial ( $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ ref Int ) Int)
(declare-fun $@FactorialActor.getQ ( $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ref ) ref)
(declare-fun $@FactorialCont.getQ ( $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ref ) ref)
(declare-fun $@Future.getQ ( $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ref ) ref)
(declare-fun $@Message.factorial ( $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ref Int ) Int)
(declare-fun $@Message.factorial@limited ( $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ref Int ) Int)
(declare-fun $LockBottom ( ) Mu)
(declare-fun argsSeq@_1343 ( ) $@Map@@$T0@@Int@To@$T0@@)
(declare-fun argsSeq@_1343@0 ( ) $@Map@@$T0@@Int@To@$T0@@)
(declare-fun asyncMethodCallK@_1344 ( ) Int)
(declare-fun asyncstate@_1339@0 ( ) Int)
(declare-fun Channel@t ( ) TypeName)
(declare-fun channelK ( ) Int)
(declare-fun combine$$@Map@@$T0@@Int@To@$T0@@$$@Map@@$T0@@Int@To@$T0@@$ ( $@Map@@$T0@@Int@To@$T0@@ $@Map@@$T0@@Int@To@$T0@@ ) $@Map@@$T0@@Int@To@$T0@@)
(declare-fun combine$$@Map@@$T0@@Int@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ ( $@Map@@$T0@@Int@To@$T0@@ $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ) $@Map@@$T0@@Int@To@$T0@@)
(declare-fun combine$$@Map@@$T0@@Int@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ( $@Map@@$T0@@Int@To@$T0@@ $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ ) $@Map@@$T0@@Int@To@$T0@@)
(declare-fun combine$$@Map@@$T0@@Int@To@$T0@@$$@Map@@PermissionComponent@To@Int@@$ ( $@Map@@$T0@@Int@To@$T0@@ $@Map@@PermissionComponent@To@Int@@ ) $@Map@@$T0@@Int@To@$T0@@)
(declare-fun combine$$@Map@@$T0@@Int@To@$T0@@$$@Map@@ref@To@Int@@$ ( $@Map@@$T0@@Int@To@$T0@@ $@Map@@ref@To@Int@@ ) $@Map@@$T0@@Int@To@$T0@@)
(declare-fun combine$$@Map@@$T0@@Int@To@$T0@@$Bool$ ( $@Map@@$T0@@Int@To@$T0@@ Bool ) $@Map@@$T0@@Int@To@$T0@@)
(declare-fun combine$$@Map@@$T0@@Int@To@$T0@@$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ ( $@Map@@$T0@@Int@To@$T0@@ Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ) $@Map@@$T0@@Int@To@$T0@@)
(declare-fun combine$$@Map@@$T0@@Int@To@$T0@@$Field$Bool$$ ( $@Map@@$T0@@Int@To@$T0@@ Field$Bool$ ) $@Map@@$T0@@Int@To@$T0@@)
(declare-fun combine$$@Map@@$T0@@Int@To@$T0@@$Field$Int$$ ( $@Map@@$T0@@Int@To@$T0@@ Field$Int$ ) $@Map@@$T0@@Int@To@$T0@@)
(declare-fun combine$$@Map@@$T0@@Int@To@$T0@@$Field$Mu$$ ( $@Map@@$T0@@Int@To@$T0@@ Field$Mu$ ) $@Map@@$T0@@Int@To@$T0@@)
(declare-fun combine$$@Map@@$T0@@Int@To@$T0@@$Field$ref$$ ( $@Map@@$T0@@Int@To@$T0@@ Field$ref$ ) $@Map@@$T0@@Int@To@$T0@@)
(declare-fun combine$$@Map@@$T0@@Int@To@$T0@@$Int$ ( $@Map@@$T0@@Int@To@$T0@@ Int ) $@Map@@$T0@@Int@To@$T0@@)
(declare-fun combine$$@Map@@$T0@@Int@To@$T0@@$ModuleName$ ( $@Map@@$T0@@Int@To@$T0@@ ModuleName ) $@Map@@$T0@@Int@To@$T0@@)
(declare-fun combine$$@Map@@$T0@@Int@To@$T0@@$Mu$ ( $@Map@@$T0@@Int@To@$T0@@ Mu ) $@Map@@$T0@@Int@To@$T0@@)
(declare-fun combine$$@Map@@$T0@@Int@To@$T0@@$PermissionComponent$ ( $@Map@@$T0@@Int@To@$T0@@ PermissionComponent ) $@Map@@$T0@@Int@To@$T0@@)
(declare-fun combine$$@Map@@$T0@@Int@To@$T0@@$ref$ ( $@Map@@$T0@@Int@To@$T0@@ ref ) $@Map@@$T0@@Int@To@$T0@@)
(declare-fun combine$$@Map@@$T0@@Int@To@$T0@@$TypeName$ ( $@Map@@$T0@@Int@To@$T0@@ TypeName ) $@Map@@$T0@@Int@To@$T0@@)
(declare-fun combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@Int@To@$T0@@$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ $@Map@@$T0@@Int@To@$T0@@ ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@PermissionComponent@To@Int@@$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ $@Map@@PermissionComponent@To@Int@@ ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@ref@To@Int@@$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ $@Map@@ref@To@Int@@ ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ Bool ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Field$Bool$$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ Field$Bool$ ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Field$Int$$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ Field$Int$ ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Field$Mu$$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ Field$Mu$ ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Field$ref$$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ Field$ref$ ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ Int ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ModuleName$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ModuleName ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ Mu ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$PermissionComponent$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ PermissionComponent ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ref ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$TypeName$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ TypeName ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@Int@To@$T0@@$ ( $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ $@Map@@$T0@@Int@To@$T0@@ ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ ( $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ( $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@PermissionComponent@To@Int@@$ ( $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ $@Map@@PermissionComponent@To@Int@@ ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@ref@To@Int@@$ ( $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ $@Map@@ref@To@Int@@ ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ ( $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ Bool ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ ( $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Field$Bool$$ ( $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ Field$Bool$ ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Field$Int$$ ( $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ Field$Int$ ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Field$Mu$$ ( $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ Field$Mu$ ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Field$ref$$ ( $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ Field$ref$ ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ ( $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ Int ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ModuleName$ ( $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ ModuleName ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ ( $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ Mu ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$PermissionComponent$ ( $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ PermissionComponent ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ ( $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ ref ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$TypeName$ ( $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ TypeName ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun combine$$@Map@@PermissionComponent@To@Int@@$$@Map@@$T0@@Int@To@$T0@@$ ( $@Map@@PermissionComponent@To@Int@@ $@Map@@$T0@@Int@To@$T0@@ ) $@Map@@PermissionComponent@To@Int@@)
(declare-fun combine$$@Map@@PermissionComponent@To@Int@@$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ ( $@Map@@PermissionComponent@To@Int@@ $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ) $@Map@@PermissionComponent@To@Int@@)
(declare-fun combine$$@Map@@PermissionComponent@To@Int@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ( $@Map@@PermissionComponent@To@Int@@ $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ ) $@Map@@PermissionComponent@To@Int@@)
(declare-fun combine$$@Map@@PermissionComponent@To@Int@@$$@Map@@PermissionComponent@To@Int@@$ ( $@Map@@PermissionComponent@To@Int@@ $@Map@@PermissionComponent@To@Int@@ ) $@Map@@PermissionComponent@To@Int@@)
(declare-fun combine$$@Map@@PermissionComponent@To@Int@@$$@Map@@ref@To@Int@@$ ( $@Map@@PermissionComponent@To@Int@@ $@Map@@ref@To@Int@@ ) $@Map@@PermissionComponent@To@Int@@)
(declare-fun combine$$@Map@@PermissionComponent@To@Int@@$Bool$ ( $@Map@@PermissionComponent@To@Int@@ Bool ) $@Map@@PermissionComponent@To@Int@@)
(declare-fun combine$$@Map@@PermissionComponent@To@Int@@$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ ( $@Map@@PermissionComponent@To@Int@@ Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ) $@Map@@PermissionComponent@To@Int@@)
(declare-fun combine$$@Map@@PermissionComponent@To@Int@@$Field$Bool$$ ( $@Map@@PermissionComponent@To@Int@@ Field$Bool$ ) $@Map@@PermissionComponent@To@Int@@)
(declare-fun combine$$@Map@@PermissionComponent@To@Int@@$Field$Int$$ ( $@Map@@PermissionComponent@To@Int@@ Field$Int$ ) $@Map@@PermissionComponent@To@Int@@)
(declare-fun combine$$@Map@@PermissionComponent@To@Int@@$Field$Mu$$ ( $@Map@@PermissionComponent@To@Int@@ Field$Mu$ ) $@Map@@PermissionComponent@To@Int@@)
(declare-fun combine$$@Map@@PermissionComponent@To@Int@@$Field$ref$$ ( $@Map@@PermissionComponent@To@Int@@ Field$ref$ ) $@Map@@PermissionComponent@To@Int@@)
(declare-fun combine$$@Map@@PermissionComponent@To@Int@@$Int$ ( $@Map@@PermissionComponent@To@Int@@ Int ) $@Map@@PermissionComponent@To@Int@@)
(declare-fun combine$$@Map@@PermissionComponent@To@Int@@$ModuleName$ ( $@Map@@PermissionComponent@To@Int@@ ModuleName ) $@Map@@PermissionComponent@To@Int@@)
(declare-fun combine$$@Map@@PermissionComponent@To@Int@@$Mu$ ( $@Map@@PermissionComponent@To@Int@@ Mu ) $@Map@@PermissionComponent@To@Int@@)
(declare-fun combine$$@Map@@PermissionComponent@To@Int@@$PermissionComponent$ ( $@Map@@PermissionComponent@To@Int@@ PermissionComponent ) $@Map@@PermissionComponent@To@Int@@)
(declare-fun combine$$@Map@@PermissionComponent@To@Int@@$ref$ ( $@Map@@PermissionComponent@To@Int@@ ref ) $@Map@@PermissionComponent@To@Int@@)
(declare-fun combine$$@Map@@PermissionComponent@To@Int@@$TypeName$ ( $@Map@@PermissionComponent@To@Int@@ TypeName ) $@Map@@PermissionComponent@To@Int@@)
(declare-fun combine$$@Map@@ref@To@Int@@$$@Map@@$T0@@Int@To@$T0@@$ ( $@Map@@ref@To@Int@@ $@Map@@$T0@@Int@To@$T0@@ ) $@Map@@ref@To@Int@@)
(declare-fun combine$$@Map@@ref@To@Int@@$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ ( $@Map@@ref@To@Int@@ $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ) $@Map@@ref@To@Int@@)
(declare-fun combine$$@Map@@ref@To@Int@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ( $@Map@@ref@To@Int@@ $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ ) $@Map@@ref@To@Int@@)
(declare-fun combine$$@Map@@ref@To@Int@@$$@Map@@PermissionComponent@To@Int@@$ ( $@Map@@ref@To@Int@@ $@Map@@PermissionComponent@To@Int@@ ) $@Map@@ref@To@Int@@)
(declare-fun combine$$@Map@@ref@To@Int@@$$@Map@@ref@To@Int@@$ ( $@Map@@ref@To@Int@@ $@Map@@ref@To@Int@@ ) $@Map@@ref@To@Int@@)
(declare-fun combine$$@Map@@ref@To@Int@@$Bool$ ( $@Map@@ref@To@Int@@ Bool ) $@Map@@ref@To@Int@@)
(declare-fun combine$$@Map@@ref@To@Int@@$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ ( $@Map@@ref@To@Int@@ Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ) $@Map@@ref@To@Int@@)
(declare-fun combine$$@Map@@ref@To@Int@@$Field$Bool$$ ( $@Map@@ref@To@Int@@ Field$Bool$ ) $@Map@@ref@To@Int@@)
(declare-fun combine$$@Map@@ref@To@Int@@$Field$Int$$ ( $@Map@@ref@To@Int@@ Field$Int$ ) $@Map@@ref@To@Int@@)
(declare-fun combine$$@Map@@ref@To@Int@@$Field$Mu$$ ( $@Map@@ref@To@Int@@ Field$Mu$ ) $@Map@@ref@To@Int@@)
(declare-fun combine$$@Map@@ref@To@Int@@$Field$ref$$ ( $@Map@@ref@To@Int@@ Field$ref$ ) $@Map@@ref@To@Int@@)
(declare-fun combine$$@Map@@ref@To@Int@@$Int$ ( $@Map@@ref@To@Int@@ Int ) $@Map@@ref@To@Int@@)
(declare-fun combine$$@Map@@ref@To@Int@@$ModuleName$ ( $@Map@@ref@To@Int@@ ModuleName ) $@Map@@ref@To@Int@@)
(declare-fun combine$$@Map@@ref@To@Int@@$Mu$ ( $@Map@@ref@To@Int@@ Mu ) $@Map@@ref@To@Int@@)
(declare-fun combine$$@Map@@ref@To@Int@@$PermissionComponent$ ( $@Map@@ref@To@Int@@ PermissionComponent ) $@Map@@ref@To@Int@@)
(declare-fun combine$$@Map@@ref@To@Int@@$ref$ ( $@Map@@ref@To@Int@@ ref ) $@Map@@ref@To@Int@@)
(declare-fun combine$$@Map@@ref@To@Int@@$TypeName$ ( $@Map@@ref@To@Int@@ TypeName ) $@Map@@ref@To@Int@@)
(declare-fun combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$$@Map@@$T0@@Int@To@$T0@@$ ( Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ $@Map@@$T0@@Int@To@$T0@@ ) Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)
(declare-fun combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ ( Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ) Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)
(declare-fun combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ( Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ ) Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)
(declare-fun combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$$@Map@@PermissionComponent@To@Int@@$ ( Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ $@Map@@PermissionComponent@To@Int@@ ) Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)
(declare-fun combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$$@Map@@ref@To@Int@@$ ( Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ $@Map@@ref@To@Int@@ ) Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)
(declare-fun combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$Bool$ ( Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Bool ) Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)
(declare-fun combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ ( Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ) Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)
(declare-fun combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$Field$Bool$$ ( Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Field$Bool$ ) Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)
(declare-fun combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$Field$Int$$ ( Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Field$Int$ ) Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)
(declare-fun combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$Field$Mu$$ ( Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Field$Mu$ ) Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)
(declare-fun combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$Field$ref$$ ( Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Field$ref$ ) Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)
(declare-fun combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$Int$ ( Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Int ) Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)
(declare-fun combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ModuleName$ ( Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ModuleName ) Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)
(declare-fun combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$Mu$ ( Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mu ) Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)
(declare-fun combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$PermissionComponent$ ( Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ PermissionComponent ) Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)
(declare-fun combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ref$ ( Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ref ) Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)
(declare-fun combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$TypeName$ ( Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ TypeName ) Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)
(declare-fun combine$Field$Bool$$$@Map@@$T0@@Int@To@$T0@@$ ( Field$Bool$ $@Map@@$T0@@Int@To@$T0@@ ) Field$Bool$)
(declare-fun combine$Field$Bool$$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ ( Field$Bool$ $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ) Field$Bool$)
(declare-fun combine$Field$Bool$$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ( Field$Bool$ $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ ) Field$Bool$)
(declare-fun combine$Field$Bool$$$@Map@@PermissionComponent@To@Int@@$ ( Field$Bool$ $@Map@@PermissionComponent@To@Int@@ ) Field$Bool$)
(declare-fun combine$Field$Bool$$$@Map@@ref@To@Int@@$ ( Field$Bool$ $@Map@@ref@To@Int@@ ) Field$Bool$)
(declare-fun combine$Field$Bool$$Bool$ ( Field$Bool$ Bool ) Field$Bool$)
(declare-fun combine$Field$Bool$$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ ( Field$Bool$ Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ) Field$Bool$)
(declare-fun combine$Field$Bool$$Field$Bool$$ ( Field$Bool$ Field$Bool$ ) Field$Bool$)
(declare-fun combine$Field$Bool$$Field$Int$$ ( Field$Bool$ Field$Int$ ) Field$Bool$)
(declare-fun combine$Field$Bool$$Field$Mu$$ ( Field$Bool$ Field$Mu$ ) Field$Bool$)
(declare-fun combine$Field$Bool$$Field$ref$$ ( Field$Bool$ Field$ref$ ) Field$Bool$)
(declare-fun combine$Field$Bool$$Int$ ( Field$Bool$ Int ) Field$Bool$)
(declare-fun combine$Field$Bool$$ModuleName$ ( Field$Bool$ ModuleName ) Field$Bool$)
(declare-fun combine$Field$Bool$$Mu$ ( Field$Bool$ Mu ) Field$Bool$)
(declare-fun combine$Field$Bool$$PermissionComponent$ ( Field$Bool$ PermissionComponent ) Field$Bool$)
(declare-fun combine$Field$Bool$$ref$ ( Field$Bool$ ref ) Field$Bool$)
(declare-fun combine$Field$Bool$$TypeName$ ( Field$Bool$ TypeName ) Field$Bool$)
(declare-fun combine$Field$Int$$$@Map@@$T0@@Int@To@$T0@@$ ( Field$Int$ $@Map@@$T0@@Int@To@$T0@@ ) Field$Int$)
(declare-fun combine$Field$Int$$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ ( Field$Int$ $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ) Field$Int$)
(declare-fun combine$Field$Int$$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ( Field$Int$ $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ ) Field$Int$)
(declare-fun combine$Field$Int$$$@Map@@PermissionComponent@To@Int@@$ ( Field$Int$ $@Map@@PermissionComponent@To@Int@@ ) Field$Int$)
(declare-fun combine$Field$Int$$$@Map@@ref@To@Int@@$ ( Field$Int$ $@Map@@ref@To@Int@@ ) Field$Int$)
(declare-fun combine$Field$Int$$Bool$ ( Field$Int$ Bool ) Field$Int$)
(declare-fun combine$Field$Int$$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ ( Field$Int$ Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ) Field$Int$)
(declare-fun combine$Field$Int$$Field$Bool$$ ( Field$Int$ Field$Bool$ ) Field$Int$)
(declare-fun combine$Field$Int$$Field$Int$$ ( Field$Int$ Field$Int$ ) Field$Int$)
(declare-fun combine$Field$Int$$Field$Mu$$ ( Field$Int$ Field$Mu$ ) Field$Int$)
(declare-fun combine$Field$Int$$Field$ref$$ ( Field$Int$ Field$ref$ ) Field$Int$)
(declare-fun combine$Field$Int$$Int$ ( Field$Int$ Int ) Field$Int$)
(declare-fun combine$Field$Int$$ModuleName$ ( Field$Int$ ModuleName ) Field$Int$)
(declare-fun combine$Field$Int$$Mu$ ( Field$Int$ Mu ) Field$Int$)
(declare-fun combine$Field$Int$$PermissionComponent$ ( Field$Int$ PermissionComponent ) Field$Int$)
(declare-fun combine$Field$Int$$ref$ ( Field$Int$ ref ) Field$Int$)
(declare-fun combine$Field$Int$$TypeName$ ( Field$Int$ TypeName ) Field$Int$)
(declare-fun combine$Field$Mu$$$@Map@@$T0@@Int@To@$T0@@$ ( Field$Mu$ $@Map@@$T0@@Int@To@$T0@@ ) Field$Mu$)
(declare-fun combine$Field$Mu$$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ ( Field$Mu$ $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ) Field$Mu$)
(declare-fun combine$Field$Mu$$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ( Field$Mu$ $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ ) Field$Mu$)
(declare-fun combine$Field$Mu$$$@Map@@PermissionComponent@To@Int@@$ ( Field$Mu$ $@Map@@PermissionComponent@To@Int@@ ) Field$Mu$)
(declare-fun combine$Field$Mu$$$@Map@@ref@To@Int@@$ ( Field$Mu$ $@Map@@ref@To@Int@@ ) Field$Mu$)
(declare-fun combine$Field$Mu$$Bool$ ( Field$Mu$ Bool ) Field$Mu$)
(declare-fun combine$Field$Mu$$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ ( Field$Mu$ Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ) Field$Mu$)
(declare-fun combine$Field$Mu$$Field$Bool$$ ( Field$Mu$ Field$Bool$ ) Field$Mu$)
(declare-fun combine$Field$Mu$$Field$Int$$ ( Field$Mu$ Field$Int$ ) Field$Mu$)
(declare-fun combine$Field$Mu$$Field$Mu$$ ( Field$Mu$ Field$Mu$ ) Field$Mu$)
(declare-fun combine$Field$Mu$$Field$ref$$ ( Field$Mu$ Field$ref$ ) Field$Mu$)
(declare-fun combine$Field$Mu$$Int$ ( Field$Mu$ Int ) Field$Mu$)
(declare-fun combine$Field$Mu$$ModuleName$ ( Field$Mu$ ModuleName ) Field$Mu$)
(declare-fun combine$Field$Mu$$Mu$ ( Field$Mu$ Mu ) Field$Mu$)
(declare-fun combine$Field$Mu$$PermissionComponent$ ( Field$Mu$ PermissionComponent ) Field$Mu$)
(declare-fun combine$Field$Mu$$ref$ ( Field$Mu$ ref ) Field$Mu$)
(declare-fun combine$Field$Mu$$TypeName$ ( Field$Mu$ TypeName ) Field$Mu$)
(declare-fun combine$Field$ref$$$@Map@@$T0@@Int@To@$T0@@$ ( Field$ref$ $@Map@@$T0@@Int@To@$T0@@ ) Field$ref$)
(declare-fun combine$Field$ref$$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ ( Field$ref$ $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ) Field$ref$)
(declare-fun combine$Field$ref$$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ( Field$ref$ $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ ) Field$ref$)
(declare-fun combine$Field$ref$$$@Map@@PermissionComponent@To@Int@@$ ( Field$ref$ $@Map@@PermissionComponent@To@Int@@ ) Field$ref$)
(declare-fun combine$Field$ref$$$@Map@@ref@To@Int@@$ ( Field$ref$ $@Map@@ref@To@Int@@ ) Field$ref$)
(declare-fun combine$Field$ref$$Bool$ ( Field$ref$ Bool ) Field$ref$)
(declare-fun combine$Field$ref$$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ ( Field$ref$ Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ) Field$ref$)
(declare-fun combine$Field$ref$$Field$Bool$$ ( Field$ref$ Field$Bool$ ) Field$ref$)
(declare-fun combine$Field$ref$$Field$Int$$ ( Field$ref$ Field$Int$ ) Field$ref$)
(declare-fun combine$Field$ref$$Field$Mu$$ ( Field$ref$ Field$Mu$ ) Field$ref$)
(declare-fun combine$Field$ref$$Field$ref$$ ( Field$ref$ Field$ref$ ) Field$ref$)
(declare-fun combine$Field$ref$$Int$ ( Field$ref$ Int ) Field$ref$)
(declare-fun combine$Field$ref$$ModuleName$ ( Field$ref$ ModuleName ) Field$ref$)
(declare-fun combine$Field$ref$$Mu$ ( Field$ref$ Mu ) Field$ref$)
(declare-fun combine$Field$ref$$PermissionComponent$ ( Field$ref$ PermissionComponent ) Field$ref$)
(declare-fun combine$Field$ref$$ref$ ( Field$ref$ ref ) Field$ref$)
(declare-fun combine$Field$ref$$TypeName$ ( Field$ref$ TypeName ) Field$ref$)
(declare-fun combine$Int$$@Map@@$T0@@Int@To@$T0@@$ ( Int $@Map@@$T0@@Int@To@$T0@@ ) Int)
(declare-fun combine$Int$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ ( Int $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ) Int)
(declare-fun combine$Int$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ( Int $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ ) Int)
(declare-fun combine$Int$$@Map@@PermissionComponent@To@Int@@$ ( Int $@Map@@PermissionComponent@To@Int@@ ) Int)
(declare-fun combine$Int$$@Map@@ref@To@Int@@$ ( Int $@Map@@ref@To@Int@@ ) Int)
(declare-fun combine$Int$Bool$ ( Int Bool ) Int)
(declare-fun combine$Int$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ ( Int Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ) Int)
(declare-fun combine$Int$Field$Bool$$ ( Int Field$Bool$ ) Int)
(declare-fun combine$Int$Field$Int$$ ( Int Field$Int$ ) Int)
(declare-fun combine$Int$Field$Mu$$ ( Int Field$Mu$ ) Int)
(declare-fun combine$Int$Field$ref$$ ( Int Field$ref$ ) Int)
(declare-fun combine$Int$Int$ ( Int Int ) Int)
(declare-fun combine$Int$ModuleName$ ( Int ModuleName ) Int)
(declare-fun combine$Int$Mu$ ( Int Mu ) Int)
(declare-fun combine$Int$PermissionComponent$ ( Int PermissionComponent ) Int)
(declare-fun combine$Int$ref$ ( Int ref ) Int)
(declare-fun combine$Int$TypeName$ ( Int TypeName ) Int)
(declare-fun combine$ModuleName$$@Map@@$T0@@Int@To@$T0@@$ ( ModuleName $@Map@@$T0@@Int@To@$T0@@ ) ModuleName)
(declare-fun combine$ModuleName$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ ( ModuleName $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ) ModuleName)
(declare-fun combine$ModuleName$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ( ModuleName $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ ) ModuleName)
(declare-fun combine$ModuleName$$@Map@@PermissionComponent@To@Int@@$ ( ModuleName $@Map@@PermissionComponent@To@Int@@ ) ModuleName)
(declare-fun combine$ModuleName$$@Map@@ref@To@Int@@$ ( ModuleName $@Map@@ref@To@Int@@ ) ModuleName)
(declare-fun combine$ModuleName$Bool$ ( ModuleName Bool ) ModuleName)
(declare-fun combine$ModuleName$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ ( ModuleName Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ) ModuleName)
(declare-fun combine$ModuleName$Field$Bool$$ ( ModuleName Field$Bool$ ) ModuleName)
(declare-fun combine$ModuleName$Field$Int$$ ( ModuleName Field$Int$ ) ModuleName)
(declare-fun combine$ModuleName$Field$Mu$$ ( ModuleName Field$Mu$ ) ModuleName)
(declare-fun combine$ModuleName$Field$ref$$ ( ModuleName Field$ref$ ) ModuleName)
(declare-fun combine$ModuleName$Int$ ( ModuleName Int ) ModuleName)
(declare-fun combine$ModuleName$ModuleName$ ( ModuleName ModuleName ) ModuleName)
(declare-fun combine$ModuleName$Mu$ ( ModuleName Mu ) ModuleName)
(declare-fun combine$ModuleName$PermissionComponent$ ( ModuleName PermissionComponent ) ModuleName)
(declare-fun combine$ModuleName$ref$ ( ModuleName ref ) ModuleName)
(declare-fun combine$ModuleName$TypeName$ ( ModuleName TypeName ) ModuleName)
(declare-fun combine$Mu$$@Map@@$T0@@Int@To@$T0@@$ ( Mu $@Map@@$T0@@Int@To@$T0@@ ) Mu)
(declare-fun combine$Mu$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ ( Mu $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ) Mu)
(declare-fun combine$Mu$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ( Mu $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ ) Mu)
(declare-fun combine$Mu$$@Map@@PermissionComponent@To@Int@@$ ( Mu $@Map@@PermissionComponent@To@Int@@ ) Mu)
(declare-fun combine$Mu$$@Map@@ref@To@Int@@$ ( Mu $@Map@@ref@To@Int@@ ) Mu)
(declare-fun combine$Mu$Bool$ ( Mu Bool ) Mu)
(declare-fun combine$Mu$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ ( Mu Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ) Mu)
(declare-fun combine$Mu$Field$Bool$$ ( Mu Field$Bool$ ) Mu)
(declare-fun combine$Mu$Field$Int$$ ( Mu Field$Int$ ) Mu)
(declare-fun combine$Mu$Field$Mu$$ ( Mu Field$Mu$ ) Mu)
(declare-fun combine$Mu$Field$ref$$ ( Mu Field$ref$ ) Mu)
(declare-fun combine$Mu$Int$ ( Mu Int ) Mu)
(declare-fun combine$Mu$ModuleName$ ( Mu ModuleName ) Mu)
(declare-fun combine$Mu$Mu$ ( Mu Mu ) Mu)
(declare-fun combine$Mu$PermissionComponent$ ( Mu PermissionComponent ) Mu)
(declare-fun combine$Mu$ref$ ( Mu ref ) Mu)
(declare-fun combine$Mu$TypeName$ ( Mu TypeName ) Mu)
(declare-fun combine$PermissionComponent$$@Map@@$T0@@Int@To@$T0@@$ ( PermissionComponent $@Map@@$T0@@Int@To@$T0@@ ) PermissionComponent)
(declare-fun combine$PermissionComponent$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ ( PermissionComponent $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ) PermissionComponent)
(declare-fun combine$PermissionComponent$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ( PermissionComponent $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ ) PermissionComponent)
(declare-fun combine$PermissionComponent$$@Map@@PermissionComponent@To@Int@@$ ( PermissionComponent $@Map@@PermissionComponent@To@Int@@ ) PermissionComponent)
(declare-fun combine$PermissionComponent$$@Map@@ref@To@Int@@$ ( PermissionComponent $@Map@@ref@To@Int@@ ) PermissionComponent)
(declare-fun combine$PermissionComponent$Bool$ ( PermissionComponent Bool ) PermissionComponent)
(declare-fun combine$PermissionComponent$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ ( PermissionComponent Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ) PermissionComponent)
(declare-fun combine$PermissionComponent$Field$Bool$$ ( PermissionComponent Field$Bool$ ) PermissionComponent)
(declare-fun combine$PermissionComponent$Field$Int$$ ( PermissionComponent Field$Int$ ) PermissionComponent)
(declare-fun combine$PermissionComponent$Field$Mu$$ ( PermissionComponent Field$Mu$ ) PermissionComponent)
(declare-fun combine$PermissionComponent$Field$ref$$ ( PermissionComponent Field$ref$ ) PermissionComponent)
(declare-fun combine$PermissionComponent$Int$ ( PermissionComponent Int ) PermissionComponent)
(declare-fun combine$PermissionComponent$ModuleName$ ( PermissionComponent ModuleName ) PermissionComponent)
(declare-fun combine$PermissionComponent$Mu$ ( PermissionComponent Mu ) PermissionComponent)
(declare-fun combine$PermissionComponent$PermissionComponent$ ( PermissionComponent PermissionComponent ) PermissionComponent)
(declare-fun combine$PermissionComponent$ref$ ( PermissionComponent ref ) PermissionComponent)
(declare-fun combine$PermissionComponent$TypeName$ ( PermissionComponent TypeName ) PermissionComponent)
(declare-fun combine$ref$$@Map@@$T0@@Int@To@$T0@@$ ( ref $@Map@@$T0@@Int@To@$T0@@ ) ref)
(declare-fun combine$ref$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ ( ref $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ) ref)
(declare-fun combine$ref$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ( ref $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ ) ref)
(declare-fun combine$ref$$@Map@@PermissionComponent@To@Int@@$ ( ref $@Map@@PermissionComponent@To@Int@@ ) ref)
(declare-fun combine$ref$$@Map@@ref@To@Int@@$ ( ref $@Map@@ref@To@Int@@ ) ref)
(declare-fun combine$ref$Bool$ ( ref Bool ) ref)
(declare-fun combine$ref$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ ( ref Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ) ref)
(declare-fun combine$ref$Field$Bool$$ ( ref Field$Bool$ ) ref)
(declare-fun combine$ref$Field$Int$$ ( ref Field$Int$ ) ref)
(declare-fun combine$ref$Field$Mu$$ ( ref Field$Mu$ ) ref)
(declare-fun combine$ref$Field$ref$$ ( ref Field$ref$ ) ref)
(declare-fun combine$ref$Int$ ( ref Int ) ref)
(declare-fun combine$ref$ModuleName$ ( ref ModuleName ) ref)
(declare-fun combine$ref$Mu$ ( ref Mu ) ref)
(declare-fun combine$ref$PermissionComponent$ ( ref PermissionComponent ) ref)
(declare-fun combine$ref$ref$ ( ref ref ) ref)
(declare-fun combine$ref$TypeName$ ( ref TypeName ) ref)
(declare-fun combine$TypeName$$@Map@@$T0@@Int@To@$T0@@$ ( TypeName $@Map@@$T0@@Int@To@$T0@@ ) TypeName)
(declare-fun combine$TypeName$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ ( TypeName $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ) TypeName)
(declare-fun combine$TypeName$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ( TypeName $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ ) TypeName)
(declare-fun combine$TypeName$$@Map@@PermissionComponent@To@Int@@$ ( TypeName $@Map@@PermissionComponent@To@Int@@ ) TypeName)
(declare-fun combine$TypeName$$@Map@@ref@To@Int@@$ ( TypeName $@Map@@ref@To@Int@@ ) TypeName)
(declare-fun combine$TypeName$Bool$ ( TypeName Bool ) TypeName)
(declare-fun combine$TypeName$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ ( TypeName Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ) TypeName)
(declare-fun combine$TypeName$Field$Bool$$ ( TypeName Field$Bool$ ) TypeName)
(declare-fun combine$TypeName$Field$Int$$ ( TypeName Field$Int$ ) TypeName)
(declare-fun combine$TypeName$Field$Mu$$ ( TypeName Field$Mu$ ) TypeName)
(declare-fun combine$TypeName$Field$ref$$ ( TypeName Field$ref$ ) TypeName)
(declare-fun combine$TypeName$Int$ ( TypeName Int ) TypeName)
(declare-fun combine$TypeName$ModuleName$ ( TypeName ModuleName ) TypeName)
(declare-fun combine$TypeName$Mu$ ( TypeName Mu ) TypeName)
(declare-fun combine$TypeName$PermissionComponent$ ( TypeName PermissionComponent ) TypeName)
(declare-fun combine$TypeName$ref$ ( TypeName ref ) TypeName)
(declare-fun combine$TypeName$TypeName$ ( TypeName TypeName ) TypeName)
(declare-fun cont@75 ( ) ref)
(declare-fun Credits ( ) $@Map@@ref@To@Int@@)
(declare-fun Credits@0 ( ) $@Map@@ref@To@Int@@)
(declare-fun Credits@1 ( ) $@Map@@ref@To@Int@@)
(declare-fun Credits@3 ( ) $@Map@@ref@To@Int@@)
(declare-fun Credits@4 ( ) $@Map@@ref@To@Int@@)
(declare-fun Credits@5 ( ) $@Map@@ref@To@Int@@)
(declare-fun Credits@6 ( ) $@Map@@ref@To@Int@@)
(declare-fun Credits@7 ( ) $@Map@@ref@To@Int@@)
(declare-fun Credits@8 ( ) $@Map@@ref@To@Int@@)
(declare-fun current@67 ( ) ref)
(declare-fun CurrentModule ( ) ModuleName)
(declare-fun cust@151 ( ) ref)
(declare-fun custp@146 ( ) ref)
(declare-fun custp@146@0 ( ) ref)
(declare-fun DecPerm$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ref Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Int ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun DecPerm$Bool$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ref Field$Bool$ Int ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun DecPerm$Int$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ref Field$Int$ Int ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun DecPerm$Mu$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ref Field$Mu$ Int ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun DecPerm$ref$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ref Field$ref$ Int ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun dtype ( ref ) TypeName)
(declare-fun exhaleMask@_1155@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1159@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1163@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1167@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1177@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1177@1 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1177@2 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1177@3 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1177@4 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1177@5 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1177@6 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1177@7 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1177@8 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1197@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1197@1 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1197@2 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1205@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1213@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1213@1 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1213@2 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1213@3 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1213@4 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1213@5 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1238@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1242@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1249@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1249@1 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1249@2 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1249@3 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1249@4 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1263@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1263@1 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1263@2 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1263@3 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1263@4 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1263@5 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1263@6 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1263@7 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1263@8 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1277@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1281@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1288@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1288@1 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1288@2 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1288@3 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1288@4 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1326@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1326@1 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1326@2 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1326@3 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1326@4 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1326@5 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1326@6 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1326@7 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1326@8 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1345@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1345@1 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1345@10 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1345@11 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1345@12 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1345@2 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1345@3 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1345@4 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1345@5 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1345@6 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1345@7 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1345@8 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1345@9 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1363@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1363@1 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1363@10 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1363@11 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1363@12 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1363@13 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1363@14 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1363@15 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1363@16 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1363@2 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1363@3 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1363@4 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1363@5 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1363@6 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1363@7 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1363@8 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1363@9 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1387@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1387@1 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1387@2 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1387@3 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1387@4 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1420@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1420@1 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1420@2 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1420@3 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1420@4 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1420@5 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1420@6 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1420@7 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun exhaleMask@_1420@8 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun FactorialActor.q ( ) Field$ref$)
(declare-fun FactorialActor@t ( ) TypeName)
(declare-fun FactorialActorChannel.exp ( ) Field$ref$)
(declare-fun FactorialActorChannel.imp ( ) Field$ref$)
(declare-fun FactorialActorChannel.initExpState ( ) Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)
(declare-fun FactorialActorChannel.initImpState ( ) Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)
(declare-fun FactorialActorChannel.valid ( ) Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)
(declare-fun FactorialActorChannel@t ( ) TypeName)
(declare-fun FactorialActorChannelExpEP.ch ( ) Field$ref$)
(declare-fun FactorialActorChannelExpEP.expch ( ) Field$ref$)
(declare-fun FactorialActorChannelExpEP.state ( ) Field$Int$)
(declare-fun FactorialActorChannelExpEP.valid ( ) Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)
(declare-fun FactorialActorChannelExpEP@t ( ) TypeName)
(declare-fun FactorialActorChannelImpEP.ch ( ) Field$ref$)
(declare-fun FactorialActorChannelImpEP.impch ( ) Field$ref$)
(declare-fun FactorialActorChannelImpEP.state ( ) Field$Int$)
(declare-fun FactorialActorChannelImpEP.valid ( ) Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)
(declare-fun FactorialActorChannelImpEP@t ( ) TypeName)
(declare-fun FactorialCont.cust ( ) Field$ref$)
(declare-fun FactorialCont.q ( ) Field$ref$)
(declare-fun FactorialCont.v ( ) Field$Int$)
(declare-fun FactorialCont.vo ( ) Field$Int$)
(declare-fun FactorialCont@t ( ) TypeName)
(declare-fun FactorialContChannel.exp ( ) Field$ref$)
(declare-fun FactorialContChannel.imp ( ) Field$ref$)
(declare-fun FactorialContChannel.initExpState ( ) Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)
(declare-fun FactorialContChannel.initImpState ( ) Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)
(declare-fun FactorialContChannel.valid ( ) Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)
(declare-fun FactorialContChannel@t ( ) TypeName)
(declare-fun FactorialContChannelExpEP.ch ( ) Field$ref$)
(declare-fun FactorialContChannelExpEP.expch ( ) Field$ref$)
(declare-fun FactorialContChannelExpEP.state ( ) Field$Int$)
(declare-fun FactorialContChannelExpEP.valid ( ) Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)
(declare-fun FactorialContChannelExpEP@t ( ) TypeName)
(declare-fun FactorialContChannelImpEP.ch ( ) Field$ref$)
(declare-fun FactorialContChannelImpEP.impch ( ) Field$ref$)
(declare-fun FactorialContChannelImpEP.state ( ) Field$Int$)
(declare-fun FactorialContChannelImpEP.valid ( ) Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)
(declare-fun FactorialContChannelImpEP@t ( ) TypeName)
(declare-fun forkK ( ) Field$Int$)
(declare-fun Fractions ( Int ) Int)
(declare-fun funcappK@_1235 ( ) Int)
(declare-fun funcappK@_1311 ( ) Int)
(declare-fun funcappK@_1319 ( ) Int)
(declare-fun funcappK@_1410 ( ) Int)
(declare-fun funcappK@_1418 ( ) Int)
(declare-fun Future.q ( ) Field$ref$)
(declare-fun Future.sent ( ) Field$ref$)
(declare-fun Future.value ( ) Field$ref$)
(declare-fun Future@t ( ) TypeName)
(declare-fun FutureChannel.exp ( ) Field$ref$)
(declare-fun FutureChannel.imp ( ) Field$ref$)
(declare-fun FutureChannel.initExpState ( ) Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)
(declare-fun FutureChannel.initImpState ( ) Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)
(declare-fun FutureChannel.valid ( ) Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)
(declare-fun FutureChannel@t ( ) TypeName)
(declare-fun FutureChannelExpEP.ch ( ) Field$ref$)
(declare-fun FutureChannelExpEP.expch ( ) Field$ref$)
(declare-fun FutureChannelExpEP.state ( ) Field$Int$)
(declare-fun FutureChannelExpEP.valid ( ) Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)
(declare-fun FutureChannelExpEP@t ( ) TypeName)
(declare-fun FutureChannelImpEP.ch ( ) Field$ref$)
(declare-fun FutureChannelImpEP.impch ( ) Field$ref$)
(declare-fun FutureChannelImpEP.state ( ) Field$Int$)
(declare-fun FutureChannelImpEP.valid ( ) Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)
(declare-fun FutureChannelImpEP@t ( ) TypeName)
(declare-fun Heap ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@1 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@10 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@100 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@101 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@102 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@103 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@104 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@105 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@106 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@107 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@108 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@109 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@11 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@110 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@111 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@112 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@113 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@114 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@115 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@116 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@117 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@118 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@119 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@12 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@120 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@121 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@122 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@123 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@124 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@125 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@126 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@127 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@128 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@129 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@13 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@130 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@131 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@132 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@133 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@134 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@14 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@15 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@16 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@17 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@18 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@19 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@2 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@20 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@21 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@22 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@23 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@24 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@25 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@26 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@27 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@28 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@29 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@3 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@30 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@31 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@32 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@33 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@34 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@35 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@36 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@37 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@38 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@39 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@4 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@40 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@41 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@42 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@43 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@44 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@45 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@5 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@54 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@55 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@56 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@57 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@58 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@59 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@6 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@60 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@61 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@62 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@63 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@64 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@65 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@66 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@67 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@68 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@69 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@7 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@70 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@71 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@72 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@73 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@74 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@75 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@76 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@77 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@78 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@79 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@8 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@80 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@81 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@82 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@83 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@84 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@85 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@86 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@87 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@88 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@89 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@9 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@90 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@91 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@92 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@93 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@94 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@95 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@96 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@97 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@98 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun Heap@99 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun held ( ) Field$Int$)
(declare-fun IncPerm$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ref Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Int ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun IncPerm$Bool$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ref Field$Bool$ Int ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun IncPerm$Int$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ref Field$Int$ Int ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun IncPerm$Mu$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ref Field$Mu$ Int ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun IncPerm$ref$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ref Field$ref$ Int ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun inhaleHeap@_1153@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun inhaleHeap@_1157@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun inhaleHeap@_1161@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun inhaleHeap@_1165@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun inhaleHeap@_1169@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun inhaleHeap@_1188@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun inhaleHeap@_1189@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun inhaleHeap@_1192@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun inhaleHeap@_1203@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun inhaleHeap@_1207@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun inhaleHeap@_1221@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun inhaleHeap@_1240@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun inhaleHeap@_1244@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun inhaleHeap@_1257@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun inhaleHeap@_1275@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun inhaleHeap@_1279@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun inhaleHeap@_1283@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun inhaleHeap@_1296@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun inhaleHeap@_1337@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun inhaleHeap@_1382@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun inhaleHeap@_1395@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun ite$$@Map@@$T0@@Int@To@$T0@@$ ( Bool $@Map@@$T0@@Int@To@$T0@@ $@Map@@$T0@@Int@To@$T0@@ ) $@Map@@$T0@@Int@To@$T0@@)
(declare-fun ite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ ( Bool $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun ite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ( Bool $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun ite$$@Map@@PermissionComponent@To@Int@@$ ( Bool $@Map@@PermissionComponent@To@Int@@ $@Map@@PermissionComponent@To@Int@@ ) $@Map@@PermissionComponent@To@Int@@)
(declare-fun ite$$@Map@@ref@To@Int@@$ ( Bool $@Map@@ref@To@Int@@ $@Map@@ref@To@Int@@ ) $@Map@@ref@To@Int@@)
(declare-fun ite$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ ( Bool Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ) Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)
(declare-fun ite$Field$Bool$$ ( Bool Field$Bool$ Field$Bool$ ) Field$Bool$)
(declare-fun ite$Field$Int$$ ( Bool Field$Int$ Field$Int$ ) Field$Int$)
(declare-fun ite$Field$Mu$$ ( Bool Field$Mu$ Field$Mu$ ) Field$Mu$)
(declare-fun ite$Field$ref$$ ( Bool Field$ref$ Field$ref$ ) Field$ref$)
(declare-fun ite$Int$ ( Bool Int Int ) Int)
(declare-fun ite$ModuleName$ ( Bool ModuleName ModuleName ) ModuleName)
(declare-fun ite$Mu$ ( Bool Mu Mu ) Mu)
(declare-fun ite$PermissionComponent$ ( Bool PermissionComponent PermissionComponent ) PermissionComponent)
(declare-fun ite$ref$ ( Bool ref ref ) ref)
(declare-fun ite$TypeName$ ( Bool TypeName TypeName ) TypeName)
(declare-fun joinable ( ) Field$Int$)
(declare-fun m@136 ( ) ref)
(declare-fun m@142 ( ) ref)
(declare-fun m@154 ( ) ref)
(declare-fun m@69 ( ) ref)
(declare-fun m@71 ( ) ref)
(declare-fun m@77 ( ) ref)
(declare-fun MapRead$$@Map@@$T0@@Int@To@$T0@@$ref$ ( $@Map@@$T0@@Int@To@$T0@@ Int ) ref)
(declare-fun MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ref Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ) $@Map@@PermissionComponent@To@Int@@)
(declare-fun MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ref Field$Bool$ ) $@Map@@PermissionComponent@To@Int@@)
(declare-fun MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ref Field$Int$ ) $@Map@@PermissionComponent@To@Int@@)
(declare-fun MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ref Field$Mu$ ) $@Map@@PermissionComponent@To@Int@@)
(declare-fun MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ref Field$ref$ ) $@Map@@PermissionComponent@To@Int@@)
(declare-fun MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ( $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ ref Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ ( $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ ref Field$Bool$ ) Bool)
(declare-fun MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ ( $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ ref Field$Int$ ) Int)
(declare-fun MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ ( $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ ref Field$Mu$ ) Mu)
(declare-fun MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ ( $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ ref Field$ref$ ) ref)
(declare-fun MapRead$$@Map@@PermissionComponent@To@Int@@$ ( $@Map@@PermissionComponent@To@Int@@ PermissionComponent ) Int)
(declare-fun MapRead$$@Map@@ref@To@Int@@$ ( $@Map@@ref@To@Int@@ ref ) Int)
(declare-fun MapWrite$$@Map@@$T0@@Int@To@$T0@@$ref$ ( $@Map@@$T0@@Int@To@$T0@@ Int ref ) $@Map@@$T0@@Int@To@$T0@@)
(declare-fun MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ref Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ $@Map@@PermissionComponent@To@Int@@ ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ref Field$Int$ $@Map@@PermissionComponent@To@Int@@ ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ref Field$Mu$ $@Map@@PermissionComponent@To@Int@@ ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ref Field$ref$ $@Map@@PermissionComponent@To@Int@@ ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ( $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ ref Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ ( $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ ref Field$Int$ Int ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ ( $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ ref Field$Mu$ Mu ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ ( $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ ref Field$ref$ ref ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun MapWrite$$@Map@@PermissionComponent@To@Int@@$ ( $@Map@@PermissionComponent@To@Int@@ PermissionComponent Int ) $@Map@@PermissionComponent@To@Int@@)
(declare-fun MapWrite$$@Map@@ref@To@Int@@$ ( $@Map@@ref@To@Int@@ ref Int ) $@Map@@ref@To@Int@@)
(declare-fun Mask ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@0 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@1 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@10 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@100 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@101 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@102 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@103 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@104 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@105 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@106 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@107 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@108 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@109 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@11 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@110 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@111 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@112 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@113 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@114 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@115 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@116 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@117 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@118 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@119 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@12 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@120 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@121 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@122 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@123 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@124 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@125 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@126 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@127 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@128 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@129 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@13 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@130 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@131 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@132 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@133 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@134 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@135 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@136 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@137 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@138 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@139 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@14 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@140 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@141 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@142 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@143 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@144 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@145 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@146 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@147 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@148 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@149 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@15 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@150 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@151 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@152 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@153 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@154 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@155 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@156 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@157 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@158 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@159 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@16 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@160 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@161 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@162 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@163 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@164 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@165 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@166 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@167 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@168 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@169 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@17 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@170 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@171 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@172 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@173 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@174 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@175 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@176 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@177 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@178 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@179 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@18 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@180 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@181 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@182 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@183 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@184 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@185 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@186 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@187 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@188 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@189 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@19 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@190 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@191 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@192 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@193 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@194 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@195 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@196 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@197 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@198 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@199 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@2 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@20 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@200 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@201 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@202 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@203 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@204 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@205 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@206 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@207 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@208 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@209 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@21 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@210 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@211 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@212 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@213 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@214 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@215 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@216 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@217 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@218 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@219 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@22 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@220 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@221 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@23 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@24 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@25 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@26 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@27 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@28 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@29 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@3 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@30 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@31 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@32 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@33 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@34 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@35 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@36 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@37 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@38 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@39 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@4 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@40 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@41 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@42 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@43 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@5 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@53 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@54 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@55 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@56 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@57 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@58 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@59 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@6 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@60 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@61 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@62 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@63 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@64 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@65 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@66 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@67 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@68 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@69 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@7 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@70 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@71 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@72 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@73 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@74 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@75 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@76 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@77 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@78 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@79 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@8 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@80 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@81 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@82 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@83 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@84 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@85 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@86 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@87 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@88 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@89 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@9 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@90 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@91 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@92 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@93 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@94 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@95 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@96 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@97 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@98 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Mask@99 ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)
(declare-fun Message.cust1 ( ) Field$ref$)
(declare-fun Message.inv ( ) Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)
(declare-fun Message.invFinalResult ( ) Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)
(declare-fun Message.invResult1 ( ) Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)
(declare-fun Message.invResult2 ( ) Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)
(declare-fun Message.invValue ( ) Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)
(declare-fun Message.old1 ( ) Field$ref$)
(declare-fun Message.old2 ( ) Field$ref$)
(declare-fun Message.receiver1 ( ) Field$ref$)
(declare-fun Message.receiver2 ( ) Field$ref$)
(declare-fun Message.receiver3 ( ) Field$ref$)
(declare-fun Message.receiver4 ( ) Field$ref$)
(declare-fun Message.sender1 ( ) Field$ref$)
(declare-fun Message.sender2 ( ) Field$ref$)
(declare-fun Message.sender3 ( ) Field$ref$)
(declare-fun Message.sender4 ( ) Field$ref$)
(declare-fun Message.type ( ) Field$Int$)
(declare-fun Message.v1 ( ) Field$Int$)
(declare-fun Message.vo1 ( ) Field$Int$)
(declare-fun Message.vr1 ( ) Field$Int$)
(declare-fun Message.vr2 ( ) Field$Int$)
(declare-fun Message.vr3 ( ) Field$Int$)
(declare-fun Message@t ( ) TypeName)
(declare-fun methodCallK@_1196 ( ) Int)
(declare-fun methodCallK@_1212 ( ) Int)
(declare-fun methodCallK@_1248 ( ) Int)
(declare-fun methodCallK@_1262 ( ) Int)
(declare-fun methodCallK@_1287 ( ) Int)
(declare-fun methodCallK@_1325 ( ) Int)
(declare-fun methodCallK@_1362 ( ) Int)
(declare-fun methodCallK@_1386 ( ) Int)
(declare-fun methodK@_1151 ( ) Int)
(declare-fun mi@130 ( ) ref)
(declare-fun mo@131 ( ) ref)
(declare-fun mo@131@0 ( ) ref)
(declare-fun module@default ( ) ModuleName)
(declare-fun monitorK ( ) Int)
(declare-fun msg@128 ( ) ref)
(declare-fun msg@128@0 ( ) ref)
(declare-fun mu ( ) Field$Mu$)
(declare-fun nostate ( ) $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)
(declare-fun null ( ) ref)
(declare-fun nw@_1208@0 ( ) ref)
(declare-fun nw@_1258@0 ( ) ref)
(declare-fun nw@_1297@0 ( ) ref)
(declare-fun nw@_1321@0 ( ) ref)
(declare-fun nw@_1358@0 ( ) ref)
(declare-fun nw@_1396@0 ( ) ref)
(declare-fun oldv@139 ( ) ref)
(declare-fun perm$N ( ) PermissionComponent)
(declare-fun perm$R ( ) PermissionComponent)
(declare-fun Permission$denominator ( ) Int)
(declare-fun Permission$Full ( ) $@Map@@PermissionComponent@To@Int@@)
(declare-fun Permission$FullFraction ( ) Int)
(declare-fun Permission$Zero ( ) $@Map@@PermissionComponent@To@Int@@)
(declare-fun predicateK ( ) Int)
(declare-fun r@73 ( ) ref)
(declare-fun r@79 ( ) ref)
(declare-fun rdheld ( ) Field$Bool$)
(declare-fun receiver@134 ( ) ref)
(declare-fun receiver@134@0 ( ) ref)
(declare-fun receiver@140 ( ) ref)
(declare-fun receiver@140@0 ( ) ref)
(declare-fun receiver@152 ( ) ref)
(declare-fun this ( ) ref)
(declare-fun this@127 ( ) ref)
(declare-fun this@127@0 ( ) ref)
(declare-fun this@129 ( ) ref)
(declare-fun this@129@0 ( ) ref)
(declare-fun this@132 ( ) ref)
(declare-fun this@135 ( ) ref)
(declare-fun this@135@0 ( ) ref)
(declare-fun this@137 ( ) ref)
(declare-fun this@141 ( ) ref)
(declare-fun this@141@0 ( ) ref)
(declare-fun this@143 ( ) ref)
(declare-fun this@147 ( ) ref)
(declare-fun this@148 ( ) ref)
(declare-fun this@153 ( ) ref)
(declare-fun this@153@0 ( ) ref)
(declare-fun token@_1338@0 ( ) ref)
(declare-fun unfoldK@_1154 ( ) Int)
(declare-fun unfoldK@_1158 ( ) Int)
(declare-fun unfoldK@_1162 ( ) Int)
(declare-fun unfoldK@_1166 ( ) Int)
(declare-fun unfoldK@_1204 ( ) Int)
(declare-fun unfoldK@_1237 ( ) Int)
(declare-fun unfoldK@_1241 ( ) Int)
(declare-fun unfoldK@_1276 ( ) Int)
(declare-fun unfoldK@_1280 ( ) Int)
(declare-fun v@149@0 ( ) Int)
(declare-fun vo@150@0 ( ) Int)
(declare-fun vop@145@0 ( ) Int)
(declare-fun vp@144@0 ( ) Int)
(declare-fun whileK@_1176 ( ) Int)
(declare-fun ZeroCredits ( ) $@Map@@ref@To@Int@@)
(declare-fun ZeroMask ( ) $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)

;Predicates
(declare-fun CanAssumeFunctionDefs ( ) Bool)
(declare-fun CanRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ref Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ) Bool)
(declare-fun CanRead$Bool$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ref Field$Bool$ ) Bool)
(declare-fun CanRead$Int$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ref Field$Int$ ) Bool)
(declare-fun CanRead$Mu$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ref Field$Mu$ ) Bool)
(declare-fun CanRead$ref$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ref Field$ref$ ) Bool)
(declare-fun CanWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ref Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ) Bool)
(declare-fun CanWrite$Bool$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ref Field$Bool$ ) Bool)
(declare-fun CanWrite$Int$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ref Field$Int$ ) Bool)
(declare-fun CanWrite$Mu$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ref Field$Mu$ ) Bool)
(declare-fun CanWrite$ref$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ref Field$ref$ ) Bool)
(declare-fun combine$Bool$$@Map@@$T0@@Int@To@$T0@@$ ( Bool $@Map@@$T0@@Int@To@$T0@@ ) Bool)
(declare-fun combine$Bool$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ ( Bool $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ) Bool)
(declare-fun combine$Bool$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ( Bool $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ ) Bool)
(declare-fun combine$Bool$$@Map@@PermissionComponent@To@Int@@$ ( Bool $@Map@@PermissionComponent@To@Int@@ ) Bool)
(declare-fun combine$Bool$$@Map@@ref@To@Int@@$ ( Bool $@Map@@ref@To@Int@@ ) Bool)
(declare-fun combine$Bool$Bool$ ( Bool Bool ) Bool)
(declare-fun combine$Bool$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ ( Bool Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ) Bool)
(declare-fun combine$Bool$Field$Bool$$ ( Bool Field$Bool$ ) Bool)
(declare-fun combine$Bool$Field$Int$$ ( Bool Field$Int$ ) Bool)
(declare-fun combine$Bool$Field$Mu$$ ( Bool Field$Mu$ ) Bool)
(declare-fun combine$Bool$Field$ref$$ ( Bool Field$ref$ ) Bool)
(declare-fun combine$Bool$Int$ ( Bool Int ) Bool)
(declare-fun combine$Bool$ModuleName$ ( Bool ModuleName ) Bool)
(declare-fun combine$Bool$Mu$ ( Bool Mu ) Bool)
(declare-fun combine$Bool$PermissionComponent$ ( Bool PermissionComponent ) Bool)
(declare-fun combine$Bool$ref$ ( Bool ref ) Bool)
(declare-fun combine$Bool$TypeName$ ( Bool TypeName ) Bool)
(declare-fun IsGoodInhaleState ( $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ) Bool)
(declare-fun IsGoodMask ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ) Bool)
(declare-fun IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ ( $@Map@@$T0@@Int@To@$T0@@ ) Bool)
(declare-fun IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ ( $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ) Bool)
(declare-fun IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ( $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ ) Bool)
(declare-fun IsGoodState$$@Map@@PermissionComponent@To@Int@@$ ( $@Map@@PermissionComponent@To@Int@@ ) Bool)
(declare-fun IsGoodState$$@Map@@ref@To@Int@@$ ( $@Map@@ref@To@Int@@ ) Bool)
(declare-fun IsGoodState$Bool$ ( Bool ) Bool)
(declare-fun IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ ( Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ) Bool)
(declare-fun IsGoodState$Field$Bool$$ ( Field$Bool$ ) Bool)
(declare-fun IsGoodState$Field$Int$$ ( Field$Int$ ) Bool)
(declare-fun IsGoodState$Field$Mu$$ ( Field$Mu$ ) Bool)
(declare-fun IsGoodState$Field$ref$$ ( Field$ref$ ) Bool)
(declare-fun IsGoodState$Int$ ( Int ) Bool)
(declare-fun IsGoodState$ModuleName$ ( ModuleName ) Bool)
(declare-fun IsGoodState$Mu$ ( Mu ) Bool)
(declare-fun IsGoodState$PermissionComponent$ ( PermissionComponent ) Bool)
(declare-fun IsGoodState$ref$ ( ref ) Bool)
(declare-fun IsGoodState$TypeName$ ( TypeName ) Bool)
(declare-fun ite$Bool$ ( Bool Bool Bool ) Bool)
(declare-fun MuBelow ( Mu Mu ) Bool)
(declare-fun NonPredicateField$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ( Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ) Bool)
(declare-fun NonPredicateField$Bool$ ( Field$Bool$ ) Bool)
(declare-fun NonPredicateField$Int$ ( Field$Int$ ) Bool)
(declare-fun NonPredicateField$Mu$ ( Field$Mu$ ) Bool)
(declare-fun NonPredicateField$ref$ ( Field$ref$ ) Bool)
(declare-fun PredicateField$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ( Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ) Bool)
(declare-fun PredicateField$Bool$ ( Field$Bool$ ) Bool)
(declare-fun PredicateField$Int$ ( Field$Int$ ) Bool)
(declare-fun PredicateField$Mu$ ( Field$Mu$ ) Bool)
(declare-fun PredicateField$ref$ ( Field$ref$ ) Bool)
(declare-fun wf ( $@Map@@$T0@@ref@Field$$T0$@To@$T0@@ $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ ) Bool)

;Axioms
   (assert (! (forall ((|i_1| Field$ref$)(|i| ref)(|m_1| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)(|v_1| ref))(!(= v_1 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ m_1 i i_1 v_1) i i_1)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ m_1 i i_1 v_1) i i_1)) :qid map_1_$@Map@@$T0@@ref@Field$$T0$@To@$T0@@ :weight 0 )) :named ax_0))
   (assert (! (forall ((|i_100| Int)(|m_53| $@Map@@$T0@@Int@To@$T0@@)(|v_53| ref))(!(= v_53 (MapRead$$@Map@@$T0@@Int@To@$T0@@$ref$ (MapWrite$$@Map@@$T0@@Int@To@$T0@@$ref$ m_53 i_100 v_53) i_100)):pattern ( (MapRead$$@Map@@$T0@@Int@To@$T0@@$ref$ (MapWrite$$@Map@@$T0@@Int@To@$T0@@$ref$ m_53 i_100 v_53) i_100)) :qid map_1_$@Map@@$T0@@Int@To@$T0@@ :weight 0 )) :named ax_1))
   (assert (! (forall ((|i_13| Field$ref$)(|i_12| ref)(|m_7| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)(|v_7| $@Map@@PermissionComponent@To@Int@@))(!(= v_7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ m_7 i_12 i_13 v_7) i_12 i_13)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ m_7 i_12 i_13 v_7) i_12 i_13)) :qid map_1_$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ :weight 0 )) :named ax_2))
   (assert (! (forall ((|i_24| PermissionComponent)(|m_13| $@Map@@PermissionComponent@To@Int@@)(|v_13| Int))(!(= v_13 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapWrite$$@Map@@PermissionComponent@To@Int@@$ m_13 i_24 v_13) i_24)):pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapWrite$$@Map@@PermissionComponent@To@Int@@$ m_13 i_24 v_13) i_24)) :qid map_1_$@Map@@PermissionComponent@To@Int@@ :weight 0 )) :named ax_3))
   (assert (! (forall ((|i_27| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)(|i_26| ref)(|m_15| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)(|v_15| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@))(!(= v_15 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ m_15 i_26 i_27 v_15) i_26 i_27)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ m_15 i_26 i_27 v_15) i_26 i_27)) :qid map_1_$@Map@@$T0@@ref@Field$$T0$@To@$T0@@ :weight 0 )) :named ax_4))
   (assert (! (forall ((|i_39| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)(|i_38| ref)(|m_21| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)(|v_21| $@Map@@PermissionComponent@To@Int@@))(!(= v_21 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ m_21 i_38 i_39 v_21) i_38 i_39)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ m_21 i_38 i_39 v_21) i_38 i_39)) :qid map_1_$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ :weight 0 )) :named ax_5))
   (assert (! (forall ((|i_50| ref)(|m_27| $@Map@@ref@To@Int@@)(|v_27| Int))(!(= v_27 (MapRead$$@Map@@ref@To@Int@@$ (MapWrite$$@Map@@ref@To@Int@@$ m_27 i_50 v_27) i_50)):pattern ( (MapRead$$@Map@@ref@To@Int@@$ (MapWrite$$@Map@@ref@To@Int@@$ m_27 i_50 v_27) i_50)) :qid map_1_$@Map@@ref@To@Int@@ :weight 0 )) :named ax_6))
   (assert (! (forall ((|i_53| Field$Mu$)(|i_52| ref)(|m_29| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)(|v_29| Mu))(!(= v_29 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ m_29 i_52 i_53 v_29) i_52 i_53)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ m_29 i_52 i_53 v_29) i_52 i_53)) :qid map_1_$@Map@@$T0@@ref@Field$$T0$@To@$T0@@ :weight 0 )) :named ax_7))
   (assert (! (forall ((|i_65| Field$Mu$)(|i_64| ref)(|m_35| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)(|v_35| $@Map@@PermissionComponent@To@Int@@))(!(= v_35 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ m_35 i_64 i_65 v_35) i_64 i_65)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ m_35 i_64 i_65 v_35) i_64 i_65)) :qid map_1_$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ :weight 0 )) :named ax_8))
   (assert (! (forall ((|i_77| Field$Int$)(|i_76| ref)(|m_41| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)(|v_41| Int))(!(= v_41 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ m_41 i_76 i_77 v_41) i_76 i_77)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ m_41 i_76 i_77 v_41) i_76 i_77)) :qid map_1_$@Map@@$T0@@ref@Field$$T0$@To@$T0@@ :weight 0 )) :named ax_9))
   (assert (! (forall ((|i_89| Field$Int$)(|i_88| ref)(|m_47| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)(|v_47| $@Map@@PermissionComponent@To@Int@@))(!(= v_47 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ m_47 i_88 i_89 v_47) i_88 i_89)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ m_47 i_88 i_89 v_47) i_88 i_89)) :qid map_1_$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ :weight 0 )) :named ax_10))
   (assert (! (forall ((|v_10| $@Map@@PermissionComponent@To@Int@@)(|i_19| Field$ref$)(|i_18| ref)(|j_15| Field$Int$)(|j_14| ref)(|m_10| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@))(!(= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ m_10 j_14 j_15) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ m_10 i_18 i_19 v_10) j_14 j_15)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ m_10 i_18 i_19 v_10) j_14 j_15)) :qid map_3_$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@__Int__ref :weight 0 )) :named ax_11))
   (assert (! (forall ((|v_11| $@Map@@PermissionComponent@To@Int@@)(|i_21| Field$ref$)(|i_20| ref)(|j_17| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)(|j_16| ref)(|m_11| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@))(!(= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ m_11 j_16 j_17) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ m_11 i_20 i_21 v_11) j_16 j_17)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ m_11 i_20 i_21 v_11) j_16 j_17)) :qid map_3_$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@__$@Map@@$T0@@ref@Field$$T0$@To@$T0@@__ref :weight 0 )) :named ax_12))
   (assert (! (forall ((|v_12| $@Map@@PermissionComponent@To@Int@@)(|i_23| Field$ref$)(|i_22| ref)(|j_19| Field$Mu$)(|j_18| ref)(|m_12| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@))(!(= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ m_12 j_18 j_19) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ m_12 i_22 i_23 v_12) j_18 j_19)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ m_12 i_22 i_23 v_12) j_18 j_19)) :qid map_3_$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@__Mu__ref :weight 0 )) :named ax_13))
   (assert (! (forall ((|v_14| Int)(|m_14| $@Map@@PermissionComponent@To@Int@@)(|i_25| PermissionComponent)(|j_20| PermissionComponent))(!(=> (not (= j_20 i_25)) (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ m_14 j_20) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapWrite$$@Map@@PermissionComponent@To@Int@@$ m_14 i_25 v_14) j_20))):pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapWrite$$@Map@@PermissionComponent@To@Int@@$ m_14 i_25 v_14) j_20)) :qid map_2_$@Map@@PermissionComponent@To@Int@@ :weight 0 )) :named ax_14))
   (assert (! (forall ((|v_16| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)(|m_16| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)(|i_29| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)(|j_22| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)(|i_28| ref)(|j_21| ref))(!(=> (or (not (= j_22 i_29)) (not (= j_21 i_28))) (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ m_16 j_21 j_22) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ m_16 i_28 i_29 v_16) j_21 j_22))):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ m_16 i_28 i_29 v_16) j_21 j_22)) :qid map_2_$@Map@@$T0@@ref@Field$$T0$@To@$T0@@ :weight 0 )) :named ax_15))
   (assert (! (forall ((|v_17| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)(|i_31| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)(|i_30| ref)(|j_24| Field$Bool$)(|j_23| ref)(|m_17| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@))(!(= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ m_17 j_23 j_24) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ m_17 i_30 i_31 v_17) j_23 j_24)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ m_17 i_30 i_31 v_17) j_23 j_24)) :qid map_3_$@Map@@$T0@@ref@Field$$T0$@To@$T0@@__Bool__$@Map@@$T0@@ref@Field$$T0$@To@$T0@@ :weight 0 )) :named ax_16))
   (assert (! (forall ((|v_18| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)(|i_33| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)(|i_32| ref)(|j_26| Field$Int$)(|j_25| ref)(|m_18| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@))(!(= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ m_18 j_25 j_26) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ m_18 i_32 i_33 v_18) j_25 j_26)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ m_18 i_32 i_33 v_18) j_25 j_26)) :qid map_3_$@Map@@$T0@@ref@Field$$T0$@To@$T0@@__Int__$@Map@@$T0@@ref@Field$$T0$@To@$T0@@ :weight 0 )) :named ax_17))
   (assert (! (forall ((|v_19| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)(|i_35| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)(|i_34| ref)(|j_28| Field$ref$)(|j_27| ref)(|m_19| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@))(!(= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ m_19 j_27 j_28) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ m_19 i_34 i_35 v_19) j_27 j_28)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ m_19 i_34 i_35 v_19) j_27 j_28)) :qid map_3_$@Map@@$T0@@ref@Field$$T0$@To@$T0@@__ref__$@Map@@$T0@@ref@Field$$T0$@To@$T0@@ :weight 0 )) :named ax_18))
   (assert (! (forall ((|v_2| ref)(|m_2| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)(|i_3| Field$ref$)(|j_1| Field$ref$)(|i_2| ref)(|j| ref))(!(=> (or (not (= j_1 i_3)) (not (= j i_2))) (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ m_2 j j_1) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ m_2 i_2 i_3 v_2) j j_1))):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ m_2 i_2 i_3 v_2) j j_1)) :qid map_2_$@Map@@$T0@@ref@Field$$T0$@To@$T0@@ :weight 0 )) :named ax_19))
   (assert (! (forall ((|v_20| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)(|i_37| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)(|i_36| ref)(|j_30| Field$Mu$)(|j_29| ref)(|m_20| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@))(!(= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ m_20 j_29 j_30) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ m_20 i_36 i_37 v_20) j_29 j_30)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ m_20 i_36 i_37 v_20) j_29 j_30)) :qid map_3_$@Map@@$T0@@ref@Field$$T0$@To@$T0@@__Mu__$@Map@@$T0@@ref@Field$$T0$@To@$T0@@ :weight 0 )) :named ax_20))
   (assert (! (forall ((|v_22| $@Map@@PermissionComponent@To@Int@@)(|m_22| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)(|i_41| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)(|j_32| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)(|i_40| ref)(|j_31| ref))(!(=> (or (not (= j_32 i_41)) (not (= j_31 i_40))) (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ m_22 j_31 j_32) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ m_22 i_40 i_41 v_22) j_31 j_32))):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ m_22 i_40 i_41 v_22) j_31 j_32)) :qid map_2_$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ :weight 0 )) :named ax_21))
   (assert (! (forall ((|v_23| $@Map@@PermissionComponent@To@Int@@)(|i_43| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)(|i_42| ref)(|j_34| Field$Bool$)(|j_33| ref)(|m_23| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@))(!(= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ m_23 j_33 j_34) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ m_23 i_42 i_43 v_23) j_33 j_34)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ m_23 i_42 i_43 v_23) j_33 j_34)) :qid map_3_$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@__Bool__$@Map@@$T0@@ref@Field$$T0$@To@$T0@@ :weight 0 )) :named ax_22))
   (assert (! (forall ((|v_24| $@Map@@PermissionComponent@To@Int@@)(|i_45| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)(|i_44| ref)(|j_36| Field$Int$)(|j_35| ref)(|m_24| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@))(!(= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ m_24 j_35 j_36) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ m_24 i_44 i_45 v_24) j_35 j_36)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ m_24 i_44 i_45 v_24) j_35 j_36)) :qid map_3_$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@__Int__$@Map@@$T0@@ref@Field$$T0$@To@$T0@@ :weight 0 )) :named ax_23))
   (assert (! (forall ((|v_25| $@Map@@PermissionComponent@To@Int@@)(|i_47| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)(|i_46| ref)(|j_38| Field$ref$)(|j_37| ref)(|m_25| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@))(!(= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ m_25 j_37 j_38) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ m_25 i_46 i_47 v_25) j_37 j_38)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ m_25 i_46 i_47 v_25) j_37 j_38)) :qid map_3_$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@__ref__$@Map@@$T0@@ref@Field$$T0$@To@$T0@@ :weight 0 )) :named ax_24))
   (assert (! (forall ((|v_26| $@Map@@PermissionComponent@To@Int@@)(|i_49| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)(|i_48| ref)(|j_40| Field$Mu$)(|j_39| ref)(|m_26| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@))(!(= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ m_26 j_39 j_40) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ m_26 i_48 i_49 v_26) j_39 j_40)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ m_26 i_48 i_49 v_26) j_39 j_40)) :qid map_3_$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@__Mu__$@Map@@$T0@@ref@Field$$T0$@To@$T0@@ :weight 0 )) :named ax_25))
   (assert (! (forall ((|v_28| Int)(|m_28| $@Map@@ref@To@Int@@)(|i_51| ref)(|j_41| ref))(!(=> (not (= j_41 i_51)) (= (MapRead$$@Map@@ref@To@Int@@$ m_28 j_41) (MapRead$$@Map@@ref@To@Int@@$ (MapWrite$$@Map@@ref@To@Int@@$ m_28 i_51 v_28) j_41))):pattern ( (MapRead$$@Map@@ref@To@Int@@$ (MapWrite$$@Map@@ref@To@Int@@$ m_28 i_51 v_28) j_41)) :qid map_2_$@Map@@ref@To@Int@@ :weight 0 )) :named ax_26))
   (assert (! (forall ((|v_3| ref)(|i_5| Field$ref$)(|i_4| ref)(|j_3| Field$Bool$)(|j_2| ref)(|m_3| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@))(!(= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ m_3 j_2 j_3) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ m_3 i_4 i_5 v_3) j_2 j_3)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ m_3 i_4 i_5 v_3) j_2 j_3)) :qid map_3_$@Map@@$T0@@ref@Field$$T0$@To@$T0@@__Bool__ref :weight 0 )) :named ax_27))
   (assert (! (forall ((|v_30| Mu)(|m_30| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)(|i_55| Field$Mu$)(|j_43| Field$Mu$)(|i_54| ref)(|j_42| ref))(!(=> (or (not (= j_43 i_55)) (not (= j_42 i_54))) (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ m_30 j_42 j_43) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ m_30 i_54 i_55 v_30) j_42 j_43))):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ m_30 i_54 i_55 v_30) j_42 j_43)) :qid map_2_$@Map@@$T0@@ref@Field$$T0$@To@$T0@@ :weight 0 )) :named ax_28))
   (assert (! (forall ((|v_31| Mu)(|i_57| Field$Mu$)(|i_56| ref)(|j_45| Field$Bool$)(|j_44| ref)(|m_31| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@))(!(= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ m_31 j_44 j_45) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ m_31 i_56 i_57 v_31) j_44 j_45)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ m_31 i_56 i_57 v_31) j_44 j_45)) :qid map_3_$@Map@@$T0@@ref@Field$$T0$@To@$T0@@__Bool__Mu :weight 0 )) :named ax_29))
   (assert (! (forall ((|v_32| Mu)(|i_59| Field$Mu$)(|i_58| ref)(|j_47| Field$Int$)(|j_46| ref)(|m_32| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@))(!(= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ m_32 j_46 j_47) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ m_32 i_58 i_59 v_32) j_46 j_47)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ m_32 i_58 i_59 v_32) j_46 j_47)) :qid map_3_$@Map@@$T0@@ref@Field$$T0$@To@$T0@@__Int__Mu :weight 0 )) :named ax_30))
   (assert (! (forall ((|v_33| Mu)(|i_61| Field$Mu$)(|i_60| ref)(|j_49| Field$ref$)(|j_48| ref)(|m_33| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@))(!(= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ m_33 j_48 j_49) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ m_33 i_60 i_61 v_33) j_48 j_49)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ m_33 i_60 i_61 v_33) j_48 j_49)) :qid map_3_$@Map@@$T0@@ref@Field$$T0$@To@$T0@@__ref__Mu :weight 0 )) :named ax_31))
   (assert (! (forall ((|v_34| Mu)(|i_63| Field$Mu$)(|i_62| ref)(|j_51| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)(|j_50| ref)(|m_34| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@))(!(= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ m_34 j_50 j_51) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ m_34 i_62 i_63 v_34) j_50 j_51)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ m_34 i_62 i_63 v_34) j_50 j_51)) :qid map_3_$@Map@@$T0@@ref@Field$$T0$@To@$T0@@__$@Map@@$T0@@ref@Field$$T0$@To@$T0@@__Mu :weight 0 )) :named ax_32))
   (assert (! (forall ((|v_36| $@Map@@PermissionComponent@To@Int@@)(|m_36| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)(|i_67| Field$Mu$)(|j_53| Field$Mu$)(|i_66| ref)(|j_52| ref))(!(=> (or (not (= j_53 i_67)) (not (= j_52 i_66))) (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ m_36 j_52 j_53) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ m_36 i_66 i_67 v_36) j_52 j_53))):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ m_36 i_66 i_67 v_36) j_52 j_53)) :qid map_2_$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ :weight 0 )) :named ax_33))
   (assert (! (forall ((|v_37| $@Map@@PermissionComponent@To@Int@@)(|i_69| Field$Mu$)(|i_68| ref)(|j_55| Field$Bool$)(|j_54| ref)(|m_37| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@))(!(= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ m_37 j_54 j_55) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ m_37 i_68 i_69 v_37) j_54 j_55)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ m_37 i_68 i_69 v_37) j_54 j_55)) :qid map_3_$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@__Bool__Mu :weight 0 )) :named ax_34))
   (assert (! (forall ((|v_38| $@Map@@PermissionComponent@To@Int@@)(|i_71| Field$Mu$)(|i_70| ref)(|j_57| Field$Int$)(|j_56| ref)(|m_38| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@))(!(= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ m_38 j_56 j_57) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ m_38 i_70 i_71 v_38) j_56 j_57)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ m_38 i_70 i_71 v_38) j_56 j_57)) :qid map_3_$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@__Int__Mu :weight 0 )) :named ax_35))
   (assert (! (forall ((|v_39| $@Map@@PermissionComponent@To@Int@@)(|i_73| Field$Mu$)(|i_72| ref)(|j_59| Field$ref$)(|j_58| ref)(|m_39| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@))(!(= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ m_39 j_58 j_59) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ m_39 i_72 i_73 v_39) j_58 j_59)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ m_39 i_72 i_73 v_39) j_58 j_59)) :qid map_3_$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@__ref__Mu :weight 0 )) :named ax_36))
   (assert (! (forall ((|v_4| ref)(|i_7| Field$ref$)(|i_6| ref)(|j_5| Field$Int$)(|j_4| ref)(|m_4| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@))(!(= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ m_4 j_4 j_5) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ m_4 i_6 i_7 v_4) j_4 j_5)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ m_4 i_6 i_7 v_4) j_4 j_5)) :qid map_3_$@Map@@$T0@@ref@Field$$T0$@To@$T0@@__Int__ref :weight 0 )) :named ax_37))
   (assert (! (forall ((|v_40| $@Map@@PermissionComponent@To@Int@@)(|i_75| Field$Mu$)(|i_74| ref)(|j_61| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)(|j_60| ref)(|m_40| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@))(!(= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ m_40 j_60 j_61) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ m_40 i_74 i_75 v_40) j_60 j_61)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ m_40 i_74 i_75 v_40) j_60 j_61)) :qid map_3_$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@__$@Map@@$T0@@ref@Field$$T0$@To@$T0@@__Mu :weight 0 )) :named ax_38))
   (assert (! (forall ((|v_42| Int)(|m_42| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@)(|i_79| Field$Int$)(|j_63| Field$Int$)(|i_78| ref)(|j_62| ref))(!(=> (or (not (= j_63 i_79)) (not (= j_62 i_78))) (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ m_42 j_62 j_63) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ m_42 i_78 i_79 v_42) j_62 j_63))):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ m_42 i_78 i_79 v_42) j_62 j_63)) :qid map_2_$@Map@@$T0@@ref@Field$$T0$@To@$T0@@ :weight 0 )) :named ax_39))
   (assert (! (forall ((|v_43| Int)(|i_81| Field$Int$)(|i_80| ref)(|j_65| Field$Bool$)(|j_64| ref)(|m_43| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@))(!(= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ m_43 j_64 j_65) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ m_43 i_80 i_81 v_43) j_64 j_65)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ m_43 i_80 i_81 v_43) j_64 j_65)) :qid map_3_$@Map@@$T0@@ref@Field$$T0$@To@$T0@@__Bool__Int :weight 0 )) :named ax_40))
   (assert (! (forall ((|v_44| Int)(|i_83| Field$Int$)(|i_82| ref)(|j_67| Field$ref$)(|j_66| ref)(|m_44| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@))(!(= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ m_44 j_66 j_67) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ m_44 i_82 i_83 v_44) j_66 j_67)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ m_44 i_82 i_83 v_44) j_66 j_67)) :qid map_3_$@Map@@$T0@@ref@Field$$T0$@To@$T0@@__ref__Int :weight 0 )) :named ax_41))
   (assert (! (forall ((|v_45| Int)(|i_85| Field$Int$)(|i_84| ref)(|j_69| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)(|j_68| ref)(|m_45| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@))(!(= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ m_45 j_68 j_69) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ m_45 i_84 i_85 v_45) j_68 j_69)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ m_45 i_84 i_85 v_45) j_68 j_69)) :qid map_3_$@Map@@$T0@@ref@Field$$T0$@To@$T0@@__$@Map@@$T0@@ref@Field$$T0$@To@$T0@@__Int :weight 0 )) :named ax_42))
   (assert (! (forall ((|v_46| Int)(|i_87| Field$Int$)(|i_86| ref)(|j_71| Field$Mu$)(|j_70| ref)(|m_46| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@))(!(= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ m_46 j_70 j_71) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ m_46 i_86 i_87 v_46) j_70 j_71)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ m_46 i_86 i_87 v_46) j_70 j_71)) :qid map_3_$@Map@@$T0@@ref@Field$$T0$@To@$T0@@__Mu__Int :weight 0 )) :named ax_43))
   (assert (! (forall ((|v_48| $@Map@@PermissionComponent@To@Int@@)(|m_48| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)(|i_91| Field$Int$)(|j_73| Field$Int$)(|i_90| ref)(|j_72| ref))(!(=> (or (not (= j_73 i_91)) (not (= j_72 i_90))) (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ m_48 j_72 j_73) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ m_48 i_90 i_91 v_48) j_72 j_73))):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ m_48 i_90 i_91 v_48) j_72 j_73)) :qid map_2_$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ :weight 0 )) :named ax_44))
   (assert (! (forall ((|v_49| $@Map@@PermissionComponent@To@Int@@)(|i_93| Field$Int$)(|i_92| ref)(|j_75| Field$Bool$)(|j_74| ref)(|m_49| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@))(!(= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ m_49 j_74 j_75) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ m_49 i_92 i_93 v_49) j_74 j_75)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ m_49 i_92 i_93 v_49) j_74 j_75)) :qid map_3_$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@__Bool__Int :weight 0 )) :named ax_45))
   (assert (! (forall ((|v_5| ref)(|i_9| Field$ref$)(|i_8| ref)(|j_7| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)(|j_6| ref)(|m_5| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@))(!(= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ m_5 j_6 j_7) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ m_5 i_8 i_9 v_5) j_6 j_7)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ m_5 i_8 i_9 v_5) j_6 j_7)) :qid map_3_$@Map@@$T0@@ref@Field$$T0$@To@$T0@@__$@Map@@$T0@@ref@Field$$T0$@To@$T0@@__ref :weight 0 )) :named ax_46))
   (assert (! (forall ((|v_50| $@Map@@PermissionComponent@To@Int@@)(|i_95| Field$Int$)(|i_94| ref)(|j_77| Field$ref$)(|j_76| ref)(|m_50| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@))(!(= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ m_50 j_76 j_77) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ m_50 i_94 i_95 v_50) j_76 j_77)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ m_50 i_94 i_95 v_50) j_76 j_77)) :qid map_3_$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@__ref__Int :weight 0 )) :named ax_47))
   (assert (! (forall ((|v_51| $@Map@@PermissionComponent@To@Int@@)(|i_97| Field$Int$)(|i_96| ref)(|j_79| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$)(|j_78| ref)(|m_51| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@))(!(= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ m_51 j_78 j_79) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ m_51 i_96 i_97 v_51) j_78 j_79)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ m_51 i_96 i_97 v_51) j_78 j_79)) :qid map_3_$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@__$@Map@@$T0@@ref@Field$$T0$@To@$T0@@__Int :weight 0 )) :named ax_48))
   (assert (! (forall ((|v_52| $@Map@@PermissionComponent@To@Int@@)(|i_99| Field$Int$)(|i_98| ref)(|j_81| Field$Mu$)(|j_80| ref)(|m_52| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@))(!(= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ m_52 j_80 j_81) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ m_52 i_98 i_99 v_52) j_80 j_81)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ m_52 i_98 i_99 v_52) j_80 j_81)) :qid map_3_$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@__Mu__Int :weight 0 )) :named ax_49))
   (assert (! (forall ((|v_54| ref)(|m_54| $@Map@@$T0@@Int@To@$T0@@)(|i_101| Int)(|j_82| Int))(!(=> (not (= j_82 i_101)) (= (MapRead$$@Map@@$T0@@Int@To@$T0@@$ref$ m_54 j_82) (MapRead$$@Map@@$T0@@Int@To@$T0@@$ref$ (MapWrite$$@Map@@$T0@@Int@To@$T0@@$ref$ m_54 i_101 v_54) j_82))):pattern ( (MapRead$$@Map@@$T0@@Int@To@$T0@@$ref$ (MapWrite$$@Map@@$T0@@Int@To@$T0@@$ref$ m_54 i_101 v_54) j_82)) :qid map_2_$@Map@@$T0@@Int@To@$T0@@ :weight 0 )) :named ax_50))
   (assert (! (forall ((|v_6| ref)(|i_11| Field$ref$)(|i_10| ref)(|j_9| Field$Mu$)(|j_8| ref)(|m_6| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@))(!(= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ m_6 j_8 j_9) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ m_6 i_10 i_11 v_6) j_8 j_9)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ m_6 i_10 i_11 v_6) j_8 j_9)) :qid map_3_$@Map@@$T0@@ref@Field$$T0$@To@$T0@@__Mu__ref :weight 0 )) :named ax_51))
   (assert (! (forall ((|v_8| $@Map@@PermissionComponent@To@Int@@)(|m_8| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@)(|i_15| Field$ref$)(|j_11| Field$ref$)(|i_14| ref)(|j_10| ref))(!(=> (or (not (= j_11 i_15)) (not (= j_10 i_14))) (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ m_8 j_10 j_11) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ m_8 i_14 i_15 v_8) j_10 j_11))):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ m_8 i_14 i_15 v_8) j_10 j_11)) :qid map_2_$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@ :weight 0 )) :named ax_52))
   (assert (! (forall ((|v_9| $@Map@@PermissionComponent@To@Int@@)(|i_17| Field$ref$)(|i_16| ref)(|j_13| Field$Bool$)(|j_12| ref)(|m_9| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@))(!(= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ m_9 j_12 j_13) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ m_9 i_16 i_17 v_9) j_12 j_13)):pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ m_9 i_16 i_17 v_9) j_12 j_13)) :qid map_3_$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@__Bool__ref :weight 0 )) :named ax_53))
   (assert (! (not (= FactorialActor@t Channel@t)) :named ax_54))
   (assert (! (not (= FactorialActor@t Channel@t)) :named ax_55))
   (assert (! (not (= FactorialActorChannel.exp FactorialActor.q)) :named ax_56))
   (assert (! (not (= FactorialActorChannel.exp FactorialActor.q)) :named ax_57))
   (assert (! (not (= FactorialActorChannel.imp FactorialActor.q)) :named ax_58))
   (assert (! (not (= FactorialActorChannel.imp FactorialActor.q)) :named ax_59))
   (assert (! (not (= FactorialActorChannel.imp FactorialActorChannel.exp)) :named ax_60))
   (assert (! (not (= FactorialActorChannel.imp FactorialActorChannel.exp)) :named ax_61))
   (assert (! (not (= FactorialActorChannel.initImpState FactorialActorChannel.initExpState)) :named ax_62))
   (assert (! (not (= FactorialActorChannel.initImpState FactorialActorChannel.initExpState)) :named ax_63))
   (assert (! (not (= FactorialActorChannel.valid FactorialActorChannel.initExpState)) :named ax_64))
   (assert (! (not (= FactorialActorChannel.valid FactorialActorChannel.initExpState)) :named ax_65))
   (assert (! (not (= FactorialActorChannel.valid FactorialActorChannel.initImpState)) :named ax_66))
   (assert (! (not (= FactorialActorChannel.valid FactorialActorChannel.initImpState)) :named ax_67))
   (assert (! (not (= FactorialActorChannel@t Channel@t)) :named ax_68))
   (assert (! (not (= FactorialActorChannel@t Channel@t)) :named ax_69))
   (assert (! (not (= FactorialActorChannel@t FactorialActor@t)) :named ax_70))
   (assert (! (not (= FactorialActorChannel@t FactorialActor@t)) :named ax_71))
   (assert (! (not (= FactorialActorChannelExpEP.ch FactorialActor.q)) :named ax_72))
   (assert (! (not (= FactorialActorChannelExpEP.ch FactorialActor.q)) :named ax_73))
   (assert (! (not (= FactorialActorChannelExpEP.ch FactorialActorChannel.exp)) :named ax_74))
   (assert (! (not (= FactorialActorChannelExpEP.ch FactorialActorChannel.exp)) :named ax_75))
   (assert (! (not (= FactorialActorChannelExpEP.ch FactorialActorChannel.imp)) :named ax_76))
   (assert (! (not (= FactorialActorChannelExpEP.ch FactorialActorChannel.imp)) :named ax_77))
   (assert (! (not (= FactorialActorChannelExpEP.expch FactorialActor.q)) :named ax_78))
   (assert (! (not (= FactorialActorChannelExpEP.expch FactorialActor.q)) :named ax_79))
   (assert (! (not (= FactorialActorChannelExpEP.expch FactorialActorChannel.exp)) :named ax_80))
   (assert (! (not (= FactorialActorChannelExpEP.expch FactorialActorChannel.exp)) :named ax_81))
   (assert (! (not (= FactorialActorChannelExpEP.expch FactorialActorChannel.imp)) :named ax_82))
   (assert (! (not (= FactorialActorChannelExpEP.expch FactorialActorChannel.imp)) :named ax_83))
   (assert (! (not (= FactorialActorChannelExpEP.expch FactorialActorChannelExpEP.ch)) :named ax_84))
   (assert (! (not (= FactorialActorChannelExpEP.expch FactorialActorChannelExpEP.ch)) :named ax_85))
   (assert (! (not (= FactorialActorChannelExpEP.valid FactorialActorChannel.initExpState)) :named ax_86))
   (assert (! (not (= FactorialActorChannelExpEP.valid FactorialActorChannel.initExpState)) :named ax_87))
   (assert (! (not (= FactorialActorChannelExpEP.valid FactorialActorChannel.initImpState)) :named ax_88))
   (assert (! (not (= FactorialActorChannelExpEP.valid FactorialActorChannel.initImpState)) :named ax_89))
   (assert (! (not (= FactorialActorChannelExpEP.valid FactorialActorChannel.valid)) :named ax_90))
   (assert (! (not (= FactorialActorChannelExpEP.valid FactorialActorChannel.valid)) :named ax_91))
   (assert (! (not (= FactorialActorChannelExpEP@t Channel@t)) :named ax_92))
   (assert (! (not (= FactorialActorChannelExpEP@t Channel@t)) :named ax_93))
   (assert (! (not (= FactorialActorChannelExpEP@t FactorialActor@t)) :named ax_94))
   (assert (! (not (= FactorialActorChannelExpEP@t FactorialActor@t)) :named ax_95))
   (assert (! (not (= FactorialActorChannelExpEP@t FactorialActorChannel@t)) :named ax_96))
   (assert (! (not (= FactorialActorChannelExpEP@t FactorialActorChannel@t)) :named ax_97))
   (assert (! (not (= FactorialActorChannelImpEP.ch FactorialActor.q)) :named ax_98))
   (assert (! (not (= FactorialActorChannelImpEP.ch FactorialActor.q)) :named ax_99))
   (assert (! (not (= FactorialActorChannelImpEP.ch FactorialActorChannel.exp)) :named ax_100))
   (assert (! (not (= FactorialActorChannelImpEP.ch FactorialActorChannel.exp)) :named ax_101))
   (assert (! (not (= FactorialActorChannelImpEP.ch FactorialActorChannel.imp)) :named ax_102))
   (assert (! (not (= FactorialActorChannelImpEP.ch FactorialActorChannel.imp)) :named ax_103))
   (assert (! (not (= FactorialActorChannelImpEP.ch FactorialActorChannelExpEP.ch)) :named ax_104))
   (assert (! (not (= FactorialActorChannelImpEP.ch FactorialActorChannelExpEP.ch)) :named ax_105))
   (assert (! (not (= FactorialActorChannelImpEP.ch FactorialActorChannelExpEP.expch)) :named ax_106))
   (assert (! (not (= FactorialActorChannelImpEP.ch FactorialActorChannelExpEP.expch)) :named ax_107))
   (assert (! (not (= FactorialActorChannelImpEP.impch FactorialActor.q)) :named ax_108))
   (assert (! (not (= FactorialActorChannelImpEP.impch FactorialActor.q)) :named ax_109))
   (assert (! (not (= FactorialActorChannelImpEP.impch FactorialActorChannel.exp)) :named ax_110))
   (assert (! (not (= FactorialActorChannelImpEP.impch FactorialActorChannel.exp)) :named ax_111))
   (assert (! (not (= FactorialActorChannelImpEP.impch FactorialActorChannel.imp)) :named ax_112))
   (assert (! (not (= FactorialActorChannelImpEP.impch FactorialActorChannel.imp)) :named ax_113))
   (assert (! (not (= FactorialActorChannelImpEP.impch FactorialActorChannelExpEP.ch)) :named ax_114))
   (assert (! (not (= FactorialActorChannelImpEP.impch FactorialActorChannelExpEP.ch)) :named ax_115))
   (assert (! (not (= FactorialActorChannelImpEP.impch FactorialActorChannelExpEP.expch)) :named ax_116))
   (assert (! (not (= FactorialActorChannelImpEP.impch FactorialActorChannelExpEP.expch)) :named ax_117))
   (assert (! (not (= FactorialActorChannelImpEP.impch FactorialActorChannelImpEP.ch)) :named ax_118))
   (assert (! (not (= FactorialActorChannelImpEP.impch FactorialActorChannelImpEP.ch)) :named ax_119))
   (assert (! (not (= FactorialActorChannelImpEP.state FactorialActorChannelExpEP.state)) :named ax_120))
   (assert (! (not (= FactorialActorChannelImpEP.state FactorialActorChannelExpEP.state)) :named ax_121))
   (assert (! (not (= FactorialActorChannelImpEP.valid FactorialActorChannel.initExpState)) :named ax_122))
   (assert (! (not (= FactorialActorChannelImpEP.valid FactorialActorChannel.initExpState)) :named ax_123))
   (assert (! (not (= FactorialActorChannelImpEP.valid FactorialActorChannel.initImpState)) :named ax_124))
   (assert (! (not (= FactorialActorChannelImpEP.valid FactorialActorChannel.initImpState)) :named ax_125))
   (assert (! (not (= FactorialActorChannelImpEP.valid FactorialActorChannel.valid)) :named ax_126))
   (assert (! (not (= FactorialActorChannelImpEP.valid FactorialActorChannel.valid)) :named ax_127))
   (assert (! (not (= FactorialActorChannelImpEP.valid FactorialActorChannelExpEP.valid)) :named ax_128))
   (assert (! (not (= FactorialActorChannelImpEP.valid FactorialActorChannelExpEP.valid)) :named ax_129))
   (assert (! (not (= FactorialActorChannelImpEP@t Channel@t)) :named ax_130))
   (assert (! (not (= FactorialActorChannelImpEP@t Channel@t)) :named ax_131))
   (assert (! (not (= FactorialActorChannelImpEP@t FactorialActor@t)) :named ax_132))
   (assert (! (not (= FactorialActorChannelImpEP@t FactorialActor@t)) :named ax_133))
   (assert (! (not (= FactorialActorChannelImpEP@t FactorialActorChannel@t)) :named ax_134))
   (assert (! (not (= FactorialActorChannelImpEP@t FactorialActorChannel@t)) :named ax_135))
   (assert (! (not (= FactorialActorChannelImpEP@t FactorialActorChannelExpEP@t)) :named ax_136))
   (assert (! (not (= FactorialActorChannelImpEP@t FactorialActorChannelExpEP@t)) :named ax_137))
   (assert (! (not (= FactorialCont.cust FactorialActor.q)) :named ax_138))
   (assert (! (not (= FactorialCont.cust FactorialActor.q)) :named ax_139))
   (assert (! (not (= FactorialCont.cust FactorialActorChannel.exp)) :named ax_140))
   (assert (! (not (= FactorialCont.cust FactorialActorChannel.exp)) :named ax_141))
   (assert (! (not (= FactorialCont.cust FactorialActorChannel.imp)) :named ax_142))
   (assert (! (not (= FactorialCont.cust FactorialActorChannel.imp)) :named ax_143))
   (assert (! (not (= FactorialCont.cust FactorialActorChannelExpEP.ch)) :named ax_144))
   (assert (! (not (= FactorialCont.cust FactorialActorChannelExpEP.ch)) :named ax_145))
   (assert (! (not (= FactorialCont.cust FactorialActorChannelExpEP.expch)) :named ax_146))
   (assert (! (not (= FactorialCont.cust FactorialActorChannelExpEP.expch)) :named ax_147))
   (assert (! (not (= FactorialCont.cust FactorialActorChannelImpEP.ch)) :named ax_148))
   (assert (! (not (= FactorialCont.cust FactorialActorChannelImpEP.ch)) :named ax_149))
   (assert (! (not (= FactorialCont.cust FactorialActorChannelImpEP.impch)) :named ax_150))
   (assert (! (not (= FactorialCont.cust FactorialActorChannelImpEP.impch)) :named ax_151))
   (assert (! (not (= FactorialCont.q FactorialActor.q)) :named ax_152))
   (assert (! (not (= FactorialCont.q FactorialActor.q)) :named ax_153))
   (assert (! (not (= FactorialCont.q FactorialActorChannel.exp)) :named ax_154))
   (assert (! (not (= FactorialCont.q FactorialActorChannel.exp)) :named ax_155))
   (assert (! (not (= FactorialCont.q FactorialActorChannel.imp)) :named ax_156))
   (assert (! (not (= FactorialCont.q FactorialActorChannel.imp)) :named ax_157))
   (assert (! (not (= FactorialCont.q FactorialActorChannelExpEP.ch)) :named ax_158))
   (assert (! (not (= FactorialCont.q FactorialActorChannelExpEP.ch)) :named ax_159))
   (assert (! (not (= FactorialCont.q FactorialActorChannelExpEP.expch)) :named ax_160))
   (assert (! (not (= FactorialCont.q FactorialActorChannelExpEP.expch)) :named ax_161))
   (assert (! (not (= FactorialCont.q FactorialActorChannelImpEP.ch)) :named ax_162))
   (assert (! (not (= FactorialCont.q FactorialActorChannelImpEP.ch)) :named ax_163))
   (assert (! (not (= FactorialCont.q FactorialActorChannelImpEP.impch)) :named ax_164))
   (assert (! (not (= FactorialCont.q FactorialActorChannelImpEP.impch)) :named ax_165))
   (assert (! (not (= FactorialCont.q FactorialCont.cust)) :named ax_166))
   (assert (! (not (= FactorialCont.q FactorialCont.cust)) :named ax_167))
   (assert (! (not (= FactorialCont.v FactorialActorChannelExpEP.state)) :named ax_168))
   (assert (! (not (= FactorialCont.v FactorialActorChannelExpEP.state)) :named ax_169))
   (assert (! (not (= FactorialCont.v FactorialActorChannelImpEP.state)) :named ax_170))
   (assert (! (not (= FactorialCont.v FactorialActorChannelImpEP.state)) :named ax_171))
   (assert (! (not (= FactorialCont.vo FactorialActorChannelExpEP.state)) :named ax_172))
   (assert (! (not (= FactorialCont.vo FactorialActorChannelExpEP.state)) :named ax_173))
   (assert (! (not (= FactorialCont.vo FactorialActorChannelImpEP.state)) :named ax_174))
   (assert (! (not (= FactorialCont.vo FactorialActorChannelImpEP.state)) :named ax_175))
   (assert (! (not (= FactorialCont.vo FactorialCont.v)) :named ax_176))
   (assert (! (not (= FactorialCont.vo FactorialCont.v)) :named ax_177))
   (assert (! (not (= FactorialCont@t Channel@t)) :named ax_178))
   (assert (! (not (= FactorialCont@t Channel@t)) :named ax_179))
   (assert (! (not (= FactorialCont@t FactorialActor@t)) :named ax_180))
   (assert (! (not (= FactorialCont@t FactorialActor@t)) :named ax_181))
   (assert (! (not (= FactorialCont@t FactorialActorChannel@t)) :named ax_182))
   (assert (! (not (= FactorialCont@t FactorialActorChannel@t)) :named ax_183))
   (assert (! (not (= FactorialCont@t FactorialActorChannelExpEP@t)) :named ax_184))
   (assert (! (not (= FactorialCont@t FactorialActorChannelExpEP@t)) :named ax_185))
   (assert (! (not (= FactorialCont@t FactorialActorChannelImpEP@t)) :named ax_186))
   (assert (! (not (= FactorialCont@t FactorialActorChannelImpEP@t)) :named ax_187))
   (assert (! (not (= FactorialContChannel.exp FactorialActor.q)) :named ax_188))
   (assert (! (not (= FactorialContChannel.exp FactorialActor.q)) :named ax_189))
   (assert (! (not (= FactorialContChannel.exp FactorialActorChannel.exp)) :named ax_190))
   (assert (! (not (= FactorialContChannel.exp FactorialActorChannel.exp)) :named ax_191))
   (assert (! (not (= FactorialContChannel.exp FactorialActorChannel.imp)) :named ax_192))
   (assert (! (not (= FactorialContChannel.exp FactorialActorChannel.imp)) :named ax_193))
   (assert (! (not (= FactorialContChannel.exp FactorialActorChannelExpEP.ch)) :named ax_194))
   (assert (! (not (= FactorialContChannel.exp FactorialActorChannelExpEP.ch)) :named ax_195))
   (assert (! (not (= FactorialContChannel.exp FactorialActorChannelExpEP.expch)) :named ax_196))
   (assert (! (not (= FactorialContChannel.exp FactorialActorChannelExpEP.expch)) :named ax_197))
   (assert (! (not (= FactorialContChannel.exp FactorialActorChannelImpEP.ch)) :named ax_198))
   (assert (! (not (= FactorialContChannel.exp FactorialActorChannelImpEP.ch)) :named ax_199))
   (assert (! (not (= FactorialContChannel.exp FactorialActorChannelImpEP.impch)) :named ax_200))
   (assert (! (not (= FactorialContChannel.exp FactorialActorChannelImpEP.impch)) :named ax_201))
   (assert (! (not (= FactorialContChannel.exp FactorialCont.cust)) :named ax_202))
   (assert (! (not (= FactorialContChannel.exp FactorialCont.cust)) :named ax_203))
   (assert (! (not (= FactorialContChannel.exp FactorialCont.q)) :named ax_204))
   (assert (! (not (= FactorialContChannel.exp FactorialCont.q)) :named ax_205))
   (assert (! (not (= FactorialContChannel.imp FactorialActor.q)) :named ax_206))
   (assert (! (not (= FactorialContChannel.imp FactorialActor.q)) :named ax_207))
   (assert (! (not (= FactorialContChannel.imp FactorialActorChannel.exp)) :named ax_208))
   (assert (! (not (= FactorialContChannel.imp FactorialActorChannel.exp)) :named ax_209))
   (assert (! (not (= FactorialContChannel.imp FactorialActorChannel.imp)) :named ax_210))
   (assert (! (not (= FactorialContChannel.imp FactorialActorChannel.imp)) :named ax_211))
   (assert (! (not (= FactorialContChannel.imp FactorialActorChannelExpEP.ch)) :named ax_212))
   (assert (! (not (= FactorialContChannel.imp FactorialActorChannelExpEP.ch)) :named ax_213))
   (assert (! (not (= FactorialContChannel.imp FactorialActorChannelExpEP.expch)) :named ax_214))
   (assert (! (not (= FactorialContChannel.imp FactorialActorChannelExpEP.expch)) :named ax_215))
   (assert (! (not (= FactorialContChannel.imp FactorialActorChannelImpEP.ch)) :named ax_216))
   (assert (! (not (= FactorialContChannel.imp FactorialActorChannelImpEP.ch)) :named ax_217))
   (assert (! (not (= FactorialContChannel.imp FactorialActorChannelImpEP.impch)) :named ax_218))
   (assert (! (not (= FactorialContChannel.imp FactorialActorChannelImpEP.impch)) :named ax_219))
   (assert (! (not (= FactorialContChannel.imp FactorialCont.cust)) :named ax_220))
   (assert (! (not (= FactorialContChannel.imp FactorialCont.cust)) :named ax_221))
   (assert (! (not (= FactorialContChannel.imp FactorialCont.q)) :named ax_222))
   (assert (! (not (= FactorialContChannel.imp FactorialCont.q)) :named ax_223))
   (assert (! (not (= FactorialContChannel.imp FactorialContChannel.exp)) :named ax_224))
   (assert (! (not (= FactorialContChannel.imp FactorialContChannel.exp)) :named ax_225))
   (assert (! (not (= FactorialContChannel.initExpState FactorialActorChannel.initExpState)) :named ax_226))
   (assert (! (not (= FactorialContChannel.initExpState FactorialActorChannel.initExpState)) :named ax_227))
   (assert (! (not (= FactorialContChannel.initExpState FactorialActorChannel.initImpState)) :named ax_228))
   (assert (! (not (= FactorialContChannel.initExpState FactorialActorChannel.initImpState)) :named ax_229))
   (assert (! (not (= FactorialContChannel.initExpState FactorialActorChannel.valid)) :named ax_230))
   (assert (! (not (= FactorialContChannel.initExpState FactorialActorChannel.valid)) :named ax_231))
   (assert (! (not (= FactorialContChannel.initExpState FactorialActorChannelExpEP.valid)) :named ax_232))
   (assert (! (not (= FactorialContChannel.initExpState FactorialActorChannelExpEP.valid)) :named ax_233))
   (assert (! (not (= FactorialContChannel.initExpState FactorialActorChannelImpEP.valid)) :named ax_234))
   (assert (! (not (= FactorialContChannel.initExpState FactorialActorChannelImpEP.valid)) :named ax_235))
   (assert (! (not (= FactorialContChannel.initImpState FactorialActorChannel.initExpState)) :named ax_236))
   (assert (! (not (= FactorialContChannel.initImpState FactorialActorChannel.initExpState)) :named ax_237))
   (assert (! (not (= FactorialContChannel.initImpState FactorialActorChannel.initImpState)) :named ax_238))
   (assert (! (not (= FactorialContChannel.initImpState FactorialActorChannel.initImpState)) :named ax_239))
   (assert (! (not (= FactorialContChannel.initImpState FactorialActorChannel.valid)) :named ax_240))
   (assert (! (not (= FactorialContChannel.initImpState FactorialActorChannel.valid)) :named ax_241))
   (assert (! (not (= FactorialContChannel.initImpState FactorialActorChannelExpEP.valid)) :named ax_242))
   (assert (! (not (= FactorialContChannel.initImpState FactorialActorChannelExpEP.valid)) :named ax_243))
   (assert (! (not (= FactorialContChannel.initImpState FactorialActorChannelImpEP.valid)) :named ax_244))
   (assert (! (not (= FactorialContChannel.initImpState FactorialActorChannelImpEP.valid)) :named ax_245))
   (assert (! (not (= FactorialContChannel.initImpState FactorialContChannel.initExpState)) :named ax_246))
   (assert (! (not (= FactorialContChannel.initImpState FactorialContChannel.initExpState)) :named ax_247))
   (assert (! (not (= FactorialContChannel.valid FactorialActorChannel.initExpState)) :named ax_248))
   (assert (! (not (= FactorialContChannel.valid FactorialActorChannel.initExpState)) :named ax_249))
   (assert (! (not (= FactorialContChannel.valid FactorialActorChannel.initImpState)) :named ax_250))
   (assert (! (not (= FactorialContChannel.valid FactorialActorChannel.initImpState)) :named ax_251))
   (assert (! (not (= FactorialContChannel.valid FactorialActorChannel.valid)) :named ax_252))
   (assert (! (not (= FactorialContChannel.valid FactorialActorChannel.valid)) :named ax_253))
   (assert (! (not (= FactorialContChannel.valid FactorialActorChannelExpEP.valid)) :named ax_254))
   (assert (! (not (= FactorialContChannel.valid FactorialActorChannelExpEP.valid)) :named ax_255))
   (assert (! (not (= FactorialContChannel.valid FactorialActorChannelImpEP.valid)) :named ax_256))
   (assert (! (not (= FactorialContChannel.valid FactorialActorChannelImpEP.valid)) :named ax_257))
   (assert (! (not (= FactorialContChannel.valid FactorialContChannel.initExpState)) :named ax_258))
   (assert (! (not (= FactorialContChannel.valid FactorialContChannel.initExpState)) :named ax_259))
   (assert (! (not (= FactorialContChannel.valid FactorialContChannel.initImpState)) :named ax_260))
   (assert (! (not (= FactorialContChannel.valid FactorialContChannel.initImpState)) :named ax_261))
   (assert (! (not (= FactorialContChannel@t Channel@t)) :named ax_262))
   (assert (! (not (= FactorialContChannel@t Channel@t)) :named ax_263))
   (assert (! (not (= FactorialContChannel@t FactorialActor@t)) :named ax_264))
   (assert (! (not (= FactorialContChannel@t FactorialActor@t)) :named ax_265))
   (assert (! (not (= FactorialContChannel@t FactorialActorChannel@t)) :named ax_266))
   (assert (! (not (= FactorialContChannel@t FactorialActorChannel@t)) :named ax_267))
   (assert (! (not (= FactorialContChannel@t FactorialActorChannelExpEP@t)) :named ax_268))
   (assert (! (not (= FactorialContChannel@t FactorialActorChannelExpEP@t)) :named ax_269))
   (assert (! (not (= FactorialContChannel@t FactorialActorChannelImpEP@t)) :named ax_270))
   (assert (! (not (= FactorialContChannel@t FactorialActorChannelImpEP@t)) :named ax_271))
   (assert (! (not (= FactorialContChannel@t FactorialCont@t)) :named ax_272))
   (assert (! (not (= FactorialContChannel@t FactorialCont@t)) :named ax_273))
   (assert (! (not (= FactorialContChannelExpEP.ch FactorialActor.q)) :named ax_274))
   (assert (! (not (= FactorialContChannelExpEP.ch FactorialActor.q)) :named ax_275))
   (assert (! (not (= FactorialContChannelExpEP.ch FactorialActorChannel.exp)) :named ax_276))
   (assert (! (not (= FactorialContChannelExpEP.ch FactorialActorChannel.exp)) :named ax_277))
   (assert (! (not (= FactorialContChannelExpEP.ch FactorialActorChannel.imp)) :named ax_278))
   (assert (! (not (= FactorialContChannelExpEP.ch FactorialActorChannel.imp)) :named ax_279))
   (assert (! (not (= FactorialContChannelExpEP.ch FactorialActorChannelExpEP.ch)) :named ax_280))
   (assert (! (not (= FactorialContChannelExpEP.ch FactorialActorChannelExpEP.ch)) :named ax_281))
   (assert (! (not (= FactorialContChannelExpEP.ch FactorialActorChannelExpEP.expch)) :named ax_282))
   (assert (! (not (= FactorialContChannelExpEP.ch FactorialActorChannelExpEP.expch)) :named ax_283))
   (assert (! (not (= FactorialContChannelExpEP.ch FactorialActorChannelImpEP.ch)) :named ax_284))
   (assert (! (not (= FactorialContChannelExpEP.ch FactorialActorChannelImpEP.ch)) :named ax_285))
   (assert (! (not (= FactorialContChannelExpEP.ch FactorialActorChannelImpEP.impch)) :named ax_286))
   (assert (! (not (= FactorialContChannelExpEP.ch FactorialActorChannelImpEP.impch)) :named ax_287))
   (assert (! (not (= FactorialContChannelExpEP.ch FactorialCont.cust)) :named ax_288))
   (assert (! (not (= FactorialContChannelExpEP.ch FactorialCont.cust)) :named ax_289))
   (assert (! (not (= FactorialContChannelExpEP.ch FactorialCont.q)) :named ax_290))
   (assert (! (not (= FactorialContChannelExpEP.ch FactorialCont.q)) :named ax_291))
   (assert (! (not (= FactorialContChannelExpEP.ch FactorialContChannel.exp)) :named ax_292))
   (assert (! (not (= FactorialContChannelExpEP.ch FactorialContChannel.exp)) :named ax_293))
   (assert (! (not (= FactorialContChannelExpEP.ch FactorialContChannel.imp)) :named ax_294))
   (assert (! (not (= FactorialContChannelExpEP.ch FactorialContChannel.imp)) :named ax_295))
   (assert (! (not (= FactorialContChannelExpEP.expch FactorialActor.q)) :named ax_296))
   (assert (! (not (= FactorialContChannelExpEP.expch FactorialActor.q)) :named ax_297))
   (assert (! (not (= FactorialContChannelExpEP.expch FactorialActorChannel.exp)) :named ax_298))
   (assert (! (not (= FactorialContChannelExpEP.expch FactorialActorChannel.exp)) :named ax_299))
   (assert (! (not (= FactorialContChannelExpEP.expch FactorialActorChannel.imp)) :named ax_300))
   (assert (! (not (= FactorialContChannelExpEP.expch FactorialActorChannel.imp)) :named ax_301))
   (assert (! (not (= FactorialContChannelExpEP.expch FactorialActorChannelExpEP.ch)) :named ax_302))
   (assert (! (not (= FactorialContChannelExpEP.expch FactorialActorChannelExpEP.ch)) :named ax_303))
   (assert (! (not (= FactorialContChannelExpEP.expch FactorialActorChannelExpEP.expch)) :named ax_304))
   (assert (! (not (= FactorialContChannelExpEP.expch FactorialActorChannelExpEP.expch)) :named ax_305))
   (assert (! (not (= FactorialContChannelExpEP.expch FactorialActorChannelImpEP.ch)) :named ax_306))
   (assert (! (not (= FactorialContChannelExpEP.expch FactorialActorChannelImpEP.ch)) :named ax_307))
   (assert (! (not (= FactorialContChannelExpEP.expch FactorialActorChannelImpEP.impch)) :named ax_308))
   (assert (! (not (= FactorialContChannelExpEP.expch FactorialActorChannelImpEP.impch)) :named ax_309))
   (assert (! (not (= FactorialContChannelExpEP.expch FactorialCont.cust)) :named ax_310))
   (assert (! (not (= FactorialContChannelExpEP.expch FactorialCont.cust)) :named ax_311))
   (assert (! (not (= FactorialContChannelExpEP.expch FactorialCont.q)) :named ax_312))
   (assert (! (not (= FactorialContChannelExpEP.expch FactorialCont.q)) :named ax_313))
   (assert (! (not (= FactorialContChannelExpEP.expch FactorialContChannel.exp)) :named ax_314))
   (assert (! (not (= FactorialContChannelExpEP.expch FactorialContChannel.exp)) :named ax_315))
   (assert (! (not (= FactorialContChannelExpEP.expch FactorialContChannel.imp)) :named ax_316))
   (assert (! (not (= FactorialContChannelExpEP.expch FactorialContChannel.imp)) :named ax_317))
   (assert (! (not (= FactorialContChannelExpEP.expch FactorialContChannelExpEP.ch)) :named ax_318))
   (assert (! (not (= FactorialContChannelExpEP.expch FactorialContChannelExpEP.ch)) :named ax_319))
   (assert (! (not (= FactorialContChannelExpEP.state FactorialActorChannelExpEP.state)) :named ax_320))
   (assert (! (not (= FactorialContChannelExpEP.state FactorialActorChannelExpEP.state)) :named ax_321))
   (assert (! (not (= FactorialContChannelExpEP.state FactorialActorChannelImpEP.state)) :named ax_322))
   (assert (! (not (= FactorialContChannelExpEP.state FactorialActorChannelImpEP.state)) :named ax_323))
   (assert (! (not (= FactorialContChannelExpEP.state FactorialCont.v)) :named ax_324))
   (assert (! (not (= FactorialContChannelExpEP.state FactorialCont.v)) :named ax_325))
   (assert (! (not (= FactorialContChannelExpEP.state FactorialCont.vo)) :named ax_326))
   (assert (! (not (= FactorialContChannelExpEP.state FactorialCont.vo)) :named ax_327))
   (assert (! (not (= FactorialContChannelExpEP.valid FactorialActorChannel.initExpState)) :named ax_328))
   (assert (! (not (= FactorialContChannelExpEP.valid FactorialActorChannel.initExpState)) :named ax_329))
   (assert (! (not (= FactorialContChannelExpEP.valid FactorialActorChannel.initImpState)) :named ax_330))
   (assert (! (not (= FactorialContChannelExpEP.valid FactorialActorChannel.initImpState)) :named ax_331))
   (assert (! (not (= FactorialContChannelExpEP.valid FactorialActorChannel.valid)) :named ax_332))
   (assert (! (not (= FactorialContChannelExpEP.valid FactorialActorChannel.valid)) :named ax_333))
   (assert (! (not (= FactorialContChannelExpEP.valid FactorialActorChannelExpEP.valid)) :named ax_334))
   (assert (! (not (= FactorialContChannelExpEP.valid FactorialActorChannelExpEP.valid)) :named ax_335))
   (assert (! (not (= FactorialContChannelExpEP.valid FactorialActorChannelImpEP.valid)) :named ax_336))
   (assert (! (not (= FactorialContChannelExpEP.valid FactorialActorChannelImpEP.valid)) :named ax_337))
   (assert (! (not (= FactorialContChannelExpEP.valid FactorialContChannel.initExpState)) :named ax_338))
   (assert (! (not (= FactorialContChannelExpEP.valid FactorialContChannel.initExpState)) :named ax_339))
   (assert (! (not (= FactorialContChannelExpEP.valid FactorialContChannel.initImpState)) :named ax_340))
   (assert (! (not (= FactorialContChannelExpEP.valid FactorialContChannel.initImpState)) :named ax_341))
   (assert (! (not (= FactorialContChannelExpEP.valid FactorialContChannel.valid)) :named ax_342))
   (assert (! (not (= FactorialContChannelExpEP.valid FactorialContChannel.valid)) :named ax_343))
   (assert (! (not (= FactorialContChannelExpEP@t Channel@t)) :named ax_344))
   (assert (! (not (= FactorialContChannelExpEP@t Channel@t)) :named ax_345))
   (assert (! (not (= FactorialContChannelExpEP@t FactorialActor@t)) :named ax_346))
   (assert (! (not (= FactorialContChannelExpEP@t FactorialActor@t)) :named ax_347))
   (assert (! (not (= FactorialContChannelExpEP@t FactorialActorChannel@t)) :named ax_348))
   (assert (! (not (= FactorialContChannelExpEP@t FactorialActorChannel@t)) :named ax_349))
   (assert (! (not (= FactorialContChannelExpEP@t FactorialActorChannelExpEP@t)) :named ax_350))
   (assert (! (not (= FactorialContChannelExpEP@t FactorialActorChannelExpEP@t)) :named ax_351))
   (assert (! (not (= FactorialContChannelExpEP@t FactorialActorChannelImpEP@t)) :named ax_352))
   (assert (! (not (= FactorialContChannelExpEP@t FactorialActorChannelImpEP@t)) :named ax_353))
   (assert (! (not (= FactorialContChannelExpEP@t FactorialCont@t)) :named ax_354))
   (assert (! (not (= FactorialContChannelExpEP@t FactorialCont@t)) :named ax_355))
   (assert (! (not (= FactorialContChannelExpEP@t FactorialContChannel@t)) :named ax_356))
   (assert (! (not (= FactorialContChannelExpEP@t FactorialContChannel@t)) :named ax_357))
   (assert (! (not (= FactorialContChannelImpEP.ch FactorialActor.q)) :named ax_358))
   (assert (! (not (= FactorialContChannelImpEP.ch FactorialActor.q)) :named ax_359))
   (assert (! (not (= FactorialContChannelImpEP.ch FactorialActorChannel.exp)) :named ax_360))
   (assert (! (not (= FactorialContChannelImpEP.ch FactorialActorChannel.exp)) :named ax_361))
   (assert (! (not (= FactorialContChannelImpEP.ch FactorialActorChannel.imp)) :named ax_362))
   (assert (! (not (= FactorialContChannelImpEP.ch FactorialActorChannel.imp)) :named ax_363))
   (assert (! (not (= FactorialContChannelImpEP.ch FactorialActorChannelExpEP.ch)) :named ax_364))
   (assert (! (not (= FactorialContChannelImpEP.ch FactorialActorChannelExpEP.ch)) :named ax_365))
   (assert (! (not (= FactorialContChannelImpEP.ch FactorialActorChannelExpEP.expch)) :named ax_366))
   (assert (! (not (= FactorialContChannelImpEP.ch FactorialActorChannelExpEP.expch)) :named ax_367))
   (assert (! (not (= FactorialContChannelImpEP.ch FactorialActorChannelImpEP.ch)) :named ax_368))
   (assert (! (not (= FactorialContChannelImpEP.ch FactorialActorChannelImpEP.ch)) :named ax_369))
   (assert (! (not (= FactorialContChannelImpEP.ch FactorialActorChannelImpEP.impch)) :named ax_370))
   (assert (! (not (= FactorialContChannelImpEP.ch FactorialActorChannelImpEP.impch)) :named ax_371))
   (assert (! (not (= FactorialContChannelImpEP.ch FactorialCont.cust)) :named ax_372))
   (assert (! (not (= FactorialContChannelImpEP.ch FactorialCont.cust)) :named ax_373))
   (assert (! (not (= FactorialContChannelImpEP.ch FactorialCont.q)) :named ax_374))
   (assert (! (not (= FactorialContChannelImpEP.ch FactorialCont.q)) :named ax_375))
   (assert (! (not (= FactorialContChannelImpEP.ch FactorialContChannel.exp)) :named ax_376))
   (assert (! (not (= FactorialContChannelImpEP.ch FactorialContChannel.exp)) :named ax_377))
   (assert (! (not (= FactorialContChannelImpEP.ch FactorialContChannel.imp)) :named ax_378))
   (assert (! (not (= FactorialContChannelImpEP.ch FactorialContChannel.imp)) :named ax_379))
   (assert (! (not (= FactorialContChannelImpEP.ch FactorialContChannelExpEP.ch)) :named ax_380))
   (assert (! (not (= FactorialContChannelImpEP.ch FactorialContChannelExpEP.ch)) :named ax_381))
   (assert (! (not (= FactorialContChannelImpEP.ch FactorialContChannelExpEP.expch)) :named ax_382))
   (assert (! (not (= FactorialContChannelImpEP.ch FactorialContChannelExpEP.expch)) :named ax_383))
   (assert (! (not (= FactorialContChannelImpEP.impch FactorialActor.q)) :named ax_384))
   (assert (! (not (= FactorialContChannelImpEP.impch FactorialActor.q)) :named ax_385))
   (assert (! (not (= FactorialContChannelImpEP.impch FactorialActorChannel.exp)) :named ax_386))
   (assert (! (not (= FactorialContChannelImpEP.impch FactorialActorChannel.exp)) :named ax_387))
   (assert (! (not (= FactorialContChannelImpEP.impch FactorialActorChannel.imp)) :named ax_388))
   (assert (! (not (= FactorialContChannelImpEP.impch FactorialActorChannel.imp)) :named ax_389))
   (assert (! (not (= FactorialContChannelImpEP.impch FactorialActorChannelExpEP.ch)) :named ax_390))
   (assert (! (not (= FactorialContChannelImpEP.impch FactorialActorChannelExpEP.ch)) :named ax_391))
   (assert (! (not (= FactorialContChannelImpEP.impch FactorialActorChannelExpEP.expch)) :named ax_392))
   (assert (! (not (= FactorialContChannelImpEP.impch FactorialActorChannelExpEP.expch)) :named ax_393))
   (assert (! (not (= FactorialContChannelImpEP.impch FactorialActorChannelImpEP.ch)) :named ax_394))
   (assert (! (not (= FactorialContChannelImpEP.impch FactorialActorChannelImpEP.ch)) :named ax_395))
   (assert (! (not (= FactorialContChannelImpEP.impch FactorialActorChannelImpEP.impch)) :named ax_396))
   (assert (! (not (= FactorialContChannelImpEP.impch FactorialActorChannelImpEP.impch)) :named ax_397))
   (assert (! (not (= FactorialContChannelImpEP.impch FactorialCont.cust)) :named ax_398))
   (assert (! (not (= FactorialContChannelImpEP.impch FactorialCont.cust)) :named ax_399))
   (assert (! (not (= FactorialContChannelImpEP.impch FactorialCont.q)) :named ax_400))
   (assert (! (not (= FactorialContChannelImpEP.impch FactorialCont.q)) :named ax_401))
   (assert (! (not (= FactorialContChannelImpEP.impch FactorialContChannel.exp)) :named ax_402))
   (assert (! (not (= FactorialContChannelImpEP.impch FactorialContChannel.exp)) :named ax_403))
   (assert (! (not (= FactorialContChannelImpEP.impch FactorialContChannel.imp)) :named ax_404))
   (assert (! (not (= FactorialContChannelImpEP.impch FactorialContChannel.imp)) :named ax_405))
   (assert (! (not (= FactorialContChannelImpEP.impch FactorialContChannelExpEP.ch)) :named ax_406))
   (assert (! (not (= FactorialContChannelImpEP.impch FactorialContChannelExpEP.ch)) :named ax_407))
   (assert (! (not (= FactorialContChannelImpEP.impch FactorialContChannelExpEP.expch)) :named ax_408))
   (assert (! (not (= FactorialContChannelImpEP.impch FactorialContChannelExpEP.expch)) :named ax_409))
   (assert (! (not (= FactorialContChannelImpEP.impch FactorialContChannelImpEP.ch)) :named ax_410))
   (assert (! (not (= FactorialContChannelImpEP.impch FactorialContChannelImpEP.ch)) :named ax_411))
   (assert (! (not (= FactorialContChannelImpEP.state FactorialActorChannelExpEP.state)) :named ax_412))
   (assert (! (not (= FactorialContChannelImpEP.state FactorialActorChannelExpEP.state)) :named ax_413))
   (assert (! (not (= FactorialContChannelImpEP.state FactorialActorChannelImpEP.state)) :named ax_414))
   (assert (! (not (= FactorialContChannelImpEP.state FactorialActorChannelImpEP.state)) :named ax_415))
   (assert (! (not (= FactorialContChannelImpEP.state FactorialCont.v)) :named ax_416))
   (assert (! (not (= FactorialContChannelImpEP.state FactorialCont.v)) :named ax_417))
   (assert (! (not (= FactorialContChannelImpEP.state FactorialCont.vo)) :named ax_418))
   (assert (! (not (= FactorialContChannelImpEP.state FactorialCont.vo)) :named ax_419))
   (assert (! (not (= FactorialContChannelImpEP.state FactorialContChannelExpEP.state)) :named ax_420))
   (assert (! (not (= FactorialContChannelImpEP.state FactorialContChannelExpEP.state)) :named ax_421))
   (assert (! (not (= FactorialContChannelImpEP.valid FactorialActorChannel.initExpState)) :named ax_422))
   (assert (! (not (= FactorialContChannelImpEP.valid FactorialActorChannel.initExpState)) :named ax_423))
   (assert (! (not (= FactorialContChannelImpEP.valid FactorialActorChannel.initImpState)) :named ax_424))
   (assert (! (not (= FactorialContChannelImpEP.valid FactorialActorChannel.initImpState)) :named ax_425))
   (assert (! (not (= FactorialContChannelImpEP.valid FactorialActorChannel.valid)) :named ax_426))
   (assert (! (not (= FactorialContChannelImpEP.valid FactorialActorChannel.valid)) :named ax_427))
   (assert (! (not (= FactorialContChannelImpEP.valid FactorialActorChannelExpEP.valid)) :named ax_428))
   (assert (! (not (= FactorialContChannelImpEP.valid FactorialActorChannelExpEP.valid)) :named ax_429))
   (assert (! (not (= FactorialContChannelImpEP.valid FactorialActorChannelImpEP.valid)) :named ax_430))
   (assert (! (not (= FactorialContChannelImpEP.valid FactorialActorChannelImpEP.valid)) :named ax_431))
   (assert (! (not (= FactorialContChannelImpEP.valid FactorialContChannel.initExpState)) :named ax_432))
   (assert (! (not (= FactorialContChannelImpEP.valid FactorialContChannel.initExpState)) :named ax_433))
   (assert (! (not (= FactorialContChannelImpEP.valid FactorialContChannel.initImpState)) :named ax_434))
   (assert (! (not (= FactorialContChannelImpEP.valid FactorialContChannel.initImpState)) :named ax_435))
   (assert (! (not (= FactorialContChannelImpEP.valid FactorialContChannel.valid)) :named ax_436))
   (assert (! (not (= FactorialContChannelImpEP.valid FactorialContChannel.valid)) :named ax_437))
   (assert (! (not (= FactorialContChannelImpEP.valid FactorialContChannelExpEP.valid)) :named ax_438))
   (assert (! (not (= FactorialContChannelImpEP.valid FactorialContChannelExpEP.valid)) :named ax_439))
   (assert (! (not (= FactorialContChannelImpEP@t Channel@t)) :named ax_440))
   (assert (! (not (= FactorialContChannelImpEP@t Channel@t)) :named ax_441))
   (assert (! (not (= FactorialContChannelImpEP@t FactorialActor@t)) :named ax_442))
   (assert (! (not (= FactorialContChannelImpEP@t FactorialActor@t)) :named ax_443))
   (assert (! (not (= FactorialContChannelImpEP@t FactorialActorChannel@t)) :named ax_444))
   (assert (! (not (= FactorialContChannelImpEP@t FactorialActorChannel@t)) :named ax_445))
   (assert (! (not (= FactorialContChannelImpEP@t FactorialActorChannelExpEP@t)) :named ax_446))
   (assert (! (not (= FactorialContChannelImpEP@t FactorialActorChannelExpEP@t)) :named ax_447))
   (assert (! (not (= FactorialContChannelImpEP@t FactorialActorChannelImpEP@t)) :named ax_448))
   (assert (! (not (= FactorialContChannelImpEP@t FactorialActorChannelImpEP@t)) :named ax_449))
   (assert (! (not (= FactorialContChannelImpEP@t FactorialCont@t)) :named ax_450))
   (assert (! (not (= FactorialContChannelImpEP@t FactorialCont@t)) :named ax_451))
   (assert (! (not (= FactorialContChannelImpEP@t FactorialContChannel@t)) :named ax_452))
   (assert (! (not (= FactorialContChannelImpEP@t FactorialContChannel@t)) :named ax_453))
   (assert (! (not (= FactorialContChannelImpEP@t FactorialContChannelExpEP@t)) :named ax_454))
   (assert (! (not (= FactorialContChannelImpEP@t FactorialContChannelExpEP@t)) :named ax_455))
   (assert (! (not (= forkK FactorialActorChannelExpEP.state)) :named ax_456))
   (assert (! (not (= forkK FactorialActorChannelExpEP.state)) :named ax_457))
   (assert (! (not (= forkK FactorialActorChannelImpEP.state)) :named ax_458))
   (assert (! (not (= forkK FactorialActorChannelImpEP.state)) :named ax_459))
   (assert (! (not (= forkK FactorialCont.v)) :named ax_460))
   (assert (! (not (= forkK FactorialCont.v)) :named ax_461))
   (assert (! (not (= forkK FactorialCont.vo)) :named ax_462))
   (assert (! (not (= forkK FactorialCont.vo)) :named ax_463))
   (assert (! (not (= forkK FactorialContChannelExpEP.state)) :named ax_464))
   (assert (! (not (= forkK FactorialContChannelExpEP.state)) :named ax_465))
   (assert (! (not (= forkK FactorialContChannelImpEP.state)) :named ax_466))
   (assert (! (not (= forkK FactorialContChannelImpEP.state)) :named ax_467))
   (assert (! (not (= Future.q FactorialActor.q)) :named ax_468))
   (assert (! (not (= Future.q FactorialActor.q)) :named ax_469))
   (assert (! (not (= Future.q FactorialActorChannel.exp)) :named ax_470))
   (assert (! (not (= Future.q FactorialActorChannel.exp)) :named ax_471))
   (assert (! (not (= Future.q FactorialActorChannel.imp)) :named ax_472))
   (assert (! (not (= Future.q FactorialActorChannel.imp)) :named ax_473))
   (assert (! (not (= Future.q FactorialActorChannelExpEP.ch)) :named ax_474))
   (assert (! (not (= Future.q FactorialActorChannelExpEP.ch)) :named ax_475))
   (assert (! (not (= Future.q FactorialActorChannelExpEP.expch)) :named ax_476))
   (assert (! (not (= Future.q FactorialActorChannelExpEP.expch)) :named ax_477))
   (assert (! (not (= Future.q FactorialActorChannelImpEP.ch)) :named ax_478))
   (assert (! (not (= Future.q FactorialActorChannelImpEP.ch)) :named ax_479))
   (assert (! (not (= Future.q FactorialActorChannelImpEP.impch)) :named ax_480))
   (assert (! (not (= Future.q FactorialActorChannelImpEP.impch)) :named ax_481))
   (assert (! (not (= Future.q FactorialCont.cust)) :named ax_482))
   (assert (! (not (= Future.q FactorialCont.cust)) :named ax_483))
   (assert (! (not (= Future.q FactorialCont.q)) :named ax_484))
   (assert (! (not (= Future.q FactorialCont.q)) :named ax_485))
   (assert (! (not (= Future.q FactorialContChannel.exp)) :named ax_486))
   (assert (! (not (= Future.q FactorialContChannel.exp)) :named ax_487))
   (assert (! (not (= Future.q FactorialContChannel.imp)) :named ax_488))
   (assert (! (not (= Future.q FactorialContChannel.imp)) :named ax_489))
   (assert (! (not (= Future.q FactorialContChannelExpEP.ch)) :named ax_490))
   (assert (! (not (= Future.q FactorialContChannelExpEP.ch)) :named ax_491))
   (assert (! (not (= Future.q FactorialContChannelExpEP.expch)) :named ax_492))
   (assert (! (not (= Future.q FactorialContChannelExpEP.expch)) :named ax_493))
   (assert (! (not (= Future.q FactorialContChannelImpEP.ch)) :named ax_494))
   (assert (! (not (= Future.q FactorialContChannelImpEP.ch)) :named ax_495))
   (assert (! (not (= Future.q FactorialContChannelImpEP.impch)) :named ax_496))
   (assert (! (not (= Future.q FactorialContChannelImpEP.impch)) :named ax_497))
   (assert (! (not (= Future.sent FactorialActor.q)) :named ax_498))
   (assert (! (not (= Future.sent FactorialActor.q)) :named ax_499))
   (assert (! (not (= Future.sent FactorialActorChannel.exp)) :named ax_500))
   (assert (! (not (= Future.sent FactorialActorChannel.exp)) :named ax_501))
   (assert (! (not (= Future.sent FactorialActorChannel.imp)) :named ax_502))
   (assert (! (not (= Future.sent FactorialActorChannel.imp)) :named ax_503))
   (assert (! (not (= Future.sent FactorialActorChannelExpEP.ch)) :named ax_504))
   (assert (! (not (= Future.sent FactorialActorChannelExpEP.ch)) :named ax_505))
   (assert (! (not (= Future.sent FactorialActorChannelExpEP.expch)) :named ax_506))
   (assert (! (not (= Future.sent FactorialActorChannelExpEP.expch)) :named ax_507))
   (assert (! (not (= Future.sent FactorialActorChannelImpEP.ch)) :named ax_508))
   (assert (! (not (= Future.sent FactorialActorChannelImpEP.ch)) :named ax_509))
   (assert (! (not (= Future.sent FactorialActorChannelImpEP.impch)) :named ax_510))
   (assert (! (not (= Future.sent FactorialActorChannelImpEP.impch)) :named ax_511))
   (assert (! (not (= Future.sent FactorialCont.cust)) :named ax_512))
   (assert (! (not (= Future.sent FactorialCont.cust)) :named ax_513))
   (assert (! (not (= Future.sent FactorialCont.q)) :named ax_514))
   (assert (! (not (= Future.sent FactorialCont.q)) :named ax_515))
   (assert (! (not (= Future.sent FactorialContChannel.exp)) :named ax_516))
   (assert (! (not (= Future.sent FactorialContChannel.exp)) :named ax_517))
   (assert (! (not (= Future.sent FactorialContChannel.imp)) :named ax_518))
   (assert (! (not (= Future.sent FactorialContChannel.imp)) :named ax_519))
   (assert (! (not (= Future.sent FactorialContChannelExpEP.ch)) :named ax_520))
   (assert (! (not (= Future.sent FactorialContChannelExpEP.ch)) :named ax_521))
   (assert (! (not (= Future.sent FactorialContChannelExpEP.expch)) :named ax_522))
   (assert (! (not (= Future.sent FactorialContChannelExpEP.expch)) :named ax_523))
   (assert (! (not (= Future.sent FactorialContChannelImpEP.ch)) :named ax_524))
   (assert (! (not (= Future.sent FactorialContChannelImpEP.ch)) :named ax_525))
   (assert (! (not (= Future.sent FactorialContChannelImpEP.impch)) :named ax_526))
   (assert (! (not (= Future.sent FactorialContChannelImpEP.impch)) :named ax_527))
   (assert (! (not (= Future.sent Future.q)) :named ax_528))
   (assert (! (not (= Future.sent Future.q)) :named ax_529))
   (assert (! (not (= Future.value FactorialActor.q)) :named ax_530))
   (assert (! (not (= Future.value FactorialActor.q)) :named ax_531))
   (assert (! (not (= Future.value FactorialActorChannel.exp)) :named ax_532))
   (assert (! (not (= Future.value FactorialActorChannel.exp)) :named ax_533))
   (assert (! (not (= Future.value FactorialActorChannel.imp)) :named ax_534))
   (assert (! (not (= Future.value FactorialActorChannel.imp)) :named ax_535))
   (assert (! (not (= Future.value FactorialActorChannelExpEP.ch)) :named ax_536))
   (assert (! (not (= Future.value FactorialActorChannelExpEP.ch)) :named ax_537))
   (assert (! (not (= Future.value FactorialActorChannelExpEP.expch)) :named ax_538))
   (assert (! (not (= Future.value FactorialActorChannelExpEP.expch)) :named ax_539))
   (assert (! (not (= Future.value FactorialActorChannelImpEP.ch)) :named ax_540))
   (assert (! (not (= Future.value FactorialActorChannelImpEP.ch)) :named ax_541))
   (assert (! (not (= Future.value FactorialActorChannelImpEP.impch)) :named ax_542))
   (assert (! (not (= Future.value FactorialActorChannelImpEP.impch)) :named ax_543))
   (assert (! (not (= Future.value FactorialCont.cust)) :named ax_544))
   (assert (! (not (= Future.value FactorialCont.cust)) :named ax_545))
   (assert (! (not (= Future.value FactorialCont.q)) :named ax_546))
   (assert (! (not (= Future.value FactorialCont.q)) :named ax_547))
   (assert (! (not (= Future.value FactorialContChannel.exp)) :named ax_548))
   (assert (! (not (= Future.value FactorialContChannel.exp)) :named ax_549))
   (assert (! (not (= Future.value FactorialContChannel.imp)) :named ax_550))
   (assert (! (not (= Future.value FactorialContChannel.imp)) :named ax_551))
   (assert (! (not (= Future.value FactorialContChannelExpEP.ch)) :named ax_552))
   (assert (! (not (= Future.value FactorialContChannelExpEP.ch)) :named ax_553))
   (assert (! (not (= Future.value FactorialContChannelExpEP.expch)) :named ax_554))
   (assert (! (not (= Future.value FactorialContChannelExpEP.expch)) :named ax_555))
   (assert (! (not (= Future.value FactorialContChannelImpEP.ch)) :named ax_556))
   (assert (! (not (= Future.value FactorialContChannelImpEP.ch)) :named ax_557))
   (assert (! (not (= Future.value FactorialContChannelImpEP.impch)) :named ax_558))
   (assert (! (not (= Future.value FactorialContChannelImpEP.impch)) :named ax_559))
   (assert (! (not (= Future.value Future.q)) :named ax_560))
   (assert (! (not (= Future.value Future.q)) :named ax_561))
   (assert (! (not (= Future.value Future.sent)) :named ax_562))
   (assert (! (not (= Future.value Future.sent)) :named ax_563))
   (assert (! (not (= Future@t Channel@t)) :named ax_564))
   (assert (! (not (= Future@t Channel@t)) :named ax_565))
   (assert (! (not (= Future@t FactorialActor@t)) :named ax_566))
   (assert (! (not (= Future@t FactorialActor@t)) :named ax_567))
   (assert (! (not (= Future@t FactorialActorChannel@t)) :named ax_568))
   (assert (! (not (= Future@t FactorialActorChannel@t)) :named ax_569))
   (assert (! (not (= Future@t FactorialActorChannelExpEP@t)) :named ax_570))
   (assert (! (not (= Future@t FactorialActorChannelExpEP@t)) :named ax_571))
   (assert (! (not (= Future@t FactorialActorChannelImpEP@t)) :named ax_572))
   (assert (! (not (= Future@t FactorialActorChannelImpEP@t)) :named ax_573))
   (assert (! (not (= Future@t FactorialCont@t)) :named ax_574))
   (assert (! (not (= Future@t FactorialCont@t)) :named ax_575))
   (assert (! (not (= Future@t FactorialContChannel@t)) :named ax_576))
   (assert (! (not (= Future@t FactorialContChannel@t)) :named ax_577))
   (assert (! (not (= Future@t FactorialContChannelExpEP@t)) :named ax_578))
   (assert (! (not (= Future@t FactorialContChannelExpEP@t)) :named ax_579))
   (assert (! (not (= Future@t FactorialContChannelImpEP@t)) :named ax_580))
   (assert (! (not (= Future@t FactorialContChannelImpEP@t)) :named ax_581))
   (assert (! (not (= FutureChannel.exp FactorialActor.q)) :named ax_582))
   (assert (! (not (= FutureChannel.exp FactorialActor.q)) :named ax_583))
   (assert (! (not (= FutureChannel.exp FactorialActorChannel.exp)) :named ax_584))
   (assert (! (not (= FutureChannel.exp FactorialActorChannel.exp)) :named ax_585))
   (assert (! (not (= FutureChannel.exp FactorialActorChannel.imp)) :named ax_586))
   (assert (! (not (= FutureChannel.exp FactorialActorChannel.imp)) :named ax_587))
   (assert (! (not (= FutureChannel.exp FactorialActorChannelExpEP.ch)) :named ax_588))
   (assert (! (not (= FutureChannel.exp FactorialActorChannelExpEP.ch)) :named ax_589))
   (assert (! (not (= FutureChannel.exp FactorialActorChannelExpEP.expch)) :named ax_590))
   (assert (! (not (= FutureChannel.exp FactorialActorChannelExpEP.expch)) :named ax_591))
   (assert (! (not (= FutureChannel.exp FactorialActorChannelImpEP.ch)) :named ax_592))
   (assert (! (not (= FutureChannel.exp FactorialActorChannelImpEP.ch)) :named ax_593))
   (assert (! (not (= FutureChannel.exp FactorialActorChannelImpEP.impch)) :named ax_594))
   (assert (! (not (= FutureChannel.exp FactorialActorChannelImpEP.impch)) :named ax_595))
   (assert (! (not (= FutureChannel.exp FactorialCont.cust)) :named ax_596))
   (assert (! (not (= FutureChannel.exp FactorialCont.cust)) :named ax_597))
   (assert (! (not (= FutureChannel.exp FactorialCont.q)) :named ax_598))
   (assert (! (not (= FutureChannel.exp FactorialCont.q)) :named ax_599))
   (assert (! (not (= FutureChannel.exp FactorialContChannel.exp)) :named ax_600))
   (assert (! (not (= FutureChannel.exp FactorialContChannel.exp)) :named ax_601))
   (assert (! (not (= FutureChannel.exp FactorialContChannel.imp)) :named ax_602))
   (assert (! (not (= FutureChannel.exp FactorialContChannel.imp)) :named ax_603))
   (assert (! (not (= FutureChannel.exp FactorialContChannelExpEP.ch)) :named ax_604))
   (assert (! (not (= FutureChannel.exp FactorialContChannelExpEP.ch)) :named ax_605))
   (assert (! (not (= FutureChannel.exp FactorialContChannelExpEP.expch)) :named ax_606))
   (assert (! (not (= FutureChannel.exp FactorialContChannelExpEP.expch)) :named ax_607))
   (assert (! (not (= FutureChannel.exp FactorialContChannelImpEP.ch)) :named ax_608))
   (assert (! (not (= FutureChannel.exp FactorialContChannelImpEP.ch)) :named ax_609))
   (assert (! (not (= FutureChannel.exp FactorialContChannelImpEP.impch)) :named ax_610))
   (assert (! (not (= FutureChannel.exp FactorialContChannelImpEP.impch)) :named ax_611))
   (assert (! (not (= FutureChannel.exp Future.q)) :named ax_612))
   (assert (! (not (= FutureChannel.exp Future.q)) :named ax_613))
   (assert (! (not (= FutureChannel.exp Future.sent)) :named ax_614))
   (assert (! (not (= FutureChannel.exp Future.sent)) :named ax_615))
   (assert (! (not (= FutureChannel.exp Future.value)) :named ax_616))
   (assert (! (not (= FutureChannel.exp Future.value)) :named ax_617))
   (assert (! (not (= FutureChannel.imp FactorialActor.q)) :named ax_618))
   (assert (! (not (= FutureChannel.imp FactorialActor.q)) :named ax_619))
   (assert (! (not (= FutureChannel.imp FactorialActorChannel.exp)) :named ax_620))
   (assert (! (not (= FutureChannel.imp FactorialActorChannel.exp)) :named ax_621))
   (assert (! (not (= FutureChannel.imp FactorialActorChannel.imp)) :named ax_622))
   (assert (! (not (= FutureChannel.imp FactorialActorChannel.imp)) :named ax_623))
   (assert (! (not (= FutureChannel.imp FactorialActorChannelExpEP.ch)) :named ax_624))
   (assert (! (not (= FutureChannel.imp FactorialActorChannelExpEP.ch)) :named ax_625))
   (assert (! (not (= FutureChannel.imp FactorialActorChannelExpEP.expch)) :named ax_626))
   (assert (! (not (= FutureChannel.imp FactorialActorChannelExpEP.expch)) :named ax_627))
   (assert (! (not (= FutureChannel.imp FactorialActorChannelImpEP.ch)) :named ax_628))
   (assert (! (not (= FutureChannel.imp FactorialActorChannelImpEP.ch)) :named ax_629))
   (assert (! (not (= FutureChannel.imp FactorialActorChannelImpEP.impch)) :named ax_630))
   (assert (! (not (= FutureChannel.imp FactorialActorChannelImpEP.impch)) :named ax_631))
   (assert (! (not (= FutureChannel.imp FactorialCont.cust)) :named ax_632))
   (assert (! (not (= FutureChannel.imp FactorialCont.cust)) :named ax_633))
   (assert (! (not (= FutureChannel.imp FactorialCont.q)) :named ax_634))
   (assert (! (not (= FutureChannel.imp FactorialCont.q)) :named ax_635))
   (assert (! (not (= FutureChannel.imp FactorialContChannel.exp)) :named ax_636))
   (assert (! (not (= FutureChannel.imp FactorialContChannel.exp)) :named ax_637))
   (assert (! (not (= FutureChannel.imp FactorialContChannel.imp)) :named ax_638))
   (assert (! (not (= FutureChannel.imp FactorialContChannel.imp)) :named ax_639))
   (assert (! (not (= FutureChannel.imp FactorialContChannelExpEP.ch)) :named ax_640))
   (assert (! (not (= FutureChannel.imp FactorialContChannelExpEP.ch)) :named ax_641))
   (assert (! (not (= FutureChannel.imp FactorialContChannelExpEP.expch)) :named ax_642))
   (assert (! (not (= FutureChannel.imp FactorialContChannelExpEP.expch)) :named ax_643))
   (assert (! (not (= FutureChannel.imp FactorialContChannelImpEP.ch)) :named ax_644))
   (assert (! (not (= FutureChannel.imp FactorialContChannelImpEP.ch)) :named ax_645))
   (assert (! (not (= FutureChannel.imp FactorialContChannelImpEP.impch)) :named ax_646))
   (assert (! (not (= FutureChannel.imp FactorialContChannelImpEP.impch)) :named ax_647))
   (assert (! (not (= FutureChannel.imp Future.q)) :named ax_648))
   (assert (! (not (= FutureChannel.imp Future.q)) :named ax_649))
   (assert (! (not (= FutureChannel.imp Future.sent)) :named ax_650))
   (assert (! (not (= FutureChannel.imp Future.sent)) :named ax_651))
   (assert (! (not (= FutureChannel.imp Future.value)) :named ax_652))
   (assert (! (not (= FutureChannel.imp Future.value)) :named ax_653))
   (assert (! (not (= FutureChannel.imp FutureChannel.exp)) :named ax_654))
   (assert (! (not (= FutureChannel.imp FutureChannel.exp)) :named ax_655))
   (assert (! (not (= FutureChannel.initExpState FactorialActorChannel.initExpState)) :named ax_656))
   (assert (! (not (= FutureChannel.initExpState FactorialActorChannel.initExpState)) :named ax_657))
   (assert (! (not (= FutureChannel.initExpState FactorialActorChannel.initImpState)) :named ax_658))
   (assert (! (not (= FutureChannel.initExpState FactorialActorChannel.initImpState)) :named ax_659))
   (assert (! (not (= FutureChannel.initExpState FactorialActorChannel.valid)) :named ax_660))
   (assert (! (not (= FutureChannel.initExpState FactorialActorChannel.valid)) :named ax_661))
   (assert (! (not (= FutureChannel.initExpState FactorialActorChannelExpEP.valid)) :named ax_662))
   (assert (! (not (= FutureChannel.initExpState FactorialActorChannelExpEP.valid)) :named ax_663))
   (assert (! (not (= FutureChannel.initExpState FactorialActorChannelImpEP.valid)) :named ax_664))
   (assert (! (not (= FutureChannel.initExpState FactorialActorChannelImpEP.valid)) :named ax_665))
   (assert (! (not (= FutureChannel.initExpState FactorialContChannel.initExpState)) :named ax_666))
   (assert (! (not (= FutureChannel.initExpState FactorialContChannel.initExpState)) :named ax_667))
   (assert (! (not (= FutureChannel.initExpState FactorialContChannel.initImpState)) :named ax_668))
   (assert (! (not (= FutureChannel.initExpState FactorialContChannel.initImpState)) :named ax_669))
   (assert (! (not (= FutureChannel.initExpState FactorialContChannel.valid)) :named ax_670))
   (assert (! (not (= FutureChannel.initExpState FactorialContChannel.valid)) :named ax_671))
   (assert (! (not (= FutureChannel.initExpState FactorialContChannelExpEP.valid)) :named ax_672))
   (assert (! (not (= FutureChannel.initExpState FactorialContChannelExpEP.valid)) :named ax_673))
   (assert (! (not (= FutureChannel.initExpState FactorialContChannelImpEP.valid)) :named ax_674))
   (assert (! (not (= FutureChannel.initExpState FactorialContChannelImpEP.valid)) :named ax_675))
   (assert (! (not (= FutureChannel.initImpState FactorialActorChannel.initExpState)) :named ax_676))
   (assert (! (not (= FutureChannel.initImpState FactorialActorChannel.initExpState)) :named ax_677))
   (assert (! (not (= FutureChannel.initImpState FactorialActorChannel.initImpState)) :named ax_678))
   (assert (! (not (= FutureChannel.initImpState FactorialActorChannel.initImpState)) :named ax_679))
   (assert (! (not (= FutureChannel.initImpState FactorialActorChannel.valid)) :named ax_680))
   (assert (! (not (= FutureChannel.initImpState FactorialActorChannel.valid)) :named ax_681))
   (assert (! (not (= FutureChannel.initImpState FactorialActorChannelExpEP.valid)) :named ax_682))
   (assert (! (not (= FutureChannel.initImpState FactorialActorChannelExpEP.valid)) :named ax_683))
   (assert (! (not (= FutureChannel.initImpState FactorialActorChannelImpEP.valid)) :named ax_684))
   (assert (! (not (= FutureChannel.initImpState FactorialActorChannelImpEP.valid)) :named ax_685))
   (assert (! (not (= FutureChannel.initImpState FactorialContChannel.initExpState)) :named ax_686))
   (assert (! (not (= FutureChannel.initImpState FactorialContChannel.initExpState)) :named ax_687))
   (assert (! (not (= FutureChannel.initImpState FactorialContChannel.initImpState)) :named ax_688))
   (assert (! (not (= FutureChannel.initImpState FactorialContChannel.initImpState)) :named ax_689))
   (assert (! (not (= FutureChannel.initImpState FactorialContChannel.valid)) :named ax_690))
   (assert (! (not (= FutureChannel.initImpState FactorialContChannel.valid)) :named ax_691))
   (assert (! (not (= FutureChannel.initImpState FactorialContChannelExpEP.valid)) :named ax_692))
   (assert (! (not (= FutureChannel.initImpState FactorialContChannelExpEP.valid)) :named ax_693))
   (assert (! (not (= FutureChannel.initImpState FactorialContChannelImpEP.valid)) :named ax_694))
   (assert (! (not (= FutureChannel.initImpState FactorialContChannelImpEP.valid)) :named ax_695))
   (assert (! (not (= FutureChannel.initImpState FutureChannel.initExpState)) :named ax_696))
   (assert (! (not (= FutureChannel.initImpState FutureChannel.initExpState)) :named ax_697))
   (assert (! (not (= FutureChannel.valid FactorialActorChannel.initExpState)) :named ax_698))
   (assert (! (not (= FutureChannel.valid FactorialActorChannel.initExpState)) :named ax_699))
   (assert (! (not (= FutureChannel.valid FactorialActorChannel.initImpState)) :named ax_700))
   (assert (! (not (= FutureChannel.valid FactorialActorChannel.initImpState)) :named ax_701))
   (assert (! (not (= FutureChannel.valid FactorialActorChannel.valid)) :named ax_702))
   (assert (! (not (= FutureChannel.valid FactorialActorChannel.valid)) :named ax_703))
   (assert (! (not (= FutureChannel.valid FactorialActorChannelExpEP.valid)) :named ax_704))
   (assert (! (not (= FutureChannel.valid FactorialActorChannelExpEP.valid)) :named ax_705))
   (assert (! (not (= FutureChannel.valid FactorialActorChannelImpEP.valid)) :named ax_706))
   (assert (! (not (= FutureChannel.valid FactorialActorChannelImpEP.valid)) :named ax_707))
   (assert (! (not (= FutureChannel.valid FactorialContChannel.initExpState)) :named ax_708))
   (assert (! (not (= FutureChannel.valid FactorialContChannel.initExpState)) :named ax_709))
   (assert (! (not (= FutureChannel.valid FactorialContChannel.initImpState)) :named ax_710))
   (assert (! (not (= FutureChannel.valid FactorialContChannel.initImpState)) :named ax_711))
   (assert (! (not (= FutureChannel.valid FactorialContChannel.valid)) :named ax_712))
   (assert (! (not (= FutureChannel.valid FactorialContChannel.valid)) :named ax_713))
   (assert (! (not (= FutureChannel.valid FactorialContChannelExpEP.valid)) :named ax_714))
   (assert (! (not (= FutureChannel.valid FactorialContChannelExpEP.valid)) :named ax_715))
   (assert (! (not (= FutureChannel.valid FactorialContChannelImpEP.valid)) :named ax_716))
   (assert (! (not (= FutureChannel.valid FactorialContChannelImpEP.valid)) :named ax_717))
   (assert (! (not (= FutureChannel.valid FutureChannel.initExpState)) :named ax_718))
   (assert (! (not (= FutureChannel.valid FutureChannel.initExpState)) :named ax_719))
   (assert (! (not (= FutureChannel.valid FutureChannel.initImpState)) :named ax_720))
   (assert (! (not (= FutureChannel.valid FutureChannel.initImpState)) :named ax_721))
   (assert (! (not (= FutureChannel@t Channel@t)) :named ax_722))
   (assert (! (not (= FutureChannel@t Channel@t)) :named ax_723))
   (assert (! (not (= FutureChannel@t FactorialActor@t)) :named ax_724))
   (assert (! (not (= FutureChannel@t FactorialActor@t)) :named ax_725))
   (assert (! (not (= FutureChannel@t FactorialActorChannel@t)) :named ax_726))
   (assert (! (not (= FutureChannel@t FactorialActorChannel@t)) :named ax_727))
   (assert (! (not (= FutureChannel@t FactorialActorChannelExpEP@t)) :named ax_728))
   (assert (! (not (= FutureChannel@t FactorialActorChannelExpEP@t)) :named ax_729))
   (assert (! (not (= FutureChannel@t FactorialActorChannelImpEP@t)) :named ax_730))
   (assert (! (not (= FutureChannel@t FactorialActorChannelImpEP@t)) :named ax_731))
   (assert (! (not (= FutureChannel@t FactorialCont@t)) :named ax_732))
   (assert (! (not (= FutureChannel@t FactorialCont@t)) :named ax_733))
   (assert (! (not (= FutureChannel@t FactorialContChannel@t)) :named ax_734))
   (assert (! (not (= FutureChannel@t FactorialContChannel@t)) :named ax_735))
   (assert (! (not (= FutureChannel@t FactorialContChannelExpEP@t)) :named ax_736))
   (assert (! (not (= FutureChannel@t FactorialContChannelExpEP@t)) :named ax_737))
   (assert (! (not (= FutureChannel@t FactorialContChannelImpEP@t)) :named ax_738))
   (assert (! (not (= FutureChannel@t FactorialContChannelImpEP@t)) :named ax_739))
   (assert (! (not (= FutureChannel@t Future@t)) :named ax_740))
   (assert (! (not (= FutureChannel@t Future@t)) :named ax_741))
   (assert (! (not (= FutureChannelExpEP.ch FactorialActor.q)) :named ax_742))
   (assert (! (not (= FutureChannelExpEP.ch FactorialActor.q)) :named ax_743))
   (assert (! (not (= FutureChannelExpEP.ch FactorialActorChannel.exp)) :named ax_744))
   (assert (! (not (= FutureChannelExpEP.ch FactorialActorChannel.exp)) :named ax_745))
   (assert (! (not (= FutureChannelExpEP.ch FactorialActorChannel.imp)) :named ax_746))
   (assert (! (not (= FutureChannelExpEP.ch FactorialActorChannel.imp)) :named ax_747))
   (assert (! (not (= FutureChannelExpEP.ch FactorialActorChannelExpEP.ch)) :named ax_748))
   (assert (! (not (= FutureChannelExpEP.ch FactorialActorChannelExpEP.ch)) :named ax_749))
   (assert (! (not (= FutureChannelExpEP.ch FactorialActorChannelExpEP.expch)) :named ax_750))
   (assert (! (not (= FutureChannelExpEP.ch FactorialActorChannelExpEP.expch)) :named ax_751))
   (assert (! (not (= FutureChannelExpEP.ch FactorialActorChannelImpEP.ch)) :named ax_752))
   (assert (! (not (= FutureChannelExpEP.ch FactorialActorChannelImpEP.ch)) :named ax_753))
   (assert (! (not (= FutureChannelExpEP.ch FactorialActorChannelImpEP.impch)) :named ax_754))
   (assert (! (not (= FutureChannelExpEP.ch FactorialActorChannelImpEP.impch)) :named ax_755))
   (assert (! (not (= FutureChannelExpEP.ch FactorialCont.cust)) :named ax_756))
   (assert (! (not (= FutureChannelExpEP.ch FactorialCont.cust)) :named ax_757))
   (assert (! (not (= FutureChannelExpEP.ch FactorialCont.q)) :named ax_758))
   (assert (! (not (= FutureChannelExpEP.ch FactorialCont.q)) :named ax_759))
   (assert (! (not (= FutureChannelExpEP.ch FactorialContChannel.exp)) :named ax_760))
   (assert (! (not (= FutureChannelExpEP.ch FactorialContChannel.exp)) :named ax_761))
   (assert (! (not (= FutureChannelExpEP.ch FactorialContChannel.imp)) :named ax_762))
   (assert (! (not (= FutureChannelExpEP.ch FactorialContChannel.imp)) :named ax_763))
   (assert (! (not (= FutureChannelExpEP.ch FactorialContChannelExpEP.ch)) :named ax_764))
   (assert (! (not (= FutureChannelExpEP.ch FactorialContChannelExpEP.ch)) :named ax_765))
   (assert (! (not (= FutureChannelExpEP.ch FactorialContChannelExpEP.expch)) :named ax_766))
   (assert (! (not (= FutureChannelExpEP.ch FactorialContChannelExpEP.expch)) :named ax_767))
   (assert (! (not (= FutureChannelExpEP.ch FactorialContChannelImpEP.ch)) :named ax_768))
   (assert (! (not (= FutureChannelExpEP.ch FactorialContChannelImpEP.ch)) :named ax_769))
   (assert (! (not (= FutureChannelExpEP.ch FactorialContChannelImpEP.impch)) :named ax_770))
   (assert (! (not (= FutureChannelExpEP.ch FactorialContChannelImpEP.impch)) :named ax_771))
   (assert (! (not (= FutureChannelExpEP.ch Future.q)) :named ax_772))
   (assert (! (not (= FutureChannelExpEP.ch Future.q)) :named ax_773))
   (assert (! (not (= FutureChannelExpEP.ch Future.sent)) :named ax_774))
   (assert (! (not (= FutureChannelExpEP.ch Future.sent)) :named ax_775))
   (assert (! (not (= FutureChannelExpEP.ch Future.value)) :named ax_776))
   (assert (! (not (= FutureChannelExpEP.ch Future.value)) :named ax_777))
   (assert (! (not (= FutureChannelExpEP.ch FutureChannel.exp)) :named ax_778))
   (assert (! (not (= FutureChannelExpEP.ch FutureChannel.exp)) :named ax_779))
   (assert (! (not (= FutureChannelExpEP.ch FutureChannel.imp)) :named ax_780))
   (assert (! (not (= FutureChannelExpEP.ch FutureChannel.imp)) :named ax_781))
   (assert (! (not (= FutureChannelExpEP.expch FactorialActor.q)) :named ax_782))
   (assert (! (not (= FutureChannelExpEP.expch FactorialActor.q)) :named ax_783))
   (assert (! (not (= FutureChannelExpEP.expch FactorialActorChannel.exp)) :named ax_784))
   (assert (! (not (= FutureChannelExpEP.expch FactorialActorChannel.exp)) :named ax_785))
   (assert (! (not (= FutureChannelExpEP.expch FactorialActorChannel.imp)) :named ax_786))
   (assert (! (not (= FutureChannelExpEP.expch FactorialActorChannel.imp)) :named ax_787))
   (assert (! (not (= FutureChannelExpEP.expch FactorialActorChannelExpEP.ch)) :named ax_788))
   (assert (! (not (= FutureChannelExpEP.expch FactorialActorChannelExpEP.ch)) :named ax_789))
   (assert (! (not (= FutureChannelExpEP.expch FactorialActorChannelExpEP.expch)) :named ax_790))
   (assert (! (not (= FutureChannelExpEP.expch FactorialActorChannelExpEP.expch)) :named ax_791))
   (assert (! (not (= FutureChannelExpEP.expch FactorialActorChannelImpEP.ch)) :named ax_792))
   (assert (! (not (= FutureChannelExpEP.expch FactorialActorChannelImpEP.ch)) :named ax_793))
   (assert (! (not (= FutureChannelExpEP.expch FactorialActorChannelImpEP.impch)) :named ax_794))
   (assert (! (not (= FutureChannelExpEP.expch FactorialActorChannelImpEP.impch)) :named ax_795))
   (assert (! (not (= FutureChannelExpEP.expch FactorialCont.cust)) :named ax_796))
   (assert (! (not (= FutureChannelExpEP.expch FactorialCont.cust)) :named ax_797))
   (assert (! (not (= FutureChannelExpEP.expch FactorialCont.q)) :named ax_798))
   (assert (! (not (= FutureChannelExpEP.expch FactorialCont.q)) :named ax_799))
   (assert (! (not (= FutureChannelExpEP.expch FactorialContChannel.exp)) :named ax_800))
   (assert (! (not (= FutureChannelExpEP.expch FactorialContChannel.exp)) :named ax_801))
   (assert (! (not (= FutureChannelExpEP.expch FactorialContChannel.imp)) :named ax_802))
   (assert (! (not (= FutureChannelExpEP.expch FactorialContChannel.imp)) :named ax_803))
   (assert (! (not (= FutureChannelExpEP.expch FactorialContChannelExpEP.ch)) :named ax_804))
   (assert (! (not (= FutureChannelExpEP.expch FactorialContChannelExpEP.ch)) :named ax_805))
   (assert (! (not (= FutureChannelExpEP.expch FactorialContChannelExpEP.expch)) :named ax_806))
   (assert (! (not (= FutureChannelExpEP.expch FactorialContChannelExpEP.expch)) :named ax_807))
   (assert (! (not (= FutureChannelExpEP.expch FactorialContChannelImpEP.ch)) :named ax_808))
   (assert (! (not (= FutureChannelExpEP.expch FactorialContChannelImpEP.ch)) :named ax_809))
   (assert (! (not (= FutureChannelExpEP.expch FactorialContChannelImpEP.impch)) :named ax_810))
   (assert (! (not (= FutureChannelExpEP.expch FactorialContChannelImpEP.impch)) :named ax_811))
   (assert (! (not (= FutureChannelExpEP.expch Future.q)) :named ax_812))
   (assert (! (not (= FutureChannelExpEP.expch Future.q)) :named ax_813))
   (assert (! (not (= FutureChannelExpEP.expch Future.sent)) :named ax_814))
   (assert (! (not (= FutureChannelExpEP.expch Future.sent)) :named ax_815))
   (assert (! (not (= FutureChannelExpEP.expch Future.value)) :named ax_816))
   (assert (! (not (= FutureChannelExpEP.expch Future.value)) :named ax_817))
   (assert (! (not (= FutureChannelExpEP.expch FutureChannel.exp)) :named ax_818))
   (assert (! (not (= FutureChannelExpEP.expch FutureChannel.exp)) :named ax_819))
   (assert (! (not (= FutureChannelExpEP.expch FutureChannel.imp)) :named ax_820))
   (assert (! (not (= FutureChannelExpEP.expch FutureChannel.imp)) :named ax_821))
   (assert (! (not (= FutureChannelExpEP.expch FutureChannelExpEP.ch)) :named ax_822))
   (assert (! (not (= FutureChannelExpEP.expch FutureChannelExpEP.ch)) :named ax_823))
   (assert (! (not (= FutureChannelExpEP.state FactorialActorChannelExpEP.state)) :named ax_824))
   (assert (! (not (= FutureChannelExpEP.state FactorialActorChannelExpEP.state)) :named ax_825))
   (assert (! (not (= FutureChannelExpEP.state FactorialActorChannelImpEP.state)) :named ax_826))
   (assert (! (not (= FutureChannelExpEP.state FactorialActorChannelImpEP.state)) :named ax_827))
   (assert (! (not (= FutureChannelExpEP.state FactorialCont.v)) :named ax_828))
   (assert (! (not (= FutureChannelExpEP.state FactorialCont.v)) :named ax_829))
   (assert (! (not (= FutureChannelExpEP.state FactorialCont.vo)) :named ax_830))
   (assert (! (not (= FutureChannelExpEP.state FactorialCont.vo)) :named ax_831))
   (assert (! (not (= FutureChannelExpEP.state FactorialContChannelExpEP.state)) :named ax_832))
   (assert (! (not (= FutureChannelExpEP.state FactorialContChannelExpEP.state)) :named ax_833))
   (assert (! (not (= FutureChannelExpEP.state FactorialContChannelImpEP.state)) :named ax_834))
   (assert (! (not (= FutureChannelExpEP.state FactorialContChannelImpEP.state)) :named ax_835))
   (assert (! (not (= FutureChannelExpEP.state forkK)) :named ax_836))
   (assert (! (not (= FutureChannelExpEP.state forkK)) :named ax_837))
   (assert (! (not (= FutureChannelExpEP.valid FactorialActorChannel.initExpState)) :named ax_838))
   (assert (! (not (= FutureChannelExpEP.valid FactorialActorChannel.initExpState)) :named ax_839))
   (assert (! (not (= FutureChannelExpEP.valid FactorialActorChannel.initImpState)) :named ax_840))
   (assert (! (not (= FutureChannelExpEP.valid FactorialActorChannel.initImpState)) :named ax_841))
   (assert (! (not (= FutureChannelExpEP.valid FactorialActorChannel.valid)) :named ax_842))
   (assert (! (not (= FutureChannelExpEP.valid FactorialActorChannel.valid)) :named ax_843))
   (assert (! (not (= FutureChannelExpEP.valid FactorialActorChannelExpEP.valid)) :named ax_844))
   (assert (! (not (= FutureChannelExpEP.valid FactorialActorChannelExpEP.valid)) :named ax_845))
   (assert (! (not (= FutureChannelExpEP.valid FactorialActorChannelImpEP.valid)) :named ax_846))
   (assert (! (not (= FutureChannelExpEP.valid FactorialActorChannelImpEP.valid)) :named ax_847))
   (assert (! (not (= FutureChannelExpEP.valid FactorialContChannel.initExpState)) :named ax_848))
   (assert (! (not (= FutureChannelExpEP.valid FactorialContChannel.initExpState)) :named ax_849))
   (assert (! (not (= FutureChannelExpEP.valid FactorialContChannel.initImpState)) :named ax_850))
   (assert (! (not (= FutureChannelExpEP.valid FactorialContChannel.initImpState)) :named ax_851))
   (assert (! (not (= FutureChannelExpEP.valid FactorialContChannel.valid)) :named ax_852))
   (assert (! (not (= FutureChannelExpEP.valid FactorialContChannel.valid)) :named ax_853))
   (assert (! (not (= FutureChannelExpEP.valid FactorialContChannelExpEP.valid)) :named ax_854))
   (assert (! (not (= FutureChannelExpEP.valid FactorialContChannelExpEP.valid)) :named ax_855))
   (assert (! (not (= FutureChannelExpEP.valid FactorialContChannelImpEP.valid)) :named ax_856))
   (assert (! (not (= FutureChannelExpEP.valid FactorialContChannelImpEP.valid)) :named ax_857))
   (assert (! (not (= FutureChannelExpEP.valid FutureChannel.initExpState)) :named ax_858))
   (assert (! (not (= FutureChannelExpEP.valid FutureChannel.initExpState)) :named ax_859))
   (assert (! (not (= FutureChannelExpEP.valid FutureChannel.initImpState)) :named ax_860))
   (assert (! (not (= FutureChannelExpEP.valid FutureChannel.initImpState)) :named ax_861))
   (assert (! (not (= FutureChannelExpEP.valid FutureChannel.valid)) :named ax_862))
   (assert (! (not (= FutureChannelExpEP.valid FutureChannel.valid)) :named ax_863))
   (assert (! (not (= FutureChannelExpEP@t Channel@t)) :named ax_864))
   (assert (! (not (= FutureChannelExpEP@t Channel@t)) :named ax_865))
   (assert (! (not (= FutureChannelExpEP@t FactorialActor@t)) :named ax_866))
   (assert (! (not (= FutureChannelExpEP@t FactorialActor@t)) :named ax_867))
   (assert (! (not (= FutureChannelExpEP@t FactorialActorChannel@t)) :named ax_868))
   (assert (! (not (= FutureChannelExpEP@t FactorialActorChannel@t)) :named ax_869))
   (assert (! (not (= FutureChannelExpEP@t FactorialActorChannelExpEP@t)) :named ax_870))
   (assert (! (not (= FutureChannelExpEP@t FactorialActorChannelExpEP@t)) :named ax_871))
   (assert (! (not (= FutureChannelExpEP@t FactorialActorChannelImpEP@t)) :named ax_872))
   (assert (! (not (= FutureChannelExpEP@t FactorialActorChannelImpEP@t)) :named ax_873))
   (assert (! (not (= FutureChannelExpEP@t FactorialCont@t)) :named ax_874))
   (assert (! (not (= FutureChannelExpEP@t FactorialCont@t)) :named ax_875))
   (assert (! (not (= FutureChannelExpEP@t FactorialContChannel@t)) :named ax_876))
   (assert (! (not (= FutureChannelExpEP@t FactorialContChannel@t)) :named ax_877))
   (assert (! (not (= FutureChannelExpEP@t FactorialContChannelExpEP@t)) :named ax_878))
   (assert (! (not (= FutureChannelExpEP@t FactorialContChannelExpEP@t)) :named ax_879))
   (assert (! (not (= FutureChannelExpEP@t FactorialContChannelImpEP@t)) :named ax_880))
   (assert (! (not (= FutureChannelExpEP@t FactorialContChannelImpEP@t)) :named ax_881))
   (assert (! (not (= FutureChannelExpEP@t Future@t)) :named ax_882))
   (assert (! (not (= FutureChannelExpEP@t Future@t)) :named ax_883))
   (assert (! (not (= FutureChannelExpEP@t FutureChannel@t)) :named ax_884))
   (assert (! (not (= FutureChannelExpEP@t FutureChannel@t)) :named ax_885))
   (assert (! (not (= FutureChannelImpEP.ch FactorialActor.q)) :named ax_886))
   (assert (! (not (= FutureChannelImpEP.ch FactorialActor.q)) :named ax_887))
   (assert (! (not (= FutureChannelImpEP.ch FactorialActorChannel.exp)) :named ax_888))
   (assert (! (not (= FutureChannelImpEP.ch FactorialActorChannel.exp)) :named ax_889))
   (assert (! (not (= FutureChannelImpEP.ch FactorialActorChannel.imp)) :named ax_890))
   (assert (! (not (= FutureChannelImpEP.ch FactorialActorChannel.imp)) :named ax_891))
   (assert (! (not (= FutureChannelImpEP.ch FactorialActorChannelExpEP.ch)) :named ax_892))
   (assert (! (not (= FutureChannelImpEP.ch FactorialActorChannelExpEP.ch)) :named ax_893))
   (assert (! (not (= FutureChannelImpEP.ch FactorialActorChannelExpEP.expch)) :named ax_894))
   (assert (! (not (= FutureChannelImpEP.ch FactorialActorChannelExpEP.expch)) :named ax_895))
   (assert (! (not (= FutureChannelImpEP.ch FactorialActorChannelImpEP.ch)) :named ax_896))
   (assert (! (not (= FutureChannelImpEP.ch FactorialActorChannelImpEP.ch)) :named ax_897))
   (assert (! (not (= FutureChannelImpEP.ch FactorialActorChannelImpEP.impch)) :named ax_898))
   (assert (! (not (= FutureChannelImpEP.ch FactorialActorChannelImpEP.impch)) :named ax_899))
   (assert (! (not (= FutureChannelImpEP.ch FactorialCont.cust)) :named ax_900))
   (assert (! (not (= FutureChannelImpEP.ch FactorialCont.cust)) :named ax_901))
   (assert (! (not (= FutureChannelImpEP.ch FactorialCont.q)) :named ax_902))
   (assert (! (not (= FutureChannelImpEP.ch FactorialCont.q)) :named ax_903))
   (assert (! (not (= FutureChannelImpEP.ch FactorialContChannel.exp)) :named ax_904))
   (assert (! (not (= FutureChannelImpEP.ch FactorialContChannel.exp)) :named ax_905))
   (assert (! (not (= FutureChannelImpEP.ch FactorialContChannel.imp)) :named ax_906))
   (assert (! (not (= FutureChannelImpEP.ch FactorialContChannel.imp)) :named ax_907))
   (assert (! (not (= FutureChannelImpEP.ch FactorialContChannelExpEP.ch)) :named ax_908))
   (assert (! (not (= FutureChannelImpEP.ch FactorialContChannelExpEP.ch)) :named ax_909))
   (assert (! (not (= FutureChannelImpEP.ch FactorialContChannelExpEP.expch)) :named ax_910))
   (assert (! (not (= FutureChannelImpEP.ch FactorialContChannelExpEP.expch)) :named ax_911))
   (assert (! (not (= FutureChannelImpEP.ch FactorialContChannelImpEP.ch)) :named ax_912))
   (assert (! (not (= FutureChannelImpEP.ch FactorialContChannelImpEP.ch)) :named ax_913))
   (assert (! (not (= FutureChannelImpEP.ch FactorialContChannelImpEP.impch)) :named ax_914))
   (assert (! (not (= FutureChannelImpEP.ch FactorialContChannelImpEP.impch)) :named ax_915))
   (assert (! (not (= FutureChannelImpEP.ch Future.q)) :named ax_916))
   (assert (! (not (= FutureChannelImpEP.ch Future.q)) :named ax_917))
   (assert (! (not (= FutureChannelImpEP.ch Future.sent)) :named ax_918))
   (assert (! (not (= FutureChannelImpEP.ch Future.sent)) :named ax_919))
   (assert (! (not (= FutureChannelImpEP.ch Future.value)) :named ax_920))
   (assert (! (not (= FutureChannelImpEP.ch Future.value)) :named ax_921))
   (assert (! (not (= FutureChannelImpEP.ch FutureChannel.exp)) :named ax_922))
   (assert (! (not (= FutureChannelImpEP.ch FutureChannel.exp)) :named ax_923))
   (assert (! (not (= FutureChannelImpEP.ch FutureChannel.imp)) :named ax_924))
   (assert (! (not (= FutureChannelImpEP.ch FutureChannel.imp)) :named ax_925))
   (assert (! (not (= FutureChannelImpEP.ch FutureChannelExpEP.ch)) :named ax_926))
   (assert (! (not (= FutureChannelImpEP.ch FutureChannelExpEP.ch)) :named ax_927))
   (assert (! (not (= FutureChannelImpEP.ch FutureChannelExpEP.expch)) :named ax_928))
   (assert (! (not (= FutureChannelImpEP.ch FutureChannelExpEP.expch)) :named ax_929))
   (assert (! (not (= FutureChannelImpEP.impch FactorialActor.q)) :named ax_930))
   (assert (! (not (= FutureChannelImpEP.impch FactorialActor.q)) :named ax_931))
   (assert (! (not (= FutureChannelImpEP.impch FactorialActorChannel.exp)) :named ax_932))
   (assert (! (not (= FutureChannelImpEP.impch FactorialActorChannel.exp)) :named ax_933))
   (assert (! (not (= FutureChannelImpEP.impch FactorialActorChannel.imp)) :named ax_934))
   (assert (! (not (= FutureChannelImpEP.impch FactorialActorChannel.imp)) :named ax_935))
   (assert (! (not (= FutureChannelImpEP.impch FactorialActorChannelExpEP.ch)) :named ax_936))
   (assert (! (not (= FutureChannelImpEP.impch FactorialActorChannelExpEP.ch)) :named ax_937))
   (assert (! (not (= FutureChannelImpEP.impch FactorialActorChannelExpEP.expch)) :named ax_938))
   (assert (! (not (= FutureChannelImpEP.impch FactorialActorChannelExpEP.expch)) :named ax_939))
   (assert (! (not (= FutureChannelImpEP.impch FactorialActorChannelImpEP.ch)) :named ax_940))
   (assert (! (not (= FutureChannelImpEP.impch FactorialActorChannelImpEP.ch)) :named ax_941))
   (assert (! (not (= FutureChannelImpEP.impch FactorialActorChannelImpEP.impch)) :named ax_942))
   (assert (! (not (= FutureChannelImpEP.impch FactorialActorChannelImpEP.impch)) :named ax_943))
   (assert (! (not (= FutureChannelImpEP.impch FactorialCont.cust)) :named ax_944))
   (assert (! (not (= FutureChannelImpEP.impch FactorialCont.cust)) :named ax_945))
   (assert (! (not (= FutureChannelImpEP.impch FactorialCont.q)) :named ax_946))
   (assert (! (not (= FutureChannelImpEP.impch FactorialCont.q)) :named ax_947))
   (assert (! (not (= FutureChannelImpEP.impch FactorialContChannel.exp)) :named ax_948))
   (assert (! (not (= FutureChannelImpEP.impch FactorialContChannel.exp)) :named ax_949))
   (assert (! (not (= FutureChannelImpEP.impch FactorialContChannel.imp)) :named ax_950))
   (assert (! (not (= FutureChannelImpEP.impch FactorialContChannel.imp)) :named ax_951))
   (assert (! (not (= FutureChannelImpEP.impch FactorialContChannelExpEP.ch)) :named ax_952))
   (assert (! (not (= FutureChannelImpEP.impch FactorialContChannelExpEP.ch)) :named ax_953))
   (assert (! (not (= FutureChannelImpEP.impch FactorialContChannelExpEP.expch)) :named ax_954))
   (assert (! (not (= FutureChannelImpEP.impch FactorialContChannelExpEP.expch)) :named ax_955))
   (assert (! (not (= FutureChannelImpEP.impch FactorialContChannelImpEP.ch)) :named ax_956))
   (assert (! (not (= FutureChannelImpEP.impch FactorialContChannelImpEP.ch)) :named ax_957))
   (assert (! (not (= FutureChannelImpEP.impch FactorialContChannelImpEP.impch)) :named ax_958))
   (assert (! (not (= FutureChannelImpEP.impch FactorialContChannelImpEP.impch)) :named ax_959))
   (assert (! (not (= FutureChannelImpEP.impch Future.q)) :named ax_960))
   (assert (! (not (= FutureChannelImpEP.impch Future.q)) :named ax_961))
   (assert (! (not (= FutureChannelImpEP.impch Future.sent)) :named ax_962))
   (assert (! (not (= FutureChannelImpEP.impch Future.sent)) :named ax_963))
   (assert (! (not (= FutureChannelImpEP.impch Future.value)) :named ax_964))
   (assert (! (not (= FutureChannelImpEP.impch Future.value)) :named ax_965))
   (assert (! (not (= FutureChannelImpEP.impch FutureChannel.exp)) :named ax_966))
   (assert (! (not (= FutureChannelImpEP.impch FutureChannel.exp)) :named ax_967))
   (assert (! (not (= FutureChannelImpEP.impch FutureChannel.imp)) :named ax_968))
   (assert (! (not (= FutureChannelImpEP.impch FutureChannel.imp)) :named ax_969))
   (assert (! (not (= FutureChannelImpEP.impch FutureChannelExpEP.ch)) :named ax_970))
   (assert (! (not (= FutureChannelImpEP.impch FutureChannelExpEP.ch)) :named ax_971))
   (assert (! (not (= FutureChannelImpEP.impch FutureChannelExpEP.expch)) :named ax_972))
   (assert (! (not (= FutureChannelImpEP.impch FutureChannelExpEP.expch)) :named ax_973))
   (assert (! (not (= FutureChannelImpEP.impch FutureChannelImpEP.ch)) :named ax_974))
   (assert (! (not (= FutureChannelImpEP.impch FutureChannelImpEP.ch)) :named ax_975))
   (assert (! (not (= FutureChannelImpEP.state FactorialActorChannelExpEP.state)) :named ax_976))
   (assert (! (not (= FutureChannelImpEP.state FactorialActorChannelExpEP.state)) :named ax_977))
   (assert (! (not (= FutureChannelImpEP.state FactorialActorChannelImpEP.state)) :named ax_978))
   (assert (! (not (= FutureChannelImpEP.state FactorialActorChannelImpEP.state)) :named ax_979))
   (assert (! (not (= FutureChannelImpEP.state FactorialCont.v)) :named ax_980))
   (assert (! (not (= FutureChannelImpEP.state FactorialCont.v)) :named ax_981))
   (assert (! (not (= FutureChannelImpEP.state FactorialCont.vo)) :named ax_982))
   (assert (! (not (= FutureChannelImpEP.state FactorialCont.vo)) :named ax_983))
   (assert (! (not (= FutureChannelImpEP.state FactorialContChannelExpEP.state)) :named ax_984))
   (assert (! (not (= FutureChannelImpEP.state FactorialContChannelExpEP.state)) :named ax_985))
   (assert (! (not (= FutureChannelImpEP.state FactorialContChannelImpEP.state)) :named ax_986))
   (assert (! (not (= FutureChannelImpEP.state FactorialContChannelImpEP.state)) :named ax_987))
   (assert (! (not (= FutureChannelImpEP.state forkK)) :named ax_988))
   (assert (! (not (= FutureChannelImpEP.state forkK)) :named ax_989))
   (assert (! (not (= FutureChannelImpEP.state FutureChannelExpEP.state)) :named ax_990))
   (assert (! (not (= FutureChannelImpEP.state FutureChannelExpEP.state)) :named ax_991))
   (assert (! (not (= FutureChannelImpEP.valid FactorialActorChannel.initExpState)) :named ax_992))
   (assert (! (not (= FutureChannelImpEP.valid FactorialActorChannel.initExpState)) :named ax_993))
   (assert (! (not (= FutureChannelImpEP.valid FactorialActorChannel.initImpState)) :named ax_994))
   (assert (! (not (= FutureChannelImpEP.valid FactorialActorChannel.initImpState)) :named ax_995))
   (assert (! (not (= FutureChannelImpEP.valid FactorialActorChannel.valid)) :named ax_996))
   (assert (! (not (= FutureChannelImpEP.valid FactorialActorChannel.valid)) :named ax_997))
   (assert (! (not (= FutureChannelImpEP.valid FactorialActorChannelExpEP.valid)) :named ax_998))
   (assert (! (not (= FutureChannelImpEP.valid FactorialActorChannelExpEP.valid)) :named ax_999))
   (assert (! (not (= FutureChannelImpEP.valid FactorialActorChannelImpEP.valid)) :named ax_1000))
   (assert (! (not (= FutureChannelImpEP.valid FactorialActorChannelImpEP.valid)) :named ax_1001))
   (assert (! (not (= FutureChannelImpEP.valid FactorialContChannel.initExpState)) :named ax_1002))
   (assert (! (not (= FutureChannelImpEP.valid FactorialContChannel.initExpState)) :named ax_1003))
   (assert (! (not (= FutureChannelImpEP.valid FactorialContChannel.initImpState)) :named ax_1004))
   (assert (! (not (= FutureChannelImpEP.valid FactorialContChannel.initImpState)) :named ax_1005))
   (assert (! (not (= FutureChannelImpEP.valid FactorialContChannel.valid)) :named ax_1006))
   (assert (! (not (= FutureChannelImpEP.valid FactorialContChannel.valid)) :named ax_1007))
   (assert (! (not (= FutureChannelImpEP.valid FactorialContChannelExpEP.valid)) :named ax_1008))
   (assert (! (not (= FutureChannelImpEP.valid FactorialContChannelExpEP.valid)) :named ax_1009))
   (assert (! (not (= FutureChannelImpEP.valid FactorialContChannelImpEP.valid)) :named ax_1010))
   (assert (! (not (= FutureChannelImpEP.valid FactorialContChannelImpEP.valid)) :named ax_1011))
   (assert (! (not (= FutureChannelImpEP.valid FutureChannel.initExpState)) :named ax_1012))
   (assert (! (not (= FutureChannelImpEP.valid FutureChannel.initExpState)) :named ax_1013))
   (assert (! (not (= FutureChannelImpEP.valid FutureChannel.initImpState)) :named ax_1014))
   (assert (! (not (= FutureChannelImpEP.valid FutureChannel.initImpState)) :named ax_1015))
   (assert (! (not (= FutureChannelImpEP.valid FutureChannel.valid)) :named ax_1016))
   (assert (! (not (= FutureChannelImpEP.valid FutureChannel.valid)) :named ax_1017))
   (assert (! (not (= FutureChannelImpEP.valid FutureChannelExpEP.valid)) :named ax_1018))
   (assert (! (not (= FutureChannelImpEP.valid FutureChannelExpEP.valid)) :named ax_1019))
   (assert (! (not (= FutureChannelImpEP@t Channel@t)) :named ax_1020))
   (assert (! (not (= FutureChannelImpEP@t Channel@t)) :named ax_1021))
   (assert (! (not (= FutureChannelImpEP@t FactorialActor@t)) :named ax_1022))
   (assert (! (not (= FutureChannelImpEP@t FactorialActor@t)) :named ax_1023))
   (assert (! (not (= FutureChannelImpEP@t FactorialActorChannel@t)) :named ax_1024))
   (assert (! (not (= FutureChannelImpEP@t FactorialActorChannel@t)) :named ax_1025))
   (assert (! (not (= FutureChannelImpEP@t FactorialActorChannelExpEP@t)) :named ax_1026))
   (assert (! (not (= FutureChannelImpEP@t FactorialActorChannelExpEP@t)) :named ax_1027))
   (assert (! (not (= FutureChannelImpEP@t FactorialActorChannelImpEP@t)) :named ax_1028))
   (assert (! (not (= FutureChannelImpEP@t FactorialActorChannelImpEP@t)) :named ax_1029))
   (assert (! (not (= FutureChannelImpEP@t FactorialCont@t)) :named ax_1030))
   (assert (! (not (= FutureChannelImpEP@t FactorialCont@t)) :named ax_1031))
   (assert (! (not (= FutureChannelImpEP@t FactorialContChannel@t)) :named ax_1032))
   (assert (! (not (= FutureChannelImpEP@t FactorialContChannel@t)) :named ax_1033))
   (assert (! (not (= FutureChannelImpEP@t FactorialContChannelExpEP@t)) :named ax_1034))
   (assert (! (not (= FutureChannelImpEP@t FactorialContChannelExpEP@t)) :named ax_1035))
   (assert (! (not (= FutureChannelImpEP@t FactorialContChannelImpEP@t)) :named ax_1036))
   (assert (! (not (= FutureChannelImpEP@t FactorialContChannelImpEP@t)) :named ax_1037))
   (assert (! (not (= FutureChannelImpEP@t Future@t)) :named ax_1038))
   (assert (! (not (= FutureChannelImpEP@t Future@t)) :named ax_1039))
   (assert (! (not (= FutureChannelImpEP@t FutureChannel@t)) :named ax_1040))
   (assert (! (not (= FutureChannelImpEP@t FutureChannel@t)) :named ax_1041))
   (assert (! (not (= FutureChannelImpEP@t FutureChannelExpEP@t)) :named ax_1042))
   (assert (! (not (= FutureChannelImpEP@t FutureChannelExpEP@t)) :named ax_1043))
   (assert (! (not (= held FactorialActorChannelExpEP.state)) :named ax_1044))
   (assert (! (not (= held FactorialActorChannelExpEP.state)) :named ax_1045))
   (assert (! (not (= held FactorialActorChannelImpEP.state)) :named ax_1046))
   (assert (! (not (= held FactorialActorChannelImpEP.state)) :named ax_1047))
   (assert (! (not (= held FactorialCont.v)) :named ax_1048))
   (assert (! (not (= held FactorialCont.v)) :named ax_1049))
   (assert (! (not (= held FactorialCont.vo)) :named ax_1050))
   (assert (! (not (= held FactorialCont.vo)) :named ax_1051))
   (assert (! (not (= held FactorialContChannelExpEP.state)) :named ax_1052))
   (assert (! (not (= held FactorialContChannelExpEP.state)) :named ax_1053))
   (assert (! (not (= held FactorialContChannelImpEP.state)) :named ax_1054))
   (assert (! (not (= held FactorialContChannelImpEP.state)) :named ax_1055))
   (assert (! (not (= held forkK)) :named ax_1056))
   (assert (! (not (= held forkK)) :named ax_1057))
   (assert (! (not (= held FutureChannelExpEP.state)) :named ax_1058))
   (assert (! (not (= held FutureChannelExpEP.state)) :named ax_1059))
   (assert (! (not (= held FutureChannelImpEP.state)) :named ax_1060))
   (assert (! (not (= held FutureChannelImpEP.state)) :named ax_1061))
   (assert (! (not (= joinable FactorialActorChannelExpEP.state)) :named ax_1062))
   (assert (! (not (= joinable FactorialActorChannelExpEP.state)) :named ax_1063))
   (assert (! (not (= joinable FactorialActorChannelImpEP.state)) :named ax_1064))
   (assert (! (not (= joinable FactorialActorChannelImpEP.state)) :named ax_1065))
   (assert (! (not (= joinable FactorialCont.v)) :named ax_1066))
   (assert (! (not (= joinable FactorialCont.v)) :named ax_1067))
   (assert (! (not (= joinable FactorialCont.vo)) :named ax_1068))
   (assert (! (not (= joinable FactorialCont.vo)) :named ax_1069))
   (assert (! (not (= joinable FactorialContChannelExpEP.state)) :named ax_1070))
   (assert (! (not (= joinable FactorialContChannelExpEP.state)) :named ax_1071))
   (assert (! (not (= joinable FactorialContChannelImpEP.state)) :named ax_1072))
   (assert (! (not (= joinable FactorialContChannelImpEP.state)) :named ax_1073))
   (assert (! (not (= joinable forkK)) :named ax_1074))
   (assert (! (not (= joinable forkK)) :named ax_1075))
   (assert (! (not (= joinable FutureChannelExpEP.state)) :named ax_1076))
   (assert (! (not (= joinable FutureChannelExpEP.state)) :named ax_1077))
   (assert (! (not (= joinable FutureChannelImpEP.state)) :named ax_1078))
   (assert (! (not (= joinable FutureChannelImpEP.state)) :named ax_1079))
   (assert (! (not (= joinable held)) :named ax_1080))
   (assert (! (not (= joinable held)) :named ax_1081))
   (assert (! (not (= Message.cust1 FactorialActor.q)) :named ax_1082))
   (assert (! (not (= Message.cust1 FactorialActor.q)) :named ax_1083))
   (assert (! (not (= Message.cust1 FactorialActorChannel.exp)) :named ax_1084))
   (assert (! (not (= Message.cust1 FactorialActorChannel.exp)) :named ax_1085))
   (assert (! (not (= Message.cust1 FactorialActorChannel.imp)) :named ax_1086))
   (assert (! (not (= Message.cust1 FactorialActorChannel.imp)) :named ax_1087))
   (assert (! (not (= Message.cust1 FactorialActorChannelExpEP.ch)) :named ax_1088))
   (assert (! (not (= Message.cust1 FactorialActorChannelExpEP.ch)) :named ax_1089))
   (assert (! (not (= Message.cust1 FactorialActorChannelExpEP.expch)) :named ax_1090))
   (assert (! (not (= Message.cust1 FactorialActorChannelExpEP.expch)) :named ax_1091))
   (assert (! (not (= Message.cust1 FactorialActorChannelImpEP.ch)) :named ax_1092))
   (assert (! (not (= Message.cust1 FactorialActorChannelImpEP.ch)) :named ax_1093))
   (assert (! (not (= Message.cust1 FactorialActorChannelImpEP.impch)) :named ax_1094))
   (assert (! (not (= Message.cust1 FactorialActorChannelImpEP.impch)) :named ax_1095))
   (assert (! (not (= Message.cust1 FactorialCont.cust)) :named ax_1096))
   (assert (! (not (= Message.cust1 FactorialCont.cust)) :named ax_1097))
   (assert (! (not (= Message.cust1 FactorialCont.q)) :named ax_1098))
   (assert (! (not (= Message.cust1 FactorialCont.q)) :named ax_1099))
   (assert (! (not (= Message.cust1 FactorialContChannel.exp)) :named ax_1100))
   (assert (! (not (= Message.cust1 FactorialContChannel.exp)) :named ax_1101))
   (assert (! (not (= Message.cust1 FactorialContChannel.imp)) :named ax_1102))
   (assert (! (not (= Message.cust1 FactorialContChannel.imp)) :named ax_1103))
   (assert (! (not (= Message.cust1 FactorialContChannelExpEP.ch)) :named ax_1104))
   (assert (! (not (= Message.cust1 FactorialContChannelExpEP.ch)) :named ax_1105))
   (assert (! (not (= Message.cust1 FactorialContChannelExpEP.expch)) :named ax_1106))
   (assert (! (not (= Message.cust1 FactorialContChannelExpEP.expch)) :named ax_1107))
   (assert (! (not (= Message.cust1 FactorialContChannelImpEP.ch)) :named ax_1108))
   (assert (! (not (= Message.cust1 FactorialContChannelImpEP.ch)) :named ax_1109))
   (assert (! (not (= Message.cust1 FactorialContChannelImpEP.impch)) :named ax_1110))
   (assert (! (not (= Message.cust1 FactorialContChannelImpEP.impch)) :named ax_1111))
   (assert (! (not (= Message.cust1 Future.q)) :named ax_1112))
   (assert (! (not (= Message.cust1 Future.q)) :named ax_1113))
   (assert (! (not (= Message.cust1 Future.sent)) :named ax_1114))
   (assert (! (not (= Message.cust1 Future.sent)) :named ax_1115))
   (assert (! (not (= Message.cust1 Future.value)) :named ax_1116))
   (assert (! (not (= Message.cust1 Future.value)) :named ax_1117))
   (assert (! (not (= Message.cust1 FutureChannel.exp)) :named ax_1118))
   (assert (! (not (= Message.cust1 FutureChannel.exp)) :named ax_1119))
   (assert (! (not (= Message.cust1 FutureChannel.imp)) :named ax_1120))
   (assert (! (not (= Message.cust1 FutureChannel.imp)) :named ax_1121))
   (assert (! (not (= Message.cust1 FutureChannelExpEP.ch)) :named ax_1122))
   (assert (! (not (= Message.cust1 FutureChannelExpEP.ch)) :named ax_1123))
   (assert (! (not (= Message.cust1 FutureChannelExpEP.expch)) :named ax_1124))
   (assert (! (not (= Message.cust1 FutureChannelExpEP.expch)) :named ax_1125))
   (assert (! (not (= Message.cust1 FutureChannelImpEP.ch)) :named ax_1126))
   (assert (! (not (= Message.cust1 FutureChannelImpEP.ch)) :named ax_1127))
   (assert (! (not (= Message.cust1 FutureChannelImpEP.impch)) :named ax_1128))
   (assert (! (not (= Message.cust1 FutureChannelImpEP.impch)) :named ax_1129))
   (assert (! (not (= Message.inv FactorialActorChannel.initExpState)) :named ax_1130))
   (assert (! (not (= Message.inv FactorialActorChannel.initExpState)) :named ax_1131))
   (assert (! (not (= Message.inv FactorialActorChannel.initImpState)) :named ax_1132))
   (assert (! (not (= Message.inv FactorialActorChannel.initImpState)) :named ax_1133))
   (assert (! (not (= Message.inv FactorialActorChannel.valid)) :named ax_1134))
   (assert (! (not (= Message.inv FactorialActorChannel.valid)) :named ax_1135))
   (assert (! (not (= Message.inv FactorialActorChannelExpEP.valid)) :named ax_1136))
   (assert (! (not (= Message.inv FactorialActorChannelExpEP.valid)) :named ax_1137))
   (assert (! (not (= Message.inv FactorialActorChannelImpEP.valid)) :named ax_1138))
   (assert (! (not (= Message.inv FactorialActorChannelImpEP.valid)) :named ax_1139))
   (assert (! (not (= Message.inv FactorialContChannel.initExpState)) :named ax_1140))
   (assert (! (not (= Message.inv FactorialContChannel.initExpState)) :named ax_1141))
   (assert (! (not (= Message.inv FactorialContChannel.initImpState)) :named ax_1142))
   (assert (! (not (= Message.inv FactorialContChannel.initImpState)) :named ax_1143))
   (assert (! (not (= Message.inv FactorialContChannel.valid)) :named ax_1144))
   (assert (! (not (= Message.inv FactorialContChannel.valid)) :named ax_1145))
   (assert (! (not (= Message.inv FactorialContChannelExpEP.valid)) :named ax_1146))
   (assert (! (not (= Message.inv FactorialContChannelExpEP.valid)) :named ax_1147))
   (assert (! (not (= Message.inv FactorialContChannelImpEP.valid)) :named ax_1148))
   (assert (! (not (= Message.inv FactorialContChannelImpEP.valid)) :named ax_1149))
   (assert (! (not (= Message.inv FutureChannel.initExpState)) :named ax_1150))
   (assert (! (not (= Message.inv FutureChannel.initExpState)) :named ax_1151))
   (assert (! (not (= Message.inv FutureChannel.initImpState)) :named ax_1152))
   (assert (! (not (= Message.inv FutureChannel.initImpState)) :named ax_1153))
   (assert (! (not (= Message.inv FutureChannel.valid)) :named ax_1154))
   (assert (! (not (= Message.inv FutureChannel.valid)) :named ax_1155))
   (assert (! (not (= Message.inv FutureChannelExpEP.valid)) :named ax_1156))
   (assert (! (not (= Message.inv FutureChannelExpEP.valid)) :named ax_1157))
   (assert (! (not (= Message.inv FutureChannelImpEP.valid)) :named ax_1158))
   (assert (! (not (= Message.inv FutureChannelImpEP.valid)) :named ax_1159))
   (assert (! (not (= Message.invFinalResult FactorialActorChannel.initExpState)) :named ax_1160))
   (assert (! (not (= Message.invFinalResult FactorialActorChannel.initExpState)) :named ax_1161))
   (assert (! (not (= Message.invFinalResult FactorialActorChannel.initImpState)) :named ax_1162))
   (assert (! (not (= Message.invFinalResult FactorialActorChannel.initImpState)) :named ax_1163))
   (assert (! (not (= Message.invFinalResult FactorialActorChannel.valid)) :named ax_1164))
   (assert (! (not (= Message.invFinalResult FactorialActorChannel.valid)) :named ax_1165))
   (assert (! (not (= Message.invFinalResult FactorialActorChannelExpEP.valid)) :named ax_1166))
   (assert (! (not (= Message.invFinalResult FactorialActorChannelExpEP.valid)) :named ax_1167))
   (assert (! (not (= Message.invFinalResult FactorialActorChannelImpEP.valid)) :named ax_1168))
   (assert (! (not (= Message.invFinalResult FactorialActorChannelImpEP.valid)) :named ax_1169))
   (assert (! (not (= Message.invFinalResult FactorialContChannel.initExpState)) :named ax_1170))
   (assert (! (not (= Message.invFinalResult FactorialContChannel.initExpState)) :named ax_1171))
   (assert (! (not (= Message.invFinalResult FactorialContChannel.initImpState)) :named ax_1172))
   (assert (! (not (= Message.invFinalResult FactorialContChannel.initImpState)) :named ax_1173))
   (assert (! (not (= Message.invFinalResult FactorialContChannel.valid)) :named ax_1174))
   (assert (! (not (= Message.invFinalResult FactorialContChannel.valid)) :named ax_1175))
   (assert (! (not (= Message.invFinalResult FactorialContChannelExpEP.valid)) :named ax_1176))
   (assert (! (not (= Message.invFinalResult FactorialContChannelExpEP.valid)) :named ax_1177))
   (assert (! (not (= Message.invFinalResult FactorialContChannelImpEP.valid)) :named ax_1178))
   (assert (! (not (= Message.invFinalResult FactorialContChannelImpEP.valid)) :named ax_1179))
   (assert (! (not (= Message.invFinalResult FutureChannel.initExpState)) :named ax_1180))
   (assert (! (not (= Message.invFinalResult FutureChannel.initExpState)) :named ax_1181))
   (assert (! (not (= Message.invFinalResult FutureChannel.initImpState)) :named ax_1182))
   (assert (! (not (= Message.invFinalResult FutureChannel.initImpState)) :named ax_1183))
   (assert (! (not (= Message.invFinalResult FutureChannel.valid)) :named ax_1184))
   (assert (! (not (= Message.invFinalResult FutureChannel.valid)) :named ax_1185))
   (assert (! (not (= Message.invFinalResult FutureChannelExpEP.valid)) :named ax_1186))
   (assert (! (not (= Message.invFinalResult FutureChannelExpEP.valid)) :named ax_1187))
   (assert (! (not (= Message.invFinalResult FutureChannelImpEP.valid)) :named ax_1188))
   (assert (! (not (= Message.invFinalResult FutureChannelImpEP.valid)) :named ax_1189))
   (assert (! (not (= Message.invFinalResult Message.inv)) :named ax_1190))
   (assert (! (not (= Message.invFinalResult Message.inv)) :named ax_1191))
   (assert (! (not (= Message.invResult1 FactorialActorChannel.initExpState)) :named ax_1192))
   (assert (! (not (= Message.invResult1 FactorialActorChannel.initExpState)) :named ax_1193))
   (assert (! (not (= Message.invResult1 FactorialActorChannel.initImpState)) :named ax_1194))
   (assert (! (not (= Message.invResult1 FactorialActorChannel.initImpState)) :named ax_1195))
   (assert (! (not (= Message.invResult1 FactorialActorChannel.valid)) :named ax_1196))
   (assert (! (not (= Message.invResult1 FactorialActorChannel.valid)) :named ax_1197))
   (assert (! (not (= Message.invResult1 FactorialActorChannelExpEP.valid)) :named ax_1198))
   (assert (! (not (= Message.invResult1 FactorialActorChannelExpEP.valid)) :named ax_1199))
   (assert (! (not (= Message.invResult1 FactorialActorChannelImpEP.valid)) :named ax_1200))
   (assert (! (not (= Message.invResult1 FactorialActorChannelImpEP.valid)) :named ax_1201))
   (assert (! (not (= Message.invResult1 FactorialContChannel.initExpState)) :named ax_1202))
   (assert (! (not (= Message.invResult1 FactorialContChannel.initExpState)) :named ax_1203))
   (assert (! (not (= Message.invResult1 FactorialContChannel.initImpState)) :named ax_1204))
   (assert (! (not (= Message.invResult1 FactorialContChannel.initImpState)) :named ax_1205))
   (assert (! (not (= Message.invResult1 FactorialContChannel.valid)) :named ax_1206))
   (assert (! (not (= Message.invResult1 FactorialContChannel.valid)) :named ax_1207))
   (assert (! (not (= Message.invResult1 FactorialContChannelExpEP.valid)) :named ax_1208))
   (assert (! (not (= Message.invResult1 FactorialContChannelExpEP.valid)) :named ax_1209))
   (assert (! (not (= Message.invResult1 FactorialContChannelImpEP.valid)) :named ax_1210))
   (assert (! (not (= Message.invResult1 FactorialContChannelImpEP.valid)) :named ax_1211))
   (assert (! (not (= Message.invResult1 FutureChannel.initExpState)) :named ax_1212))
   (assert (! (not (= Message.invResult1 FutureChannel.initExpState)) :named ax_1213))
   (assert (! (not (= Message.invResult1 FutureChannel.initImpState)) :named ax_1214))
   (assert (! (not (= Message.invResult1 FutureChannel.initImpState)) :named ax_1215))
   (assert (! (not (= Message.invResult1 FutureChannel.valid)) :named ax_1216))
   (assert (! (not (= Message.invResult1 FutureChannel.valid)) :named ax_1217))
   (assert (! (not (= Message.invResult1 FutureChannelExpEP.valid)) :named ax_1218))
   (assert (! (not (= Message.invResult1 FutureChannelExpEP.valid)) :named ax_1219))
   (assert (! (not (= Message.invResult1 FutureChannelImpEP.valid)) :named ax_1220))
   (assert (! (not (= Message.invResult1 FutureChannelImpEP.valid)) :named ax_1221))
   (assert (! (not (= Message.invResult1 Message.inv)) :named ax_1222))
   (assert (! (not (= Message.invResult1 Message.inv)) :named ax_1223))
   (assert (! (not (= Message.invResult1 Message.invFinalResult)) :named ax_1224))
   (assert (! (not (= Message.invResult1 Message.invFinalResult)) :named ax_1225))
   (assert (! (not (= Message.invResult2 FactorialActorChannel.initExpState)) :named ax_1226))
   (assert (! (not (= Message.invResult2 FactorialActorChannel.initExpState)) :named ax_1227))
   (assert (! (not (= Message.invResult2 FactorialActorChannel.initImpState)) :named ax_1228))
   (assert (! (not (= Message.invResult2 FactorialActorChannel.initImpState)) :named ax_1229))
   (assert (! (not (= Message.invResult2 FactorialActorChannel.valid)) :named ax_1230))
   (assert (! (not (= Message.invResult2 FactorialActorChannel.valid)) :named ax_1231))
   (assert (! (not (= Message.invResult2 FactorialActorChannelExpEP.valid)) :named ax_1232))
   (assert (! (not (= Message.invResult2 FactorialActorChannelExpEP.valid)) :named ax_1233))
   (assert (! (not (= Message.invResult2 FactorialActorChannelImpEP.valid)) :named ax_1234))
   (assert (! (not (= Message.invResult2 FactorialActorChannelImpEP.valid)) :named ax_1235))
   (assert (! (not (= Message.invResult2 FactorialContChannel.initExpState)) :named ax_1236))
   (assert (! (not (= Message.invResult2 FactorialContChannel.initExpState)) :named ax_1237))
   (assert (! (not (= Message.invResult2 FactorialContChannel.initImpState)) :named ax_1238))
   (assert (! (not (= Message.invResult2 FactorialContChannel.initImpState)) :named ax_1239))
   (assert (! (not (= Message.invResult2 FactorialContChannel.valid)) :named ax_1240))
   (assert (! (not (= Message.invResult2 FactorialContChannel.valid)) :named ax_1241))
   (assert (! (not (= Message.invResult2 FactorialContChannelExpEP.valid)) :named ax_1242))
   (assert (! (not (= Message.invResult2 FactorialContChannelExpEP.valid)) :named ax_1243))
   (assert (! (not (= Message.invResult2 FactorialContChannelImpEP.valid)) :named ax_1244))
   (assert (! (not (= Message.invResult2 FactorialContChannelImpEP.valid)) :named ax_1245))
   (assert (! (not (= Message.invResult2 FutureChannel.initExpState)) :named ax_1246))
   (assert (! (not (= Message.invResult2 FutureChannel.initExpState)) :named ax_1247))
   (assert (! (not (= Message.invResult2 FutureChannel.initImpState)) :named ax_1248))
   (assert (! (not (= Message.invResult2 FutureChannel.initImpState)) :named ax_1249))
   (assert (! (not (= Message.invResult2 FutureChannel.valid)) :named ax_1250))
   (assert (! (not (= Message.invResult2 FutureChannel.valid)) :named ax_1251))
   (assert (! (not (= Message.invResult2 FutureChannelExpEP.valid)) :named ax_1252))
   (assert (! (not (= Message.invResult2 FutureChannelExpEP.valid)) :named ax_1253))
   (assert (! (not (= Message.invResult2 FutureChannelImpEP.valid)) :named ax_1254))
   (assert (! (not (= Message.invResult2 FutureChannelImpEP.valid)) :named ax_1255))
   (assert (! (not (= Message.invResult2 Message.inv)) :named ax_1256))
   (assert (! (not (= Message.invResult2 Message.inv)) :named ax_1257))
   (assert (! (not (= Message.invResult2 Message.invFinalResult)) :named ax_1258))
   (assert (! (not (= Message.invResult2 Message.invFinalResult)) :named ax_1259))
   (assert (! (not (= Message.invResult2 Message.invResult1)) :named ax_1260))
   (assert (! (not (= Message.invResult2 Message.invResult1)) :named ax_1261))
   (assert (! (not (= Message.invValue FactorialActorChannel.initExpState)) :named ax_1262))
   (assert (! (not (= Message.invValue FactorialActorChannel.initExpState)) :named ax_1263))
   (assert (! (not (= Message.invValue FactorialActorChannel.initImpState)) :named ax_1264))
   (assert (! (not (= Message.invValue FactorialActorChannel.initImpState)) :named ax_1265))
   (assert (! (not (= Message.invValue FactorialActorChannel.valid)) :named ax_1266))
   (assert (! (not (= Message.invValue FactorialActorChannel.valid)) :named ax_1267))
   (assert (! (not (= Message.invValue FactorialActorChannelExpEP.valid)) :named ax_1268))
   (assert (! (not (= Message.invValue FactorialActorChannelExpEP.valid)) :named ax_1269))
   (assert (! (not (= Message.invValue FactorialActorChannelImpEP.valid)) :named ax_1270))
   (assert (! (not (= Message.invValue FactorialActorChannelImpEP.valid)) :named ax_1271))
   (assert (! (not (= Message.invValue FactorialContChannel.initExpState)) :named ax_1272))
   (assert (! (not (= Message.invValue FactorialContChannel.initExpState)) :named ax_1273))
   (assert (! (not (= Message.invValue FactorialContChannel.initImpState)) :named ax_1274))
   (assert (! (not (= Message.invValue FactorialContChannel.initImpState)) :named ax_1275))
   (assert (! (not (= Message.invValue FactorialContChannel.valid)) :named ax_1276))
   (assert (! (not (= Message.invValue FactorialContChannel.valid)) :named ax_1277))
   (assert (! (not (= Message.invValue FactorialContChannelExpEP.valid)) :named ax_1278))
   (assert (! (not (= Message.invValue FactorialContChannelExpEP.valid)) :named ax_1279))
   (assert (! (not (= Message.invValue FactorialContChannelImpEP.valid)) :named ax_1280))
   (assert (! (not (= Message.invValue FactorialContChannelImpEP.valid)) :named ax_1281))
   (assert (! (not (= Message.invValue FutureChannel.initExpState)) :named ax_1282))
   (assert (! (not (= Message.invValue FutureChannel.initExpState)) :named ax_1283))
   (assert (! (not (= Message.invValue FutureChannel.initImpState)) :named ax_1284))
   (assert (! (not (= Message.invValue FutureChannel.initImpState)) :named ax_1285))
   (assert (! (not (= Message.invValue FutureChannel.valid)) :named ax_1286))
   (assert (! (not (= Message.invValue FutureChannel.valid)) :named ax_1287))
   (assert (! (not (= Message.invValue FutureChannelExpEP.valid)) :named ax_1288))
   (assert (! (not (= Message.invValue FutureChannelExpEP.valid)) :named ax_1289))
   (assert (! (not (= Message.invValue FutureChannelImpEP.valid)) :named ax_1290))
   (assert (! (not (= Message.invValue FutureChannelImpEP.valid)) :named ax_1291))
   (assert (! (not (= Message.invValue Message.inv)) :named ax_1292))
   (assert (! (not (= Message.invValue Message.inv)) :named ax_1293))
   (assert (! (not (= Message.invValue Message.invFinalResult)) :named ax_1294))
   (assert (! (not (= Message.invValue Message.invFinalResult)) :named ax_1295))
   (assert (! (not (= Message.invValue Message.invResult1)) :named ax_1296))
   (assert (! (not (= Message.invValue Message.invResult1)) :named ax_1297))
   (assert (! (not (= Message.invValue Message.invResult2)) :named ax_1298))
   (assert (! (not (= Message.invValue Message.invResult2)) :named ax_1299))
   (assert (! (not (= Message.old1 FactorialActor.q)) :named ax_1300))
   (assert (! (not (= Message.old1 FactorialActor.q)) :named ax_1301))
   (assert (! (not (= Message.old1 FactorialActorChannel.exp)) :named ax_1302))
   (assert (! (not (= Message.old1 FactorialActorChannel.exp)) :named ax_1303))
   (assert (! (not (= Message.old1 FactorialActorChannel.imp)) :named ax_1304))
   (assert (! (not (= Message.old1 FactorialActorChannel.imp)) :named ax_1305))
   (assert (! (not (= Message.old1 FactorialActorChannelExpEP.ch)) :named ax_1306))
   (assert (! (not (= Message.old1 FactorialActorChannelExpEP.ch)) :named ax_1307))
   (assert (! (not (= Message.old1 FactorialActorChannelExpEP.expch)) :named ax_1308))
   (assert (! (not (= Message.old1 FactorialActorChannelExpEP.expch)) :named ax_1309))
   (assert (! (not (= Message.old1 FactorialActorChannelImpEP.ch)) :named ax_1310))
   (assert (! (not (= Message.old1 FactorialActorChannelImpEP.ch)) :named ax_1311))
   (assert (! (not (= Message.old1 FactorialActorChannelImpEP.impch)) :named ax_1312))
   (assert (! (not (= Message.old1 FactorialActorChannelImpEP.impch)) :named ax_1313))
   (assert (! (not (= Message.old1 FactorialCont.cust)) :named ax_1314))
   (assert (! (not (= Message.old1 FactorialCont.cust)) :named ax_1315))
   (assert (! (not (= Message.old1 FactorialCont.q)) :named ax_1316))
   (assert (! (not (= Message.old1 FactorialCont.q)) :named ax_1317))
   (assert (! (not (= Message.old1 FactorialContChannel.exp)) :named ax_1318))
   (assert (! (not (= Message.old1 FactorialContChannel.exp)) :named ax_1319))
   (assert (! (not (= Message.old1 FactorialContChannel.imp)) :named ax_1320))
   (assert (! (not (= Message.old1 FactorialContChannel.imp)) :named ax_1321))
   (assert (! (not (= Message.old1 FactorialContChannelExpEP.ch)) :named ax_1322))
   (assert (! (not (= Message.old1 FactorialContChannelExpEP.ch)) :named ax_1323))
   (assert (! (not (= Message.old1 FactorialContChannelExpEP.expch)) :named ax_1324))
   (assert (! (not (= Message.old1 FactorialContChannelExpEP.expch)) :named ax_1325))
   (assert (! (not (= Message.old1 FactorialContChannelImpEP.ch)) :named ax_1326))
   (assert (! (not (= Message.old1 FactorialContChannelImpEP.ch)) :named ax_1327))
   (assert (! (not (= Message.old1 FactorialContChannelImpEP.impch)) :named ax_1328))
   (assert (! (not (= Message.old1 FactorialContChannelImpEP.impch)) :named ax_1329))
   (assert (! (not (= Message.old1 Future.q)) :named ax_1330))
   (assert (! (not (= Message.old1 Future.q)) :named ax_1331))
   (assert (! (not (= Message.old1 Future.sent)) :named ax_1332))
   (assert (! (not (= Message.old1 Future.sent)) :named ax_1333))
   (assert (! (not (= Message.old1 Future.value)) :named ax_1334))
   (assert (! (not (= Message.old1 Future.value)) :named ax_1335))
   (assert (! (not (= Message.old1 FutureChannel.exp)) :named ax_1336))
   (assert (! (not (= Message.old1 FutureChannel.exp)) :named ax_1337))
   (assert (! (not (= Message.old1 FutureChannel.imp)) :named ax_1338))
   (assert (! (not (= Message.old1 FutureChannel.imp)) :named ax_1339))
   (assert (! (not (= Message.old1 FutureChannelExpEP.ch)) :named ax_1340))
   (assert (! (not (= Message.old1 FutureChannelExpEP.ch)) :named ax_1341))
   (assert (! (not (= Message.old1 FutureChannelExpEP.expch)) :named ax_1342))
   (assert (! (not (= Message.old1 FutureChannelExpEP.expch)) :named ax_1343))
   (assert (! (not (= Message.old1 FutureChannelImpEP.ch)) :named ax_1344))
   (assert (! (not (= Message.old1 FutureChannelImpEP.ch)) :named ax_1345))
   (assert (! (not (= Message.old1 FutureChannelImpEP.impch)) :named ax_1346))
   (assert (! (not (= Message.old1 FutureChannelImpEP.impch)) :named ax_1347))
   (assert (! (not (= Message.old1 Message.cust1)) :named ax_1348))
   (assert (! (not (= Message.old1 Message.cust1)) :named ax_1349))
   (assert (! (not (= Message.old2 FactorialActor.q)) :named ax_1350))
   (assert (! (not (= Message.old2 FactorialActor.q)) :named ax_1351))
   (assert (! (not (= Message.old2 FactorialActorChannel.exp)) :named ax_1352))
   (assert (! (not (= Message.old2 FactorialActorChannel.exp)) :named ax_1353))
   (assert (! (not (= Message.old2 FactorialActorChannel.imp)) :named ax_1354))
   (assert (! (not (= Message.old2 FactorialActorChannel.imp)) :named ax_1355))
   (assert (! (not (= Message.old2 FactorialActorChannelExpEP.ch)) :named ax_1356))
   (assert (! (not (= Message.old2 FactorialActorChannelExpEP.ch)) :named ax_1357))
   (assert (! (not (= Message.old2 FactorialActorChannelExpEP.expch)) :named ax_1358))
   (assert (! (not (= Message.old2 FactorialActorChannelExpEP.expch)) :named ax_1359))
   (assert (! (not (= Message.old2 FactorialActorChannelImpEP.ch)) :named ax_1360))
   (assert (! (not (= Message.old2 FactorialActorChannelImpEP.ch)) :named ax_1361))
   (assert (! (not (= Message.old2 FactorialActorChannelImpEP.impch)) :named ax_1362))
   (assert (! (not (= Message.old2 FactorialActorChannelImpEP.impch)) :named ax_1363))
   (assert (! (not (= Message.old2 FactorialCont.cust)) :named ax_1364))
   (assert (! (not (= Message.old2 FactorialCont.cust)) :named ax_1365))
   (assert (! (not (= Message.old2 FactorialCont.q)) :named ax_1366))
   (assert (! (not (= Message.old2 FactorialCont.q)) :named ax_1367))
   (assert (! (not (= Message.old2 FactorialContChannel.exp)) :named ax_1368))
   (assert (! (not (= Message.old2 FactorialContChannel.exp)) :named ax_1369))
   (assert (! (not (= Message.old2 FactorialContChannel.imp)) :named ax_1370))
   (assert (! (not (= Message.old2 FactorialContChannel.imp)) :named ax_1371))
   (assert (! (not (= Message.old2 FactorialContChannelExpEP.ch)) :named ax_1372))
   (assert (! (not (= Message.old2 FactorialContChannelExpEP.ch)) :named ax_1373))
   (assert (! (not (= Message.old2 FactorialContChannelExpEP.expch)) :named ax_1374))
   (assert (! (not (= Message.old2 FactorialContChannelExpEP.expch)) :named ax_1375))
   (assert (! (not (= Message.old2 FactorialContChannelImpEP.ch)) :named ax_1376))
   (assert (! (not (= Message.old2 FactorialContChannelImpEP.ch)) :named ax_1377))
   (assert (! (not (= Message.old2 FactorialContChannelImpEP.impch)) :named ax_1378))
   (assert (! (not (= Message.old2 FactorialContChannelImpEP.impch)) :named ax_1379))
   (assert (! (not (= Message.old2 Future.q)) :named ax_1380))
   (assert (! (not (= Message.old2 Future.q)) :named ax_1381))
   (assert (! (not (= Message.old2 Future.sent)) :named ax_1382))
   (assert (! (not (= Message.old2 Future.sent)) :named ax_1383))
   (assert (! (not (= Message.old2 Future.value)) :named ax_1384))
   (assert (! (not (= Message.old2 Future.value)) :named ax_1385))
   (assert (! (not (= Message.old2 FutureChannel.exp)) :named ax_1386))
   (assert (! (not (= Message.old2 FutureChannel.exp)) :named ax_1387))
   (assert (! (not (= Message.old2 FutureChannel.imp)) :named ax_1388))
   (assert (! (not (= Message.old2 FutureChannel.imp)) :named ax_1389))
   (assert (! (not (= Message.old2 FutureChannelExpEP.ch)) :named ax_1390))
   (assert (! (not (= Message.old2 FutureChannelExpEP.ch)) :named ax_1391))
   (assert (! (not (= Message.old2 FutureChannelExpEP.expch)) :named ax_1392))
   (assert (! (not (= Message.old2 FutureChannelExpEP.expch)) :named ax_1393))
   (assert (! (not (= Message.old2 FutureChannelImpEP.ch)) :named ax_1394))
   (assert (! (not (= Message.old2 FutureChannelImpEP.ch)) :named ax_1395))
   (assert (! (not (= Message.old2 FutureChannelImpEP.impch)) :named ax_1396))
   (assert (! (not (= Message.old2 FutureChannelImpEP.impch)) :named ax_1397))
   (assert (! (not (= Message.old2 Message.cust1)) :named ax_1398))
   (assert (! (not (= Message.old2 Message.cust1)) :named ax_1399))
   (assert (! (not (= Message.old2 Message.old1)) :named ax_1400))
   (assert (! (not (= Message.old2 Message.old1)) :named ax_1401))
   (assert (! (not (= Message.receiver1 FactorialActor.q)) :named ax_1402))
   (assert (! (not (= Message.receiver1 FactorialActor.q)) :named ax_1403))
   (assert (! (not (= Message.receiver1 FactorialActorChannel.exp)) :named ax_1404))
   (assert (! (not (= Message.receiver1 FactorialActorChannel.exp)) :named ax_1405))
   (assert (! (not (= Message.receiver1 FactorialActorChannel.imp)) :named ax_1406))
   (assert (! (not (= Message.receiver1 FactorialActorChannel.imp)) :named ax_1407))
   (assert (! (not (= Message.receiver1 FactorialActorChannelExpEP.ch)) :named ax_1408))
   (assert (! (not (= Message.receiver1 FactorialActorChannelExpEP.ch)) :named ax_1409))
   (assert (! (not (= Message.receiver1 FactorialActorChannelExpEP.expch)) :named ax_1410))
   (assert (! (not (= Message.receiver1 FactorialActorChannelExpEP.expch)) :named ax_1411))
   (assert (! (not (= Message.receiver1 FactorialActorChannelImpEP.ch)) :named ax_1412))
   (assert (! (not (= Message.receiver1 FactorialActorChannelImpEP.ch)) :named ax_1413))
   (assert (! (not (= Message.receiver1 FactorialActorChannelImpEP.impch)) :named ax_1414))
   (assert (! (not (= Message.receiver1 FactorialActorChannelImpEP.impch)) :named ax_1415))
   (assert (! (not (= Message.receiver1 FactorialCont.cust)) :named ax_1416))
   (assert (! (not (= Message.receiver1 FactorialCont.cust)) :named ax_1417))
   (assert (! (not (= Message.receiver1 FactorialCont.q)) :named ax_1418))
   (assert (! (not (= Message.receiver1 FactorialCont.q)) :named ax_1419))
   (assert (! (not (= Message.receiver1 FactorialContChannel.exp)) :named ax_1420))
   (assert (! (not (= Message.receiver1 FactorialContChannel.exp)) :named ax_1421))
   (assert (! (not (= Message.receiver1 FactorialContChannel.imp)) :named ax_1422))
   (assert (! (not (= Message.receiver1 FactorialContChannel.imp)) :named ax_1423))
   (assert (! (not (= Message.receiver1 FactorialContChannelExpEP.ch)) :named ax_1424))
   (assert (! (not (= Message.receiver1 FactorialContChannelExpEP.ch)) :named ax_1425))
   (assert (! (not (= Message.receiver1 FactorialContChannelExpEP.expch)) :named ax_1426))
   (assert (! (not (= Message.receiver1 FactorialContChannelExpEP.expch)) :named ax_1427))
   (assert (! (not (= Message.receiver1 FactorialContChannelImpEP.ch)) :named ax_1428))
   (assert (! (not (= Message.receiver1 FactorialContChannelImpEP.ch)) :named ax_1429))
   (assert (! (not (= Message.receiver1 FactorialContChannelImpEP.impch)) :named ax_1430))
   (assert (! (not (= Message.receiver1 FactorialContChannelImpEP.impch)) :named ax_1431))
   (assert (! (not (= Message.receiver1 Future.q)) :named ax_1432))
   (assert (! (not (= Message.receiver1 Future.q)) :named ax_1433))
   (assert (! (not (= Message.receiver1 Future.sent)) :named ax_1434))
   (assert (! (not (= Message.receiver1 Future.sent)) :named ax_1435))
   (assert (! (not (= Message.receiver1 Future.value)) :named ax_1436))
   (assert (! (not (= Message.receiver1 Future.value)) :named ax_1437))
   (assert (! (not (= Message.receiver1 FutureChannel.exp)) :named ax_1438))
   (assert (! (not (= Message.receiver1 FutureChannel.exp)) :named ax_1439))
   (assert (! (not (= Message.receiver1 FutureChannel.imp)) :named ax_1440))
   (assert (! (not (= Message.receiver1 FutureChannel.imp)) :named ax_1441))
   (assert (! (not (= Message.receiver1 FutureChannelExpEP.ch)) :named ax_1442))
   (assert (! (not (= Message.receiver1 FutureChannelExpEP.ch)) :named ax_1443))
   (assert (! (not (= Message.receiver1 FutureChannelExpEP.expch)) :named ax_1444))
   (assert (! (not (= Message.receiver1 FutureChannelExpEP.expch)) :named ax_1445))
   (assert (! (not (= Message.receiver1 FutureChannelImpEP.ch)) :named ax_1446))
   (assert (! (not (= Message.receiver1 FutureChannelImpEP.ch)) :named ax_1447))
   (assert (! (not (= Message.receiver1 FutureChannelImpEP.impch)) :named ax_1448))
   (assert (! (not (= Message.receiver1 FutureChannelImpEP.impch)) :named ax_1449))
   (assert (! (not (= Message.receiver1 Message.cust1)) :named ax_1450))
   (assert (! (not (= Message.receiver1 Message.cust1)) :named ax_1451))
   (assert (! (not (= Message.receiver1 Message.old1)) :named ax_1452))
   (assert (! (not (= Message.receiver1 Message.old1)) :named ax_1453))
   (assert (! (not (= Message.receiver1 Message.old2)) :named ax_1454))
   (assert (! (not (= Message.receiver1 Message.old2)) :named ax_1455))
   (assert (! (not (= Message.receiver2 FactorialActor.q)) :named ax_1456))
   (assert (! (not (= Message.receiver2 FactorialActor.q)) :named ax_1457))
   (assert (! (not (= Message.receiver2 FactorialActorChannel.exp)) :named ax_1458))
   (assert (! (not (= Message.receiver2 FactorialActorChannel.exp)) :named ax_1459))
   (assert (! (not (= Message.receiver2 FactorialActorChannel.imp)) :named ax_1460))
   (assert (! (not (= Message.receiver2 FactorialActorChannel.imp)) :named ax_1461))
   (assert (! (not (= Message.receiver2 FactorialActorChannelExpEP.ch)) :named ax_1462))
   (assert (! (not (= Message.receiver2 FactorialActorChannelExpEP.ch)) :named ax_1463))
   (assert (! (not (= Message.receiver2 FactorialActorChannelExpEP.expch)) :named ax_1464))
   (assert (! (not (= Message.receiver2 FactorialActorChannelExpEP.expch)) :named ax_1465))
   (assert (! (not (= Message.receiver2 FactorialActorChannelImpEP.ch)) :named ax_1466))
   (assert (! (not (= Message.receiver2 FactorialActorChannelImpEP.ch)) :named ax_1467))
   (assert (! (not (= Message.receiver2 FactorialActorChannelImpEP.impch)) :named ax_1468))
   (assert (! (not (= Message.receiver2 FactorialActorChannelImpEP.impch)) :named ax_1469))
   (assert (! (not (= Message.receiver2 FactorialCont.cust)) :named ax_1470))
   (assert (! (not (= Message.receiver2 FactorialCont.cust)) :named ax_1471))
   (assert (! (not (= Message.receiver2 FactorialCont.q)) :named ax_1472))
   (assert (! (not (= Message.receiver2 FactorialCont.q)) :named ax_1473))
   (assert (! (not (= Message.receiver2 FactorialContChannel.exp)) :named ax_1474))
   (assert (! (not (= Message.receiver2 FactorialContChannel.exp)) :named ax_1475))
   (assert (! (not (= Message.receiver2 FactorialContChannel.imp)) :named ax_1476))
   (assert (! (not (= Message.receiver2 FactorialContChannel.imp)) :named ax_1477))
   (assert (! (not (= Message.receiver2 FactorialContChannelExpEP.ch)) :named ax_1478))
   (assert (! (not (= Message.receiver2 FactorialContChannelExpEP.ch)) :named ax_1479))
   (assert (! (not (= Message.receiver2 FactorialContChannelExpEP.expch)) :named ax_1480))
   (assert (! (not (= Message.receiver2 FactorialContChannelExpEP.expch)) :named ax_1481))
   (assert (! (not (= Message.receiver2 FactorialContChannelImpEP.ch)) :named ax_1482))
   (assert (! (not (= Message.receiver2 FactorialContChannelImpEP.ch)) :named ax_1483))
   (assert (! (not (= Message.receiver2 FactorialContChannelImpEP.impch)) :named ax_1484))
   (assert (! (not (= Message.receiver2 FactorialContChannelImpEP.impch)) :named ax_1485))
   (assert (! (not (= Message.receiver2 Future.q)) :named ax_1486))
   (assert (! (not (= Message.receiver2 Future.q)) :named ax_1487))
   (assert (! (not (= Message.receiver2 Future.sent)) :named ax_1488))
   (assert (! (not (= Message.receiver2 Future.sent)) :named ax_1489))
   (assert (! (not (= Message.receiver2 Future.value)) :named ax_1490))
   (assert (! (not (= Message.receiver2 Future.value)) :named ax_1491))
   (assert (! (not (= Message.receiver2 FutureChannel.exp)) :named ax_1492))
   (assert (! (not (= Message.receiver2 FutureChannel.exp)) :named ax_1493))
   (assert (! (not (= Message.receiver2 FutureChannel.imp)) :named ax_1494))
   (assert (! (not (= Message.receiver2 FutureChannel.imp)) :named ax_1495))
   (assert (! (not (= Message.receiver2 FutureChannelExpEP.ch)) :named ax_1496))
   (assert (! (not (= Message.receiver2 FutureChannelExpEP.ch)) :named ax_1497))
   (assert (! (not (= Message.receiver2 FutureChannelExpEP.expch)) :named ax_1498))
   (assert (! (not (= Message.receiver2 FutureChannelExpEP.expch)) :named ax_1499))
   (assert (! (not (= Message.receiver2 FutureChannelImpEP.ch)) :named ax_1500))
   (assert (! (not (= Message.receiver2 FutureChannelImpEP.ch)) :named ax_1501))
   (assert (! (not (= Message.receiver2 FutureChannelImpEP.impch)) :named ax_1502))
   (assert (! (not (= Message.receiver2 FutureChannelImpEP.impch)) :named ax_1503))
   (assert (! (not (= Message.receiver2 Message.cust1)) :named ax_1504))
   (assert (! (not (= Message.receiver2 Message.cust1)) :named ax_1505))
   (assert (! (not (= Message.receiver2 Message.old1)) :named ax_1506))
   (assert (! (not (= Message.receiver2 Message.old1)) :named ax_1507))
   (assert (! (not (= Message.receiver2 Message.old2)) :named ax_1508))
   (assert (! (not (= Message.receiver2 Message.old2)) :named ax_1509))
   (assert (! (not (= Message.receiver2 Message.receiver1)) :named ax_1510))
   (assert (! (not (= Message.receiver2 Message.receiver1)) :named ax_1511))
   (assert (! (not (= Message.receiver3 FactorialActor.q)) :named ax_1512))
   (assert (! (not (= Message.receiver3 FactorialActor.q)) :named ax_1513))
   (assert (! (not (= Message.receiver3 FactorialActorChannel.exp)) :named ax_1514))
   (assert (! (not (= Message.receiver3 FactorialActorChannel.exp)) :named ax_1515))
   (assert (! (not (= Message.receiver3 FactorialActorChannel.imp)) :named ax_1516))
   (assert (! (not (= Message.receiver3 FactorialActorChannel.imp)) :named ax_1517))
   (assert (! (not (= Message.receiver3 FactorialActorChannelExpEP.ch)) :named ax_1518))
   (assert (! (not (= Message.receiver3 FactorialActorChannelExpEP.ch)) :named ax_1519))
   (assert (! (not (= Message.receiver3 FactorialActorChannelExpEP.expch)) :named ax_1520))
   (assert (! (not (= Message.receiver3 FactorialActorChannelExpEP.expch)) :named ax_1521))
   (assert (! (not (= Message.receiver3 FactorialActorChannelImpEP.ch)) :named ax_1522))
   (assert (! (not (= Message.receiver3 FactorialActorChannelImpEP.ch)) :named ax_1523))
   (assert (! (not (= Message.receiver3 FactorialActorChannelImpEP.impch)) :named ax_1524))
   (assert (! (not (= Message.receiver3 FactorialActorChannelImpEP.impch)) :named ax_1525))
   (assert (! (not (= Message.receiver3 FactorialCont.cust)) :named ax_1526))
   (assert (! (not (= Message.receiver3 FactorialCont.cust)) :named ax_1527))
   (assert (! (not (= Message.receiver3 FactorialCont.q)) :named ax_1528))
   (assert (! (not (= Message.receiver3 FactorialCont.q)) :named ax_1529))
   (assert (! (not (= Message.receiver3 FactorialContChannel.exp)) :named ax_1530))
   (assert (! (not (= Message.receiver3 FactorialContChannel.exp)) :named ax_1531))
   (assert (! (not (= Message.receiver3 FactorialContChannel.imp)) :named ax_1532))
   (assert (! (not (= Message.receiver3 FactorialContChannel.imp)) :named ax_1533))
   (assert (! (not (= Message.receiver3 FactorialContChannelExpEP.ch)) :named ax_1534))
   (assert (! (not (= Message.receiver3 FactorialContChannelExpEP.ch)) :named ax_1535))
   (assert (! (not (= Message.receiver3 FactorialContChannelExpEP.expch)) :named ax_1536))
   (assert (! (not (= Message.receiver3 FactorialContChannelExpEP.expch)) :named ax_1537))
   (assert (! (not (= Message.receiver3 FactorialContChannelImpEP.ch)) :named ax_1538))
   (assert (! (not (= Message.receiver3 FactorialContChannelImpEP.ch)) :named ax_1539))
   (assert (! (not (= Message.receiver3 FactorialContChannelImpEP.impch)) :named ax_1540))
   (assert (! (not (= Message.receiver3 FactorialContChannelImpEP.impch)) :named ax_1541))
   (assert (! (not (= Message.receiver3 Future.q)) :named ax_1542))
   (assert (! (not (= Message.receiver3 Future.q)) :named ax_1543))
   (assert (! (not (= Message.receiver3 Future.sent)) :named ax_1544))
   (assert (! (not (= Message.receiver3 Future.sent)) :named ax_1545))
   (assert (! (not (= Message.receiver3 Future.value)) :named ax_1546))
   (assert (! (not (= Message.receiver3 Future.value)) :named ax_1547))
   (assert (! (not (= Message.receiver3 FutureChannel.exp)) :named ax_1548))
   (assert (! (not (= Message.receiver3 FutureChannel.exp)) :named ax_1549))
   (assert (! (not (= Message.receiver3 FutureChannel.imp)) :named ax_1550))
   (assert (! (not (= Message.receiver3 FutureChannel.imp)) :named ax_1551))
   (assert (! (not (= Message.receiver3 FutureChannelExpEP.ch)) :named ax_1552))
   (assert (! (not (= Message.receiver3 FutureChannelExpEP.ch)) :named ax_1553))
   (assert (! (not (= Message.receiver3 FutureChannelExpEP.expch)) :named ax_1554))
   (assert (! (not (= Message.receiver3 FutureChannelExpEP.expch)) :named ax_1555))
   (assert (! (not (= Message.receiver3 FutureChannelImpEP.ch)) :named ax_1556))
   (assert (! (not (= Message.receiver3 FutureChannelImpEP.ch)) :named ax_1557))
   (assert (! (not (= Message.receiver3 FutureChannelImpEP.impch)) :named ax_1558))
   (assert (! (not (= Message.receiver3 FutureChannelImpEP.impch)) :named ax_1559))
   (assert (! (not (= Message.receiver3 Message.cust1)) :named ax_1560))
   (assert (! (not (= Message.receiver3 Message.cust1)) :named ax_1561))
   (assert (! (not (= Message.receiver3 Message.old1)) :named ax_1562))
   (assert (! (not (= Message.receiver3 Message.old1)) :named ax_1563))
   (assert (! (not (= Message.receiver3 Message.old2)) :named ax_1564))
   (assert (! (not (= Message.receiver3 Message.old2)) :named ax_1565))
   (assert (! (not (= Message.receiver3 Message.receiver1)) :named ax_1566))
   (assert (! (not (= Message.receiver3 Message.receiver1)) :named ax_1567))
   (assert (! (not (= Message.receiver3 Message.receiver2)) :named ax_1568))
   (assert (! (not (= Message.receiver3 Message.receiver2)) :named ax_1569))
   (assert (! (not (= Message.receiver4 FactorialActor.q)) :named ax_1570))
   (assert (! (not (= Message.receiver4 FactorialActor.q)) :named ax_1571))
   (assert (! (not (= Message.receiver4 FactorialActorChannel.exp)) :named ax_1572))
   (assert (! (not (= Message.receiver4 FactorialActorChannel.exp)) :named ax_1573))
   (assert (! (not (= Message.receiver4 FactorialActorChannel.imp)) :named ax_1574))
   (assert (! (not (= Message.receiver4 FactorialActorChannel.imp)) :named ax_1575))
   (assert (! (not (= Message.receiver4 FactorialActorChannelExpEP.ch)) :named ax_1576))
   (assert (! (not (= Message.receiver4 FactorialActorChannelExpEP.ch)) :named ax_1577))
   (assert (! (not (= Message.receiver4 FactorialActorChannelExpEP.expch)) :named ax_1578))
   (assert (! (not (= Message.receiver4 FactorialActorChannelExpEP.expch)) :named ax_1579))
   (assert (! (not (= Message.receiver4 FactorialActorChannelImpEP.ch)) :named ax_1580))
   (assert (! (not (= Message.receiver4 FactorialActorChannelImpEP.ch)) :named ax_1581))
   (assert (! (not (= Message.receiver4 FactorialActorChannelImpEP.impch)) :named ax_1582))
   (assert (! (not (= Message.receiver4 FactorialActorChannelImpEP.impch)) :named ax_1583))
   (assert (! (not (= Message.receiver4 FactorialCont.cust)) :named ax_1584))
   (assert (! (not (= Message.receiver4 FactorialCont.cust)) :named ax_1585))
   (assert (! (not (= Message.receiver4 FactorialCont.q)) :named ax_1586))
   (assert (! (not (= Message.receiver4 FactorialCont.q)) :named ax_1587))
   (assert (! (not (= Message.receiver4 FactorialContChannel.exp)) :named ax_1588))
   (assert (! (not (= Message.receiver4 FactorialContChannel.exp)) :named ax_1589))
   (assert (! (not (= Message.receiver4 FactorialContChannel.imp)) :named ax_1590))
   (assert (! (not (= Message.receiver4 FactorialContChannel.imp)) :named ax_1591))
   (assert (! (not (= Message.receiver4 FactorialContChannelExpEP.ch)) :named ax_1592))
   (assert (! (not (= Message.receiver4 FactorialContChannelExpEP.ch)) :named ax_1593))
   (assert (! (not (= Message.receiver4 FactorialContChannelExpEP.expch)) :named ax_1594))
   (assert (! (not (= Message.receiver4 FactorialContChannelExpEP.expch)) :named ax_1595))
   (assert (! (not (= Message.receiver4 FactorialContChannelImpEP.ch)) :named ax_1596))
   (assert (! (not (= Message.receiver4 FactorialContChannelImpEP.ch)) :named ax_1597))
   (assert (! (not (= Message.receiver4 FactorialContChannelImpEP.impch)) :named ax_1598))
   (assert (! (not (= Message.receiver4 FactorialContChannelImpEP.impch)) :named ax_1599))
   (assert (! (not (= Message.receiver4 Future.q)) :named ax_1600))
   (assert (! (not (= Message.receiver4 Future.q)) :named ax_1601))
   (assert (! (not (= Message.receiver4 Future.sent)) :named ax_1602))
   (assert (! (not (= Message.receiver4 Future.sent)) :named ax_1603))
   (assert (! (not (= Message.receiver4 Future.value)) :named ax_1604))
   (assert (! (not (= Message.receiver4 Future.value)) :named ax_1605))
   (assert (! (not (= Message.receiver4 FutureChannel.exp)) :named ax_1606))
   (assert (! (not (= Message.receiver4 FutureChannel.exp)) :named ax_1607))
   (assert (! (not (= Message.receiver4 FutureChannel.imp)) :named ax_1608))
   (assert (! (not (= Message.receiver4 FutureChannel.imp)) :named ax_1609))
   (assert (! (not (= Message.receiver4 FutureChannelExpEP.ch)) :named ax_1610))
   (assert (! (not (= Message.receiver4 FutureChannelExpEP.ch)) :named ax_1611))
   (assert (! (not (= Message.receiver4 FutureChannelExpEP.expch)) :named ax_1612))
   (assert (! (not (= Message.receiver4 FutureChannelExpEP.expch)) :named ax_1613))
   (assert (! (not (= Message.receiver4 FutureChannelImpEP.ch)) :named ax_1614))
   (assert (! (not (= Message.receiver4 FutureChannelImpEP.ch)) :named ax_1615))
   (assert (! (not (= Message.receiver4 FutureChannelImpEP.impch)) :named ax_1616))
   (assert (! (not (= Message.receiver4 FutureChannelImpEP.impch)) :named ax_1617))
   (assert (! (not (= Message.receiver4 Message.cust1)) :named ax_1618))
   (assert (! (not (= Message.receiver4 Message.cust1)) :named ax_1619))
   (assert (! (not (= Message.receiver4 Message.old1)) :named ax_1620))
   (assert (! (not (= Message.receiver4 Message.old1)) :named ax_1621))
   (assert (! (not (= Message.receiver4 Message.old2)) :named ax_1622))
   (assert (! (not (= Message.receiver4 Message.old2)) :named ax_1623))
   (assert (! (not (= Message.receiver4 Message.receiver1)) :named ax_1624))
   (assert (! (not (= Message.receiver4 Message.receiver1)) :named ax_1625))
   (assert (! (not (= Message.receiver4 Message.receiver2)) :named ax_1626))
   (assert (! (not (= Message.receiver4 Message.receiver2)) :named ax_1627))
   (assert (! (not (= Message.receiver4 Message.receiver3)) :named ax_1628))
   (assert (! (not (= Message.receiver4 Message.receiver3)) :named ax_1629))
   (assert (! (not (= Message.sender1 FactorialActor.q)) :named ax_1630))
   (assert (! (not (= Message.sender1 FactorialActor.q)) :named ax_1631))
   (assert (! (not (= Message.sender1 FactorialActorChannel.exp)) :named ax_1632))
   (assert (! (not (= Message.sender1 FactorialActorChannel.exp)) :named ax_1633))
   (assert (! (not (= Message.sender1 FactorialActorChannel.imp)) :named ax_1634))
   (assert (! (not (= Message.sender1 FactorialActorChannel.imp)) :named ax_1635))
   (assert (! (not (= Message.sender1 FactorialActorChannelExpEP.ch)) :named ax_1636))
   (assert (! (not (= Message.sender1 FactorialActorChannelExpEP.ch)) :named ax_1637))
   (assert (! (not (= Message.sender1 FactorialActorChannelExpEP.expch)) :named ax_1638))
   (assert (! (not (= Message.sender1 FactorialActorChannelExpEP.expch)) :named ax_1639))
   (assert (! (not (= Message.sender1 FactorialActorChannelImpEP.ch)) :named ax_1640))
   (assert (! (not (= Message.sender1 FactorialActorChannelImpEP.ch)) :named ax_1641))
   (assert (! (not (= Message.sender1 FactorialActorChannelImpEP.impch)) :named ax_1642))
   (assert (! (not (= Message.sender1 FactorialActorChannelImpEP.impch)) :named ax_1643))
   (assert (! (not (= Message.sender1 FactorialCont.cust)) :named ax_1644))
   (assert (! (not (= Message.sender1 FactorialCont.cust)) :named ax_1645))
   (assert (! (not (= Message.sender1 FactorialCont.q)) :named ax_1646))
   (assert (! (not (= Message.sender1 FactorialCont.q)) :named ax_1647))
   (assert (! (not (= Message.sender1 FactorialContChannel.exp)) :named ax_1648))
   (assert (! (not (= Message.sender1 FactorialContChannel.exp)) :named ax_1649))
   (assert (! (not (= Message.sender1 FactorialContChannel.imp)) :named ax_1650))
   (assert (! (not (= Message.sender1 FactorialContChannel.imp)) :named ax_1651))
   (assert (! (not (= Message.sender1 FactorialContChannelExpEP.ch)) :named ax_1652))
   (assert (! (not (= Message.sender1 FactorialContChannelExpEP.ch)) :named ax_1653))
   (assert (! (not (= Message.sender1 FactorialContChannelExpEP.expch)) :named ax_1654))
   (assert (! (not (= Message.sender1 FactorialContChannelExpEP.expch)) :named ax_1655))
   (assert (! (not (= Message.sender1 FactorialContChannelImpEP.ch)) :named ax_1656))
   (assert (! (not (= Message.sender1 FactorialContChannelImpEP.ch)) :named ax_1657))
   (assert (! (not (= Message.sender1 FactorialContChannelImpEP.impch)) :named ax_1658))
   (assert (! (not (= Message.sender1 FactorialContChannelImpEP.impch)) :named ax_1659))
   (assert (! (not (= Message.sender1 Future.q)) :named ax_1660))
   (assert (! (not (= Message.sender1 Future.q)) :named ax_1661))
   (assert (! (not (= Message.sender1 Future.sent)) :named ax_1662))
   (assert (! (not (= Message.sender1 Future.sent)) :named ax_1663))
   (assert (! (not (= Message.sender1 Future.value)) :named ax_1664))
   (assert (! (not (= Message.sender1 Future.value)) :named ax_1665))
   (assert (! (not (= Message.sender1 FutureChannel.exp)) :named ax_1666))
   (assert (! (not (= Message.sender1 FutureChannel.exp)) :named ax_1667))
   (assert (! (not (= Message.sender1 FutureChannel.imp)) :named ax_1668))
   (assert (! (not (= Message.sender1 FutureChannel.imp)) :named ax_1669))
   (assert (! (not (= Message.sender1 FutureChannelExpEP.ch)) :named ax_1670))
   (assert (! (not (= Message.sender1 FutureChannelExpEP.ch)) :named ax_1671))
   (assert (! (not (= Message.sender1 FutureChannelExpEP.expch)) :named ax_1672))
   (assert (! (not (= Message.sender1 FutureChannelExpEP.expch)) :named ax_1673))
   (assert (! (not (= Message.sender1 FutureChannelImpEP.ch)) :named ax_1674))
   (assert (! (not (= Message.sender1 FutureChannelImpEP.ch)) :named ax_1675))
   (assert (! (not (= Message.sender1 FutureChannelImpEP.impch)) :named ax_1676))
   (assert (! (not (= Message.sender1 FutureChannelImpEP.impch)) :named ax_1677))
   (assert (! (not (= Message.sender1 Message.cust1)) :named ax_1678))
   (assert (! (not (= Message.sender1 Message.cust1)) :named ax_1679))
   (assert (! (not (= Message.sender1 Message.old1)) :named ax_1680))
   (assert (! (not (= Message.sender1 Message.old1)) :named ax_1681))
   (assert (! (not (= Message.sender1 Message.old2)) :named ax_1682))
   (assert (! (not (= Message.sender1 Message.old2)) :named ax_1683))
   (assert (! (not (= Message.sender1 Message.receiver1)) :named ax_1684))
   (assert (! (not (= Message.sender1 Message.receiver1)) :named ax_1685))
   (assert (! (not (= Message.sender1 Message.receiver2)) :named ax_1686))
   (assert (! (not (= Message.sender1 Message.receiver2)) :named ax_1687))
   (assert (! (not (= Message.sender1 Message.receiver3)) :named ax_1688))
   (assert (! (not (= Message.sender1 Message.receiver3)) :named ax_1689))
   (assert (! (not (= Message.sender1 Message.receiver4)) :named ax_1690))
   (assert (! (not (= Message.sender1 Message.receiver4)) :named ax_1691))
   (assert (! (not (= Message.sender2 FactorialActor.q)) :named ax_1692))
   (assert (! (not (= Message.sender2 FactorialActor.q)) :named ax_1693))
   (assert (! (not (= Message.sender2 FactorialActorChannel.exp)) :named ax_1694))
   (assert (! (not (= Message.sender2 FactorialActorChannel.exp)) :named ax_1695))
   (assert (! (not (= Message.sender2 FactorialActorChannel.imp)) :named ax_1696))
   (assert (! (not (= Message.sender2 FactorialActorChannel.imp)) :named ax_1697))
   (assert (! (not (= Message.sender2 FactorialActorChannelExpEP.ch)) :named ax_1698))
   (assert (! (not (= Message.sender2 FactorialActorChannelExpEP.ch)) :named ax_1699))
   (assert (! (not (= Message.sender2 FactorialActorChannelExpEP.expch)) :named ax_1700))
   (assert (! (not (= Message.sender2 FactorialActorChannelExpEP.expch)) :named ax_1701))
   (assert (! (not (= Message.sender2 FactorialActorChannelImpEP.ch)) :named ax_1702))
   (assert (! (not (= Message.sender2 FactorialActorChannelImpEP.ch)) :named ax_1703))
   (assert (! (not (= Message.sender2 FactorialActorChannelImpEP.impch)) :named ax_1704))
   (assert (! (not (= Message.sender2 FactorialActorChannelImpEP.impch)) :named ax_1705))
   (assert (! (not (= Message.sender2 FactorialCont.cust)) :named ax_1706))
   (assert (! (not (= Message.sender2 FactorialCont.cust)) :named ax_1707))
   (assert (! (not (= Message.sender2 FactorialCont.q)) :named ax_1708))
   (assert (! (not (= Message.sender2 FactorialCont.q)) :named ax_1709))
   (assert (! (not (= Message.sender2 FactorialContChannel.exp)) :named ax_1710))
   (assert (! (not (= Message.sender2 FactorialContChannel.exp)) :named ax_1711))
   (assert (! (not (= Message.sender2 FactorialContChannel.imp)) :named ax_1712))
   (assert (! (not (= Message.sender2 FactorialContChannel.imp)) :named ax_1713))
   (assert (! (not (= Message.sender2 FactorialContChannelExpEP.ch)) :named ax_1714))
   (assert (! (not (= Message.sender2 FactorialContChannelExpEP.ch)) :named ax_1715))
   (assert (! (not (= Message.sender2 FactorialContChannelExpEP.expch)) :named ax_1716))
   (assert (! (not (= Message.sender2 FactorialContChannelExpEP.expch)) :named ax_1717))
   (assert (! (not (= Message.sender2 FactorialContChannelImpEP.ch)) :named ax_1718))
   (assert (! (not (= Message.sender2 FactorialContChannelImpEP.ch)) :named ax_1719))
   (assert (! (not (= Message.sender2 FactorialContChannelImpEP.impch)) :named ax_1720))
   (assert (! (not (= Message.sender2 FactorialContChannelImpEP.impch)) :named ax_1721))
   (assert (! (not (= Message.sender2 Future.q)) :named ax_1722))
   (assert (! (not (= Message.sender2 Future.q)) :named ax_1723))
   (assert (! (not (= Message.sender2 Future.sent)) :named ax_1724))
   (assert (! (not (= Message.sender2 Future.sent)) :named ax_1725))
   (assert (! (not (= Message.sender2 Future.value)) :named ax_1726))
   (assert (! (not (= Message.sender2 Future.value)) :named ax_1727))
   (assert (! (not (= Message.sender2 FutureChannel.exp)) :named ax_1728))
   (assert (! (not (= Message.sender2 FutureChannel.exp)) :named ax_1729))
   (assert (! (not (= Message.sender2 FutureChannel.imp)) :named ax_1730))
   (assert (! (not (= Message.sender2 FutureChannel.imp)) :named ax_1731))
   (assert (! (not (= Message.sender2 FutureChannelExpEP.ch)) :named ax_1732))
   (assert (! (not (= Message.sender2 FutureChannelExpEP.ch)) :named ax_1733))
   (assert (! (not (= Message.sender2 FutureChannelExpEP.expch)) :named ax_1734))
   (assert (! (not (= Message.sender2 FutureChannelExpEP.expch)) :named ax_1735))
   (assert (! (not (= Message.sender2 FutureChannelImpEP.ch)) :named ax_1736))
   (assert (! (not (= Message.sender2 FutureChannelImpEP.ch)) :named ax_1737))
   (assert (! (not (= Message.sender2 FutureChannelImpEP.impch)) :named ax_1738))
   (assert (! (not (= Message.sender2 FutureChannelImpEP.impch)) :named ax_1739))
   (assert (! (not (= Message.sender2 Message.cust1)) :named ax_1740))
   (assert (! (not (= Message.sender2 Message.cust1)) :named ax_1741))
   (assert (! (not (= Message.sender2 Message.old1)) :named ax_1742))
   (assert (! (not (= Message.sender2 Message.old1)) :named ax_1743))
   (assert (! (not (= Message.sender2 Message.old2)) :named ax_1744))
   (assert (! (not (= Message.sender2 Message.old2)) :named ax_1745))
   (assert (! (not (= Message.sender2 Message.receiver1)) :named ax_1746))
   (assert (! (not (= Message.sender2 Message.receiver1)) :named ax_1747))
   (assert (! (not (= Message.sender2 Message.receiver2)) :named ax_1748))
   (assert (! (not (= Message.sender2 Message.receiver2)) :named ax_1749))
   (assert (! (not (= Message.sender2 Message.receiver3)) :named ax_1750))
   (assert (! (not (= Message.sender2 Message.receiver3)) :named ax_1751))
   (assert (! (not (= Message.sender2 Message.receiver4)) :named ax_1752))
   (assert (! (not (= Message.sender2 Message.receiver4)) :named ax_1753))
   (assert (! (not (= Message.sender2 Message.sender1)) :named ax_1754))
   (assert (! (not (= Message.sender2 Message.sender1)) :named ax_1755))
   (assert (! (not (= Message.sender3 FactorialActor.q)) :named ax_1756))
   (assert (! (not (= Message.sender3 FactorialActor.q)) :named ax_1757))
   (assert (! (not (= Message.sender3 FactorialActorChannel.exp)) :named ax_1758))
   (assert (! (not (= Message.sender3 FactorialActorChannel.exp)) :named ax_1759))
   (assert (! (not (= Message.sender3 FactorialActorChannel.imp)) :named ax_1760))
   (assert (! (not (= Message.sender3 FactorialActorChannel.imp)) :named ax_1761))
   (assert (! (not (= Message.sender3 FactorialActorChannelExpEP.ch)) :named ax_1762))
   (assert (! (not (= Message.sender3 FactorialActorChannelExpEP.ch)) :named ax_1763))
   (assert (! (not (= Message.sender3 FactorialActorChannelExpEP.expch)) :named ax_1764))
   (assert (! (not (= Message.sender3 FactorialActorChannelExpEP.expch)) :named ax_1765))
   (assert (! (not (= Message.sender3 FactorialActorChannelImpEP.ch)) :named ax_1766))
   (assert (! (not (= Message.sender3 FactorialActorChannelImpEP.ch)) :named ax_1767))
   (assert (! (not (= Message.sender3 FactorialActorChannelImpEP.impch)) :named ax_1768))
   (assert (! (not (= Message.sender3 FactorialActorChannelImpEP.impch)) :named ax_1769))
   (assert (! (not (= Message.sender3 FactorialCont.cust)) :named ax_1770))
   (assert (! (not (= Message.sender3 FactorialCont.cust)) :named ax_1771))
   (assert (! (not (= Message.sender3 FactorialCont.q)) :named ax_1772))
   (assert (! (not (= Message.sender3 FactorialCont.q)) :named ax_1773))
   (assert (! (not (= Message.sender3 FactorialContChannel.exp)) :named ax_1774))
   (assert (! (not (= Message.sender3 FactorialContChannel.exp)) :named ax_1775))
   (assert (! (not (= Message.sender3 FactorialContChannel.imp)) :named ax_1776))
   (assert (! (not (= Message.sender3 FactorialContChannel.imp)) :named ax_1777))
   (assert (! (not (= Message.sender3 FactorialContChannelExpEP.ch)) :named ax_1778))
   (assert (! (not (= Message.sender3 FactorialContChannelExpEP.ch)) :named ax_1779))
   (assert (! (not (= Message.sender3 FactorialContChannelExpEP.expch)) :named ax_1780))
   (assert (! (not (= Message.sender3 FactorialContChannelExpEP.expch)) :named ax_1781))
   (assert (! (not (= Message.sender3 FactorialContChannelImpEP.ch)) :named ax_1782))
   (assert (! (not (= Message.sender3 FactorialContChannelImpEP.ch)) :named ax_1783))
   (assert (! (not (= Message.sender3 FactorialContChannelImpEP.impch)) :named ax_1784))
   (assert (! (not (= Message.sender3 FactorialContChannelImpEP.impch)) :named ax_1785))
   (assert (! (not (= Message.sender3 Future.q)) :named ax_1786))
   (assert (! (not (= Message.sender3 Future.q)) :named ax_1787))
   (assert (! (not (= Message.sender3 Future.sent)) :named ax_1788))
   (assert (! (not (= Message.sender3 Future.sent)) :named ax_1789))
   (assert (! (not (= Message.sender3 Future.value)) :named ax_1790))
   (assert (! (not (= Message.sender3 Future.value)) :named ax_1791))
   (assert (! (not (= Message.sender3 FutureChannel.exp)) :named ax_1792))
   (assert (! (not (= Message.sender3 FutureChannel.exp)) :named ax_1793))
   (assert (! (not (= Message.sender3 FutureChannel.imp)) :named ax_1794))
   (assert (! (not (= Message.sender3 FutureChannel.imp)) :named ax_1795))
   (assert (! (not (= Message.sender3 FutureChannelExpEP.ch)) :named ax_1796))
   (assert (! (not (= Message.sender3 FutureChannelExpEP.ch)) :named ax_1797))
   (assert (! (not (= Message.sender3 FutureChannelExpEP.expch)) :named ax_1798))
   (assert (! (not (= Message.sender3 FutureChannelExpEP.expch)) :named ax_1799))
   (assert (! (not (= Message.sender3 FutureChannelImpEP.ch)) :named ax_1800))
   (assert (! (not (= Message.sender3 FutureChannelImpEP.ch)) :named ax_1801))
   (assert (! (not (= Message.sender3 FutureChannelImpEP.impch)) :named ax_1802))
   (assert (! (not (= Message.sender3 FutureChannelImpEP.impch)) :named ax_1803))
   (assert (! (not (= Message.sender3 Message.cust1)) :named ax_1804))
   (assert (! (not (= Message.sender3 Message.cust1)) :named ax_1805))
   (assert (! (not (= Message.sender3 Message.old1)) :named ax_1806))
   (assert (! (not (= Message.sender3 Message.old1)) :named ax_1807))
   (assert (! (not (= Message.sender3 Message.old2)) :named ax_1808))
   (assert (! (not (= Message.sender3 Message.old2)) :named ax_1809))
   (assert (! (not (= Message.sender3 Message.receiver1)) :named ax_1810))
   (assert (! (not (= Message.sender3 Message.receiver1)) :named ax_1811))
   (assert (! (not (= Message.sender3 Message.receiver2)) :named ax_1812))
   (assert (! (not (= Message.sender3 Message.receiver2)) :named ax_1813))
   (assert (! (not (= Message.sender3 Message.receiver3)) :named ax_1814))
   (assert (! (not (= Message.sender3 Message.receiver3)) :named ax_1815))
   (assert (! (not (= Message.sender3 Message.receiver4)) :named ax_1816))
   (assert (! (not (= Message.sender3 Message.receiver4)) :named ax_1817))
   (assert (! (not (= Message.sender3 Message.sender1)) :named ax_1818))
   (assert (! (not (= Message.sender3 Message.sender1)) :named ax_1819))
   (assert (! (not (= Message.sender3 Message.sender2)) :named ax_1820))
   (assert (! (not (= Message.sender3 Message.sender2)) :named ax_1821))
   (assert (! (not (= Message.sender4 FactorialActor.q)) :named ax_1822))
   (assert (! (not (= Message.sender4 FactorialActor.q)) :named ax_1823))
   (assert (! (not (= Message.sender4 FactorialActorChannel.exp)) :named ax_1824))
   (assert (! (not (= Message.sender4 FactorialActorChannel.exp)) :named ax_1825))
   (assert (! (not (= Message.sender4 FactorialActorChannel.imp)) :named ax_1826))
   (assert (! (not (= Message.sender4 FactorialActorChannel.imp)) :named ax_1827))
   (assert (! (not (= Message.sender4 FactorialActorChannelExpEP.ch)) :named ax_1828))
   (assert (! (not (= Message.sender4 FactorialActorChannelExpEP.ch)) :named ax_1829))
   (assert (! (not (= Message.sender4 FactorialActorChannelExpEP.expch)) :named ax_1830))
   (assert (! (not (= Message.sender4 FactorialActorChannelExpEP.expch)) :named ax_1831))
   (assert (! (not (= Message.sender4 FactorialActorChannelImpEP.ch)) :named ax_1832))
   (assert (! (not (= Message.sender4 FactorialActorChannelImpEP.ch)) :named ax_1833))
   (assert (! (not (= Message.sender4 FactorialActorChannelImpEP.impch)) :named ax_1834))
   (assert (! (not (= Message.sender4 FactorialActorChannelImpEP.impch)) :named ax_1835))
   (assert (! (not (= Message.sender4 FactorialCont.cust)) :named ax_1836))
   (assert (! (not (= Message.sender4 FactorialCont.cust)) :named ax_1837))
   (assert (! (not (= Message.sender4 FactorialCont.q)) :named ax_1838))
   (assert (! (not (= Message.sender4 FactorialCont.q)) :named ax_1839))
   (assert (! (not (= Message.sender4 FactorialContChannel.exp)) :named ax_1840))
   (assert (! (not (= Message.sender4 FactorialContChannel.exp)) :named ax_1841))
   (assert (! (not (= Message.sender4 FactorialContChannel.imp)) :named ax_1842))
   (assert (! (not (= Message.sender4 FactorialContChannel.imp)) :named ax_1843))
   (assert (! (not (= Message.sender4 FactorialContChannelExpEP.ch)) :named ax_1844))
   (assert (! (not (= Message.sender4 FactorialContChannelExpEP.ch)) :named ax_1845))
   (assert (! (not (= Message.sender4 FactorialContChannelExpEP.expch)) :named ax_1846))
   (assert (! (not (= Message.sender4 FactorialContChannelExpEP.expch)) :named ax_1847))
   (assert (! (not (= Message.sender4 FactorialContChannelImpEP.ch)) :named ax_1848))
   (assert (! (not (= Message.sender4 FactorialContChannelImpEP.ch)) :named ax_1849))
   (assert (! (not (= Message.sender4 FactorialContChannelImpEP.impch)) :named ax_1850))
   (assert (! (not (= Message.sender4 FactorialContChannelImpEP.impch)) :named ax_1851))
   (assert (! (not (= Message.sender4 Future.q)) :named ax_1852))
   (assert (! (not (= Message.sender4 Future.q)) :named ax_1853))
   (assert (! (not (= Message.sender4 Future.sent)) :named ax_1854))
   (assert (! (not (= Message.sender4 Future.sent)) :named ax_1855))
   (assert (! (not (= Message.sender4 Future.value)) :named ax_1856))
   (assert (! (not (= Message.sender4 Future.value)) :named ax_1857))
   (assert (! (not (= Message.sender4 FutureChannel.exp)) :named ax_1858))
   (assert (! (not (= Message.sender4 FutureChannel.exp)) :named ax_1859))
   (assert (! (not (= Message.sender4 FutureChannel.imp)) :named ax_1860))
   (assert (! (not (= Message.sender4 FutureChannel.imp)) :named ax_1861))
   (assert (! (not (= Message.sender4 FutureChannelExpEP.ch)) :named ax_1862))
   (assert (! (not (= Message.sender4 FutureChannelExpEP.ch)) :named ax_1863))
   (assert (! (not (= Message.sender4 FutureChannelExpEP.expch)) :named ax_1864))
   (assert (! (not (= Message.sender4 FutureChannelExpEP.expch)) :named ax_1865))
   (assert (! (not (= Message.sender4 FutureChannelImpEP.ch)) :named ax_1866))
   (assert (! (not (= Message.sender4 FutureChannelImpEP.ch)) :named ax_1867))
   (assert (! (not (= Message.sender4 FutureChannelImpEP.impch)) :named ax_1868))
   (assert (! (not (= Message.sender4 FutureChannelImpEP.impch)) :named ax_1869))
   (assert (! (not (= Message.sender4 Message.cust1)) :named ax_1870))
   (assert (! (not (= Message.sender4 Message.cust1)) :named ax_1871))
   (assert (! (not (= Message.sender4 Message.old1)) :named ax_1872))
   (assert (! (not (= Message.sender4 Message.old1)) :named ax_1873))
   (assert (! (not (= Message.sender4 Message.old2)) :named ax_1874))
   (assert (! (not (= Message.sender4 Message.old2)) :named ax_1875))
   (assert (! (not (= Message.sender4 Message.receiver1)) :named ax_1876))
   (assert (! (not (= Message.sender4 Message.receiver1)) :named ax_1877))
   (assert (! (not (= Message.sender4 Message.receiver2)) :named ax_1878))
   (assert (! (not (= Message.sender4 Message.receiver2)) :named ax_1879))
   (assert (! (not (= Message.sender4 Message.receiver3)) :named ax_1880))
   (assert (! (not (= Message.sender4 Message.receiver3)) :named ax_1881))
   (assert (! (not (= Message.sender4 Message.receiver4)) :named ax_1882))
   (assert (! (not (= Message.sender4 Message.receiver4)) :named ax_1883))
   (assert (! (not (= Message.sender4 Message.sender1)) :named ax_1884))
   (assert (! (not (= Message.sender4 Message.sender1)) :named ax_1885))
   (assert (! (not (= Message.sender4 Message.sender2)) :named ax_1886))
   (assert (! (not (= Message.sender4 Message.sender2)) :named ax_1887))
   (assert (! (not (= Message.sender4 Message.sender3)) :named ax_1888))
   (assert (! (not (= Message.sender4 Message.sender3)) :named ax_1889))
   (assert (! (not (= Message.type FactorialActorChannelExpEP.state)) :named ax_1890))
   (assert (! (not (= Message.type FactorialActorChannelExpEP.state)) :named ax_1891))
   (assert (! (not (= Message.type FactorialActorChannelImpEP.state)) :named ax_1892))
   (assert (! (not (= Message.type FactorialActorChannelImpEP.state)) :named ax_1893))
   (assert (! (not (= Message.type FactorialCont.v)) :named ax_1894))
   (assert (! (not (= Message.type FactorialCont.v)) :named ax_1895))
   (assert (! (not (= Message.type FactorialCont.vo)) :named ax_1896))
   (assert (! (not (= Message.type FactorialCont.vo)) :named ax_1897))
   (assert (! (not (= Message.type FactorialContChannelExpEP.state)) :named ax_1898))
   (assert (! (not (= Message.type FactorialContChannelExpEP.state)) :named ax_1899))
   (assert (! (not (= Message.type FactorialContChannelImpEP.state)) :named ax_1900))
   (assert (! (not (= Message.type FactorialContChannelImpEP.state)) :named ax_1901))
   (assert (! (not (= Message.type forkK)) :named ax_1902))
   (assert (! (not (= Message.type forkK)) :named ax_1903))
   (assert (! (not (= Message.type FutureChannelExpEP.state)) :named ax_1904))
   (assert (! (not (= Message.type FutureChannelExpEP.state)) :named ax_1905))
   (assert (! (not (= Message.type FutureChannelImpEP.state)) :named ax_1906))
   (assert (! (not (= Message.type FutureChannelImpEP.state)) :named ax_1907))
   (assert (! (not (= Message.type held)) :named ax_1908))
   (assert (! (not (= Message.type held)) :named ax_1909))
   (assert (! (not (= Message.type joinable)) :named ax_1910))
   (assert (! (not (= Message.type joinable)) :named ax_1911))
   (assert (! (not (= Message.v1 FactorialActorChannelExpEP.state)) :named ax_1912))
   (assert (! (not (= Message.v1 FactorialActorChannelExpEP.state)) :named ax_1913))
   (assert (! (not (= Message.v1 FactorialActorChannelImpEP.state)) :named ax_1914))
   (assert (! (not (= Message.v1 FactorialActorChannelImpEP.state)) :named ax_1915))
   (assert (! (not (= Message.v1 FactorialCont.v)) :named ax_1916))
   (assert (! (not (= Message.v1 FactorialCont.v)) :named ax_1917))
   (assert (! (not (= Message.v1 FactorialCont.vo)) :named ax_1918))
   (assert (! (not (= Message.v1 FactorialCont.vo)) :named ax_1919))
   (assert (! (not (= Message.v1 FactorialContChannelExpEP.state)) :named ax_1920))
   (assert (! (not (= Message.v1 FactorialContChannelExpEP.state)) :named ax_1921))
   (assert (! (not (= Message.v1 FactorialContChannelImpEP.state)) :named ax_1922))
   (assert (! (not (= Message.v1 FactorialContChannelImpEP.state)) :named ax_1923))
   (assert (! (not (= Message.v1 forkK)) :named ax_1924))
   (assert (! (not (= Message.v1 forkK)) :named ax_1925))
   (assert (! (not (= Message.v1 FutureChannelExpEP.state)) :named ax_1926))
   (assert (! (not (= Message.v1 FutureChannelExpEP.state)) :named ax_1927))
   (assert (! (not (= Message.v1 FutureChannelImpEP.state)) :named ax_1928))
   (assert (! (not (= Message.v1 FutureChannelImpEP.state)) :named ax_1929))
   (assert (! (not (= Message.v1 held)) :named ax_1930))
   (assert (! (not (= Message.v1 held)) :named ax_1931))
   (assert (! (not (= Message.v1 joinable)) :named ax_1932))
   (assert (! (not (= Message.v1 joinable)) :named ax_1933))
   (assert (! (not (= Message.v1 Message.type)) :named ax_1934))
   (assert (! (not (= Message.v1 Message.type)) :named ax_1935))
   (assert (! (not (= Message.vo1 FactorialActorChannelExpEP.state)) :named ax_1936))
   (assert (! (not (= Message.vo1 FactorialActorChannelExpEP.state)) :named ax_1937))
   (assert (! (not (= Message.vo1 FactorialActorChannelImpEP.state)) :named ax_1938))
   (assert (! (not (= Message.vo1 FactorialActorChannelImpEP.state)) :named ax_1939))
   (assert (! (not (= Message.vo1 FactorialCont.v)) :named ax_1940))
   (assert (! (not (= Message.vo1 FactorialCont.v)) :named ax_1941))
   (assert (! (not (= Message.vo1 FactorialCont.vo)) :named ax_1942))
   (assert (! (not (= Message.vo1 FactorialCont.vo)) :named ax_1943))
   (assert (! (not (= Message.vo1 FactorialContChannelExpEP.state)) :named ax_1944))
   (assert (! (not (= Message.vo1 FactorialContChannelExpEP.state)) :named ax_1945))
   (assert (! (not (= Message.vo1 FactorialContChannelImpEP.state)) :named ax_1946))
   (assert (! (not (= Message.vo1 FactorialContChannelImpEP.state)) :named ax_1947))
   (assert (! (not (= Message.vo1 forkK)) :named ax_1948))
   (assert (! (not (= Message.vo1 forkK)) :named ax_1949))
   (assert (! (not (= Message.vo1 FutureChannelExpEP.state)) :named ax_1950))
   (assert (! (not (= Message.vo1 FutureChannelExpEP.state)) :named ax_1951))
   (assert (! (not (= Message.vo1 FutureChannelImpEP.state)) :named ax_1952))
   (assert (! (not (= Message.vo1 FutureChannelImpEP.state)) :named ax_1953))
   (assert (! (not (= Message.vo1 held)) :named ax_1954))
   (assert (! (not (= Message.vo1 held)) :named ax_1955))
   (assert (! (not (= Message.vo1 joinable)) :named ax_1956))
   (assert (! (not (= Message.vo1 joinable)) :named ax_1957))
   (assert (! (not (= Message.vo1 Message.type)) :named ax_1958))
   (assert (! (not (= Message.vo1 Message.type)) :named ax_1959))
   (assert (! (not (= Message.vo1 Message.v1)) :named ax_1960))
   (assert (! (not (= Message.vo1 Message.v1)) :named ax_1961))
   (assert (! (not (= Message.vr1 FactorialActorChannelExpEP.state)) :named ax_1962))
   (assert (! (not (= Message.vr1 FactorialActorChannelExpEP.state)) :named ax_1963))
   (assert (! (not (= Message.vr1 FactorialActorChannelImpEP.state)) :named ax_1964))
   (assert (! (not (= Message.vr1 FactorialActorChannelImpEP.state)) :named ax_1965))
   (assert (! (not (= Message.vr1 FactorialCont.v)) :named ax_1966))
   (assert (! (not (= Message.vr1 FactorialCont.v)) :named ax_1967))
   (assert (! (not (= Message.vr1 FactorialCont.vo)) :named ax_1968))
   (assert (! (not (= Message.vr1 FactorialCont.vo)) :named ax_1969))
   (assert (! (not (= Message.vr1 FactorialContChannelExpEP.state)) :named ax_1970))
   (assert (! (not (= Message.vr1 FactorialContChannelExpEP.state)) :named ax_1971))
   (assert (! (not (= Message.vr1 FactorialContChannelImpEP.state)) :named ax_1972))
   (assert (! (not (= Message.vr1 FactorialContChannelImpEP.state)) :named ax_1973))
   (assert (! (not (= Message.vr1 forkK)) :named ax_1974))
   (assert (! (not (= Message.vr1 forkK)) :named ax_1975))
   (assert (! (not (= Message.vr1 FutureChannelExpEP.state)) :named ax_1976))
   (assert (! (not (= Message.vr1 FutureChannelExpEP.state)) :named ax_1977))
   (assert (! (not (= Message.vr1 FutureChannelImpEP.state)) :named ax_1978))
   (assert (! (not (= Message.vr1 FutureChannelImpEP.state)) :named ax_1979))
   (assert (! (not (= Message.vr1 held)) :named ax_1980))
   (assert (! (not (= Message.vr1 held)) :named ax_1981))
   (assert (! (not (= Message.vr1 joinable)) :named ax_1982))
   (assert (! (not (= Message.vr1 joinable)) :named ax_1983))
   (assert (! (not (= Message.vr1 Message.type)) :named ax_1984))
   (assert (! (not (= Message.vr1 Message.type)) :named ax_1985))
   (assert (! (not (= Message.vr1 Message.v1)) :named ax_1986))
   (assert (! (not (= Message.vr1 Message.v1)) :named ax_1987))
   (assert (! (not (= Message.vr1 Message.vo1)) :named ax_1988))
   (assert (! (not (= Message.vr1 Message.vo1)) :named ax_1989))
   (assert (! (not (= Message.vr2 FactorialActorChannelExpEP.state)) :named ax_1990))
   (assert (! (not (= Message.vr2 FactorialActorChannelExpEP.state)) :named ax_1991))
   (assert (! (not (= Message.vr2 FactorialActorChannelImpEP.state)) :named ax_1992))
   (assert (! (not (= Message.vr2 FactorialActorChannelImpEP.state)) :named ax_1993))
   (assert (! (not (= Message.vr2 FactorialCont.v)) :named ax_1994))
   (assert (! (not (= Message.vr2 FactorialCont.v)) :named ax_1995))
   (assert (! (not (= Message.vr2 FactorialCont.vo)) :named ax_1996))
   (assert (! (not (= Message.vr2 FactorialCont.vo)) :named ax_1997))
   (assert (! (not (= Message.vr2 FactorialContChannelExpEP.state)) :named ax_1998))
   (assert (! (not (= Message.vr2 FactorialContChannelExpEP.state)) :named ax_1999))
   (assert (! (not (= Message.vr2 FactorialContChannelImpEP.state)) :named ax_2000))
   (assert (! (not (= Message.vr2 FactorialContChannelImpEP.state)) :named ax_2001))
   (assert (! (not (= Message.vr2 forkK)) :named ax_2002))
   (assert (! (not (= Message.vr2 forkK)) :named ax_2003))
   (assert (! (not (= Message.vr2 FutureChannelExpEP.state)) :named ax_2004))
   (assert (! (not (= Message.vr2 FutureChannelExpEP.state)) :named ax_2005))
   (assert (! (not (= Message.vr2 FutureChannelImpEP.state)) :named ax_2006))
   (assert (! (not (= Message.vr2 FutureChannelImpEP.state)) :named ax_2007))
   (assert (! (not (= Message.vr2 held)) :named ax_2008))
   (assert (! (not (= Message.vr2 held)) :named ax_2009))
   (assert (! (not (= Message.vr2 joinable)) :named ax_2010))
   (assert (! (not (= Message.vr2 joinable)) :named ax_2011))
   (assert (! (not (= Message.vr2 Message.type)) :named ax_2012))
   (assert (! (not (= Message.vr2 Message.type)) :named ax_2013))
   (assert (! (not (= Message.vr2 Message.v1)) :named ax_2014))
   (assert (! (not (= Message.vr2 Message.v1)) :named ax_2015))
   (assert (! (not (= Message.vr2 Message.vo1)) :named ax_2016))
   (assert (! (not (= Message.vr2 Message.vo1)) :named ax_2017))
   (assert (! (not (= Message.vr2 Message.vr1)) :named ax_2018))
   (assert (! (not (= Message.vr2 Message.vr1)) :named ax_2019))
   (assert (! (not (= Message.vr3 FactorialActorChannelExpEP.state)) :named ax_2020))
   (assert (! (not (= Message.vr3 FactorialActorChannelExpEP.state)) :named ax_2021))
   (assert (! (not (= Message.vr3 FactorialActorChannelImpEP.state)) :named ax_2022))
   (assert (! (not (= Message.vr3 FactorialActorChannelImpEP.state)) :named ax_2023))
   (assert (! (not (= Message.vr3 FactorialCont.v)) :named ax_2024))
   (assert (! (not (= Message.vr3 FactorialCont.v)) :named ax_2025))
   (assert (! (not (= Message.vr3 FactorialCont.vo)) :named ax_2026))
   (assert (! (not (= Message.vr3 FactorialCont.vo)) :named ax_2027))
   (assert (! (not (= Message.vr3 FactorialContChannelExpEP.state)) :named ax_2028))
   (assert (! (not (= Message.vr3 FactorialContChannelExpEP.state)) :named ax_2029))
   (assert (! (not (= Message.vr3 FactorialContChannelImpEP.state)) :named ax_2030))
   (assert (! (not (= Message.vr3 FactorialContChannelImpEP.state)) :named ax_2031))
   (assert (! (not (= Message.vr3 forkK)) :named ax_2032))
   (assert (! (not (= Message.vr3 forkK)) :named ax_2033))
   (assert (! (not (= Message.vr3 FutureChannelExpEP.state)) :named ax_2034))
   (assert (! (not (= Message.vr3 FutureChannelExpEP.state)) :named ax_2035))
   (assert (! (not (= Message.vr3 FutureChannelImpEP.state)) :named ax_2036))
   (assert (! (not (= Message.vr3 FutureChannelImpEP.state)) :named ax_2037))
   (assert (! (not (= Message.vr3 held)) :named ax_2038))
   (assert (! (not (= Message.vr3 held)) :named ax_2039))
   (assert (! (not (= Message.vr3 joinable)) :named ax_2040))
   (assert (! (not (= Message.vr3 joinable)) :named ax_2041))
   (assert (! (not (= Message.vr3 Message.type)) :named ax_2042))
   (assert (! (not (= Message.vr3 Message.type)) :named ax_2043))
   (assert (! (not (= Message.vr3 Message.v1)) :named ax_2044))
   (assert (! (not (= Message.vr3 Message.v1)) :named ax_2045))
   (assert (! (not (= Message.vr3 Message.vo1)) :named ax_2046))
   (assert (! (not (= Message.vr3 Message.vo1)) :named ax_2047))
   (assert (! (not (= Message.vr3 Message.vr1)) :named ax_2048))
   (assert (! (not (= Message.vr3 Message.vr1)) :named ax_2049))
   (assert (! (not (= Message.vr3 Message.vr2)) :named ax_2050))
   (assert (! (not (= Message.vr3 Message.vr2)) :named ax_2051))
   (assert (! (not (= Message@t Channel@t)) :named ax_2052))
   (assert (! (not (= Message@t Channel@t)) :named ax_2053))
   (assert (! (not (= Message@t FactorialActor@t)) :named ax_2054))
   (assert (! (not (= Message@t FactorialActor@t)) :named ax_2055))
   (assert (! (not (= Message@t FactorialActorChannel@t)) :named ax_2056))
   (assert (! (not (= Message@t FactorialActorChannel@t)) :named ax_2057))
   (assert (! (not (= Message@t FactorialActorChannelExpEP@t)) :named ax_2058))
   (assert (! (not (= Message@t FactorialActorChannelExpEP@t)) :named ax_2059))
   (assert (! (not (= Message@t FactorialActorChannelImpEP@t)) :named ax_2060))
   (assert (! (not (= Message@t FactorialActorChannelImpEP@t)) :named ax_2061))
   (assert (! (not (= Message@t FactorialCont@t)) :named ax_2062))
   (assert (! (not (= Message@t FactorialCont@t)) :named ax_2063))
   (assert (! (not (= Message@t FactorialContChannel@t)) :named ax_2064))
   (assert (! (not (= Message@t FactorialContChannel@t)) :named ax_2065))
   (assert (! (not (= Message@t FactorialContChannelExpEP@t)) :named ax_2066))
   (assert (! (not (= Message@t FactorialContChannelExpEP@t)) :named ax_2067))
   (assert (! (not (= Message@t FactorialContChannelImpEP@t)) :named ax_2068))
   (assert (! (not (= Message@t FactorialContChannelImpEP@t)) :named ax_2069))
   (assert (! (not (= Message@t Future@t)) :named ax_2070))
   (assert (! (not (= Message@t Future@t)) :named ax_2071))
   (assert (! (not (= Message@t FutureChannel@t)) :named ax_2072))
   (assert (! (not (= Message@t FutureChannel@t)) :named ax_2073))
   (assert (! (not (= Message@t FutureChannelExpEP@t)) :named ax_2074))
   (assert (! (not (= Message@t FutureChannelExpEP@t)) :named ax_2075))
   (assert (! (not (= Message@t FutureChannelImpEP@t)) :named ax_2076))
   (assert (! (not (= Message@t FutureChannelImpEP@t)) :named ax_2077))
   (assert (! (not (= perm$R perm$N)) :named ax_2078))
   (assert (! (not (= perm$R perm$N)) :named ax_2079))

;Program
(assert (not
(let ((anon0@48_assertion (and
    (forall( (|lk#_1187| ref))(!(and (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ Heap |lk#_1187| rdheld) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ Heap@23 |lk#_1187| rdheld)) (= (< 0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap |lk#_1187| held)) (< 0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@23 |lk#_1187| held))))  :pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@23 |lk#_1187| held)) :pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ Heap@23 |lk#_1187| rdheld))))
)))
(let ((anon74_Else_assertion (and
    (forall( (|lk#_1435| ref))(!(and (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ Heap |lk#_1435| rdheld) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ Heap@54 |lk#_1435| rdheld)) (= (< 0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap |lk#_1435| held)) (< 0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@54 |lk#_1435| held))))  :pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@54 |lk#_1435| held)) :pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ Heap@54 |lk#_1435| rdheld))))
)))
(let ((anon70@25_assertion (and
    (forall( (|lk#_1430| ref))(!(and (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ Heap |lk#_1430| rdheld) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ Heap@134 |lk#_1430| rdheld)) (= (< 0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap |lk#_1430| held)) (< 0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@134 |lk#_1430| held))))  :pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@134 |lk#_1430| held)) :pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ Heap@134 |lk#_1430| rdheld))))
)))
(let ((anon0@10_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon0@15_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon0@20_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon0@3_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon0@41_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon0@43_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon0@45_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon15@2_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon15@4_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon15@6_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon15_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon18@12_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon18@19_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon18@30_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon18@36_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon18@38_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon35@2_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon35@4_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon35@6_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon35_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon44@6_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon44@8_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon53@10_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon53@14_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon53@16_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon53@2_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon53@4_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon53@6_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon53@8_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon53_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon59@13_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon59@15_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon59@7_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon70@19_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon70@21_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon70@23_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon75_Then@12_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon75_Then@15_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon75_Then@8_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon79_Else@11_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon79_Else@13_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon79_Else@15_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon79_Else@17_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon79_Else@19_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon79_Else@23_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon79_Else@25_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon79_Else@34_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon79_Else@41_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon79_Else@52_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon79_Else@58_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon79_Else@60_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon87_Then@2_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon87_Then@4_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon90_Then@2_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon90_Then@4_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon94_Then@2_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon94_Then@4_assertion (and
    (> (Fractions 100) 0)
)))
(let ((anon74_Then@7_assertion (and
    (< 0 (MapRead$$@Map@@ref@To@Int@@$ Credits@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)))
)))
(let ((anon0@29_assertion (and
    (> monitorK 0)
)))
(let ((anon0@31_assertion (and
    (> monitorK 0)
)))
(let ((anon0@33_assertion (and
    (> monitorK 0)
)))
(let ((anon0@35_assertion (and
    (> monitorK 0)
)))
(let ((anon0@37_assertion (and
    (> monitorK 0)
)))
(let ((anon0@39_assertion (and
    (> monitorK 0)
)))
(let ((anon18@32_assertion (and
    (> monitorK 0)
)))
(let ((anon18@34_assertion (and
    (> monitorK 0)
)))
(let ((anon44@10_assertion (and
    (> monitorK 0)
)))
(let ((anon44@12_assertion (and
    (> monitorK 0)
)))
(let ((anon44@14_assertion (and
    (> monitorK 0)
)))
(let ((anon44@2_assertion (and
    (> monitorK 0)
)))
(let ((anon44@4_assertion (and
    (> monitorK 0)
)))
(let ((anon44_assertion (and
    (> monitorK 0)
)))
(let ((anon53@12_assertion (and
    (> monitorK 0)
)))
(let ((anon59@11_assertion (and
    (> monitorK 0)
)))
(let ((anon59@9_assertion (and
    (> monitorK 0)
)))
(let ((anon70@11_assertion (and
    (> monitorK 0)
)))
(let ((anon70@13_assertion (and
    (> monitorK 0)
)))
(let ((anon70@15_assertion (and
    (> monitorK 0)
)))
(let ((anon70@17_assertion (and
    (> monitorK 0)
)))
(let ((anon70@7_assertion (and
    (> monitorK 0)
)))
(let ((anon70@9_assertion (and
    (> monitorK 0)
)))
(let ((anon75_Then@10_assertion (and
    (> monitorK 0)
)))
(let ((anon79_Else@21_assertion (and
    (> monitorK 0)
)))
(let ((anon79_Else@27_assertion (and
    (> monitorK 0)
)))
(let ((anon79_Else@54_assertion (and
    (> monitorK 0)
)))
(let ((anon79_Else@56_assertion (and
    (> monitorK 0)
)))
(let ((anon81_Then_assertion (and
    (> monitorK 0)
)))
(let ((anon87_Then@6_assertion (and
    (> monitorK 0)
)))
(let ((anon87_Then_assertion (and
    (> monitorK 0)
)))
(let ((anon90_Then@6_assertion (and
    (> monitorK 0)
)))
(let ((anon90_Then_assertion (and
    (> monitorK 0)
)))
(let ((anon94_Then@10_assertion (and
    (> monitorK 0)
)))
(let ((anon94_Then@12_assertion (and
    (> monitorK 0)
)))
(let ((anon94_Then@6_assertion (and
    (> monitorK 0)
)))
(let ((anon94_Then@8_assertion (and
    (> monitorK 0)
)))
(let ((anon94_Then_assertion (and
    (> monitorK 0)
)))
(let ((anon0@1_assertion (and
    (CanRead$ref$ Mask@5 this FactorialActor.q)
)))
(let ((anon0@13_assertion (and
    (CanRead$ref$ Mask@19 this FactorialActor.q)
)))
(let ((anon0@18_assertion (and
    (CanRead$ref$ Mask@21 this FactorialActor.q)
)))
(let ((anon0@23_assertion (and
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch))
)))
(let ((anon0@27_assertion (and
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state) 0)
)))
(let ((anon0@28_assertion (and
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state) 0)
)))
(let ((anon0@47_assertion (and
    (forall( (|ch| ref))(or (= null |ch|) (<= 0 (MapRead$$@Map@@ref@To@Int@@$ Credits@1 |ch|))))
)))
(let ((anon0@6_assertion (and
    (CanRead$ref$ Mask@11 this FactorialActor.q)
)))
(let ((anon0@8_assertion (and
    (CanRead$ref$ Mask@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 this FactorialActor.q) FactorialActorChannel.imp)
)))
(let ((anon10@1_assertion (and
    (CanRead$Int$ Mask@71 mo@131@0 Message.v1)
)))
(let ((anon18@1_assertion (and
    (CanRead$Int$ Mask@210 nw@_1208@0 Message.vr3)
)))
(let ((anon18@10_assertion (and
    (CanRead$ref$ Mask@210 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@123 mo@131@0 Message.sender1) Future.q)
)))
(let ((anon18@15_assertion (and
    (CanRead$ref$ Mask@216 mo@131@0 Message.sender1)
)))
(let ((anon18@17_assertion (and
    (CanRead$ref$ Mask@216 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 mo@131@0 Message.sender1) Future.q)
)))
(let ((anon18@22_assertion (and
    (CanRead$ref$ Mask@218 mo@131@0 Message.sender1)
)))
(let ((anon18@24_assertion (and
    (CanRead$ref$ Mask@218 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@131 mo@131@0 Message.sender1) Future.q)
)))
(let ((anon18@26_assertion (and
    (CanRead$ref$ Mask@218 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@131 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@131 mo@131@0 Message.sender1) Future.q) FutureChannel.exp)
)))
(let ((anon18@28_assertion (and
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@131 nw@_1208@0 Message.type) 4)
)))
(let ((anon18@29_assertion (and
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@131 this@135@0 FutureChannelExpEP.state) 0)
)))
(let ((anon18@3_assertion (and
    (CanRead$Int$ Mask@210 mo@131@0 Message.vo1)
)))
(let ((anon18@6_assertion (and
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@123 nw@_1208@0 Message.vr3) ($@Message.factorial Heap@123 Mask@210 nw@_1208@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@123 mo@131@0 Message.vo1)))
)))
(let ((anon18@8_assertion (and
    (CanRead$ref$ Mask@210 mo@131@0 Message.sender1)
)))
(let ((anon25@2_assertion (and
    (CanRead$Int$ Mask@206 nw@_1297@0 Message.vr3)
)))
(let ((anon25@4_assertion (and
    (CanRead$ref$ Mask@206 mo@131@0 Message.cust1)
)))
(let ((anon25@6_assertion (and
    (CanRead$Int$ Mask@206 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@119 mo@131@0 Message.cust1) FactorialCont.vo)
)))
(let ((anon25_assertion (and
    (CanWrite$Int$ Mask@206 nw@_1297@0 Message.type)
)))
(let ((anon47@2_assertion (and
    (CanRead$ref$ Mask@114 mo@131@0 Message.sender1)
)))
(let ((anon47@5_assertion (and
    (CanRead$Int$ Mask@114 mo@131@0 Message.v1)
)))
(let ((anon47@7_assertion (and
    (CanRead$Int$ Mask@114 mo@131@0 Message.vo1)
)))
(let ((anon47_assertion (and
    (CanWrite$ref$ Mask@114 nw@_1358@0 Message.sender1)
)))
(let ((anon59@1_assertion (and
    (CanRead$ref$ Mask@118 this FactorialActor.q)
)))
(let ((anon59@3_assertion (and
    (CanRead$ref$ Mask@118 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@99 this FactorialActor.q) FactorialActorChannel.exp)
)))
(let ((anon59@5_assertion (and
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@99 nw@_1358@0 Message.type) 1)
)))
(let ((anon59@6_assertion (and
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@99 this@153@0 FactorialActorChannelExpEP.state) 0)
)))
(let ((anon62@2_assertion (and
    (CanRead$Int$ Mask@138 nw@_1396@0 Message.vr3)
)))
(let ((anon62@4_assertion (and
    (CanRead$Int$ Mask@138 nw@_1358@0 Message.vo1)
)))
(let ((anon62_assertion (and
    (CanWrite$Int$ Mask@138 nw@_1396@0 Message.type)
)))
(let ((anon70@1_assertion (and
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch))
)))
(let ((anon70@26_assertion (and
    (forall( (|ch_$1| ref))(or (= null |ch_$1|) (<= 0 (MapRead$$@Map@@ref@To@Int@@$ Credits@8 |ch_$1|))))
)))
(let ((anon70@5_assertion (and
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state) 0)
)))
(let ((anon70@6_assertion (and
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state) 0)
)))
(let ((anon73_Then@1_assertion (and
    (CanRead$ref$ Mask@24 this FactorialActor.q)
)))
(let ((anon73_Then@11_assertion (and
    (CanRead$ref$ Mask@26 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@27 this FactorialActor.q) FactorialActorChannel.imp)
)))
(let ((anon73_Then@13_assertion (and
    (CanRead$ref$ Mask@26 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@27 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@27 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)
)))
(let ((anon73_Then@15_assertion (and
    (CanRead$ref$ Mask@27 this FactorialActor.q)
)))
(let ((anon73_Then@17_assertion (and
    (CanRead$ref$ Mask@27 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@28 this FactorialActor.q) FactorialActorChannel.imp)
)))
(let ((anon73_Then@19_assertion (and
    (CanRead$ref$ Mask@28 this FactorialActor.q)
)))
(let ((anon73_Then@21_assertion (and
    (CanRead$ref$ Mask@28 this FactorialActor.q)
)))
(let ((anon73_Then@23_assertion (and
    (CanRead$ref$ Mask@28 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 this FactorialActor.q) FactorialActorChannel.imp)
)))
(let ((anon73_Then@25_assertion (and
    (CanRead$ref$ Mask@28 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch)
)))
(let ((anon73_Then@27_assertion (and
    (CanRead$ref$ Mask@28 this FactorialActor.q)
)))
(let ((anon73_Then@29_assertion (and
    (CanRead$ref$ Mask@28 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 this FactorialActor.q) FactorialActorChannel.imp)
)))
(let ((anon73_Then@3_assertion (and
    (CanRead$ref$ Mask@24 this FactorialActor.q)
)))
(let ((anon73_Then@31_assertion (and
    (CanRead$ref$ Mask@28 this FactorialActor.q)
)))
(let ((anon73_Then@33_assertion (and
    (CanRead$ref$ Mask@28 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 this FactorialActor.q) FactorialActorChannel.imp)
)))
(let ((anon73_Then@35_assertion (and
    (CanRead$ref$ Mask@28 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)
)))
(let ((anon73_Then@37_assertion (and
    (CanRead$ref$ Mask@28 this FactorialActor.q)
)))
(let ((anon73_Then@39_assertion (and
    (CanRead$ref$ Mask@29 this FactorialActor.q)
)))
(let ((anon73_Then@41_assertion (and
    (CanRead$ref$ Mask@29 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@30 this FactorialActor.q) FactorialActorChannel.exp)
)))
(let ((anon73_Then@43_assertion (and
    (CanRead$ref$ Mask@29 this FactorialActor.q)
)))
(let ((anon73_Then@45_assertion (and
    (CanRead$ref$ Mask@29 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@30 this FactorialActor.q) FactorialActorChannel.exp)
)))
(let ((anon73_Then@48_assertion (and
    (CanRead$ref$ Mask@29 this FactorialActor.q)
)))
(let ((anon73_Then@5_assertion (and
    (CanRead$ref$ Mask@25 this FactorialActor.q)
)))
(let ((anon73_Then@50_assertion (and
    (CanRead$ref$ Mask@29 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@30 this FactorialActor.q) FactorialActorChannel.exp)
)))
(let ((anon73_Then@52_assertion (and
    (CanRead$ref$ Mask@30 this FactorialActor.q)
)))
(let ((anon73_Then@54_assertion (and
    (CanRead$ref$ Mask@30 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@31 this FactorialActor.q) FactorialActorChannel.exp)
)))
(let ((anon73_Then@56_assertion (and
    (CanRead$ref$ Mask@31 this FactorialActor.q)
)))
(let ((anon73_Then@58_assertion (and
    (CanRead$ref$ Mask@31 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@32 this FactorialActor.q) FactorialActorChannel.exp)
)))
(let ((anon73_Then@60_assertion (and
    (CanRead$Int$ Mask@31 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@32 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@32 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state)
)))
(let ((anon73_Then@62_assertion (and
    (CanRead$ref$ Mask@31 this FactorialActor.q)
)))
(let ((anon73_Then@64_assertion (and
    (CanRead$ref$ Mask@31 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@32 this FactorialActor.q) FactorialActorChannel.imp)
)))
(let ((anon73_Then@66_assertion (and
    (CanRead$ref$ Mask@32 this FactorialActor.q)
)))
(let ((anon73_Then@68_assertion (and
    (CanRead$ref$ Mask@32 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@33 this FactorialActor.q) FactorialActorChannel.imp)
)))
(let ((anon73_Then@7_assertion (and
    (CanRead$ref$ Mask@25 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@26 this FactorialActor.q) FactorialActorChannel.imp)
)))
(let ((anon73_Then@70_assertion (and
    (CanRead$Int$ Mask@32 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@33 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@33 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state)
)))
(let ((anon73_Then@72_assertion (and
    (CanRead$ref$ Mask@32 this FactorialActor.q)
)))
(let ((anon73_Then@74_assertion (and
    (CanRead$ref$ Mask@32 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@33 this FactorialActor.q) FactorialActorChannel.imp)
)))
(let ((anon73_Then@76_assertion (and
    (CanRead$ref$ Mask@32 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@33 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@33 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)
)))
(let ((anon73_Then@9_assertion (and
    (CanRead$ref$ Mask@26 this FactorialActor.q)
)))
(let ((anon74_Else@1_assertion (and
    (forall( (|ch_$0| ref))(or (= null |ch_$0|) (<= 0 (MapRead$$@Map@@ref@To@Int@@$ Credits@5 |ch_$0|))))
)))
(let ((anon74_Then@1_assertion (and
    (CanRead$ref$ Mask@41 this FactorialActor.q)
)))
(let ((anon74_Then@11_assertion (and
    (CanRead$Int$ Mask@43 msg@128@0 Message.type)
)))
(let ((anon74_Then@3_assertion (and
    (CanRead$ref$ Mask@41 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 this FactorialActor.q) FactorialActorChannel.imp)
)))
(let ((anon74_Then@5_assertion (and
    (CanRead$ref$ Mask@41 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)
)))
(let ((anon74_Then@8_assertion (and
    (CanRead$Mu$ Mask@41 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu)
)))
(let ((anon74_Then@9_assertion (and
    (forall( (|o#_1191| ref))(=> (or (or (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ Heap@43 |o#_1191| rdheld) (< 0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@43 |o#_1191| held))) (< (MapRead$$@Map@@ref@To@Int@@$ Credits@3 |o#_1191|) 0)) (MuBelow (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ Heap@43 |o#_1191| mu) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ Heap@43 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu))))
)))
(let ((anon75_Then@1_assertion (and
    (CanRead$ref$ Mask@43 this FactorialActor.q)
)))
(let ((anon75_Then@3_assertion (and
    (CanRead$ref$ Mask@43 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@45 this FactorialActor.q) FactorialActorChannel.imp)
)))
(let ((anon75_Then@6_assertion (and
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@45 msg@128@0 Message.type) 1)
)))
(let ((anon75_Then@7_assertion (and
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@45 this@129@0 FactorialActorChannelImpEP.state) 0)
)))
(let ((anon78_Else@2_assertion (and
    (CanRead$Int$ Mask@76 mo@131@0 Message.v1)
)))
(let ((anon78_Else@4_assertion (and
    (CanRead$Int$ Mask@76 mo@131@0 Message.vo1)
)))
(let ((anon78_Else@6_assertion (and
    (CanRead$ref$ Mask@76 mo@131@0 Message.cust1)
)))
(let ((anon78_Then@1_assertion (and
    (CanRead$ref$ Mask@71 mo@131@0 Message.cust1)
)))
(let ((anon79_Else@10_assertion (and
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@104 receiver@140@0 FactorialCont.v) 1)
)))
(let ((anon79_Else@2_assertion (and
    (CanRead$ref$ Mask@174 mo@131@0 Message.sender1)
)))
(let ((anon79_Else@30_assertion (and
    (CanRead$ref$ Mask@178 mo@131@0 Message.cust1)
)))
(let ((anon79_Else@32_assertion (and
    (CanRead$ref$ Mask@178 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@108 mo@131@0 Message.cust1) FactorialCont.q)
)))
(let ((anon79_Else@37_assertion (and
    (CanRead$ref$ Mask@184 mo@131@0 Message.cust1)
)))
(let ((anon79_Else@39_assertion (and
    (CanRead$ref$ Mask@184 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 mo@131@0 Message.cust1) FactorialCont.q)
)))
(let ((anon79_Else@44_assertion (and
    (CanRead$ref$ Mask@186 mo@131@0 Message.cust1)
)))
(let ((anon79_Else@46_assertion (and
    (CanRead$ref$ Mask@186 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@116 mo@131@0 Message.cust1) FactorialCont.q)
)))
(let ((anon79_Else@48_assertion (and
    (CanRead$ref$ Mask@186 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@116 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@116 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp)
)))
(let ((anon79_Else@5_assertion (and
    (CanRead$ref$ Mask@174 mo@131@0 Message.cust1)
)))
(let ((anon79_Else@50_assertion (and
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@116 nw@_1258@0 Message.type) 2)
)))
(let ((anon79_Else@51_assertion (and
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@116 this@141@0 FactorialContChannelExpEP.state) 0)
)))
(let ((anon79_Else@8_assertion (and
    (= 1 ($@Message.factorial Heap@104 Mask@174 nw@_1258@0 0))
)))
(let ((anon79_Else_assertion (and
    (CanWrite$ref$ Mask@174 nw@_1258@0 Message.sender2)
)))
(let ((anon79_Then@3_assertion (and
    (CanRead$ref$ Mask@156 mo@131@0 Message.sender1)
)))
(let ((anon79_Then_assertion (and
    (CanWrite$ref$ Mask@156 nw@_1208@0 Message.sender4)
)))
(let ((anon84_Then@1_assertion (and
    (CanRead$Int$ Mask@206 nw@_1297@0 Message.vr3)
)))
(let ((anon84_Then@3_assertion (and
    (CanRead$Int$ Mask@206 mo@131@0 Message.vo1)
)))
(let ((anon84_Then@6_assertion (and
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@119 nw@_1297@0 Message.vr3) ($@Message.factorial Heap@119 Mask@206 nw@_1258@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@119 mo@131@0 Message.vo1)))
)))
(let ((anon86_Then@1_assertion (and
    (= vop@145@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@73 custp@146@0 FactorialCont.vo))
)))
(let ((anon89_Then@1_assertion (and
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@92 nw@_1321@0 FactorialCont.vo) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.vo))
)))
(let ((anon91_Then_assertion (and
    (= vo@150@0 v@149@0)
)))
(let ((anon92_Then@2_assertion (and
    (= v@149@0 (- (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@95 nw@_1321@0 FactorialCont.v) 1))
)))
(let ((anon92_Then@3_assertion (and
    (= vo@150@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@95 nw@_1321@0 FactorialCont.vo))
)))
(let ((anon96_Then@1_assertion (and
    (CanRead$Int$ Mask@138 nw@_1396@0 Message.vr3)
)))
(let ((anon96_Then@3_assertion (and
    (CanRead$Int$ Mask@138 mo@131@0 Message.vo1)
)))
(let ((anon96_Then@6_assertion (and
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@102 nw@_1396@0 Message.vr3) ($@Message.factorial Heap@102 Mask@138 nw@_1358@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@102 mo@131@0 Message.vo1)))
)))
(let ((anon96_Then@5_assertion (and
    (>= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@102 mo@131@0 Message.vo1) 0)
)))
(let ((anon62@6_assertion (and
    (>= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@102 nw@_1358@0 Message.vo1) 0)
)))
(let ((anon25@8_assertion (and
    (>= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@119 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@119 mo@131@0 Message.cust1) FactorialCont.vo) 0)
)))
(let ((anon84_Then@5_assertion (and
    (>= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@119 mo@131@0 Message.vo1) 0)
)))
(let ((anon18@5_assertion (and
    (>= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@123 mo@131@0 Message.vo1) 0)
)))
(let ((anon41@3_assertion (and
    (>= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@92 nw@_1321@0 FactorialCont.v) 0)
)))
(let ((anon41@4_assertion (and
    (>= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@92 nw@_1321@0 FactorialCont.vo) 0)
)))
(let ((anon0@42_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1177@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1177@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1177@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid) perm$N)))
)))
(let ((anon75_Then@13_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1197@1 msg@128@0 Message.inv) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1197@1 msg@128@0 Message.inv) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1197@1 msg@128@0 Message.inv) perm$N)))
)))
(let ((anon18@37_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1249@2 nw@_1208@0 Message.invFinalResult) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1249@2 nw@_1208@0 Message.invFinalResult) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1249@2 nw@_1208@0 Message.invFinalResult) perm$N)))
)))
(let ((anon18@39_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1249@3 this@135@0 FutureChannelExpEP.valid) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1249@3 this@135@0 FutureChannelExpEP.valid) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1249@3 this@135@0 FutureChannelExpEP.valid) perm$N)))
)))
(let ((anon79_Else@24_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1263@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 nw@_1258@0 Message.sender2) Future.q) FutureChannel.valid) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1263@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 nw@_1258@0 Message.sender2) Future.q) FutureChannel.valid) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1263@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 nw@_1258@0 Message.sender2) Future.q) FutureChannel.valid) perm$N)))
)))
(let ((anon79_Else@26_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1263@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 nw@_1258@0 Message.sender2) Future.q) FutureChannel.initExpState) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1263@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 nw@_1258@0 Message.sender2) Future.q) FutureChannel.initExpState) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1263@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 nw@_1258@0 Message.sender2) Future.q) FutureChannel.initExpState) perm$N)))
)))
(let ((anon79_Else@59_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1288@2 nw@_1258@0 Message.invResult1) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1288@2 nw@_1258@0 Message.invResult1) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1288@2 nw@_1258@0 Message.invResult1) perm$N)))
)))
(let ((anon79_Else@61_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1288@3 this@141@0 FactorialContChannelExpEP.valid) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1288@3 this@141@0 FactorialContChannelExpEP.valid) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1288@3 this@141@0 FactorialContChannelExpEP.valid) perm$N)))
)))
(let ((anon87_Then@3_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1326@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@73 custp@146@0 FactorialCont.q) FactorialContChannel.valid) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1326@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@73 custp@146@0 FactorialCont.q) FactorialContChannel.valid) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1326@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@73 custp@146@0 FactorialCont.q) FactorialContChannel.valid) perm$N)))
)))
(let ((anon87_Then@5_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1326@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@73 custp@146@0 FactorialCont.q) FactorialContChannel.initExpState) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1326@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@73 custp@146@0 FactorialCont.q) FactorialContChannel.initExpState) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1326@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@73 custp@146@0 FactorialCont.q) FactorialContChannel.initExpState) perm$N)))
)))
(let ((anon44@7_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1345@2 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.valid) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1345@2 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.valid) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1345@2 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.valid) perm$N)))
)))
(let ((anon44@9_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1345@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.initImpState) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1345@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.initImpState) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1345@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.initImpState) perm$N)))
)))
(let ((anon90_Then@3_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1345@8 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.q) FactorialContChannel.valid) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1345@8 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.q) FactorialContChannel.valid) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1345@8 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.q) FactorialContChannel.valid) perm$N)))
)))
(let ((anon90_Then@5_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1345@9 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.q) FactorialContChannel.initExpState) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1345@9 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.q) FactorialContChannel.initExpState) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1345@9 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.q) FactorialContChannel.initExpState) perm$N)))
)))
(let ((anon94_Then@5_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@10 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q) FactorialContChannel.initExpState) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@10 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q) FactorialContChannel.initExpState) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@10 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q) FactorialContChannel.initExpState) perm$N)))
)))
(let ((anon53@15_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1358@0 Message.sender1) Future.q) FutureChannel.valid) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1358@0 Message.sender1) Future.q) FutureChannel.valid) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1358@0 Message.sender1) Future.q) FutureChannel.valid) perm$N)))
)))
(let ((anon53@17_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1358@0 Message.sender1) Future.q) FutureChannel.initExpState) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1358@0 Message.sender1) Future.q) FutureChannel.initExpState) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1358@0 Message.sender1) Future.q) FutureChannel.initExpState) perm$N)))
)))
(let ((anon94_Then@3_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@9 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q) FactorialContChannel.valid) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@9 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q) FactorialContChannel.valid) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@9 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q) FactorialContChannel.valid) perm$N)))
)))
(let ((anon59@14_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1387@2 nw@_1358@0 Message.invValue) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1387@2 nw@_1358@0 Message.invValue) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1387@2 nw@_1358@0 Message.invValue) perm$N)))
)))
(let ((anon59@16_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1387@3 this@153@0 FactorialActorChannelExpEP.valid) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1387@3 this@153@0 FactorialActorChannelExpEP.valid) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1387@3 this@153@0 FactorialActorChannelExpEP.valid) perm$N)))
)))
(let ((anon70@20_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1420@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1420@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1420@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid) perm$N)))
)))
(let ((anon0@11_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.valid) perm$R))
    (=> (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.valid) perm$R) (Fractions 100)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.valid) perm$N)))
)))
(let ((anon79_Else@35_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@178 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@108 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@108 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.valid) perm$R))
    (=> (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@178 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@108 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@108 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.valid) perm$R) (Fractions 100)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@178 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@108 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@108 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.valid) perm$N)))
)))
(let ((anon79_Else@42_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@184 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.initExpState) perm$R))
    (=> (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@184 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.initExpState) perm$R) (Fractions 100)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@184 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.initExpState) perm$N)))
)))
(let ((anon0@16_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@19 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@19 this FactorialActor.q) FactorialActorChannel.initImpState) perm$R))
    (=> (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@19 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@19 this FactorialActor.q) FactorialActorChannel.initImpState) perm$R) (Fractions 100)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@19 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@19 this FactorialActor.q) FactorialActorChannel.initImpState) perm$N)))
)))
(let ((anon0@21_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@21 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@21 this FactorialActor.q) FactorialActorChannel.initExpState) perm$R))
    (=> (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@21 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@21 this FactorialActor.q) FactorialActorChannel.initExpState) perm$R) (Fractions 100)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@21 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@21 this FactorialActor.q) FactorialActorChannel.initExpState) perm$N)))
)))
(let ((anon18@13_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@210 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@123 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@123 mo@131@0 Message.sender1) Future.q) FutureChannel.valid) perm$R))
    (=> (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@210 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@123 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@123 mo@131@0 Message.sender1) Future.q) FutureChannel.valid) perm$R) (Fractions 100)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@210 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@123 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@123 mo@131@0 Message.sender1) Future.q) FutureChannel.valid) perm$N)))
)))
(let ((anon18@20_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@216 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 mo@131@0 Message.sender1) Future.q) FutureChannel.initExpState) perm$R))
    (=> (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@216 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 mo@131@0 Message.sender1) Future.q) FutureChannel.initExpState) perm$R) (Fractions 100)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@216 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 mo@131@0 Message.sender1) Future.q) FutureChannel.initExpState) perm$N)))
)))
(let ((anon0@4_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 this FactorialActor.q) FactorialActorChannel.valid) perm$R))
    (=> (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 this FactorialActor.q) FactorialActorChannel.valid) perm$R) (Fractions 100)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 this FactorialActor.q) FactorialActorChannel.valid) perm$N)))
)))
(let ((anon75_Then@16_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@55 mo@131@0 Message.invValue) perm$R))
    (=> (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@55 mo@131@0 Message.invValue) perm$R) (Fractions 100)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@55 mo@131@0 Message.invValue) perm$N)))
)))
(let ((anon0@44_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1177@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1177@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1177@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state) perm$N)))
)))
(let ((anon0@46_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1177@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1177@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1177@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state) perm$N)))
)))
(let ((anon75_Then@11_assertion (and
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1197@0 msg@128@0 Message.type) perm$R))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1197@0 msg@128@0 Message.type) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1197@0 msg@128@0 Message.type) perm$N)))
)))
(let ((anon15@7_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1213@2 nw@_1208@0 Message.vr3) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1213@2 nw@_1208@0 Message.vr3) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1213@2 nw@_1208@0 Message.vr3) perm$N)))
)))
(let ((anon18@33_assertion (and
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1249@0 nw@_1208@0 Message.type) perm$R))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1249@0 nw@_1208@0 Message.type) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1249@0 nw@_1208@0 Message.type) perm$N)))
)))
(let ((anon18@35_assertion (and
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1249@1 nw@_1208@0 Message.type) perm$R))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1249@1 nw@_1208@0 Message.type) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1249@1 nw@_1208@0 Message.type) perm$N)))
)))
(let ((anon79_Else@18_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1263@2 nw@_1258@0 Message.vr1) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1263@2 nw@_1258@0 Message.vr1) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1263@2 nw@_1258@0 Message.vr1) perm$N)))
)))
(let ((anon79_Else@28_assertion (and
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1263@7 receiver@140@0 FactorialCont.v) perm$R))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1263@7 receiver@140@0 FactorialCont.v) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1263@7 receiver@140@0 FactorialCont.v) perm$N)))
)))
(let ((anon79_Else@55_assertion (and
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1288@0 nw@_1258@0 Message.type) perm$R))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1288@0 nw@_1258@0 Message.type) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1288@0 nw@_1258@0 Message.type) perm$N)))
)))
(let ((anon79_Else@57_assertion (and
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1288@1 nw@_1258@0 Message.type) perm$R))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1288@1 nw@_1258@0 Message.type) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1288@1 nw@_1258@0 Message.type) perm$N)))
)))
(let ((anon35@3_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1326@0 nw@_1321@0 FactorialCont.vo) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1326@0 nw@_1321@0 FactorialCont.vo) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1326@0 nw@_1321@0 FactorialCont.vo) perm$N)))
)))
(let ((anon87_Then@7_assertion (and
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1326@6 custp@146@0 FactorialCont.vo) perm$R))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1326@6 custp@146@0 FactorialCont.vo) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1326@6 custp@146@0 FactorialCont.vo) perm$N)))
)))
(let ((anon44@3_assertion (and
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1345@0 nw@_1321@0 FactorialCont.v) perm$R))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1345@0 nw@_1321@0 FactorialCont.v) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1345@0 nw@_1321@0 FactorialCont.v) perm$N)))
)))
(let ((anon44@5_assertion (and
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1345@1 nw@_1321@0 FactorialCont.vo) perm$R))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1345@1 nw@_1321@0 FactorialCont.vo) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1345@1 nw@_1321@0 FactorialCont.vo) perm$N)))
)))
(let ((anon90_Then@7_assertion (and
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1345@10 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.vo) perm$R))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1345@10 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.vo) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1345@10 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.vo) perm$N)))
)))
(let ((anon94_Then@11_assertion (and
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1363@13 nw@_1321@0 FactorialCont.v) perm$R))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1363@13 nw@_1321@0 FactorialCont.v) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1363@13 nw@_1321@0 FactorialCont.v) perm$N)))
)))
(let ((anon94_Then@13_assertion (and
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1363@14 nw@_1321@0 FactorialCont.vo) perm$R))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1363@14 nw@_1321@0 FactorialCont.vo) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1363@14 nw@_1321@0 FactorialCont.vo) perm$N)))
)))
(let ((anon53@7_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1363@2 nw@_1358@0 Message.v1) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1363@2 nw@_1358@0 Message.v1) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1363@2 nw@_1358@0 Message.v1) perm$N)))
)))
(let ((anon53@9_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1363@3 nw@_1358@0 Message.vo1) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1363@3 nw@_1358@0 Message.vo1) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1363@3 nw@_1358@0 Message.vo1) perm$N)))
)))
(let ((anon59@10_assertion (and
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1387@0 nw@_1358@0 Message.type) perm$R))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1387@0 nw@_1358@0 Message.type) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1387@0 nw@_1358@0 Message.type) perm$N)))
)))
(let ((anon59@12_assertion (and
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1387@1 nw@_1358@0 Message.type) perm$R))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1387@1 nw@_1358@0 Message.type) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1387@1 nw@_1358@0 Message.type) perm$N)))
)))
(let ((anon70@22_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1420@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1420@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1420@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state) perm$N)))
)))
(let ((anon70@24_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1420@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1420@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1420@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state) perm$N)))
)))
(let ((anon53@1_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@114 nw@_1358@0 Message.type) perm$R))
    (=> (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@114 nw@_1358@0 Message.type) perm$R) (Fractions 100)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@114 nw@_1358@0 Message.type) perm$N)))
)))
(let ((anon59@8_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@118 this@153@0 FactorialActorChannelExpEP.state) perm$R))
    (=> (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@118 this@153@0 FactorialActorChannelExpEP.state) perm$R) (Fractions 100)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@118 this@153@0 FactorialActorChannelExpEP.state) perm$N)))
)))
(let ((anon15@1_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@156 nw@_1208@0 Message.type) perm$R))
    (=> (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@156 nw@_1208@0 Message.type) perm$R) (Fractions 100)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@156 nw@_1208@0 Message.type) perm$N)))
)))
(let ((anon79_Else@12_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@174 nw@_1258@0 Message.type) perm$R))
    (=> (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@174 nw@_1258@0 Message.type) perm$R) (Fractions 100)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@174 nw@_1258@0 Message.type) perm$N)))
)))
(let ((anon79_Else@53_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@186 this@141@0 FactorialContChannelExpEP.state) perm$R))
    (=> (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@186 this@141@0 FactorialContChannelExpEP.state) perm$R) (Fractions 100)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@186 this@141@0 FactorialContChannelExpEP.state) perm$N)))
)))
(let ((anon18@31_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@218 this@135@0 FutureChannelExpEP.state) perm$R))
    (=> (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@218 this@135@0 FutureChannelExpEP.state) perm$R) (Fractions 100)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@218 this@135@0 FutureChannelExpEP.state) perm$N)))
)))
(let ((anon75_Then@9_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@43 this@129@0 FactorialActorChannelImpEP.state) perm$R))
    (=> (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@43 this@129@0 FactorialActorChannelImpEP.state) perm$R) (Fractions 100)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@43 this@129@0 FactorialActorChannelImpEP.state) perm$N)))
)))
(let ((anon35@1_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@76 nw@_1321@0 FactorialCont.v) perm$R))
    (=> (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@76 nw@_1321@0 FactorialCont.v) perm$R) (Fractions 100)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@76 nw@_1321@0 FactorialCont.v) perm$N)))
)))
(let ((anon0@36_assertion (and
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ exhaleMask@_1177@2 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu) perm$R))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ exhaleMask@_1177@2 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ exhaleMask@_1177@2 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu) perm$N)))
)))
(let ((anon70@14_assertion (and
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ exhaleMask@_1420@2 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu) perm$R))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ exhaleMask@_1420@2 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ exhaleMask@_1420@2 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu) perm$N)))
)))
(let ((anon0@32_assertion (and
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1177@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) perm$R))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1177@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1177@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) perm$N)))
)))
(let ((anon0@34_assertion (and
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1177@1 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) perm$R))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1177@1 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1177@1 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) perm$N)))
)))
(let ((anon0@38_assertion (and
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1177@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) perm$R))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1177@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1177@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) perm$N)))
)))
(let ((anon0@40_assertion (and
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1177@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.exp) perm$R))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1177@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.exp) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1177@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.exp) perm$N)))
)))
(let ((anon15@3_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1213@0 nw@_1208@0 Message.sender4) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1213@0 nw@_1208@0 Message.sender4) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1213@0 nw@_1208@0 Message.sender4) perm$N)))
)))
(let ((anon15@5_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1213@1 nw@_1208@0 Message.receiver4) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1213@1 nw@_1208@0 Message.receiver4) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1213@1 nw@_1208@0 Message.receiver4) perm$N)))
)))
(let ((anon81_Then@1_assertion (and
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1213@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@103 nw@_1208@0 Message.sender4) FactorialCont.q) perm$R))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1213@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@103 nw@_1208@0 Message.sender4) FactorialCont.q) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1213@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@103 nw@_1208@0 Message.sender4) FactorialCont.q) perm$N)))
)))
(let ((anon79_Else@14_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1263@0 nw@_1258@0 Message.sender2) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1263@0 nw@_1258@0 Message.sender2) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1263@0 nw@_1258@0 Message.sender2) perm$N)))
)))
(let ((anon79_Else@16_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1263@1 nw@_1258@0 Message.receiver2) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1263@1 nw@_1258@0 Message.receiver2) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1263@1 nw@_1258@0 Message.receiver2) perm$N)))
)))
(let ((anon79_Else@20_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1263@3 nw@_1258@0 Message.old1) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1263@3 nw@_1258@0 Message.old1) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1263@3 nw@_1258@0 Message.old1) perm$N)))
)))
(let ((anon79_Else@22_assertion (and
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1263@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 nw@_1258@0 Message.sender2) Future.q) perm$R))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1263@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 nw@_1258@0 Message.sender2) Future.q) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1263@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 nw@_1258@0 Message.sender2) Future.q) perm$N)))
)))
(let ((anon35@5_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1326@1 nw@_1321@0 FactorialCont.cust) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1326@1 nw@_1321@0 FactorialCont.cust) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1326@1 nw@_1321@0 FactorialCont.cust) perm$N)))
)))
(let ((anon35@7_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1326@2 nw@_1321@0 FactorialCont.q) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1326@2 nw@_1321@0 FactorialCont.q) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1326@2 nw@_1321@0 FactorialCont.q) perm$N)))
)))
(let ((anon87_Then@1_assertion (and
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1326@3 custp@146@0 FactorialCont.q) perm$R))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1326@3 custp@146@0 FactorialCont.q) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1326@3 custp@146@0 FactorialCont.q) perm$N)))
)))
(let ((anon44@11_assertion (and
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1345@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) perm$R))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1345@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1345@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) perm$N)))
)))
(let ((anon44@13_assertion (and
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1345@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch) perm$R))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1345@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1345@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch) perm$N)))
)))
(let ((anon44@15_assertion (and
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1345@6 nw@_1321@0 FactorialCont.cust) perm$R))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1345@6 nw@_1321@0 FactorialCont.cust) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1345@6 nw@_1321@0 FactorialCont.cust) perm$N)))
)))
(let ((anon90_Then@1_assertion (and
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1345@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.q) perm$R))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1345@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.q) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1345@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.q) perm$N)))
)))
(let ((anon53@3_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@0 nw@_1358@0 Message.sender1) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@0 nw@_1358@0 Message.sender1) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@0 nw@_1358@0 Message.sender1) perm$N)))
)))
(let ((anon53@5_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@1 nw@_1358@0 Message.receiver1) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@1 nw@_1358@0 Message.receiver1) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@1 nw@_1358@0 Message.receiver1) perm$N)))
)))
(let ((anon94_Then@7_assertion (and
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) perm$R))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) perm$N)))
)))
(let ((anon94_Then@9_assertion (and
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@12 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch) perm$R))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@12 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@12 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch) perm$N)))
)))
(let ((anon53@11_assertion (and
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@4 nw@_1358@0 Message.cust1) perm$R))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@4 nw@_1358@0 Message.cust1) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@4 nw@_1358@0 Message.cust1) perm$N)))
)))
(let ((anon53@13_assertion (and
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1358@0 Message.sender1) Future.q) perm$R))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1358@0 Message.sender1) Future.q) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1358@0 Message.sender1) Future.q) perm$N)))
)))
(let ((anon94_Then@1_assertion (and
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@8 nw@_1321@0 FactorialCont.q) perm$R))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@8 nw@_1321@0 FactorialCont.q) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@8 nw@_1321@0 FactorialCont.q) perm$N)))
)))
(let ((anon70@10_assertion (and
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1420@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) perm$R))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1420@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1420@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) perm$N)))
)))
(let ((anon70@12_assertion (and
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1420@1 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) perm$R))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1420@1 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1420@1 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) perm$N)))
)))
(let ((anon70@16_assertion (and
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1420@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) perm$R))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1420@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1420@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) perm$N)))
)))
(let ((anon70@18_assertion (and
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1420@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.exp) perm$R))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1420@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.exp) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1420@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.exp) perm$N)))
)))
(let ((anon70@8_assertion (and
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@221 this FactorialActor.q) perm$R))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@221 this FactorialActor.q) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@221 this FactorialActor.q) perm$N)))
)))
(let ((anon0@30_assertion (and
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@23 this FactorialActor.q) perm$R))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@23 this FactorialActor.q) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@23 this FactorialActor.q) perm$N)))
)))
(let ((anon44@1_assertion (and
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@95 nw@_1321@0 FactorialCont.q) perm$R))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@95 nw@_1321@0 FactorialCont.q) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@95 nw@_1321@0 FactorialCont.q) perm$N)))
)))
(let ((anon47@10_assertion (and
    (>= v@149@0 0)
)))
(let ((anon47@11_assertion (and
    (>= vo@150@0 0)
)))
(let ((anon78_Else@8_assertion (and
    (>= vop@145@0 0)
)))
(let ((anon78_Else@7_assertion (and
    (>= vp@144@0 0)
)))
(let ((anon0_assertion (and
    (not (= this null))
)))
(let ((anon0@12_assertion (and
    (not (= this null))
)))
(let ((anon0@14_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@19 this FactorialActor.q)))
)))
(let ((anon0@17_assertion (and
    (not (= this null))
)))
(let ((anon0@19_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@21 this FactorialActor.q)))
)))
(let ((anon0@2_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 this FactorialActor.q)))
)))
(let ((anon0@22_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q)))
)))
(let ((anon0@24_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp)))
)))
(let ((anon0@25_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)))
)))
(let ((anon0@26_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.exp)))
)))
(let ((anon0@5_assertion (and
    (not (= this null))
)))
(let ((anon0@7_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 this FactorialActor.q)))
)))
(let ((anon0@9_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 this FactorialActor.q) FactorialActorChannel.imp)))
)))
(let ((anon10_assertion (and
    (not (= null mo@131@0))
)))
(let ((anon18_assertion (and
    (not (= nw@_1208@0 null))
)))
(let ((anon18@11_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@123 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@123 mo@131@0 Message.sender1) Future.q)))
)))
(let ((anon18@14_assertion (and
    (not (= null mo@131@0))
)))
(let ((anon18@16_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 mo@131@0 Message.sender1)))
)))
(let ((anon18@18_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 mo@131@0 Message.sender1) Future.q)))
)))
(let ((anon18@2_assertion (and
    (not (= null mo@131@0))
)))
(let ((anon18@21_assertion (and
    (not (= null mo@131@0))
)))
(let ((anon18@23_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@131 mo@131@0 Message.sender1)))
)))
(let ((anon18@25_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@131 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@131 mo@131@0 Message.sender1) Future.q)))
)))
(let ((anon18@27_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@131 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@131 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@131 mo@131@0 Message.sender1) Future.q) FutureChannel.exp)))
)))
(let ((anon18@4_assertion (and
    (not (= nw@_1208@0 null))
)))
(let ((anon18@7_assertion (and
    (not (= null mo@131@0))
)))
(let ((anon18@9_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@123 mo@131@0 Message.sender1)))
)))
(let ((anon25@1_assertion (and
    (not (= nw@_1297@0 null))
)))
(let ((anon25@3_assertion (and
    (not (= null mo@131@0))
)))
(let ((anon25@5_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@119 mo@131@0 Message.cust1)))
)))
(let ((anon25@7_assertion (and
    (not (= nw@_1297@0 null))
)))
(let ((anon41_assertion (and
    (not (= nw@_1321@0 null))
)))
(let ((anon41@1_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q)))
)))
(let ((anon41@2_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch)))
)))
(let ((anon47@1_assertion (and
    (not (= null mo@131@0))
)))
(let ((anon47@3_assertion (and
    (not (= nw@_1358@0 null))
)))
(let ((anon47@4_assertion (and
    (not (= null mo@131@0))
)))
(let ((anon47@6_assertion (and
    (not (= null mo@131@0))
)))
(let ((anon47@8_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1358@0 Message.sender1)))
)))
(let ((anon47@9_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1358@0 Message.sender1) Future.q)))
)))
(let ((anon59_assertion (and
    (not (= this null))
)))
(let ((anon59@2_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@99 this FactorialActor.q)))
)))
(let ((anon59@4_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@99 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@99 this FactorialActor.q) FactorialActorChannel.exp)))
)))
(let ((anon62@1_assertion (and
    (not (= nw@_1396@0 null))
)))
(let ((anon62@3_assertion (and
    (not (= nw@_1358@0 null))
)))
(let ((anon62@5_assertion (and
    (not (= nw@_1358@0 null))
)))
(let ((anon70_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q)))
)))
(let ((anon70@2_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp)))
)))
(let ((anon70@3_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)))
)))
(let ((anon70@4_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.exp)))
)))
(let ((anon73_Then_assertion (and
    (not (= this null))
)))
(let ((anon73_Then@10_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@27 this FactorialActor.q)))
)))
(let ((anon73_Then@12_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@27 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@27 this FactorialActor.q) FactorialActorChannel.imp)))
)))
(let ((anon73_Then@14_assertion (and
    (not (= this null))
)))
(let ((anon73_Then@16_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@28 this FactorialActor.q)))
)))
(let ((anon73_Then@18_assertion (and
    (not (= this null))
)))
(let ((anon73_Then@2_assertion (and
    (not (= this null))
)))
(let ((anon73_Then@20_assertion (and
    (not (= this null))
)))
(let ((anon73_Then@22_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 this FactorialActor.q)))
)))
(let ((anon73_Then@24_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 this FactorialActor.q) FactorialActorChannel.imp)))
)))
(let ((anon73_Then@26_assertion (and
    (not (= this null))
)))
(let ((anon73_Then@28_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 this FactorialActor.q)))
)))
(let ((anon73_Then@30_assertion (and
    (not (= this null))
)))
(let ((anon73_Then@32_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 this FactorialActor.q)))
)))
(let ((anon73_Then@34_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 this FactorialActor.q) FactorialActorChannel.imp)))
)))
(let ((anon73_Then@36_assertion (and
    (not (= this null))
)))
(let ((anon73_Then@38_assertion (and
    (not (= this null))
)))
(let ((anon73_Then@4_assertion (and
    (not (= this null))
)))
(let ((anon73_Then@40_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@30 this FactorialActor.q)))
)))
(let ((anon73_Then@42_assertion (and
    (not (= this null))
)))
(let ((anon73_Then@44_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@30 this FactorialActor.q)))
)))
(let ((anon73_Then@46_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@30 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@30 this FactorialActor.q) FactorialActorChannel.exp)))
)))
(let ((anon73_Then@47_assertion (and
    (not (= this null))
)))
(let ((anon73_Then@49_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@30 this FactorialActor.q)))
)))
(let ((anon73_Then@51_assertion (and
    (not (= this null))
)))
(let ((anon73_Then@53_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@31 this FactorialActor.q)))
)))
(let ((anon73_Then@55_assertion (and
    (not (= this null))
)))
(let ((anon73_Then@57_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@32 this FactorialActor.q)))
)))
(let ((anon73_Then@59_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@32 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@32 this FactorialActor.q) FactorialActorChannel.exp)))
)))
(let ((anon73_Then@6_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@26 this FactorialActor.q)))
)))
(let ((anon73_Then@61_assertion (and
    (not (= this null))
)))
(let ((anon73_Then@63_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@32 this FactorialActor.q)))
)))
(let ((anon73_Then@65_assertion (and
    (not (= this null))
)))
(let ((anon73_Then@67_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@33 this FactorialActor.q)))
)))
(let ((anon73_Then@69_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@33 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@33 this FactorialActor.q) FactorialActorChannel.imp)))
)))
(let ((anon73_Then@71_assertion (and
    (not (= this null))
)))
(let ((anon73_Then@73_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@33 this FactorialActor.q)))
)))
(let ((anon73_Then@75_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@33 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@33 this FactorialActor.q) FactorialActorChannel.imp)))
)))
(let ((anon73_Then@77_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@33 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@33 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@33 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)))
)))
(let ((anon73_Then@8_assertion (and
    (not (= this null))
)))
(let ((anon74_Then_assertion (and
    (not (= this null))
)))
(let ((anon74_Then@10_assertion (and
    (not (= null msg@128@0))
)))
(let ((anon74_Then@2_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 this FactorialActor.q)))
)))
(let ((anon74_Then@4_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 this FactorialActor.q) FactorialActorChannel.imp)))
)))
(let ((anon74_Then@6_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)))
)))
(let ((anon75_Then_assertion (and
    (not (= this null))
)))
(let ((anon75_Then@14_assertion (and
    (not (= null mo@131@0))
)))
(let ((anon75_Then@2_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@45 this FactorialActor.q)))
)))
(let ((anon75_Then@4_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@45 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@45 this FactorialActor.q) FactorialActorChannel.imp)))
)))
(let ((anon75_Then@5_assertion (and
    (not (= null msg@128@0))
)))
(let ((anon78_Else_assertion (and
    (not (= nw@_1321@0 null))
)))
(let ((anon78_Else@1_assertion (and
    (not (= null mo@131@0))
)))
(let ((anon78_Else@3_assertion (and
    (not (= null mo@131@0))
)))
(let ((anon78_Else@5_assertion (and
    (not (= null mo@131@0))
)))
(let ((anon78_Then_assertion (and
    (not (= null mo@131@0))
)))
(let ((anon79_Else@1_assertion (and
    (not (= null mo@131@0))
)))
(let ((anon79_Else@29_assertion (and
    (not (= null mo@131@0))
)))
(let ((anon79_Else@3_assertion (and
    (not (= nw@_1258@0 null))
)))
(let ((anon79_Else@31_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@108 mo@131@0 Message.cust1)))
)))
(let ((anon79_Else@33_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@108 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@108 mo@131@0 Message.cust1) FactorialCont.q)))
)))
(let ((anon79_Else@36_assertion (and
    (not (= null mo@131@0))
)))
(let ((anon79_Else@38_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 mo@131@0 Message.cust1)))
)))
(let ((anon79_Else@4_assertion (and
    (not (= null mo@131@0))
)))
(let ((anon79_Else@40_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 mo@131@0 Message.cust1) FactorialCont.q)))
)))
(let ((anon79_Else@43_assertion (and
    (not (= null mo@131@0))
)))
(let ((anon79_Else@45_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@116 mo@131@0 Message.cust1)))
)))
(let ((anon79_Else@47_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@116 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@116 mo@131@0 Message.cust1) FactorialCont.q)))
)))
(let ((anon79_Else@49_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@116 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@116 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@116 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp)))
)))
(let ((anon79_Else@6_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 nw@_1258@0 Message.sender2)))
)))
(let ((anon79_Else@7_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 nw@_1258@0 Message.sender2) Future.q)))
)))
(let ((anon79_Else@9_assertion (and
    (not (= receiver@140@0 null))
)))
(let ((anon79_Then@1_assertion (and
    (not (= nw@_1208@0 null))
)))
(let ((anon79_Then@2_assertion (and
    (not (= null mo@131@0))
)))
(let ((anon80_Then_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@103 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@103 nw@_1208@0 Message.sender4) FactorialCont.q)))
)))
(let ((anon84_Then_assertion (and
    (not (= nw@_1297@0 null))
)))
(let ((anon84_Then@2_assertion (and
    (not (= null mo@131@0))
)))
(let ((anon84_Then@4_assertion (and
    (not (= nw@_1258@0 null))
)))
(let ((anon86_Then_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@73 custp@146@0 FactorialCont.q)))
)))
(let ((anon89_Then_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.q)))
)))
(let ((anon92_Then_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q)))
)))
(let ((anon92_Then@1_assertion (and
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch)))
)))
(let ((anon96_Then_assertion (and
    (not (= nw@_1396@0 null))
)))
(let ((anon96_Then@2_assertion (and
    (not (= null mo@131@0))
)))
(let ((anon96_Then@4_assertion (and
    (not (= nw@_1358@0 null))
)))
(let ((anon70@26 (=> (and true
    (forall( (|lk#_1430| ref))(!(and (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ Heap |lk#_1430| rdheld) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ Heap@134 |lk#_1430| rdheld)) (= (< 0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap |lk#_1430| held)) (< 0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@134 |lk#_1430| held))))  :pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@134 |lk#_1430| held)) :pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ Heap@134 |lk#_1430| rdheld))))
  )
    anon70@26_assertion
)))
(let ((anon73_Then@77 (=> (and true
    (CanRead$ref$ Mask@32 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@33 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@33 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)
  )
    anon73_Then@77_assertion
)))
(let ((anon70@25 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1420@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state) perm$R))
    (= exhaleMask@_1420@8 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1420@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1420@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1420@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state) perm$R) (Fractions 100)))))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1420@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1420@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state) perm$N)))
    (IsGoodMask Mask@221)
    (wf Heap@134 exhaleMask@_1420@8)
    (wf Heap@134 exhaleMask@_1420@8)
    (wf Heap@134 Mask@221)
  )(and 
    anon70@25_assertion
    anon70@26
))))
(let ((anon73_Then@76 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@33 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@33 this FactorialActor.q) FactorialActorChannel.imp)))
  )(and 
    anon73_Then@76_assertion
    anon73_Then@77
))))
(let ((anon70@24 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon70@24_assertion
    anon70@25
))))
(let ((anon73_Then@75 (=> (and true
    (CanRead$ref$ Mask@32 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@33 this FactorialActor.q) FactorialActorChannel.imp)
  )(and 
    anon73_Then@75_assertion
    anon73_Then@76
))))
(let ((anon70@23 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1420@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state) perm$R))
    (= exhaleMask@_1420@7 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1420@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1420@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1420@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state) perm$R) (Fractions 100)))))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1420@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1420@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state) perm$N)))
    (IsGoodMask Mask@221)
    (wf Heap@134 exhaleMask@_1420@7)
    (wf Heap@134 Mask@221)
  )(and 
    anon70@23_assertion
    anon70@24
))))
(let ((anon73_Then@74 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@33 this FactorialActor.q)))
  )(and 
    anon73_Then@74_assertion
    anon73_Then@75
))))
(let ((anon70@22 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon70@22_assertion
    anon70@23
))))
(let ((anon73_Then@73 (=> (and true
    (CanRead$ref$ Mask@32 this FactorialActor.q)
  )(and 
    anon73_Then@73_assertion
    anon73_Then@74
))))
(let ((anon70@21 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1420@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid) perm$R))
    (= exhaleMask@_1420@6 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1420@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1420@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1420@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid) perm$R) (Fractions 100)))))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1420@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1420@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid) perm$N)))
    (IsGoodMask Mask@221)
    (wf Heap@134 exhaleMask@_1420@6)
    (wf Heap@134 Mask@221)
  )(and 
    anon70@21_assertion
    anon70@22
))))
(let ((anon73_Then@72 (=> (and true
    (not (= this null))
  )(and 
    anon73_Then@72_assertion
    anon73_Then@73
))))
(let ((anon70@20 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon70@20_assertion
    anon70@21
))))
(let ((anon73_Then@71 (=> (and true
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@33 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@33 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@33 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state) 0)
    (CanRead$Int$ Mask@32 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@33 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@33 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state)
  )(and 
    anon73_Then@71_assertion
    anon73_Then@72
))))
(let ((anon70@19 (=> (and true
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1420@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.exp) perm$R))
    (= exhaleMask@_1420@5 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1420@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.exp (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1420@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.exp) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1420@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.exp) perm$R) monitorK))))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1420@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.exp) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1420@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.exp) perm$N)))
    (IsGoodMask Mask@221)
    (wf Heap@134 exhaleMask@_1420@5)
    (wf Heap@134 Mask@221)
  )(and 
    anon70@19_assertion
    anon70@20
))))
(let ((anon73_Then@70 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@33 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@33 this FactorialActor.q) FactorialActorChannel.imp)))
  )(and 
    anon73_Then@70_assertion
    anon73_Then@71
))))
(let ((anon70@18 (=> (and true
    (> monitorK 0)
  )(and 
    anon70@18_assertion
    anon70@19
))))
(let ((anon73_Then@69 (=> (and true
    (CanRead$ref$ Mask@32 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@33 this FactorialActor.q) FactorialActorChannel.imp)
  )(and 
    anon73_Then@69_assertion
    anon73_Then@70
))))
(let ((anon70@17 (=> (and true
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1420@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) perm$R))
    (= exhaleMask@_1420@4 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1420@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1420@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1420@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) perm$R) monitorK))))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1420@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1420@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) perm$N)))
    (IsGoodMask Mask@221)
    (wf Heap@134 exhaleMask@_1420@4)
    (wf Heap@134 Mask@221)
  )(and 
    anon70@17_assertion
    anon70@18
))))
(let ((anon73_Then@68 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@33 this FactorialActor.q)))
  )(and 
    anon73_Then@68_assertion
    anon73_Then@69
))))
(let ((anon70@16 (=> (and true
    (> monitorK 0)
  )(and 
    anon70@16_assertion
    anon70@17
))))
(let ((anon73_Then@67 (=> (and true
    (CanRead$ref$ Mask@32 this FactorialActor.q)
  )(and 
    anon73_Then@67_assertion
    anon73_Then@68
))))
(let ((anon70@15 (=> (and true
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ exhaleMask@_1420@2 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu) perm$R))
    (= exhaleMask@_1420@3 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ exhaleMask@_1420@2 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ exhaleMask@_1420@2 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ exhaleMask@_1420@2 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu) perm$R) monitorK))))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ exhaleMask@_1420@2 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ exhaleMask@_1420@2 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu) perm$N)))
    (IsGoodMask Mask@221)
    (wf Heap@134 exhaleMask@_1420@3)
    (wf Heap@134 Mask@221)
  )(and 
    anon70@15_assertion
    anon70@16
))))
(let ((anon73_Then@66 (=> (and true
    (not (= this null))
  )(and 
    anon73_Then@66_assertion
    anon73_Then@67
))))
(let ((anon70@14 (=> (and true
    (> monitorK 0)
  )(and 
    anon70@14_assertion
    anon70@15
))))
(let ((anon73_Then@65 (=> (and true
    (= Heap@33 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@32 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@32 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@32 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1188@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@32 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@32 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state)))
    (= Mask@32 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@31 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@33 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@33 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@31 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@33 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@33 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@31 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@33 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@33 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state) perm$R) (Fractions 100)))))
    (> (Fractions 100) 0)
    (CanRead$ref$ Mask@31 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@32 this FactorialActor.q) FactorialActorChannel.imp)
    (IsGoodMask Mask@32)
    (IsGoodState$Int$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1188@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@33 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@33 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@32 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@32 this FactorialActor.q) FactorialActorChannel.imp)))
    (wf Heap@33 Mask@31)
    (wf Heap@33 Mask@32)
    (wf inhaleHeap@_1188@0 Mask@32)
  )(and 
    anon73_Then@65_assertion
    anon73_Then@66
))))
(let ((anon70@13 (=> (and true
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1420@1 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) perm$R))
    (= exhaleMask@_1420@2 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1420@1 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1420@1 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1420@1 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) perm$R) monitorK))))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1420@1 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1420@1 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) perm$N)))
    (IsGoodMask Mask@221)
    (wf Heap@134 exhaleMask@_1420@2)
    (wf Heap@134 Mask@221)
  )(and 
    anon70@13_assertion
    anon70@14
))))
(let ((anon73_Then@64 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@32 this FactorialActor.q)))
  )(and 
    anon73_Then@64_assertion
    anon73_Then@65
))))
(let ((anon70@12 (=> (and true
    (> monitorK 0)
  )(and 
    anon70@12_assertion
    anon70@13
))))
(let ((anon73_Then@63 (=> (and true
    (CanRead$ref$ Mask@31 this FactorialActor.q)
  )(and 
    anon73_Then@63_assertion
    anon73_Then@64
))))
(let ((anon70@11 (=> (and true
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1420@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) perm$R))
    (= exhaleMask@_1420@1 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1420@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1420@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1420@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) perm$R) monitorK))))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1420@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1420@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) perm$N)))
    (IsGoodMask Mask@221)
    (wf Heap@134 exhaleMask@_1420@1)
    (wf Heap@134 Mask@221)
  )(and 
    anon70@11_assertion
    anon70@12
))))
(let ((anon73_Then@62 (=> (and true
    (not (= this null))
  )(and 
    anon73_Then@62_assertion
    anon73_Then@63
))))
(let ((anon70@10 (=> (and true
    (> monitorK 0)
  )(and 
    anon70@10_assertion
    anon70@11
))))
(let ((anon73_Then@61 (=> (and true
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@32 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@32 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@32 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state) 0)
    (CanRead$Int$ Mask@31 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@32 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@32 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state)
  )(and 
    anon73_Then@61_assertion
    anon73_Then@62
))))
(let ((anon70@9 (=> (and true
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@221 this FactorialActor.q) perm$R))
    (= (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@221 this FactorialActor.q (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@221 this FactorialActor.q) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@221 this FactorialActor.q) perm$R) monitorK))) exhaleMask@_1420@0)
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@221 this FactorialActor.q) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@221 this FactorialActor.q) perm$N)))
    (IsGoodMask Mask@221)
    (wf Heap@134 exhaleMask@_1420@0)
    (wf Heap@134 Mask@221)
  )(and 
    anon70@9_assertion
    anon70@10
))))
(let ((anon73_Then@60 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@32 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@32 this FactorialActor.q) FactorialActorChannel.exp)))
  )(and 
    anon73_Then@60_assertion
    anon73_Then@61
))))
(let ((anon70@8 (=> (and true
    (> monitorK 0)
  )(and 
    anon70@8_assertion
    anon70@9
))))
(let ((anon73_Then@59 (=> (and true
    (CanRead$ref$ Mask@31 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@32 this FactorialActor.q) FactorialActorChannel.exp)
  )(and 
    anon73_Then@59_assertion
    anon73_Then@60
))))
(let ((anon70@7 (=> (and true
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state) 0)
    (= Credits@8 (MapWrite$$@Map@@ref@To@Int@@$ Credits@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) (- (MapRead$$@Map@@ref@To@Int@@$ Credits@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)) 1)))
  )(and 
    anon70@7_assertion
    anon70@8
))))
(let ((anon73_Then@58 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@32 this FactorialActor.q)))
  )(and 
    anon73_Then@58_assertion
    anon73_Then@59
))))
(let ((anon70@6 (=> (and true
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state) 0)
  )(and 
    anon70@6_assertion
    anon70@7
))))
(let ((anon73_Then@57 (=> (and true
    (CanRead$ref$ Mask@31 this FactorialActor.q)
  )(and 
    anon73_Then@57_assertion
    anon73_Then@58
))))
(let ((anon70@5 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.exp)))
  )(and 
    anon70@5_assertion
    anon70@6
))))
(let ((anon73_Then@56 (=> (and true
    (not (= this null))
  )(and 
    anon73_Then@56_assertion
    anon73_Then@57
))))
(let ((anon70@4 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)))
  )(and 
    anon70@4_assertion
    anon70@5
))))
(let ((anon73_Then@55 (=> (and true
    (= Heap@32 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@31 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@31 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@31 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1188@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@31 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@31 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state)))
    (= Mask@31 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@30 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@32 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@32 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@30 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@32 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@32 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@30 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@32 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@32 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state) perm$R) (Fractions 100)))))
    (> (Fractions 100) 0)
    (CanRead$ref$ Mask@30 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@31 this FactorialActor.q) FactorialActorChannel.exp)
    (IsGoodMask Mask@31)
    (IsGoodState$Int$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1188@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@32 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@32 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@31 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@31 this FactorialActor.q) FactorialActorChannel.exp)))
    (wf Heap@32 Mask@30)
    (wf Heap@32 Mask@31)
    (wf inhaleHeap@_1188@0 Mask@31)
  )(and 
    anon73_Then@55_assertion
    anon73_Then@56
))))
(let ((anon70@3 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp)))
  )(and 
    anon70@3_assertion
    anon70@4
))))
(let ((anon73_Then@54 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@31 this FactorialActor.q)))
  )(and 
    anon73_Then@54_assertion
    anon73_Then@55
))))
(let ((anon70@2 (=> (and true
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch))
  )(and 
    anon70@2_assertion
    anon70@3
))))
(let ((anon73_Then@53 (=> (and true
    (CanRead$ref$ Mask@30 this FactorialActor.q)
  )(and 
    anon73_Then@53_assertion
    anon73_Then@54
))))
(let ((anon70@1 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@134 this FactorialActor.q)))
  )(and 
    anon70@1_assertion
    anon70@2
))))
(let ((anon73_Then@52 (=> (and true
    (not (= this null))
  )(and 
    anon73_Then@52_assertion
    anon73_Then@53
))))
(let ((anon70 (=> (and true
  )(and 
    anon70_assertion
    anon70@1
))))
(let ((anon73_Then@51 (=> (and true
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1188@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@31 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@31 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid) Heap@31)
    (= Heap@31 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Heap@30 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@30 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@30 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1188@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@30 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@30 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid)))
    (= Mask@30 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@29 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@31 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@31 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@29 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@31 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@31 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@29 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@31 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@31 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid) perm$R) (Fractions 100)))))
    (> (Fractions 100) 0)
    (CanRead$ref$ Mask@29 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@30 this FactorialActor.q) FactorialActorChannel.exp)
    (IsGoodMask Mask@30)
    (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1188@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@31 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@31 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@30 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@30 this FactorialActor.q) FactorialActorChannel.exp)))
    (wf Heap@31 Mask@29)
    (wf Heap@31 Mask@30)
    (wf inhaleHeap@_1188@0 Mask@30)
  )(and 
    anon73_Then@51_assertion
    anon73_Then@52
))))
(let ((anon21 (=> (and true
    (= Credits@7 Credits@4)
    (= Heap@134 Heap@133)
    (= Mask@221 Mask@220)
    (IsGoodMask Mask@220)
    (wf Heap@133 Mask@220)
  )
    anon70
)))
(let ((anon31 (=> (and true
    (= Credits@7 Credits@4)
    (= Heap@134 Heap@119)
    (= Mask@221 Mask@206)
    (wf Heap@119 Mask@206)
  )
    anon70
)))
(let ((anon68 (=> (and true
    (= Credits@7 Credits@6)
    (= Heap@134 Heap@102)
    (= Mask@221 Mask@138)
    (wf Heap@102 Mask@138)
  )
    anon70
)))
(let ((anon75_Else (=> (and true
    (= Credits@7 Credits@4)
    (= Heap@45 Heap@134)
    (= Mask@43 Mask@221)
    (not (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@45 msg@128@0 Message.type) 1))
  )
    anon70
)))
(let ((anon73_Then@50 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@30 this FactorialActor.q)))
  )(and 
    anon73_Then@50_assertion
    anon73_Then@51
))))
(let ((anon82_Else (=> (and true
    (not (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@131 this@135@0 FutureChannelExpEP.state) 0))
  )
    anon21
)))
(let ((anon82_Then (=> (and true
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@131 this@135@0 FutureChannelExpEP.state) 0)
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@133 this@135@0 FutureChannelExpEP.state) 1)
  )
    anon21
)))
(let ((anon85_Else (=> (and true
    (not (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@119 nw@_1297@0 Message.vr3) ($@Message.factorial Heap@119 Mask@206 nw@_1297@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@119 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@119 mo@131@0 Message.cust1) FactorialCont.vo))))
  )
    anon31
)))
(let ((anon85_Then (=> (and true
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@119 nw@_1297@0 Message.vr3) ($@Message.factorial Heap@119 Mask@206 nw@_1297@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@119 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@119 mo@131@0 Message.cust1) FactorialCont.vo)))
  )
    anon31
)))
(let ((anon97_Else (=> (and true
    (not (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@102 nw@_1396@0 Message.vr3) ($@Message.factorial Heap@102 Mask@138 nw@_1358@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@102 nw@_1358@0 Message.vo1))))
  )
    anon68
)))
(let ((anon97_Then (=> (and true
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@102 nw@_1396@0 Message.vr3) ($@Message.factorial Heap@102 Mask@138 nw@_1358@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@102 nw@_1358@0 Message.vo1)))
  )
    anon68
)))
(let ((anon73_Then@49 (=> (and true
    (CanRead$ref$ Mask@29 this FactorialActor.q)
  )(and 
    anon73_Then@49_assertion
    anon73_Then@50
))))
(let ((anon18@40 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1249@3 this@135@0 FutureChannelExpEP.valid) perm$R))
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1257@0 this@135@0 FutureChannelExpEP.valid) Heap@133)
    (= exhaleMask@_1249@4 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1249@3 this@135@0 FutureChannelExpEP.valid (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1249@3 this@135@0 FutureChannelExpEP.valid) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1249@3 this@135@0 FutureChannelExpEP.valid) perm$R) (Fractions 100)))))
    (= Heap@132 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@131 this@135@0 FutureChannelExpEP.state (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1257@0 this@135@0 FutureChannelExpEP.state)))
    (= Heap@133 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Heap@132 this@135@0 FutureChannelExpEP.valid (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1257@0 this@135@0 FutureChannelExpEP.valid)))
    (= Mask@219 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1249@4 this@135@0 FutureChannelExpEP.state (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1249@4 this@135@0 FutureChannelExpEP.state) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1249@4 this@135@0 FutureChannelExpEP.state) perm$R) (Fractions 100)))))
    (= Mask@220 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@219 this@135@0 FutureChannelExpEP.valid (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@219 this@135@0 FutureChannelExpEP.valid) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@219 this@135@0 FutureChannelExpEP.valid) perm$R) (Fractions 100)))))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1249@3 this@135@0 FutureChannelExpEP.valid) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1249@3 this@135@0 FutureChannelExpEP.valid) perm$N)))
    (> (Fractions 100) 0)
    (> (Fractions 100) 0)
    (IsGoodInhaleState inhaleHeap@_1257@0 Heap@131 exhaleMask@_1249@4)
    (IsGoodMask Mask@218)
    (IsGoodMask Mask@219)
    (IsGoodMask Mask@220)
    (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1257@0 this@135@0 FutureChannelExpEP.valid))
    (IsGoodState$Int$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1257@0 this@135@0 FutureChannelExpEP.state))
    (not (= this@135@0 null))
    (not (= this@135@0 null))
    (wf Heap@131 exhaleMask@_1249@4)
    (wf Heap@131 exhaleMask@_1249@4)
    (wf Heap@131 Mask@218)
    (wf Heap@132 exhaleMask@_1249@4)
    (wf Heap@132 Mask@219)
    (wf Heap@133 Mask@219)
    (wf Heap@133 Mask@220)
    (wf inhaleHeap@_1257@0 Mask@219)
    (wf inhaleHeap@_1257@0 Mask@220)
  )
    (and anon82_Else anon82_Then)
)))
(let (($branchMerge_1 (=> (and true
  )
    (and anon85_Else anon85_Then)
)))
(let (($branchMerge_4 (=> (and true
  )
    (and anon97_Else anon97_Then)
)))
(let ((anon73_Then@48 (=> (and true
    (not (= this null))
  )(and 
    anon73_Then@48_assertion
    anon73_Then@49
))))
(let ((anon18@39 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon18@39_assertion
    anon18@40
))))
(let ((anon84_Else (=> (and true
    (not (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@119 nw@_1297@0 Message.vr3) ($@Message.factorial Heap@119 Mask@206 nw@_1297@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@119 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@119 mo@131@0 Message.cust1) FactorialCont.vo))))
  )
    $branchMerge_1
)))
(let ((anon84_Then@7 (=> (and true
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@119 nw@_1297@0 Message.vr3) ($@Message.factorial Heap@119 Mask@206 nw@_1258@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@119 mo@131@0 Message.vo1)))
  )
    $branchMerge_1
)))
(let ((anon96_Else (=> (and true
    (not (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@102 nw@_1396@0 Message.vr3) ($@Message.factorial Heap@102 Mask@138 nw@_1358@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@102 nw@_1358@0 Message.vo1))))
  )
    $branchMerge_4
)))
(let ((anon96_Then@7 (=> (and true
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@102 nw@_1396@0 Message.vr3) ($@Message.factorial Heap@102 Mask@138 nw@_1358@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@102 mo@131@0 Message.vo1)))
  )
    $branchMerge_4
)))
(let ((anon73_Then@47 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@30 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@30 this FactorialActor.q) FactorialActorChannel.exp)))
  )(and 
    anon73_Then@47_assertion
    anon73_Then@48
))))
(let ((anon18@38 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1249@2 nw@_1208@0 Message.invFinalResult) perm$R))
    (= exhaleMask@_1249@3 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1249@2 nw@_1208@0 Message.invFinalResult (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1249@2 nw@_1208@0 Message.invFinalResult) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1249@2 nw@_1208@0 Message.invFinalResult) perm$R) (Fractions 100)))))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1249@2 nw@_1208@0 Message.invFinalResult) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1249@2 nw@_1208@0 Message.invFinalResult) perm$N)))
    (IsGoodMask Mask@218)
    (wf Heap@131 exhaleMask@_1249@3)
    (wf Heap@131 Mask@218)
  )(and 
    anon18@38_assertion
    anon18@39
))))
(let ((anon84_Then@6 (=> (and true
    (>= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@119 mo@131@0 Message.vo1) 0)
    (wf Heap@119 Mask@206)
  )(and 
    anon84_Then@6_assertion
    anon84_Then@7
))))
(let ((anon96_Then@6 (=> (and true
    (>= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@102 mo@131@0 Message.vo1) 0)
    (wf Heap@102 Mask@138)
  )(and 
    anon96_Then@6_assertion
    anon96_Then@7
))))
(let ((anon73_Then@46 (=> (and true
    (CanRead$ref$ Mask@29 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@30 this FactorialActor.q) FactorialActorChannel.exp)
  )(and 
    anon73_Then@46_assertion
    anon73_Then@47
))))
(let ((anon18@37 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon18@37_assertion
    anon18@38
))))
(let ((anon84_Then@5 (=> (and true
    (< (* 1000 funcappK@_1319) (Fractions 1))
    (< 0 funcappK@_1319)
    (not (= nw@_1258@0 null))
  )(and 
    anon84_Then@5_assertion
    anon84_Then@6
))))
(let ((anon96_Then@5 (=> (and true
    (< (* 1000 funcappK@_1418) (Fractions 1))
    (< 0 funcappK@_1418)
    (not (= nw@_1358@0 null))
  )(and 
    anon96_Then@5_assertion
    anon96_Then@6
))))
(let ((anon73_Then@45 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@30 this FactorialActor.q)))
  )(and 
    anon73_Then@45_assertion
    anon73_Then@46
))))
(let ((anon18@36 (=> (and true
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1249@1 nw@_1208@0 Message.type) perm$R))
    (= exhaleMask@_1249@2 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1249@1 nw@_1208@0 Message.type (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1249@1 nw@_1208@0 Message.type) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1249@1 nw@_1208@0 Message.type) perm$R) monitorK))))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1249@1 nw@_1208@0 Message.type) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1249@1 nw@_1208@0 Message.type) perm$N)))
    (IsGoodMask Mask@218)
    (wf Heap@131 exhaleMask@_1249@2)
    (wf Heap@131 Mask@218)
  )(and 
    anon18@36_assertion
    anon18@37
))))
(let ((anon84_Then@4 (=> (and true
    (CanRead$Int$ Mask@206 mo@131@0 Message.vo1)
  )(and 
    anon84_Then@4_assertion
    anon84_Then@5
))))
(let ((anon96_Then@4 (=> (and true
    (CanRead$Int$ Mask@138 mo@131@0 Message.vo1)
  )(and 
    anon96_Then@4_assertion
    anon96_Then@5
))))
(let ((anon73_Then@44 (=> (and true
    (CanRead$ref$ Mask@29 this FactorialActor.q)
  )(and 
    anon73_Then@44_assertion
    anon73_Then@45
))))
(let ((anon18@35 (=> (and true
    (> monitorK 0)
  )(and 
    anon18@35_assertion
    anon18@36
))))
(let ((anon84_Then@3 (=> (and true
    (not (= null mo@131@0))
  )(and 
    anon84_Then@3_assertion
    anon84_Then@4
))))
(let ((anon96_Then@3 (=> (and true
    (not (= null mo@131@0))
  )(and 
    anon96_Then@3_assertion
    anon96_Then@4
))))
(let ((anon73_Then@43 (=> (and true
    (not (= this null))
  )(and 
    anon73_Then@43_assertion
    anon73_Then@44
))))
(let ((anon18@34 (=> (and true
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1249@0 nw@_1208@0 Message.type) perm$R))
    (= exhaleMask@_1249@1 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1249@0 nw@_1208@0 Message.type (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1249@0 nw@_1208@0 Message.type) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1249@0 nw@_1208@0 Message.type) perm$R) monitorK))))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1249@0 nw@_1208@0 Message.type) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1249@0 nw@_1208@0 Message.type) perm$N)))
    (IsGoodMask Mask@218)
    (wf Heap@131 exhaleMask@_1249@1)
    (wf Heap@131 Mask@218)
  )(and 
    anon18@34_assertion
    anon18@35
))))
(let ((anon84_Then@2 (=> (and true
    (CanRead$Int$ Mask@206 nw@_1297@0 Message.vr3)
  )(and 
    anon84_Then@2_assertion
    anon84_Then@3
))))
(let ((anon96_Then@2 (=> (and true
    (CanRead$Int$ Mask@138 nw@_1396@0 Message.vr3)
  )(and 
    anon96_Then@2_assertion
    anon96_Then@3
))))
(let ((anon73_Then@42 (=> (and true
    (CanRead$ref$ Mask@29 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@30 this FactorialActor.q) FactorialActorChannel.exp)
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@30 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@30 this FactorialActor.q) FactorialActorChannel.exp)))
  )(and 
    anon73_Then@42_assertion
    anon73_Then@43
))))
(let ((anon18@33 (=> (and true
    (> monitorK 0)
  )(and 
    anon18@33_assertion
    anon18@34
))))
(let ((anon84_Then@1 (=> (and true
    (not (= nw@_1297@0 null))
  )(and 
    anon84_Then@1_assertion
    anon84_Then@2
))))
(let ((anon96_Then@1 (=> (and true
    (not (= nw@_1396@0 null))
  )(and 
    anon96_Then@1_assertion
    anon96_Then@2
))))
(let ((anon73_Then@41 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@30 this FactorialActor.q)))
  )(and 
    anon73_Then@41_assertion
    anon73_Then@42
))))
(let ((anon18@32 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@218 this@135@0 FutureChannelExpEP.state) perm$R))
    (= (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@218 this@135@0 FutureChannelExpEP.state (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@218 this@135@0 FutureChannelExpEP.state) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@218 this@135@0 FutureChannelExpEP.state) perm$R) (Fractions 100)))) exhaleMask@_1249@0)
    (=> (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@218 this@135@0 FutureChannelExpEP.state) perm$R) (Fractions 100)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@218 this@135@0 FutureChannelExpEP.state) perm$N)))
    (IsGoodMask Mask@218)
    (wf Heap@131 exhaleMask@_1249@0)
    (wf Heap@131 Mask@218)
  )(and 
    anon18@32_assertion
    anon18@33
))))
(let ((anon84_Then (=> (and true
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@119 nw@_1297@0 Message.vr3) ($@Message.factorial Heap@119 Mask@206 nw@_1297@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@119 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@119 mo@131@0 Message.cust1) FactorialCont.vo)))
  )(and 
    anon84_Then_assertion
    anon84_Then@1
))))
(let ((anon96_Then (=> (and true
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@102 nw@_1396@0 Message.vr3) ($@Message.factorial Heap@102 Mask@138 nw@_1358@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@102 nw@_1358@0 Message.vo1)))
  )(and 
    anon96_Then_assertion
    anon96_Then@1
))))
(let ((anon73_Then@40 (=> (and true
    (CanRead$ref$ Mask@29 this FactorialActor.q)
  )(and 
    anon73_Then@40_assertion
    anon73_Then@41
))))
(let ((anon18@31 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon18@31_assertion
    anon18@32
))))
(let ((anon25@9 (=> (and true
    (>= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@119 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@119 mo@131@0 Message.cust1) FactorialCont.vo) 0)
    (wf Heap@119 Mask@206)
  )
    (and anon84_Else anon84_Then)
)))
(let ((anon62@7 (=> (and true
    (>= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@102 nw@_1358@0 Message.vo1) 0)
    (wf Heap@102 Mask@138)
  )
    (and anon96_Else anon96_Then)
)))
(let ((anon73_Then@39 (=> (and true
    (not (= this null))
  )(and 
    anon73_Then@39_assertion
    anon73_Then@40
))))
(let ((anon18@30 (=> (and true
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@131 this@135@0 FutureChannelExpEP.state) 0)
  )(and 
    anon18@30_assertion
    anon18@31
))))
(let ((anon25@8 (=> (and true
    (< (* 1000 funcappK@_1311) (Fractions 1))
    (< 0 funcappK@_1311)
    (not (= nw@_1297@0 null))
  )(and 
    anon25@8_assertion
    anon25@9
))))
(let ((anon62@6 (=> (and true
    (< (* 1000 funcappK@_1410) (Fractions 1))
    (< 0 funcappK@_1410)
    (not (= nw@_1358@0 null))
  )(and 
    anon62@6_assertion
    anon62@7
))))
(let ((anon73_Then@38 (=> (and true
    (= Heap@30 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 this FactorialActor.q) FactorialActorChannel.exp (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1188@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 this FactorialActor.q) FactorialActorChannel.exp)))
    (= Mask@29 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@28 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@30 this FactorialActor.q) FactorialActorChannel.exp (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@28 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@30 this FactorialActor.q) FactorialActorChannel.exp) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@28 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@30 this FactorialActor.q) FactorialActorChannel.exp) perm$R) monitorK))))
    (> monitorK 0)
    (CanRead$ref$ Mask@28 this FactorialActor.q)
    (IsGoodMask Mask@29)
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1188@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@30 this FactorialActor.q) FactorialActorChannel.exp))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 this FactorialActor.q)))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@30 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@30 this FactorialActor.q) FactorialActorChannel.exp)) (= FactorialActorChannelExpEP@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@30 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@30 this FactorialActor.q) FactorialActorChannel.exp))))
    (wf Heap@30 Mask@28)
    (wf Heap@30 Mask@29)
    (wf inhaleHeap@_1188@0 Mask@29)
  )(and 
    anon73_Then@38_assertion
    anon73_Then@39
))))
(let ((anon18@29 (=> (and true
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@131 nw@_1208@0 Message.type) 4)
  )(and 
    anon18@29_assertion
    anon18@30
))))
(let ((anon25@7 (=> (and true
    (CanRead$Int$ Mask@206 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@119 mo@131@0 Message.cust1) FactorialCont.vo)
  )(and 
    anon25@7_assertion
    anon25@8
))))
(let ((anon62@5 (=> (and true
    (CanRead$Int$ Mask@138 nw@_1358@0 Message.vo1)
  )(and 
    anon62@5_assertion
    anon62@6
))))
(let ((anon73_Then@37 (=> (and true
    (not (= this null))
  )(and 
    anon73_Then@37_assertion
    anon73_Then@38
))))
(let ((anon18@28 (=> (and true
    (= this@135@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@131 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@131 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@131 mo@131@0 Message.sender1) Future.q) FutureChannel.exp))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@131 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@131 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@131 mo@131@0 Message.sender1) Future.q) FutureChannel.exp)))
  )(and 
    anon18@28_assertion
    anon18@29
))))
(let ((anon25@6 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@119 mo@131@0 Message.cust1)))
  )(and 
    anon25@6_assertion
    anon25@7
))))
(let ((anon62@4 (=> (and true
    (not (= nw@_1358@0 null))
  )(and 
    anon62@4_assertion
    anon62@5
))))
(let ((anon73_Then@36 (=> (and true
    (CanRead$ref$ Mask@28 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)))
  )(and 
    anon73_Then@36_assertion
    anon73_Then@37
))))
(let ((anon18@27 (=> (and true
    (CanRead$ref$ Mask@218 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@131 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@131 mo@131@0 Message.sender1) Future.q) FutureChannel.exp)
  )(and 
    anon18@27_assertion
    anon18@28
))))
(let ((anon25@5 (=> (and true
    (CanRead$ref$ Mask@206 mo@131@0 Message.cust1)
  )(and 
    anon25@5_assertion
    anon25@6
))))
(let ((anon62@3 (=> (and true
    (CanRead$Int$ Mask@138 nw@_1396@0 Message.vr3)
  )(and 
    anon62@3_assertion
    anon62@4
))))
(let ((anon73_Then@35 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 this FactorialActor.q) FactorialActorChannel.imp)))
  )(and 
    anon73_Then@35_assertion
    anon73_Then@36
))))
(let ((anon18@26 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@131 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@131 mo@131@0 Message.sender1) Future.q)))
  )(and 
    anon18@26_assertion
    anon18@27
))))
(let ((anon25@4 (=> (and true
    (not (= null mo@131@0))
  )(and 
    anon25@4_assertion
    anon25@5
))))
(let ((anon62@2 (=> (and true
    (not (= nw@_1396@0 null))
  )(and 
    anon62@2_assertion
    anon62@3
))))
(let ((anon73_Then@34 (=> (and true
    (CanRead$ref$ Mask@28 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 this FactorialActor.q) FactorialActorChannel.imp)
  )(and 
    anon73_Then@34_assertion
    anon73_Then@35
))))
(let ((anon18@25 (=> (and true
    (CanRead$ref$ Mask@218 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@131 mo@131@0 Message.sender1) Future.q)
  )(and 
    anon18@25_assertion
    anon18@26
))))
(let ((anon25@3 (=> (and true
    (CanRead$Int$ Mask@206 nw@_1297@0 Message.vr3)
  )(and 
    anon25@3_assertion
    anon25@4
))))
(let ((anon62@1 (=> (and true
    (= Heap@102 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@101 nw@_1396@0 Message.type 4))
    (CanWrite$Int$ Mask@138 nw@_1396@0 Message.type)
    (wf Heap@102 Mask@138)
  )(and 
    anon62@1_assertion
    anon62@2
))))
(let ((anon73_Then@33 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 this FactorialActor.q)))
  )(and 
    anon73_Then@33_assertion
    anon73_Then@34
))))
(let ((anon18@24 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@131 mo@131@0 Message.sender1)))
  )(and 
    anon18@24_assertion
    anon18@25
))))
(let ((anon25@2 (=> (and true
    (not (= nw@_1297@0 null))
  )(and 
    anon25@2_assertion
    anon25@3
))))
(let ((anon62 (=> (and true
    (<= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@101 nw@_1396@0 held) 0)
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ Heap@101 nw@_1396@0 mu) $LockBottom)
    (= Mask@121 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@120 nw@_1396@0 Message.type (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@120 nw@_1396@0 Message.type) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@120 nw@_1396@0 Message.type) perm$R) (Fractions 100)))))
    (= Mask@122 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@121 nw@_1396@0 Message.sender1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@121 nw@_1396@0 Message.sender1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@121 nw@_1396@0 Message.sender1) perm$R) (Fractions 100)))))
    (= Mask@123 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@122 nw@_1396@0 Message.sender3 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@122 nw@_1396@0 Message.sender3) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@122 nw@_1396@0 Message.sender3) perm$R) (Fractions 100)))))
    (= Mask@124 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@123 nw@_1396@0 Message.sender2 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@123 nw@_1396@0 Message.sender2) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@123 nw@_1396@0 Message.sender2) perm$R) (Fractions 100)))))
    (= Mask@125 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@124 nw@_1396@0 Message.sender4 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@124 nw@_1396@0 Message.sender4) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@124 nw@_1396@0 Message.sender4) perm$R) (Fractions 100)))))
    (= Mask@126 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@125 nw@_1396@0 Message.receiver1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@125 nw@_1396@0 Message.receiver1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@125 nw@_1396@0 Message.receiver1) perm$R) (Fractions 100)))))
    (= Mask@127 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@126 nw@_1396@0 Message.receiver2 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@126 nw@_1396@0 Message.receiver2) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@126 nw@_1396@0 Message.receiver2) perm$R) (Fractions 100)))))
    (= Mask@128 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@127 nw@_1396@0 Message.receiver3 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@127 nw@_1396@0 Message.receiver3) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@127 nw@_1396@0 Message.receiver3) perm$R) (Fractions 100)))))
    (= Mask@129 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@128 nw@_1396@0 Message.receiver4 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@128 nw@_1396@0 Message.receiver4) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@128 nw@_1396@0 Message.receiver4) perm$R) (Fractions 100)))))
    (= Mask@130 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@129 nw@_1396@0 Message.v1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@129 nw@_1396@0 Message.v1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@129 nw@_1396@0 Message.v1) perm$R) (Fractions 100)))))
    (= Mask@131 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@130 nw@_1396@0 Message.vo1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@130 nw@_1396@0 Message.vo1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@130 nw@_1396@0 Message.vo1) perm$R) (Fractions 100)))))
    (= Mask@132 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@131 nw@_1396@0 Message.cust1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@131 nw@_1396@0 Message.cust1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@131 nw@_1396@0 Message.cust1) perm$R) (Fractions 100)))))
    (= Mask@133 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@132 nw@_1396@0 Message.vr1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@132 nw@_1396@0 Message.vr1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@132 nw@_1396@0 Message.vr1) perm$R) (Fractions 100)))))
    (= Mask@134 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@133 nw@_1396@0 Message.old1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@133 nw@_1396@0 Message.old1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@133 nw@_1396@0 Message.old1) perm$R) (Fractions 100)))))
    (= Mask@135 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@134 nw@_1396@0 Message.vr2 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@134 nw@_1396@0 Message.vr2) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@134 nw@_1396@0 Message.vr2) perm$R) (Fractions 100)))))
    (= Mask@136 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@135 nw@_1396@0 Message.old2 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@135 nw@_1396@0 Message.old2) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@135 nw@_1396@0 Message.old2) perm$R) (Fractions 100)))))
    (= Mask@137 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@136 nw@_1396@0 Message.vr3 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@136 nw@_1396@0 Message.vr3) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@136 nw@_1396@0 Message.vr3) perm$R) (Fractions 100)))))
    (= Mask@138 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@137 nw@_1396@0 mu (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@137 nw@_1396@0 mu) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@137 nw@_1396@0 mu) perm$R) (Fractions 100)))))
    (= Message@t (dtype nw@_1396@0))
    (forall( (|f_$18_$0| Field$Bool$))(and (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ Mask@120 nw@_1396@0 |f_$18_$0|) perm$R) 0) (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ Mask@120 nw@_1396@0 |f_$18_$0|) perm$N) 0)))
    (forall( (|f_$18_$1| Field$Int$))(and (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@120 nw@_1396@0 |f_$18_$1|) perm$R) 0) (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@120 nw@_1396@0 |f_$18_$1|) perm$N) 0)))
    (forall( (|f_$18_$2| Field$ref$))(and (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@120 nw@_1396@0 |f_$18_$2|) perm$R) 0) (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@120 nw@_1396@0 |f_$18_$2|) perm$N) 0)))
    (forall( (|f_$18_$3| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(and (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@120 nw@_1396@0 |f_$18_$3|) perm$R) 0) (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@120 nw@_1396@0 |f_$18_$3|) perm$N) 0)))
    (forall( (|f_$18_$4| Field$Mu$))(and (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@120 nw@_1396@0 |f_$18_$4|) perm$R) 0) (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@120 nw@_1396@0 |f_$18_$4|) perm$N) 0)))
    (IsGoodMask Mask@120)
    (not (= nw@_1396@0 null))
    (not (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ Heap@101 nw@_1396@0 rdheld))
    (wf Heap@101 Mask@120)
  )(and 
    anon62_assertion
    anon62@1
))))
(let ((anon73_Then@32 (=> (and true
    (CanRead$ref$ Mask@28 this FactorialActor.q)
  )(and 
    anon73_Then@32_assertion
    anon73_Then@33
))))
(let ((anon18@23 (=> (and true
    (CanRead$ref$ Mask@218 mo@131@0 Message.sender1)
  )(and 
    anon18@23_assertion
    anon18@24
))))
(let ((anon25@1 (=> (and true
    (= Heap@119 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@118 nw@_1297@0 Message.type 4))
    (CanWrite$Int$ Mask@206 nw@_1297@0 Message.type)
    (wf Heap@119 Mask@206)
  )(and 
    anon25@1_assertion
    anon25@2
))))
(let ((anon95_Else (=> (and true
    (not (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@99 this@153@0 FactorialActorChannelExpEP.state) 0))
  )
    anon62
)))
(let ((anon95_Then (=> (and true
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@101 this@153@0 FactorialActorChannelExpEP.state) 0)
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@99 this@153@0 FactorialActorChannelExpEP.state) 0)
  )
    anon62
)))
(let ((anon73_Then@31 (=> (and true
    (not (= this null))
  )(and 
    anon73_Then@31_assertion
    anon73_Then@32
))))
(let ((anon18@22 (=> (and true
    (not (= null mo@131@0))
  )(and 
    anon18@22_assertion
    anon18@23
))))
(let ((anon25 (=> (and true
    (<= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@118 nw@_1297@0 held) 0)
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ Heap@118 nw@_1297@0 mu) $LockBottom)
    (= Mask@189 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@188 nw@_1297@0 Message.type (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@188 nw@_1297@0 Message.type) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@188 nw@_1297@0 Message.type) perm$R) (Fractions 100)))))
    (= Mask@190 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@189 nw@_1297@0 Message.sender1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@189 nw@_1297@0 Message.sender1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@189 nw@_1297@0 Message.sender1) perm$R) (Fractions 100)))))
    (= Mask@191 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@190 nw@_1297@0 Message.sender3 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@190 nw@_1297@0 Message.sender3) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@190 nw@_1297@0 Message.sender3) perm$R) (Fractions 100)))))
    (= Mask@192 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@191 nw@_1297@0 Message.sender2 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@191 nw@_1297@0 Message.sender2) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@191 nw@_1297@0 Message.sender2) perm$R) (Fractions 100)))))
    (= Mask@193 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@192 nw@_1297@0 Message.sender4 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@192 nw@_1297@0 Message.sender4) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@192 nw@_1297@0 Message.sender4) perm$R) (Fractions 100)))))
    (= Mask@194 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@193 nw@_1297@0 Message.receiver1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@193 nw@_1297@0 Message.receiver1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@193 nw@_1297@0 Message.receiver1) perm$R) (Fractions 100)))))
    (= Mask@195 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@194 nw@_1297@0 Message.receiver2 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@194 nw@_1297@0 Message.receiver2) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@194 nw@_1297@0 Message.receiver2) perm$R) (Fractions 100)))))
    (= Mask@196 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@195 nw@_1297@0 Message.receiver3 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@195 nw@_1297@0 Message.receiver3) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@195 nw@_1297@0 Message.receiver3) perm$R) (Fractions 100)))))
    (= Mask@197 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@196 nw@_1297@0 Message.receiver4 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@196 nw@_1297@0 Message.receiver4) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@196 nw@_1297@0 Message.receiver4) perm$R) (Fractions 100)))))
    (= Mask@198 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@197 nw@_1297@0 Message.v1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@197 nw@_1297@0 Message.v1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@197 nw@_1297@0 Message.v1) perm$R) (Fractions 100)))))
    (= Mask@199 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@198 nw@_1297@0 Message.vo1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@198 nw@_1297@0 Message.vo1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@198 nw@_1297@0 Message.vo1) perm$R) (Fractions 100)))))
    (= Mask@200 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@199 nw@_1297@0 Message.cust1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@199 nw@_1297@0 Message.cust1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@199 nw@_1297@0 Message.cust1) perm$R) (Fractions 100)))))
    (= Mask@201 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@200 nw@_1297@0 Message.vr1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@200 nw@_1297@0 Message.vr1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@200 nw@_1297@0 Message.vr1) perm$R) (Fractions 100)))))
    (= Mask@202 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@201 nw@_1297@0 Message.old1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@201 nw@_1297@0 Message.old1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@201 nw@_1297@0 Message.old1) perm$R) (Fractions 100)))))
    (= Mask@203 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@202 nw@_1297@0 Message.vr2 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@202 nw@_1297@0 Message.vr2) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@202 nw@_1297@0 Message.vr2) perm$R) (Fractions 100)))))
    (= Mask@204 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@203 nw@_1297@0 Message.old2 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@203 nw@_1297@0 Message.old2) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@203 nw@_1297@0 Message.old2) perm$R) (Fractions 100)))))
    (= Mask@205 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@204 nw@_1297@0 Message.vr3 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@204 nw@_1297@0 Message.vr3) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@204 nw@_1297@0 Message.vr3) perm$R) (Fractions 100)))))
    (= Mask@206 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@205 nw@_1297@0 mu (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@205 nw@_1297@0 mu) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@205 nw@_1297@0 mu) perm$R) (Fractions 100)))))
    (= Message@t (dtype nw@_1297@0))
    (forall( (|f_$16_$0| Field$Bool$))(and (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ Mask@188 nw@_1297@0 |f_$16_$0|) perm$R) 0) (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ Mask@188 nw@_1297@0 |f_$16_$0|) perm$N) 0)))
    (forall( (|f_$16_$1| Field$Int$))(and (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@188 nw@_1297@0 |f_$16_$1|) perm$R) 0) (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@188 nw@_1297@0 |f_$16_$1|) perm$N) 0)))
    (forall( (|f_$16_$2| Field$ref$))(and (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@188 nw@_1297@0 |f_$16_$2|) perm$R) 0) (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@188 nw@_1297@0 |f_$16_$2|) perm$N) 0)))
    (forall( (|f_$16_$3| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(and (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@188 nw@_1297@0 |f_$16_$3|) perm$R) 0) (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@188 nw@_1297@0 |f_$16_$3|) perm$N) 0)))
    (forall( (|f_$16_$4| Field$Mu$))(and (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@188 nw@_1297@0 |f_$16_$4|) perm$R) 0) (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@188 nw@_1297@0 |f_$16_$4|) perm$N) 0)))
    (IsGoodMask Mask@188)
    (not (= nw@_1297@0 null))
    (not (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ Heap@118 nw@_1297@0 rdheld))
    (wf Heap@118 Mask@188)
  )(and 
    anon25_assertion
    anon25@1
))))
(let ((anon59@17 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1387@3 this@153@0 FactorialActorChannelExpEP.valid) perm$R))
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1395@0 this@153@0 FactorialActorChannelExpEP.valid) Heap@101)
    (= (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@99 this@153@0 FactorialActorChannelExpEP.state (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1395@0 this@153@0 FactorialActorChannelExpEP.state)) Heap@100)
    (= exhaleMask@_1387@4 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1387@3 this@153@0 FactorialActorChannelExpEP.valid (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1387@3 this@153@0 FactorialActorChannelExpEP.valid) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1387@3 this@153@0 FactorialActorChannelExpEP.valid) perm$R) (Fractions 100)))))
    (= Heap@101 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Heap@100 this@153@0 FactorialActorChannelExpEP.valid (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1395@0 this@153@0 FactorialActorChannelExpEP.valid)))
    (= Mask@119 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1387@4 this@153@0 FactorialActorChannelExpEP.state (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1387@4 this@153@0 FactorialActorChannelExpEP.state) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1387@4 this@153@0 FactorialActorChannelExpEP.state) perm$R) (Fractions 100)))))
    (= Mask@120 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@119 this@153@0 FactorialActorChannelExpEP.valid (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@119 this@153@0 FactorialActorChannelExpEP.valid) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@119 this@153@0 FactorialActorChannelExpEP.valid) perm$R) (Fractions 100)))))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1387@3 this@153@0 FactorialActorChannelExpEP.valid) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1387@3 this@153@0 FactorialActorChannelExpEP.valid) perm$N)))
    (> (Fractions 100) 0)
    (> (Fractions 100) 0)
    (IsGoodInhaleState inhaleHeap@_1395@0 Heap@99 exhaleMask@_1387@4)
    (IsGoodMask Mask@118)
    (IsGoodMask Mask@119)
    (IsGoodMask Mask@120)
    (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1395@0 this@153@0 FactorialActorChannelExpEP.valid))
    (IsGoodState$Int$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1395@0 this@153@0 FactorialActorChannelExpEP.state))
    (not (= this@153@0 null))
    (not (= this@153@0 null))
    (wf Heap@100 exhaleMask@_1387@4)
    (wf Heap@100 Mask@119)
    (wf Heap@101 Mask@119)
    (wf Heap@101 Mask@120)
    (wf Heap@99 exhaleMask@_1387@4)
    (wf Heap@99 exhaleMask@_1387@4)
    (wf Heap@99 Mask@118)
    (wf inhaleHeap@_1395@0 Mask@119)
    (wf inhaleHeap@_1395@0 Mask@120)
  )
    (and anon95_Else anon95_Then)
)))
(let ((anon73_Then@30 (=> (and true
    (CanRead$ref$ Mask@28 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 this FactorialActor.q) FactorialActorChannel.imp)
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 this FactorialActor.q) FactorialActorChannel.imp)))
  )(and 
    anon73_Then@30_assertion
    anon73_Then@31
))))
(let ((anon18@21 (=> (and true
    (< (* 1000 methodCallK@_1248) (Fractions 1))
    (< (* 1000 methodCallK@_1248) whileK@_1176)
    (< 0 methodCallK@_1248)
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@216 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 mo@131@0 Message.sender1) Future.q) FutureChannel.initExpState) perm$R))
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@131 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@131 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@131 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@131 mo@131@0 Message.sender1) Future.q) FutureChannel.exp) FutureChannelExpEP.state) 0)
    (= (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@216 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 mo@131@0 Message.sender1) Future.q) FutureChannel.initExpState (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@216 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 mo@131@0 Message.sender1) Future.q) FutureChannel.initExpState) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@216 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 mo@131@0 Message.sender1) Future.q) FutureChannel.initExpState) perm$R) (Fractions 100)))) exhaleMask@_1242@0)
    (= Heap@130 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 mo@131@0 Message.sender1) Future.q) FutureChannel.exp (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1244@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 mo@131@0 Message.sender1) Future.q) FutureChannel.exp)))
    (= Heap@131 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@130 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@130 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@130 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@130 mo@131@0 Message.sender1) Future.q) FutureChannel.exp) FutureChannelExpEP.state (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1244@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@130 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@130 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@130 mo@131@0 Message.sender1) Future.q) FutureChannel.exp) FutureChannelExpEP.state)))
    (= inhaleHeap@_1244@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Heap@129 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 mo@131@0 Message.sender1) Future.q) FutureChannel.initExpState))
    (= Mask@217 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1242@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@130 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@130 mo@131@0 Message.sender1) Future.q) FutureChannel.exp (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1242@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@130 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@130 mo@131@0 Message.sender1) Future.q) FutureChannel.exp) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1242@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@130 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@130 mo@131@0 Message.sender1) Future.q) FutureChannel.exp) perm$R) monitorK))))
    (= Mask@218 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@217 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@131 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@131 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@131 mo@131@0 Message.sender1) Future.q) FutureChannel.exp) FutureChannelExpEP.state (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@217 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@131 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@131 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@131 mo@131@0 Message.sender1) Future.q) FutureChannel.exp) FutureChannelExpEP.state) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@217 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@131 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@131 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@131 mo@131@0 Message.sender1) Future.q) FutureChannel.exp) FutureChannelExpEP.state) perm$R) (Fractions 100)))))
    (=> (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@216 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 mo@131@0 Message.sender1) Future.q) FutureChannel.initExpState) perm$R) (Fractions 100)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@216 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 mo@131@0 Message.sender1) Future.q) FutureChannel.initExpState) perm$N)))
    (> (Fractions 100) 0)
    (> monitorK 0)
    (IsGoodInhaleState inhaleHeap@_1244@0 Heap@129 exhaleMask@_1242@0)
    (IsGoodMask Mask@216)
    (IsGoodMask Mask@217)
    (IsGoodMask Mask@218)
    (IsGoodMask Mask@218)
    (IsGoodState$Int$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1244@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@131 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@131 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@131 mo@131@0 Message.sender1) Future.q) FutureChannel.exp) FutureChannelExpEP.state))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1244@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@130 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@130 mo@131@0 Message.sender1) Future.q) FutureChannel.exp))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 mo@131@0 Message.sender1) Future.q)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@130 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@130 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@130 mo@131@0 Message.sender1) Future.q) FutureChannel.exp)))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@130 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@130 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@130 mo@131@0 Message.sender1) Future.q) FutureChannel.exp)) (= FutureChannelExpEP@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@130 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@130 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@130 mo@131@0 Message.sender1) Future.q) FutureChannel.exp))))
    (wf Heap@129 exhaleMask@_1242@0)
    (wf Heap@129 exhaleMask@_1242@0)
    (wf Heap@129 Mask@216)
    (wf Heap@130 exhaleMask@_1242@0)
    (wf Heap@130 Mask@217)
    (wf Heap@131 Mask@217)
    (wf Heap@131 Mask@218)
    (wf Heap@131 Mask@218)
    (wf inhaleHeap@_1244@0 Mask@217)
    (wf inhaleHeap@_1244@0 Mask@218)
  )(and 
    anon18@21_assertion
    anon18@22
))))
(let ((anon83_Else (=> (and true
    (not (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@116 this@141@0 FactorialContChannelExpEP.state) 0))
  )
    anon25
)))
(let ((anon83_Then (=> (and true
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@116 this@141@0 FactorialContChannelExpEP.state) 0)
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@118 this@141@0 FactorialContChannelExpEP.state) 1)
  )
    anon25
)))
(let ((anon59@16 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon59@16_assertion
    anon59@17
))))
(let ((anon73_Then@29 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 this FactorialActor.q)))
  )(and 
    anon73_Then@29_assertion
    anon73_Then@30
))))
(let ((anon18@20 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon18@20_assertion
    anon18@21
))))
(let ((anon79_Else@62 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1288@3 this@141@0 FactorialContChannelExpEP.valid) perm$R))
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1296@0 this@141@0 FactorialContChannelExpEP.valid) Heap@118)
    (= exhaleMask@_1288@4 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1288@3 this@141@0 FactorialContChannelExpEP.valid (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1288@3 this@141@0 FactorialContChannelExpEP.valid) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1288@3 this@141@0 FactorialContChannelExpEP.valid) perm$R) (Fractions 100)))))
    (= Heap@117 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@116 this@141@0 FactorialContChannelExpEP.state (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1296@0 this@141@0 FactorialContChannelExpEP.state)))
    (= Heap@118 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Heap@117 this@141@0 FactorialContChannelExpEP.valid (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1296@0 this@141@0 FactorialContChannelExpEP.valid)))
    (= Mask@187 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1288@4 this@141@0 FactorialContChannelExpEP.state (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1288@4 this@141@0 FactorialContChannelExpEP.state) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1288@4 this@141@0 FactorialContChannelExpEP.state) perm$R) (Fractions 100)))))
    (= Mask@188 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@187 this@141@0 FactorialContChannelExpEP.valid (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@187 this@141@0 FactorialContChannelExpEP.valid) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@187 this@141@0 FactorialContChannelExpEP.valid) perm$R) (Fractions 100)))))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1288@3 this@141@0 FactorialContChannelExpEP.valid) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1288@3 this@141@0 FactorialContChannelExpEP.valid) perm$N)))
    (> (Fractions 100) 0)
    (> (Fractions 100) 0)
    (IsGoodInhaleState inhaleHeap@_1296@0 Heap@116 exhaleMask@_1288@4)
    (IsGoodMask Mask@186)
    (IsGoodMask Mask@187)
    (IsGoodMask Mask@188)
    (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1296@0 this@141@0 FactorialContChannelExpEP.valid))
    (IsGoodState$Int$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1296@0 this@141@0 FactorialContChannelExpEP.state))
    (not (= this@141@0 null))
    (not (= this@141@0 null))
    (wf Heap@116 exhaleMask@_1288@4)
    (wf Heap@116 exhaleMask@_1288@4)
    (wf Heap@116 Mask@186)
    (wf Heap@117 exhaleMask@_1288@4)
    (wf Heap@117 Mask@187)
    (wf Heap@118 Mask@187)
    (wf Heap@118 Mask@188)
    (wf inhaleHeap@_1296@0 Mask@187)
    (wf inhaleHeap@_1296@0 Mask@188)
  )
    (and anon83_Else anon83_Then)
)))
(let ((anon59@15 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1387@2 nw@_1358@0 Message.invValue) perm$R))
    (= exhaleMask@_1387@3 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1387@2 nw@_1358@0 Message.invValue (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1387@2 nw@_1358@0 Message.invValue) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1387@2 nw@_1358@0 Message.invValue) perm$R) (Fractions 100)))))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1387@2 nw@_1358@0 Message.invValue) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1387@2 nw@_1358@0 Message.invValue) perm$N)))
    (IsGoodMask Mask@118)
    (wf Heap@99 exhaleMask@_1387@3)
    (wf Heap@99 Mask@118)
  )(and 
    anon59@15_assertion
    anon59@16
))))
(let ((anon73_Then@28 (=> (and true
    (CanRead$ref$ Mask@28 this FactorialActor.q)
  )(and 
    anon73_Then@28_assertion
    anon73_Then@29
))))
(let ((anon18@19 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 mo@131@0 Message.sender1) Future.q)))
  )(and 
    anon18@19_assertion
    anon18@20
))))
(let ((anon79_Else@61 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon79_Else@61_assertion
    anon79_Else@62
))))
(let ((anon59@14 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon59@14_assertion
    anon59@15
))))
(let ((anon73_Then@27 (=> (and true
    (not (= this null))
  )(and 
    anon73_Then@27_assertion
    anon73_Then@28
))))
(let ((anon18@18 (=> (and true
    (CanRead$ref$ Mask@216 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 mo@131@0 Message.sender1) Future.q)
  )(and 
    anon18@18_assertion
    anon18@19
))))
(let ((anon79_Else@60 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1288@2 nw@_1258@0 Message.invResult1) perm$R))
    (= exhaleMask@_1288@3 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1288@2 nw@_1258@0 Message.invResult1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1288@2 nw@_1258@0 Message.invResult1) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1288@2 nw@_1258@0 Message.invResult1) perm$R) (Fractions 100)))))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1288@2 nw@_1258@0 Message.invResult1) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1288@2 nw@_1258@0 Message.invResult1) perm$N)))
    (IsGoodMask Mask@186)
    (wf Heap@116 exhaleMask@_1288@3)
    (wf Heap@116 Mask@186)
  )(and 
    anon79_Else@60_assertion
    anon79_Else@61
))))
(let ((anon59@13 (=> (and true
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1387@1 nw@_1358@0 Message.type) perm$R))
    (= exhaleMask@_1387@2 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1387@1 nw@_1358@0 Message.type (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1387@1 nw@_1358@0 Message.type) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1387@1 nw@_1358@0 Message.type) perm$R) monitorK))))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1387@1 nw@_1358@0 Message.type) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1387@1 nw@_1358@0 Message.type) perm$N)))
    (IsGoodMask Mask@118)
    (wf Heap@99 exhaleMask@_1387@2)
    (wf Heap@99 Mask@118)
  )(and 
    anon59@13_assertion
    anon59@14
))))
(let ((anon73_Then@26 (=> (and true
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 this FactorialActor.q) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch))
    (CanRead$ref$ Mask@28 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch)
  )(and 
    anon73_Then@26_assertion
    anon73_Then@27
))))
(let ((anon18@17 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 mo@131@0 Message.sender1)))
  )(and 
    anon18@17_assertion
    anon18@18
))))
(let ((anon79_Else@59 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon79_Else@59_assertion
    anon79_Else@60
))))
(let ((anon59@12 (=> (and true
    (> monitorK 0)
  )(and 
    anon59@12_assertion
    anon59@13
))))
(let ((anon73_Then@25 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 this FactorialActor.q) FactorialActorChannel.imp)))
  )(and 
    anon73_Then@25_assertion
    anon73_Then@26
))))
(let ((anon18@16 (=> (and true
    (CanRead$ref$ Mask@216 mo@131@0 Message.sender1)
  )(and 
    anon18@16_assertion
    anon18@17
))))
(let ((anon79_Else@58 (=> (and true
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1288@1 nw@_1258@0 Message.type) perm$R))
    (= exhaleMask@_1288@2 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1288@1 nw@_1258@0 Message.type (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1288@1 nw@_1258@0 Message.type) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1288@1 nw@_1258@0 Message.type) perm$R) monitorK))))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1288@1 nw@_1258@0 Message.type) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1288@1 nw@_1258@0 Message.type) perm$N)))
    (IsGoodMask Mask@186)
    (wf Heap@116 exhaleMask@_1288@2)
    (wf Heap@116 Mask@186)
  )(and 
    anon79_Else@58_assertion
    anon79_Else@59
))))
(let ((anon59@11 (=> (and true
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1387@0 nw@_1358@0 Message.type) perm$R))
    (= exhaleMask@_1387@1 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1387@0 nw@_1358@0 Message.type (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1387@0 nw@_1358@0 Message.type) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1387@0 nw@_1358@0 Message.type) perm$R) monitorK))))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1387@0 nw@_1358@0 Message.type) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1387@0 nw@_1358@0 Message.type) perm$N)))
    (IsGoodMask Mask@118)
    (wf Heap@99 exhaleMask@_1387@1)
    (wf Heap@99 Mask@118)
  )(and 
    anon59@11_assertion
    anon59@12
))))
(let ((anon73_Then@24 (=> (and true
    (CanRead$ref$ Mask@28 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 this FactorialActor.q) FactorialActorChannel.imp)
  )(and 
    anon73_Then@24_assertion
    anon73_Then@25
))))
(let ((anon18@15 (=> (and true
    (not (= null mo@131@0))
  )(and 
    anon18@15_assertion
    anon18@16
))))
(let ((anon79_Else@57 (=> (and true
    (> monitorK 0)
  )(and 
    anon79_Else@57_assertion
    anon79_Else@58
))))
(let ((anon59@10 (=> (and true
    (> monitorK 0)
  )(and 
    anon59@10_assertion
    anon59@11
))))
(let ((anon73_Then@23 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 this FactorialActor.q)))
  )(and 
    anon73_Then@23_assertion
    anon73_Then@24
))))
(let ((anon18@14 (=> (and true
    (< (* 1000 unfoldK@_1241) whileK@_1176)
    (< 0 unfoldK@_1241)
    (< unfoldK@_1241 (Fractions 1))
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@210 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@123 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@123 mo@131@0 Message.sender1) Future.q) FutureChannel.valid) perm$R))
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1240@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@128 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@128 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@128 mo@131@0 Message.sender1) Future.q) FutureChannel.imp) FutureChannelImpEP.valid) Heap@128)
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1240@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 mo@131@0 Message.sender1) Future.q) FutureChannel.exp) FutureChannelExpEP.valid) Heap@129)
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 mo@131@0 Message.sender1) Future.q) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 mo@131@0 Message.sender1) Future.q) FutureChannel.exp) FutureChannelExpEP.ch))
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 mo@131@0 Message.sender1) Future.q) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 mo@131@0 Message.sender1) Future.q) FutureChannel.imp) FutureChannelImpEP.ch))
    (= (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@210 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@123 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@123 mo@131@0 Message.sender1) Future.q) FutureChannel.valid (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@210 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@123 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@123 mo@131@0 Message.sender1) Future.q) FutureChannel.valid) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@210 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@123 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@123 mo@131@0 Message.sender1) Future.q) FutureChannel.valid) perm$R) (Fractions 100)))) exhaleMask@_1238@0)
    (= Heap@124 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@123 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@123 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@123 mo@131@0 Message.sender1) Future.q) FutureChannel.imp (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1240@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@123 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@123 mo@131@0 Message.sender1) Future.q) FutureChannel.imp)))
    (= Heap@125 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@124 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@124 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@124 mo@131@0 Message.sender1) Future.q) FutureChannel.exp (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1240@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@124 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@124 mo@131@0 Message.sender1) Future.q) FutureChannel.exp)))
    (= Heap@126 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@125 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@125 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@125 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@125 mo@131@0 Message.sender1) Future.q) FutureChannel.imp) FutureChannelImpEP.ch (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1240@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@125 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@125 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@125 mo@131@0 Message.sender1) Future.q) FutureChannel.imp) FutureChannelImpEP.ch)))
    (= Heap@127 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@126 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@126 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@126 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@126 mo@131@0 Message.sender1) Future.q) FutureChannel.exp) FutureChannelExpEP.ch (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1240@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@126 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@126 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@126 mo@131@0 Message.sender1) Future.q) FutureChannel.exp) FutureChannelExpEP.ch)))
    (= Heap@128 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Heap@127 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@127 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@127 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@127 mo@131@0 Message.sender1) Future.q) FutureChannel.imp) FutureChannelImpEP.valid (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1240@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@127 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@127 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@127 mo@131@0 Message.sender1) Future.q) FutureChannel.imp) FutureChannelImpEP.valid)))
    (= Heap@129 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Heap@128 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@128 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@128 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@128 mo@131@0 Message.sender1) Future.q) FutureChannel.exp) FutureChannelExpEP.valid (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1240@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@128 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@128 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@128 mo@131@0 Message.sender1) Future.q) FutureChannel.exp) FutureChannelExpEP.valid)))
    (= inhaleHeap@_1240@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Heap@123 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@123 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@123 mo@131@0 Message.sender1) Future.q) FutureChannel.valid))
    (= Mask@211 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1238@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@124 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@124 mo@131@0 Message.sender1) Future.q) FutureChannel.imp (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1238@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@124 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@124 mo@131@0 Message.sender1) Future.q) FutureChannel.imp) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1238@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@124 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@124 mo@131@0 Message.sender1) Future.q) FutureChannel.imp) perm$R) monitorK))))
    (= Mask@212 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@211 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@125 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@125 mo@131@0 Message.sender1) Future.q) FutureChannel.exp (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@211 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@125 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@125 mo@131@0 Message.sender1) Future.q) FutureChannel.exp) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@211 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@125 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@125 mo@131@0 Message.sender1) Future.q) FutureChannel.exp) perm$R) monitorK))))
    (= Mask@213 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@212 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@126 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@126 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@126 mo@131@0 Message.sender1) Future.q) FutureChannel.imp) FutureChannelImpEP.ch (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@212 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@126 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@126 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@126 mo@131@0 Message.sender1) Future.q) FutureChannel.imp) FutureChannelImpEP.ch) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@212 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@126 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@126 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@126 mo@131@0 Message.sender1) Future.q) FutureChannel.imp) FutureChannelImpEP.ch) perm$R) monitorK))))
    (= Mask@214 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@213 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@127 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@127 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@127 mo@131@0 Message.sender1) Future.q) FutureChannel.exp) FutureChannelExpEP.ch (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@213 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@127 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@127 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@127 mo@131@0 Message.sender1) Future.q) FutureChannel.exp) FutureChannelExpEP.ch) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@213 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@127 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@127 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@127 mo@131@0 Message.sender1) Future.q) FutureChannel.exp) FutureChannelExpEP.ch) perm$R) monitorK))))
    (= Mask@215 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@214 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@128 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@128 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@128 mo@131@0 Message.sender1) Future.q) FutureChannel.imp) FutureChannelImpEP.valid (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@214 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@128 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@128 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@128 mo@131@0 Message.sender1) Future.q) FutureChannel.imp) FutureChannelImpEP.valid) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@214 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@128 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@128 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@128 mo@131@0 Message.sender1) Future.q) FutureChannel.imp) FutureChannelImpEP.valid) perm$R) (Fractions 100)))))
    (= Mask@216 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@215 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 mo@131@0 Message.sender1) Future.q) FutureChannel.exp) FutureChannelExpEP.valid (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@215 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 mo@131@0 Message.sender1) Future.q) FutureChannel.exp) FutureChannelExpEP.valid) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@215 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 mo@131@0 Message.sender1) Future.q) FutureChannel.exp) FutureChannelExpEP.valid) perm$R) (Fractions 100)))))
    (=> (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@210 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@123 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@123 mo@131@0 Message.sender1) Future.q) FutureChannel.valid) perm$R) (Fractions 100)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@210 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@123 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@123 mo@131@0 Message.sender1) Future.q) FutureChannel.valid) perm$N)))
    (> (Fractions 100) 0)
    (> (Fractions 100) 0)
    (> monitorK 0)
    (> monitorK 0)
    (> monitorK 0)
    (> monitorK 0)
    (IsGoodInhaleState inhaleHeap@_1240@0 Heap@123 exhaleMask@_1238@0)
    (IsGoodMask Mask@210)
    (IsGoodMask Mask@211)
    (IsGoodMask Mask@212)
    (IsGoodMask Mask@213)
    (IsGoodMask Mask@214)
    (IsGoodMask Mask@215)
    (IsGoodMask Mask@216)
    (IsGoodMask Mask@216)
    (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1240@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@128 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@128 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@128 mo@131@0 Message.sender1) Future.q) FutureChannel.imp) FutureChannelImpEP.valid))
    (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1240@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@129 mo@131@0 Message.sender1) Future.q) FutureChannel.exp) FutureChannelExpEP.valid))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1240@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@124 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@124 mo@131@0 Message.sender1) Future.q) FutureChannel.imp))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1240@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@125 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@125 mo@131@0 Message.sender1) Future.q) FutureChannel.exp))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1240@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@126 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@126 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@126 mo@131@0 Message.sender1) Future.q) FutureChannel.imp) FutureChannelImpEP.ch))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1240@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@127 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@127 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@127 mo@131@0 Message.sender1) Future.q) FutureChannel.exp) FutureChannelExpEP.ch))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@123 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@123 mo@131@0 Message.sender1) Future.q)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@124 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@124 mo@131@0 Message.sender1) Future.q)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@125 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@125 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@125 mo@131@0 Message.sender1) Future.q) FutureChannel.imp)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@126 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@126 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@126 mo@131@0 Message.sender1) Future.q) FutureChannel.exp)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@127 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@127 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@127 mo@131@0 Message.sender1) Future.q) FutureChannel.exp)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@127 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@127 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@127 mo@131@0 Message.sender1) Future.q) FutureChannel.imp)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@127 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@127 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@127 mo@131@0 Message.sender1) Future.q) FutureChannel.imp)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@128 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@128 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@128 mo@131@0 Message.sender1) Future.q) FutureChannel.exp)))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@124 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@124 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@124 mo@131@0 Message.sender1) Future.q) FutureChannel.imp)) (= FutureChannelImpEP@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@124 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@124 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@124 mo@131@0 Message.sender1) Future.q) FutureChannel.imp))))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@125 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@125 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@125 mo@131@0 Message.sender1) Future.q) FutureChannel.exp)) (= FutureChannelExpEP@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@125 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@125 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@125 mo@131@0 Message.sender1) Future.q) FutureChannel.exp))))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@126 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@126 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@126 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@126 mo@131@0 Message.sender1) Future.q) FutureChannel.imp) FutureChannelImpEP.ch)) (= FutureChannel@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@126 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@126 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@126 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@126 mo@131@0 Message.sender1) Future.q) FutureChannel.imp) FutureChannelImpEP.ch))))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@127 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@127 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@127 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@127 mo@131@0 Message.sender1) Future.q) FutureChannel.exp) FutureChannelExpEP.ch)) (= FutureChannel@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@127 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@127 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@127 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@127 mo@131@0 Message.sender1) Future.q) FutureChannel.exp) FutureChannelExpEP.ch))))
    (wf Heap@123 exhaleMask@_1238@0)
    (wf Heap@123 exhaleMask@_1238@0)
    (wf Heap@123 Mask@210)
    (wf Heap@124 exhaleMask@_1238@0)
    (wf Heap@124 Mask@211)
    (wf Heap@125 Mask@211)
    (wf Heap@125 Mask@212)
    (wf Heap@126 Mask@212)
    (wf Heap@126 Mask@213)
    (wf Heap@127 Mask@213)
    (wf Heap@127 Mask@214)
    (wf Heap@128 Mask@214)
    (wf Heap@128 Mask@215)
    (wf Heap@129 Mask@215)
    (wf Heap@129 Mask@216)
    (wf Heap@129 Mask@216)
    (wf inhaleHeap@_1240@0 Mask@211)
    (wf inhaleHeap@_1240@0 Mask@212)
    (wf inhaleHeap@_1240@0 Mask@213)
    (wf inhaleHeap@_1240@0 Mask@214)
    (wf inhaleHeap@_1240@0 Mask@215)
    (wf inhaleHeap@_1240@0 Mask@216)
  )(and 
    anon18@14_assertion
    anon18@15
))))
(let ((anon79_Else@56 (=> (and true
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1288@0 nw@_1258@0 Message.type) perm$R))
    (= exhaleMask@_1288@1 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1288@0 nw@_1258@0 Message.type (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1288@0 nw@_1258@0 Message.type) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1288@0 nw@_1258@0 Message.type) perm$R) monitorK))))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1288@0 nw@_1258@0 Message.type) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1288@0 nw@_1258@0 Message.type) perm$N)))
    (IsGoodMask Mask@186)
    (wf Heap@116 exhaleMask@_1288@1)
    (wf Heap@116 Mask@186)
  )(and 
    anon79_Else@56_assertion
    anon79_Else@57
))))
(let ((anon59@9 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@118 this@153@0 FactorialActorChannelExpEP.state) perm$R))
    (= (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@118 this@153@0 FactorialActorChannelExpEP.state (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@118 this@153@0 FactorialActorChannelExpEP.state) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@118 this@153@0 FactorialActorChannelExpEP.state) perm$R) (Fractions 100)))) exhaleMask@_1387@0)
    (=> (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@118 this@153@0 FactorialActorChannelExpEP.state) perm$R) (Fractions 100)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@118 this@153@0 FactorialActorChannelExpEP.state) perm$N)))
    (IsGoodMask Mask@118)
    (wf Heap@99 exhaleMask@_1387@0)
    (wf Heap@99 Mask@118)
  )(and 
    anon59@9_assertion
    anon59@10
))))
(let ((anon73_Then@22 (=> (and true
    (CanRead$ref$ Mask@28 this FactorialActor.q)
  )(and 
    anon73_Then@22_assertion
    anon73_Then@23
))))
(let ((anon18@13 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon18@13_assertion
    anon18@14
))))
(let ((anon79_Else@55 (=> (and true
    (> monitorK 0)
  )(and 
    anon79_Else@55_assertion
    anon79_Else@56
))))
(let ((anon59@8 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon59@8_assertion
    anon59@9
))))
(let ((anon73_Then@21 (=> (and true
    (not (= this null))
  )(and 
    anon73_Then@21_assertion
    anon73_Then@22
))))
(let ((anon18@12 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@123 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@123 mo@131@0 Message.sender1) Future.q)))
  )(and 
    anon18@12_assertion
    anon18@13
))))
(let ((anon79_Else@54 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@186 this@141@0 FactorialContChannelExpEP.state) perm$R))
    (= (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@186 this@141@0 FactorialContChannelExpEP.state (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@186 this@141@0 FactorialContChannelExpEP.state) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@186 this@141@0 FactorialContChannelExpEP.state) perm$R) (Fractions 100)))) exhaleMask@_1288@0)
    (=> (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@186 this@141@0 FactorialContChannelExpEP.state) perm$R) (Fractions 100)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@186 this@141@0 FactorialContChannelExpEP.state) perm$N)))
    (IsGoodMask Mask@186)
    (wf Heap@116 exhaleMask@_1288@0)
    (wf Heap@116 Mask@186)
  )(and 
    anon79_Else@54_assertion
    anon79_Else@55
))))
(let ((anon59@7 (=> (and true
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@99 this@153@0 FactorialActorChannelExpEP.state) 0)
  )(and 
    anon59@7_assertion
    anon59@8
))))
(let ((anon73_Then@20 (=> (and true
    (CanRead$ref$ Mask@28 this FactorialActor.q)
  )(and 
    anon73_Then@20_assertion
    anon73_Then@21
))))
(let ((anon18@11 (=> (and true
    (CanRead$ref$ Mask@210 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@123 mo@131@0 Message.sender1) Future.q)
  )(and 
    anon18@11_assertion
    anon18@12
))))
(let ((anon79_Else@53 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon79_Else@53_assertion
    anon79_Else@54
))))
(let ((anon59@6 (=> (and true
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@99 nw@_1358@0 Message.type) 1)
  )(and 
    anon59@6_assertion
    anon59@7
))))
(let ((anon73_Then@19 (=> (and true
    (not (= this null))
  )(and 
    anon73_Then@19_assertion
    anon73_Then@20
))))
(let ((anon18@10 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@123 mo@131@0 Message.sender1)))
  )(and 
    anon18@10_assertion
    anon18@11
))))
(let ((anon79_Else@52 (=> (and true
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@116 this@141@0 FactorialContChannelExpEP.state) 0)
  )(and 
    anon79_Else@52_assertion
    anon79_Else@53
))))
(let ((anon59@5 (=> (and true
    (= this@153@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@99 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@99 this FactorialActor.q) FactorialActorChannel.exp))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@99 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@99 this FactorialActor.q) FactorialActorChannel.exp)))
  )(and 
    anon59@5_assertion
    anon59@6
))))
(let ((anon73_Then@18 (=> (and true
    (= Heap@29 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@28 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@28 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@28 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1188@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@28 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@28 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch)))
    (= Mask@28 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@27 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@27 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@27 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) perm$R) monitorK))))
    (> monitorK 0)
    (CanRead$ref$ Mask@27 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@28 this FactorialActor.q) FactorialActorChannel.imp)
    (IsGoodMask Mask@28)
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1188@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@28 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@28 this FactorialActor.q) FactorialActorChannel.imp)))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch)) (= FactorialActorChannel@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@29 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch))))
    (wf Heap@29 Mask@27)
    (wf Heap@29 Mask@28)
    (wf inhaleHeap@_1188@0 Mask@28)
  )(and 
    anon73_Then@18_assertion
    anon73_Then@19
))))
(let ((anon18@9 (=> (and true
    (CanRead$ref$ Mask@210 mo@131@0 Message.sender1)
  )(and 
    anon18@9_assertion
    anon18@10
))))
(let ((anon79_Else@51 (=> (and true
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@116 nw@_1258@0 Message.type) 2)
  )(and 
    anon79_Else@51_assertion
    anon79_Else@52
))))
(let ((anon59@4 (=> (and true
    (CanRead$ref$ Mask@118 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@99 this FactorialActor.q) FactorialActorChannel.exp)
  )(and 
    anon59@4_assertion
    anon59@5
))))
(let ((anon73_Then@17 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@28 this FactorialActor.q)))
  )(and 
    anon73_Then@17_assertion
    anon73_Then@18
))))
(let ((anon18@8 (=> (and true
    (not (= null mo@131@0))
  )(and 
    anon18@8_assertion
    anon18@9
))))
(let ((anon79_Else@50 (=> (and true
    (= this@141@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@116 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@116 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@116 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@116 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@116 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@116 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp)))
  )(and 
    anon79_Else@50_assertion
    anon79_Else@51
))))
(let ((anon59@3 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@99 this FactorialActor.q)))
  )(and 
    anon59@3_assertion
    anon59@4
))))
(let ((anon73_Then@16 (=> (and true
    (CanRead$ref$ Mask@27 this FactorialActor.q)
  )(and 
    anon73_Then@16_assertion
    anon73_Then@17
))))
(let ((anon18@7 (=> (and true
    (< (* 1000 unfoldK@_1237) whileK@_1176)
    (< 0 unfoldK@_1237)
    (< unfoldK@_1237 (Fractions 1))
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@123 nw@_1208@0 Message.vr3) ($@Message.factorial Heap@123 Mask@210 nw@_1208@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@123 mo@131@0 Message.vo1)))
    (wf Heap@123 Mask@210)
  )(and 
    anon18@7_assertion
    anon18@8
))))
(let ((anon79_Else@49 (=> (and true
    (CanRead$ref$ Mask@186 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@116 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@116 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp)
  )(and 
    anon79_Else@49_assertion
    anon79_Else@50
))))
(let ((anon59@2 (=> (and true
    (CanRead$ref$ Mask@118 this FactorialActor.q)
  )(and 
    anon59@2_assertion
    anon59@3
))))
(let ((anon73_Then@15 (=> (and true
    (not (= this null))
  )(and 
    anon73_Then@15_assertion
    anon73_Then@16
))))
(let ((anon18@6 (=> (and true
    (>= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@123 mo@131@0 Message.vo1) 0)
    (wf Heap@123 Mask@210)
  )(and 
    anon18@6_assertion
    anon18@7
))))
(let ((anon79_Else@48 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@116 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@116 mo@131@0 Message.cust1) FactorialCont.q)))
  )(and 
    anon79_Else@48_assertion
    anon79_Else@49
))))
(let ((anon59@1 (=> (and true
    (not (= this null))
  )(and 
    anon59@1_assertion
    anon59@2
))))
(let ((anon73_Then@14 (=> (and true
    (= Heap@28 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ Heap@27 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@27 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@27 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@27 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ inhaleHeap@_1188@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@27 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@27 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@27 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu)))
    (= Mask@27 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@26 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@28 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@28 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@28 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@26 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@28 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@28 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@28 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@26 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@28 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@28 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@28 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu) perm$R) monitorK))))
    (> monitorK 0)
    (CanRead$ref$ Mask@26 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@27 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@27 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)
    (IsGoodMask Mask@27)
    (IsGoodState$Mu$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ inhaleHeap@_1188@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@28 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@28 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@28 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@27 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@27 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@27 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)))
    (wf Heap@28 Mask@26)
    (wf Heap@28 Mask@27)
    (wf inhaleHeap@_1188@0 Mask@27)
  )(and 
    anon73_Then@14_assertion
    anon73_Then@15
))))
(let ((anon18@5 (=> (and true
    (< (* 1000 funcappK@_1235) (Fractions 1))
    (< 0 funcappK@_1235)
    (not (= nw@_1208@0 null))
  )(and 
    anon18@5_assertion
    anon18@6
))))
(let ((anon79_Else@47 (=> (and true
    (CanRead$ref$ Mask@186 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@116 mo@131@0 Message.cust1) FactorialCont.q)
  )(and 
    anon79_Else@47_assertion
    anon79_Else@48
))))
(let ((anon59 (=> (and true
    (< (* 1000 methodCallK@_1386) (Fractions 1))
    (< (* 1000 methodCallK@_1386) whileK@_1176)
    (< 0 methodCallK@_1386)
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1382@0 nw@_1358@0 Message.invValue) Heap@96)
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@98 nw@_1358@0 Message.type) 1)
    (= Heap@96 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Heap@95 nw@_1358@0 Message.invValue (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1382@0 nw@_1358@0 Message.invValue)))
    (= Heap@97 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@96 nw@_1358@0 Message.type (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1382@0 nw@_1358@0 Message.type)))
    (= Heap@98 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@97 nw@_1358@0 Message.type (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1382@0 nw@_1358@0 Message.type)))
    (= Heap@99 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@98 nw@_1358@0 Message.vo1 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1382@0 nw@_1358@0 Message.vo1)))
    (= Mask@115 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@16 nw@_1358@0 Message.invValue (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@16 nw@_1358@0 Message.invValue) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@16 nw@_1358@0 Message.invValue) perm$R) (Fractions 100)))))
    (= Mask@116 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@115 nw@_1358@0 Message.type (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@115 nw@_1358@0 Message.type) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@115 nw@_1358@0 Message.type) perm$R) monitorK))))
    (= Mask@117 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@116 nw@_1358@0 Message.type (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@116 nw@_1358@0 Message.type) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@116 nw@_1358@0 Message.type) perm$R) monitorK))))
    (= Mask@118 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@117 nw@_1358@0 Message.vo1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@117 nw@_1358@0 Message.vo1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@117 nw@_1358@0 Message.vo1) perm$R) monitorK))))
    (> (Fractions 100) 0)
    (> monitorK 0)
    (> monitorK 0)
    (> monitorK 0)
    (>= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@99 nw@_1358@0 Message.vo1) 0)
    (IsGoodInhaleState inhaleHeap@_1382@0 Heap@95 exhaleMask@_1363@16)
    (IsGoodMask Mask@115)
    (IsGoodMask Mask@116)
    (IsGoodMask Mask@117)
    (IsGoodMask Mask@118)
    (IsGoodMask Mask@118)
    (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1382@0 nw@_1358@0 Message.invValue))
    (IsGoodState$Int$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1382@0 nw@_1358@0 Message.type))
    (IsGoodState$Int$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1382@0 nw@_1358@0 Message.type))
    (IsGoodState$Int$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1382@0 nw@_1358@0 Message.vo1))
    (not (= nw@_1358@0 null))
    (not (= nw@_1358@0 null))
    (not (= nw@_1358@0 null))
    (not (= nw@_1358@0 null))
    (wf Heap@95 exhaleMask@_1363@16)
    (wf Heap@96 exhaleMask@_1363@16)
    (wf Heap@96 Mask@115)
    (wf Heap@97 Mask@115)
    (wf Heap@97 Mask@116)
    (wf Heap@98 Mask@116)
    (wf Heap@98 Mask@117)
    (wf Heap@99 Mask@117)
    (wf Heap@99 Mask@118)
    (wf Heap@99 Mask@118)
    (wf inhaleHeap@_1382@0 Mask@115)
    (wf inhaleHeap@_1382@0 Mask@116)
    (wf inhaleHeap@_1382@0 Mask@117)
    (wf inhaleHeap@_1382@0 Mask@118)
  )(and 
    anon59_assertion
    anon59@1
))))
(let ((anon73_Then@13 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@27 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@27 this FactorialActor.q) FactorialActorChannel.imp)))
  )(and 
    anon73_Then@13_assertion
    anon73_Then@14
))))
(let ((anon18@4 (=> (and true
    (CanRead$Int$ Mask@210 mo@131@0 Message.vo1)
  )(and 
    anon18@4_assertion
    anon18@5
))))
(let ((anon79_Else@46 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@116 mo@131@0 Message.cust1)))
  )(and 
    anon79_Else@46_assertion
    anon79_Else@47
))))
(let ((anon94_Else (=> (and true
    (= exhaleMask@_1363@8 exhaleMask@_1363@16)
    (= nw@_1321@0 null)
  )
    anon59
)))
(let ((anon94_Then@14 (=> (and true
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1363@14 nw@_1321@0 FactorialCont.vo) perm$R))
    (= exhaleMask@_1363@15 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1363@14 nw@_1321@0 FactorialCont.vo (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1363@14 nw@_1321@0 FactorialCont.vo) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1363@14 nw@_1321@0 FactorialCont.vo) perm$R) monitorK))))
    (= exhaleMask@_1363@16 exhaleMask@_1363@15)
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1363@14 nw@_1321@0 FactorialCont.vo) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1363@14 nw@_1321@0 FactorialCont.vo) perm$N)))
    (IsGoodMask Mask@114)
    (wf Heap@95 exhaleMask@_1363@15)
    (wf Heap@95 Mask@114)
  )
    anon59
)))
(let ((anon73_Then@12 (=> (and true
    (CanRead$ref$ Mask@26 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@27 this FactorialActor.q) FactorialActorChannel.imp)
  )(and 
    anon73_Then@12_assertion
    anon73_Then@13
))))
(let ((anon18@3 (=> (and true
    (not (= null mo@131@0))
  )(and 
    anon18@3_assertion
    anon18@4
))))
(let ((anon79_Else@45 (=> (and true
    (CanRead$ref$ Mask@186 mo@131@0 Message.cust1)
  )(and 
    anon79_Else@45_assertion
    anon79_Else@46
))))
(let ((anon94_Then@13 (=> (and true
    (> monitorK 0)
  )(and 
    anon94_Then@13_assertion
    anon94_Then@14
))))
(let ((anon73_Then@11 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@27 this FactorialActor.q)))
  )(and 
    anon73_Then@11_assertion
    anon73_Then@12
))))
(let ((anon18@2 (=> (and true
    (CanRead$Int$ Mask@210 nw@_1208@0 Message.vr3)
  )(and 
    anon18@2_assertion
    anon18@3
))))
(let ((anon79_Else@44 (=> (and true
    (not (= null mo@131@0))
  )(and 
    anon79_Else@44_assertion
    anon79_Else@45
))))
(let ((anon94_Then@12 (=> (and true
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1363@13 nw@_1321@0 FactorialCont.v) perm$R))
    (= exhaleMask@_1363@14 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1363@13 nw@_1321@0 FactorialCont.v (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1363@13 nw@_1321@0 FactorialCont.v) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1363@13 nw@_1321@0 FactorialCont.v) perm$R) monitorK))))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1363@13 nw@_1321@0 FactorialCont.v) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1363@13 nw@_1321@0 FactorialCont.v) perm$N)))
    (IsGoodMask Mask@114)
    (wf Heap@95 exhaleMask@_1363@14)
    (wf Heap@95 Mask@114)
  )(and 
    anon94_Then@12_assertion
    anon94_Then@13
))))
(let ((anon73_Then@10 (=> (and true
    (CanRead$ref$ Mask@26 this FactorialActor.q)
  )(and 
    anon73_Then@10_assertion
    anon73_Then@11
))))
(let ((anon18@1 (=> (and true
    (not (= nw@_1208@0 null))
  )(and 
    anon18@1_assertion
    anon18@2
))))
(let ((anon79_Else@43 (=> (and true
    (< (* 1000 methodCallK@_1287) (Fractions 1))
    (< (* 1000 methodCallK@_1287) whileK@_1176)
    (< 0 methodCallK@_1287)
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@184 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.initExpState) perm$R))
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@116 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@116 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@116 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@116 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp) FactorialContChannelExpEP.state) 0)
    (= (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@184 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.initExpState (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@184 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.initExpState) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@184 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.initExpState) perm$R) (Fractions 100)))) exhaleMask@_1281@0)
    (= Heap@115 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1283@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp)))
    (= Heap@116 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@115 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@115 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@115 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@115 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp) FactorialContChannelExpEP.state (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1283@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@115 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@115 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@115 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp) FactorialContChannelExpEP.state)))
    (= inhaleHeap@_1283@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Heap@114 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.initExpState))
    (= Mask@185 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1281@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@115 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@115 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1281@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@115 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@115 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1281@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@115 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@115 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp) perm$R) monitorK))))
    (= Mask@186 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@185 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@116 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@116 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@116 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp) FactorialContChannelExpEP.state (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@185 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@116 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@116 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@116 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp) FactorialContChannelExpEP.state) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@185 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@116 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@116 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@116 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp) FactorialContChannelExpEP.state) perm$R) (Fractions 100)))))
    (=> (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@184 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.initExpState) perm$R) (Fractions 100)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@184 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.initExpState) perm$N)))
    (> (Fractions 100) 0)
    (> monitorK 0)
    (IsGoodInhaleState inhaleHeap@_1283@0 Heap@114 exhaleMask@_1281@0)
    (IsGoodMask Mask@184)
    (IsGoodMask Mask@185)
    (IsGoodMask Mask@186)
    (IsGoodMask Mask@186)
    (IsGoodState$Int$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1283@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@116 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@116 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@116 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp) FactorialContChannelExpEP.state))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1283@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@115 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@115 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 mo@131@0 Message.cust1) FactorialCont.q)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@115 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@115 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@115 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp)))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@115 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@115 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@115 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp)) (= FactorialContChannelExpEP@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@115 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@115 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@115 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp))))
    (wf Heap@114 exhaleMask@_1281@0)
    (wf Heap@114 exhaleMask@_1281@0)
    (wf Heap@114 Mask@184)
    (wf Heap@115 exhaleMask@_1281@0)
    (wf Heap@115 Mask@185)
    (wf Heap@116 Mask@185)
    (wf Heap@116 Mask@186)
    (wf Heap@116 Mask@186)
    (wf inhaleHeap@_1283@0 Mask@185)
    (wf inhaleHeap@_1283@0 Mask@186)
  )(and 
    anon79_Else@43_assertion
    anon79_Else@44
))))
(let ((anon94_Then@11 (=> (and true
    (> monitorK 0)
  )(and 
    anon94_Then@11_assertion
    anon94_Then@12
))))
(let ((anon73_Then@9 (=> (and true
    (not (= this null))
  )(and 
    anon73_Then@9_assertion
    anon73_Then@10
))))
(let ((anon18 (=> (and true
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1221@0 nw@_1208@0 Message.invFinalResult) Heap@120)
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@122 nw@_1208@0 Message.type) 4)
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@123 nw@_1208@0 Message.vr3) 1)
    (= Heap@120 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Heap@103 nw@_1208@0 Message.invFinalResult (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1221@0 nw@_1208@0 Message.invFinalResult)))
    (= Heap@121 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@120 nw@_1208@0 Message.type (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1221@0 nw@_1208@0 Message.type)))
    (= Heap@122 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@121 nw@_1208@0 Message.type (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1221@0 nw@_1208@0 Message.type)))
    (= Heap@123 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@122 nw@_1208@0 Message.vr3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1221@0 nw@_1208@0 Message.vr3)))
    (= Mask@207 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1213@5 nw@_1208@0 Message.invFinalResult (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1213@5 nw@_1208@0 Message.invFinalResult) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1213@5 nw@_1208@0 Message.invFinalResult) perm$R) (Fractions 100)))))
    (= Mask@208 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@207 nw@_1208@0 Message.type (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@207 nw@_1208@0 Message.type) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@207 nw@_1208@0 Message.type) perm$R) monitorK))))
    (= Mask@209 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@208 nw@_1208@0 Message.type (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@208 nw@_1208@0 Message.type) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@208 nw@_1208@0 Message.type) perm$R) monitorK))))
    (= Mask@210 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@209 nw@_1208@0 Message.vr3 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@209 nw@_1208@0 Message.vr3) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@209 nw@_1208@0 Message.vr3) perm$R) monitorK))))
    (> (Fractions 100) 0)
    (> monitorK 0)
    (> monitorK 0)
    (> monitorK 0)
    (IsGoodInhaleState inhaleHeap@_1221@0 Heap@103 exhaleMask@_1213@5)
    (IsGoodMask Mask@207)
    (IsGoodMask Mask@208)
    (IsGoodMask Mask@209)
    (IsGoodMask Mask@210)
    (IsGoodMask Mask@210)
    (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1221@0 nw@_1208@0 Message.invFinalResult))
    (IsGoodState$Int$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1221@0 nw@_1208@0 Message.type))
    (IsGoodState$Int$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1221@0 nw@_1208@0 Message.type))
    (IsGoodState$Int$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1221@0 nw@_1208@0 Message.vr3))
    (not (= nw@_1208@0 null))
    (not (= nw@_1208@0 null))
    (not (= nw@_1208@0 null))
    (not (= nw@_1208@0 null))
    (wf Heap@103 exhaleMask@_1213@5)
    (wf Heap@120 exhaleMask@_1213@5)
    (wf Heap@120 Mask@207)
    (wf Heap@121 Mask@207)
    (wf Heap@121 Mask@208)
    (wf Heap@122 Mask@208)
    (wf Heap@122 Mask@209)
    (wf Heap@123 Mask@209)
    (wf Heap@123 Mask@210)
    (wf Heap@123 Mask@210)
    (wf inhaleHeap@_1221@0 Mask@207)
    (wf inhaleHeap@_1221@0 Mask@208)
    (wf inhaleHeap@_1221@0 Mask@209)
    (wf inhaleHeap@_1221@0 Mask@210)
  )(and 
    anon18_assertion
    anon18@1
))))
(let ((anon79_Else@42 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon79_Else@42_assertion
    anon79_Else@43
))))
(let ((anon94_Then@10 (=> (and true
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@12 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch) perm$R))
    (= exhaleMask@_1363@13 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@12 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@12 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@12 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch) perm$R) monitorK))))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@12 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@12 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch) perm$N)))
    (IsGoodMask Mask@114)
    (wf Heap@95 exhaleMask@_1363@13)
    (wf Heap@95 Mask@114)
  )(and 
    anon94_Then@10_assertion
    anon94_Then@11
))))
(let ((anon73_Then@8 (=> (and true
    (= Heap@27 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@26 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@26 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@26 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1188@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@26 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@26 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)))
    (= Mask@26 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@25 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@27 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@27 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@25 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@27 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@27 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@25 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@27 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@27 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) perm$R) monitorK))))
    (> monitorK 0)
    (CanRead$ref$ Mask@25 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@26 this FactorialActor.q) FactorialActorChannel.imp)
    (IsGoodMask Mask@26)
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1188@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@27 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@27 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@26 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@26 this FactorialActor.q) FactorialActorChannel.imp)))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@27 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@27 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@27 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)) (= (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@27 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@27 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@27 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)) Channel@t))
    (wf Heap@27 Mask@25)
    (wf Heap@27 Mask@26)
    (wf inhaleHeap@_1188@0 Mask@26)
  )(and 
    anon73_Then@8_assertion
    anon73_Then@9
))))
(let ((anon81_Else (=> (and true
    (= exhaleMask@_1213@5 exhaleMask@_1213@3)
    (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@103 nw@_1208@0 Message.sender4))
  )
    anon18
)))
(let ((anon81_Then@2 (=> (and true
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1213@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@103 nw@_1208@0 Message.sender4) FactorialCont.q) perm$R))
    (= exhaleMask@_1213@4 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1213@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@103 nw@_1208@0 Message.sender4) FactorialCont.q (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1213@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@103 nw@_1208@0 Message.sender4) FactorialCont.q) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1213@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@103 nw@_1208@0 Message.sender4) FactorialCont.q) perm$R) monitorK))))
    (= exhaleMask@_1213@5 exhaleMask@_1213@4)
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1213@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@103 nw@_1208@0 Message.sender4) FactorialCont.q) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1213@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@103 nw@_1208@0 Message.sender4) FactorialCont.q) perm$N)))
    (IsGoodMask Mask@156)
    (wf Heap@103 exhaleMask@_1213@4)
    (wf Heap@103 Mask@156)
  )
    anon18
)))
(let ((anon79_Else@41 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 mo@131@0 Message.cust1) FactorialCont.q)))
  )(and 
    anon79_Else@41_assertion
    anon79_Else@42
))))
(let ((anon94_Then@9 (=> (and true
    (> monitorK 0)
  )(and 
    anon94_Then@9_assertion
    anon94_Then@10
))))
(let ((anon73_Then@7 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@26 this FactorialActor.q)))
  )(and 
    anon73_Then@7_assertion
    anon73_Then@8
))))
(let ((anon81_Then@1 (=> (and true
    (> monitorK 0)
  )(and 
    anon81_Then@1_assertion
    anon81_Then@2
))))
(let ((anon79_Else@40 (=> (and true
    (CanRead$ref$ Mask@184 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 mo@131@0 Message.cust1) FactorialCont.q)
  )(and 
    anon79_Else@40_assertion
    anon79_Else@41
))))
(let ((anon94_Then@8 (=> (and true
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) perm$R))
    (= exhaleMask@_1363@12 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) perm$R) monitorK))))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) perm$N)))
    (IsGoodMask Mask@114)
    (wf Heap@95 exhaleMask@_1363@12)
    (wf Heap@95 Mask@114)
  )(and 
    anon94_Then@8_assertion
    anon94_Then@9
))))
(let ((anon73_Then@6 (=> (and true
    (CanRead$ref$ Mask@25 this FactorialActor.q)
  )(and 
    anon73_Then@6_assertion
    anon73_Then@7
))))
(let ((anon81_Then (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@103 nw@_1208@0 Message.sender4)))
  )(and 
    anon81_Then_assertion
    anon81_Then@1
))))
(let ((anon79_Else@39 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 mo@131@0 Message.cust1)))
  )(and 
    anon79_Else@39_assertion
    anon79_Else@40
))))
(let ((anon94_Then@7 (=> (and true
    (> monitorK 0)
  )(and 
    anon94_Then@7_assertion
    anon94_Then@8
))))
(let ((anon73_Then@5 (=> (and true
    (not (= this null))
  )(and 
    anon73_Then@5_assertion
    anon73_Then@6
))))
(let ((anon15@8 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1213@2 nw@_1208@0 Message.vr3) perm$R))
    (= exhaleMask@_1213@3 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1213@2 nw@_1208@0 Message.vr3 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1213@2 nw@_1208@0 Message.vr3) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1213@2 nw@_1208@0 Message.vr3) perm$R) (Fractions 100)))))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1213@2 nw@_1208@0 Message.vr3) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1213@2 nw@_1208@0 Message.vr3) perm$N)))
    (IsGoodMask Mask@156)
    (wf Heap@103 exhaleMask@_1213@3)
    (wf Heap@103 Mask@156)
  )
    (and anon81_Else anon81_Then)
)))
(let ((anon79_Else@38 (=> (and true
    (CanRead$ref$ Mask@184 mo@131@0 Message.cust1)
  )(and 
    anon79_Else@38_assertion
    anon79_Else@39
))))
(let ((anon94_Then@6 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@10 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q) FactorialContChannel.initExpState) perm$R))
    (= exhaleMask@_1363@11 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@10 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q) FactorialContChannel.initExpState (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@10 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q) FactorialContChannel.initExpState) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@10 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q) FactorialContChannel.initExpState) perm$R) (Fractions 100)))))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@10 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q) FactorialContChannel.initExpState) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@10 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q) FactorialContChannel.initExpState) perm$N)))
    (IsGoodMask Mask@114)
    (wf Heap@95 exhaleMask@_1363@11)
    (wf Heap@95 Mask@114)
  )(and 
    anon94_Then@6_assertion
    anon94_Then@7
))))
(let ((anon73_Then@4 (=> (and true
    (= Heap@26 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@25 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@25 this FactorialActor.q) FactorialActorChannel.imp (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1188@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@25 this FactorialActor.q) FactorialActorChannel.imp)))
    (= Mask@25 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@24 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@26 this FactorialActor.q) FactorialActorChannel.imp (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@24 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@26 this FactorialActor.q) FactorialActorChannel.imp) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@24 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@26 this FactorialActor.q) FactorialActorChannel.imp) perm$R) monitorK))))
    (> monitorK 0)
    (CanRead$ref$ Mask@24 this FactorialActor.q)
    (IsGoodMask Mask@25)
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1188@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@26 this FactorialActor.q) FactorialActorChannel.imp))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@25 this FactorialActor.q)))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@26 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@26 this FactorialActor.q) FactorialActorChannel.imp)) (= FactorialActorChannelImpEP@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@26 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@26 this FactorialActor.q) FactorialActorChannel.imp))))
    (wf Heap@26 Mask@24)
    (wf Heap@26 Mask@25)
    (wf inhaleHeap@_1188@0 Mask@25)
  )(and 
    anon73_Then@4_assertion
    anon73_Then@5
))))
(let ((anon15@7 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon15@7_assertion
    anon15@8
))))
(let ((anon79_Else@37 (=> (and true
    (not (= null mo@131@0))
  )(and 
    anon79_Else@37_assertion
    anon79_Else@38
))))
(let ((anon94_Then@5 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon94_Then@5_assertion
    anon94_Then@6
))))
(let ((anon73_Then@3 (=> (and true
    (not (= this null))
  )(and 
    anon73_Then@3_assertion
    anon73_Then@4
))))
(let ((anon15@6 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1213@1 nw@_1208@0 Message.receiver4) perm$R))
    (= exhaleMask@_1213@2 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1213@1 nw@_1208@0 Message.receiver4 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1213@1 nw@_1208@0 Message.receiver4) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1213@1 nw@_1208@0 Message.receiver4) perm$R) (Fractions 100)))))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1213@1 nw@_1208@0 Message.receiver4) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1213@1 nw@_1208@0 Message.receiver4) perm$N)))
    (IsGoodMask Mask@156)
    (wf Heap@103 exhaleMask@_1213@2)
    (wf Heap@103 Mask@156)
  )(and 
    anon15@6_assertion
    anon15@7
))))
(let ((anon79_Else@36 (=> (and true
    (< (* 1000 unfoldK@_1280) whileK@_1176)
    (< 0 unfoldK@_1280)
    (< unfoldK@_1280 (Fractions 1))
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@178 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@108 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@108 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.valid) perm$R))
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1279@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@113 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@113 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@113 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.valid) Heap@113)
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1279@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp) FactorialContChannelExpEP.valid) Heap@114)
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 mo@131@0 Message.cust1) FactorialCont.q) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp) FactorialContChannelExpEP.ch))
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 mo@131@0 Message.cust1) FactorialCont.q) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.ch))
    (= (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@178 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@108 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@108 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.valid (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@178 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@108 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@108 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.valid) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@178 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@108 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@108 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.valid) perm$R) (Fractions 100)))) exhaleMask@_1277@0)
    (= Heap@109 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@108 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@108 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@108 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1279@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@108 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@108 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp)))
    (= Heap@110 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@109 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@109 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@109 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1279@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@109 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@109 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp)))
    (= Heap@111 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@110 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@110 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@110 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@110 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.ch (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1279@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@110 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@110 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@110 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.ch)))
    (= Heap@112 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@111 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@111 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@111 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@111 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp) FactorialContChannelExpEP.ch (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1279@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@111 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@111 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@111 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp) FactorialContChannelExpEP.ch)))
    (= Heap@113 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Heap@112 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@112 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@112 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@112 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.valid (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1279@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@112 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@112 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@112 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.valid)))
    (= Heap@114 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Heap@113 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@113 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@113 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@113 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp) FactorialContChannelExpEP.valid (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1279@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@113 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@113 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@113 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp) FactorialContChannelExpEP.valid)))
    (= inhaleHeap@_1279@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Heap@108 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@108 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@108 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.valid))
    (= Mask@179 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1277@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@109 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@109 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1277@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@109 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@109 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1277@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@109 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@109 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp) perm$R) monitorK))))
    (= Mask@180 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@179 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@110 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@110 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@179 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@110 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@110 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@179 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@110 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@110 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp) perm$R) monitorK))))
    (= Mask@181 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@180 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@111 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@111 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@111 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.ch (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@180 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@111 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@111 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@111 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.ch) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@180 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@111 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@111 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@111 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.ch) perm$R) monitorK))))
    (= Mask@182 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@181 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@112 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@112 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@112 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp) FactorialContChannelExpEP.ch (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@181 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@112 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@112 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@112 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp) FactorialContChannelExpEP.ch) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@181 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@112 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@112 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@112 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp) FactorialContChannelExpEP.ch) perm$R) monitorK))))
    (= Mask@183 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@182 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@113 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@113 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@113 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.valid (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@182 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@113 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@113 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@113 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.valid) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@182 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@113 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@113 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@113 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.valid) perm$R) (Fractions 100)))))
    (= Mask@184 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@183 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp) FactorialContChannelExpEP.valid (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@183 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp) FactorialContChannelExpEP.valid) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@183 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp) FactorialContChannelExpEP.valid) perm$R) (Fractions 100)))))
    (=> (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@178 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@108 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@108 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.valid) perm$R) (Fractions 100)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@178 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@108 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@108 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.valid) perm$N)))
    (> (Fractions 100) 0)
    (> (Fractions 100) 0)
    (> monitorK 0)
    (> monitorK 0)
    (> monitorK 0)
    (> monitorK 0)
    (IsGoodInhaleState inhaleHeap@_1279@0 Heap@108 exhaleMask@_1277@0)
    (IsGoodMask Mask@178)
    (IsGoodMask Mask@179)
    (IsGoodMask Mask@180)
    (IsGoodMask Mask@181)
    (IsGoodMask Mask@182)
    (IsGoodMask Mask@183)
    (IsGoodMask Mask@184)
    (IsGoodMask Mask@184)
    (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1279@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@113 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@113 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@113 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.valid))
    (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1279@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@114 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp) FactorialContChannelExpEP.valid))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1279@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@109 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@109 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1279@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@110 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@110 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1279@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@111 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@111 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@111 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.ch))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1279@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@112 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@112 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@112 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp) FactorialContChannelExpEP.ch))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@108 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@108 mo@131@0 Message.cust1) FactorialCont.q)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@109 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@109 mo@131@0 Message.cust1) FactorialCont.q)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@110 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@110 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@110 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@111 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@111 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@111 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@112 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@112 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@112 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@112 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@112 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@112 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@112 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@112 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@112 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@113 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@113 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@113 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp)))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@109 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@109 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@109 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp)) (= FactorialContChannelImpEP@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@109 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@109 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@109 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp))))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@110 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@110 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@110 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp)) (= FactorialContChannelExpEP@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@110 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@110 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@110 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp))))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@111 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@111 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@111 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@111 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.ch)) (= FactorialContChannel@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@111 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@111 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@111 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@111 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.ch))))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@112 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@112 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@112 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@112 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp) FactorialContChannelExpEP.ch)) (= FactorialContChannel@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@112 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@112 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@112 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@112 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.exp) FactorialContChannelExpEP.ch))))
    (wf Heap@108 exhaleMask@_1277@0)
    (wf Heap@108 exhaleMask@_1277@0)
    (wf Heap@108 Mask@178)
    (wf Heap@109 exhaleMask@_1277@0)
    (wf Heap@109 Mask@179)
    (wf Heap@110 Mask@179)
    (wf Heap@110 Mask@180)
    (wf Heap@111 Mask@180)
    (wf Heap@111 Mask@181)
    (wf Heap@112 Mask@181)
    (wf Heap@112 Mask@182)
    (wf Heap@113 Mask@182)
    (wf Heap@113 Mask@183)
    (wf Heap@114 Mask@183)
    (wf Heap@114 Mask@184)
    (wf Heap@114 Mask@184)
    (wf inhaleHeap@_1279@0 Mask@179)
    (wf inhaleHeap@_1279@0 Mask@180)
    (wf inhaleHeap@_1279@0 Mask@181)
    (wf inhaleHeap@_1279@0 Mask@182)
    (wf inhaleHeap@_1279@0 Mask@183)
    (wf inhaleHeap@_1279@0 Mask@184)
  )(and 
    anon79_Else@36_assertion
    anon79_Else@37
))))
(let ((anon94_Then@4 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@9 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q) FactorialContChannel.valid) perm$R))
    (= (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@9 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q) FactorialContChannel.valid (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@9 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q) FactorialContChannel.valid) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@9 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q) FactorialContChannel.valid) perm$R) (Fractions 100)))) exhaleMask@_1363@10)
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@9 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q) FactorialContChannel.valid) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@9 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q) FactorialContChannel.valid) perm$N)))
    (IsGoodMask Mask@114)
    (wf Heap@95 exhaleMask@_1363@10)
    (wf Heap@95 Mask@114)
  )(and 
    anon94_Then@4_assertion
    anon94_Then@5
))))
(let ((anon73_Then@2 (=> (and true
    (CanRead$ref$ Mask@24 this FactorialActor.q)
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@25 this FactorialActor.q)))
  )(and 
    anon73_Then@2_assertion
    anon73_Then@3
))))
(let ((anon15@5 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon15@5_assertion
    anon15@6
))))
(let ((anon79_Else@35 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon79_Else@35_assertion
    anon79_Else@36
))))
(let ((anon94_Then@3 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon94_Then@3_assertion
    anon94_Then@4
))))
(let ((anon73_Then@1 (=> (and true
    (not (= this null))
  )(and 
    anon73_Then@1_assertion
    anon73_Then@2
))))
(let ((anon15@4 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1213@0 nw@_1208@0 Message.sender4) perm$R))
    (= exhaleMask@_1213@1 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1213@0 nw@_1208@0 Message.sender4 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1213@0 nw@_1208@0 Message.sender4) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1213@0 nw@_1208@0 Message.sender4) perm$R) (Fractions 100)))))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1213@0 nw@_1208@0 Message.sender4) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1213@0 nw@_1208@0 Message.sender4) perm$N)))
    (IsGoodMask Mask@156)
    (wf Heap@103 exhaleMask@_1213@1)
    (wf Heap@103 Mask@156)
  )(and 
    anon15@4_assertion
    anon15@5
))))
(let ((anon79_Else@34 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@108 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@108 mo@131@0 Message.cust1) FactorialCont.q)))
  )(and 
    anon79_Else@34_assertion
    anon79_Else@35
))))
(let ((anon94_Then@2 (=> (and true
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@8 nw@_1321@0 FactorialCont.q) perm$R))
    (= exhaleMask@_1363@9 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@8 nw@_1321@0 FactorialCont.q (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@8 nw@_1321@0 FactorialCont.q) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@8 nw@_1321@0 FactorialCont.q) perm$R) monitorK))))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@8 nw@_1321@0 FactorialCont.q) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@8 nw@_1321@0 FactorialCont.q) perm$N)))
    (IsGoodMask Mask@114)
    (wf Heap@95 exhaleMask@_1363@9)
    (wf Heap@95 Mask@114)
  )(and 
    anon94_Then@2_assertion
    anon94_Then@3
))))
(let ((anon73_Then (=> (and true
    (= (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ ZeroMask this FactorialActor.q (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ ZeroMask this FactorialActor.q) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ ZeroMask this FactorialActor.q) perm$R) monitorK))) Mask@24)
    (= Heap@25 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@24 this FactorialActor.q (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1188@0 this FactorialActor.q)))
    (> monitorK 0)
    (IsGoodInhaleState inhaleHeap@_1188@0 Heap@24 ZeroMask)
    (IsGoodMask Mask@24)
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1188@0 this FactorialActor.q))
    (not (= this null))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@25 this FactorialActor.q)) (= FactorialActorChannel@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@25 this FactorialActor.q))))
    (wf Heap@25 Mask@24)
    (wf Heap@25 ZeroMask)
    (wf inhaleHeap@_1188@0 Mask@24)
  )(and 
    anon73_Then_assertion
    anon73_Then@1
))))
(let ((anon15@3 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon15@3_assertion
    anon15@4
))))
(let ((anon79_Else@33 (=> (and true
    (CanRead$ref$ Mask@178 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@108 mo@131@0 Message.cust1) FactorialCont.q)
  )(and 
    anon79_Else@33_assertion
    anon79_Else@34
))))
(let ((anon94_Then@1 (=> (and true
    (> monitorK 0)
  )(and 
    anon94_Then@1_assertion
    anon94_Then@2
))))
(let ((anon15@2 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@156 nw@_1208@0 Message.type) perm$R))
    (= (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@156 nw@_1208@0 Message.type (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@156 nw@_1208@0 Message.type) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@156 nw@_1208@0 Message.type) perm$R) (Fractions 100)))) exhaleMask@_1213@0)
    (=> (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@156 nw@_1208@0 Message.type) perm$R) (Fractions 100)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@156 nw@_1208@0 Message.type) perm$N)))
    (IsGoodMask Mask@156)
    (wf Heap@103 exhaleMask@_1213@0)
    (wf Heap@103 Mask@156)
  )(and 
    anon15@2_assertion
    anon15@3
))))
(let ((anon79_Else@32 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@108 mo@131@0 Message.cust1)))
  )(and 
    anon79_Else@32_assertion
    anon79_Else@33
))))
(let ((anon94_Then (=> (and true
    (not (= nw@_1321@0 null))
  )(and 
    anon94_Then_assertion
    anon94_Then@1
))))
(let ((anon15@1 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon15@1_assertion
    anon15@2
))))
(let ((anon79_Else@31 (=> (and true
    (CanRead$ref$ Mask@178 mo@131@0 Message.cust1)
  )(and 
    anon79_Else@31_assertion
    anon79_Else@32
))))
(let (($branchMerge_3 (=> (and true
  )
    (and anon94_Else anon94_Then)
)))
(let ((anon15 (=> (and true
  )(and 
    anon15_assertion
    anon15@1
))))
(let ((anon79_Else@30 (=> (and true
    (not (= null mo@131@0))
  )(and 
    anon79_Else@30_assertion
    anon79_Else@31
))))
(let ((anon93_Else (=> (and true
    (not (= nw@_1321@0 null))
  )
    $branchMerge_3
)))
(let ((anon93_Then (=> (and true
    (= nw@_1321@0 null)
  )
    $branchMerge_3
)))
(let ((anon80_Else (=> (and true
    (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@103 nw@_1208@0 Message.sender4))
  )
    anon15
)))
(let ((anon80_Then@1 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@103 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@103 nw@_1208@0 Message.sender4) FactorialCont.q)))
  )
    anon15
)))
(let ((anon79_Else@29 (=> (and true
    (< (* 1000 unfoldK@_1276) whileK@_1176)
    (< 0 unfoldK@_1276)
    (< unfoldK@_1276 (Fractions 1))
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1263@7 receiver@140@0 FactorialCont.v) perm$R))
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1275@0 nw@_1258@0 Message.invResult1) Heap@105)
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@107 nw@_1258@0 Message.type) 2)
    (= exhaleMask@_1263@8 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1263@7 receiver@140@0 FactorialCont.v (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1263@7 receiver@140@0 FactorialCont.v) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1263@7 receiver@140@0 FactorialCont.v) perm$R) monitorK))))
    (= Heap@105 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Heap@104 nw@_1258@0 Message.invResult1 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1275@0 nw@_1258@0 Message.invResult1)))
    (= Heap@106 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@105 nw@_1258@0 Message.type (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1275@0 nw@_1258@0 Message.type)))
    (= Heap@107 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@106 nw@_1258@0 Message.type (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1275@0 nw@_1258@0 Message.type)))
    (= Heap@108 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@107 nw@_1258@0 Message.receiver2 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1275@0 nw@_1258@0 Message.receiver2)))
    (= Mask@175 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1263@8 nw@_1258@0 Message.invResult1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1263@8 nw@_1258@0 Message.invResult1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1263@8 nw@_1258@0 Message.invResult1) perm$R) (Fractions 100)))))
    (= Mask@176 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@175 nw@_1258@0 Message.type (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@175 nw@_1258@0 Message.type) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@175 nw@_1258@0 Message.type) perm$R) monitorK))))
    (= Mask@177 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@176 nw@_1258@0 Message.type (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@176 nw@_1258@0 Message.type) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@176 nw@_1258@0 Message.type) perm$R) monitorK))))
    (= Mask@178 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@177 nw@_1258@0 Message.receiver2 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@177 nw@_1258@0 Message.receiver2) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@177 nw@_1258@0 Message.receiver2) perm$R) monitorK))))
    (= receiver@140@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@108 nw@_1258@0 Message.receiver2))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1263@7 receiver@140@0 FactorialCont.v) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1263@7 receiver@140@0 FactorialCont.v) perm$N)))
    (> (Fractions 100) 0)
    (> monitorK 0)
    (> monitorK 0)
    (> monitorK 0)
    (IsGoodInhaleState inhaleHeap@_1275@0 Heap@104 exhaleMask@_1263@8)
    (IsGoodMask Mask@174)
    (IsGoodMask Mask@175)
    (IsGoodMask Mask@176)
    (IsGoodMask Mask@177)
    (IsGoodMask Mask@178)
    (IsGoodMask Mask@178)
    (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1275@0 nw@_1258@0 Message.invResult1))
    (IsGoodState$Int$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1275@0 nw@_1258@0 Message.type))
    (IsGoodState$Int$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1275@0 nw@_1258@0 Message.type))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1275@0 nw@_1258@0 Message.receiver2))
    (not (= nw@_1258@0 null))
    (not (= nw@_1258@0 null))
    (not (= nw@_1258@0 null))
    (not (= nw@_1258@0 null))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@108 nw@_1258@0 Message.receiver2)) (= FactorialCont@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@108 nw@_1258@0 Message.receiver2))))
    (wf Heap@104 exhaleMask@_1263@8)
    (wf Heap@104 exhaleMask@_1263@8)
    (wf Heap@104 Mask@174)
    (wf Heap@105 exhaleMask@_1263@8)
    (wf Heap@105 Mask@175)
    (wf Heap@106 Mask@175)
    (wf Heap@106 Mask@176)
    (wf Heap@107 Mask@176)
    (wf Heap@107 Mask@177)
    (wf Heap@108 Mask@177)
    (wf Heap@108 Mask@178)
    (wf Heap@108 Mask@178)
    (wf inhaleHeap@_1275@0 Mask@175)
    (wf inhaleHeap@_1275@0 Mask@176)
    (wf inhaleHeap@_1275@0 Mask@177)
    (wf inhaleHeap@_1275@0 Mask@178)
  )(and 
    anon79_Else@29_assertion
    anon79_Else@30
))))
(let ((anon53@18 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1358@0 Message.sender1) Future.q) FutureChannel.initExpState) perm$R))
    (= exhaleMask@_1363@8 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1358@0 Message.sender1) Future.q) FutureChannel.initExpState (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1358@0 Message.sender1) Future.q) FutureChannel.initExpState) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1358@0 Message.sender1) Future.q) FutureChannel.initExpState) perm$R) (Fractions 100)))))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1358@0 Message.sender1) Future.q) FutureChannel.initExpState) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1358@0 Message.sender1) Future.q) FutureChannel.initExpState) perm$N)))
    (IsGoodMask Mask@114)
    (wf Heap@95 exhaleMask@_1363@8)
    (wf Heap@95 Mask@114)
  )
    (and anon93_Else anon93_Then)
)))
(let ((anon80_Then (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@103 nw@_1208@0 Message.sender4)))
  )(and 
    anon80_Then_assertion
    anon80_Then@1
))))
(let ((anon79_Else@28 (=> (and true
    (> monitorK 0)
  )(and 
    anon79_Else@28_assertion
    anon79_Else@29
))))
(let ((anon53@17 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon53@17_assertion
    anon53@18
))))
(let ((anon79_Then@4 (=> (and true
    (= receiver@134@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@103 mo@131@0 Message.sender1))
    (CanRead$ref$ Mask@156 mo@131@0 Message.sender1)
  )
    (and anon80_Else anon80_Then)
)))
(let ((anon79_Else@27 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1263@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 nw@_1258@0 Message.sender2) Future.q) FutureChannel.initExpState) perm$R))
    (= exhaleMask@_1263@7 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1263@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 nw@_1258@0 Message.sender2) Future.q) FutureChannel.initExpState (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1263@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 nw@_1258@0 Message.sender2) Future.q) FutureChannel.initExpState) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1263@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 nw@_1258@0 Message.sender2) Future.q) FutureChannel.initExpState) perm$R) (Fractions 100)))))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1263@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 nw@_1258@0 Message.sender2) Future.q) FutureChannel.initExpState) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1263@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 nw@_1258@0 Message.sender2) Future.q) FutureChannel.initExpState) perm$N)))
    (IsGoodMask Mask@174)
    (wf Heap@104 exhaleMask@_1263@7)
    (wf Heap@104 Mask@174)
  )(and 
    anon79_Else@27_assertion
    anon79_Else@28
))))
(let ((anon53@16 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1358@0 Message.sender1) Future.q) FutureChannel.valid) perm$R))
    (= exhaleMask@_1363@7 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1358@0 Message.sender1) Future.q) FutureChannel.valid (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1358@0 Message.sender1) Future.q) FutureChannel.valid) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1358@0 Message.sender1) Future.q) FutureChannel.valid) perm$R) (Fractions 100)))))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1358@0 Message.sender1) Future.q) FutureChannel.valid) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1363@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1358@0 Message.sender1) Future.q) FutureChannel.valid) perm$N)))
    (IsGoodMask Mask@114)
    (wf Heap@95 exhaleMask@_1363@7)
    (wf Heap@95 Mask@114)
  )(and 
    anon53@16_assertion
    anon53@17
))))
(let ((anon79_Then@3 (=> (and true
    (not (= null mo@131@0))
  )(and 
    anon79_Then@3_assertion
    anon79_Then@4
))))
(let ((anon79_Else@26 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon79_Else@26_assertion
    anon79_Else@27
))))
(let ((anon53@15 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon53@15_assertion
    anon53@16
))))
(let ((anon79_Then@2 (=> (and true
    (not (= nw@_1208@0 null))
  )(and 
    anon79_Then@2_assertion
    anon79_Then@3
))))
(let ((anon79_Else@25 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1263@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 nw@_1258@0 Message.sender2) Future.q) FutureChannel.valid) perm$R))
    (= exhaleMask@_1263@6 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1263@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 nw@_1258@0 Message.sender2) Future.q) FutureChannel.valid (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1263@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 nw@_1258@0 Message.sender2) Future.q) FutureChannel.valid) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1263@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 nw@_1258@0 Message.sender2) Future.q) FutureChannel.valid) perm$R) (Fractions 100)))))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1263@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 nw@_1258@0 Message.sender2) Future.q) FutureChannel.valid) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1263@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 nw@_1258@0 Message.sender2) Future.q) FutureChannel.valid) perm$N)))
    (IsGoodMask Mask@174)
    (wf Heap@104 exhaleMask@_1263@6)
    (wf Heap@104 Mask@174)
  )(and 
    anon79_Else@25_assertion
    anon79_Else@26
))))
(let ((anon53@14 (=> (and true
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1358@0 Message.sender1) Future.q) perm$R))
    (= exhaleMask@_1363@6 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1358@0 Message.sender1) Future.q (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1358@0 Message.sender1) Future.q) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1358@0 Message.sender1) Future.q) perm$R) monitorK))))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1358@0 Message.sender1) Future.q) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1358@0 Message.sender1) Future.q) perm$N)))
    (IsGoodMask Mask@114)
    (wf Heap@95 exhaleMask@_1363@6)
    (wf Heap@95 Mask@114)
  )(and 
    anon53@14_assertion
    anon53@15
))))
(let ((anon79_Then@1 (=> (and true
    (< (* 1000 methodCallK@_1212) (Fractions 1))
    (< (* 1000 methodCallK@_1212) whileK@_1176)
    (< 0 methodCallK@_1212)
    (= (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@73 nw@_1208@0 Message.sender4 null) Heap@103)
    (CanWrite$ref$ Mask@156 nw@_1208@0 Message.sender4)
    (wf Heap@103 Mask@156)
  )(and 
    anon79_Then@1_assertion
    anon79_Then@2
))))
(let ((anon79_Else@24 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon79_Else@24_assertion
    anon79_Else@25
))))
(let ((anon53@13 (=> (and true
    (> monitorK 0)
  )(and 
    anon53@13_assertion
    anon53@14
))))
(let ((anon79_Then (=> (and true
    (<= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@73 nw@_1208@0 held) 0)
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ Heap@73 nw@_1208@0 mu) $LockBottom)
    (= (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@71 nw@_1208@0 Message.type (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@71 nw@_1208@0 Message.type) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@71 nw@_1208@0 Message.type) perm$R) (Fractions 100)))) Mask@139)
    (= Mask@140 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@139 nw@_1208@0 Message.sender1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@139 nw@_1208@0 Message.sender1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@139 nw@_1208@0 Message.sender1) perm$R) (Fractions 100)))))
    (= Mask@141 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@140 nw@_1208@0 Message.sender3 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@140 nw@_1208@0 Message.sender3) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@140 nw@_1208@0 Message.sender3) perm$R) (Fractions 100)))))
    (= Mask@142 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@141 nw@_1208@0 Message.sender2 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@141 nw@_1208@0 Message.sender2) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@141 nw@_1208@0 Message.sender2) perm$R) (Fractions 100)))))
    (= Mask@143 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@142 nw@_1208@0 Message.sender4 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@142 nw@_1208@0 Message.sender4) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@142 nw@_1208@0 Message.sender4) perm$R) (Fractions 100)))))
    (= Mask@144 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@143 nw@_1208@0 Message.receiver1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@143 nw@_1208@0 Message.receiver1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@143 nw@_1208@0 Message.receiver1) perm$R) (Fractions 100)))))
    (= Mask@145 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@144 nw@_1208@0 Message.receiver2 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@144 nw@_1208@0 Message.receiver2) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@144 nw@_1208@0 Message.receiver2) perm$R) (Fractions 100)))))
    (= Mask@146 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@145 nw@_1208@0 Message.receiver3 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@145 nw@_1208@0 Message.receiver3) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@145 nw@_1208@0 Message.receiver3) perm$R) (Fractions 100)))))
    (= Mask@147 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@146 nw@_1208@0 Message.receiver4 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@146 nw@_1208@0 Message.receiver4) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@146 nw@_1208@0 Message.receiver4) perm$R) (Fractions 100)))))
    (= Mask@148 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@147 nw@_1208@0 Message.v1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@147 nw@_1208@0 Message.v1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@147 nw@_1208@0 Message.v1) perm$R) (Fractions 100)))))
    (= Mask@149 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@148 nw@_1208@0 Message.vo1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@148 nw@_1208@0 Message.vo1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@148 nw@_1208@0 Message.vo1) perm$R) (Fractions 100)))))
    (= Mask@150 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@149 nw@_1208@0 Message.cust1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@149 nw@_1208@0 Message.cust1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@149 nw@_1208@0 Message.cust1) perm$R) (Fractions 100)))))
    (= Mask@151 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@150 nw@_1208@0 Message.vr1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@150 nw@_1208@0 Message.vr1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@150 nw@_1208@0 Message.vr1) perm$R) (Fractions 100)))))
    (= Mask@152 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@151 nw@_1208@0 Message.old1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@151 nw@_1208@0 Message.old1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@151 nw@_1208@0 Message.old1) perm$R) (Fractions 100)))))
    (= Mask@153 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@152 nw@_1208@0 Message.vr2 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@152 nw@_1208@0 Message.vr2) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@152 nw@_1208@0 Message.vr2) perm$R) (Fractions 100)))))
    (= Mask@154 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@153 nw@_1208@0 Message.old2 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@153 nw@_1208@0 Message.old2) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@153 nw@_1208@0 Message.old2) perm$R) (Fractions 100)))))
    (= Mask@155 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@154 nw@_1208@0 Message.vr3 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@154 nw@_1208@0 Message.vr3) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@154 nw@_1208@0 Message.vr3) perm$R) (Fractions 100)))))
    (= Mask@156 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@155 nw@_1208@0 mu (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@155 nw@_1208@0 mu) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@155 nw@_1208@0 mu) perm$R) (Fractions 100)))))
    (= Message@t (dtype nw@_1208@0))
    (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@73 mo@131@0 Message.cust1))
    (forall( (|f_$14_$0| Field$Bool$))(and (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ Mask@71 nw@_1208@0 |f_$14_$0|) perm$R) 0) (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ Mask@71 nw@_1208@0 |f_$14_$0|) perm$N) 0)))
    (forall( (|f_$14_$1| Field$Int$))(and (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@71 nw@_1208@0 |f_$14_$1|) perm$R) 0) (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@71 nw@_1208@0 |f_$14_$1|) perm$N) 0)))
    (forall( (|f_$14_$2| Field$ref$))(and (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@71 nw@_1208@0 |f_$14_$2|) perm$R) 0) (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@71 nw@_1208@0 |f_$14_$2|) perm$N) 0)))
    (forall( (|f_$14_$3| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(and (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@71 nw@_1208@0 |f_$14_$3|) perm$R) 0) (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@71 nw@_1208@0 |f_$14_$3|) perm$N) 0)))
    (forall( (|f_$14_$4| Field$Mu$))(and (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@71 nw@_1208@0 |f_$14_$4|) perm$R) 0) (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@71 nw@_1208@0 |f_$14_$4|) perm$N) 0)))
    (not (= nw@_1208@0 null))
    (not (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ Heap@73 nw@_1208@0 rdheld))
  )(and 
    anon79_Then_assertion
    anon79_Then@1
))))
(let ((anon79_Else@23 (=> (and true
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1263@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 nw@_1258@0 Message.sender2) Future.q) perm$R))
    (= exhaleMask@_1263@5 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1263@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 nw@_1258@0 Message.sender2) Future.q (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1263@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 nw@_1258@0 Message.sender2) Future.q) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1263@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 nw@_1258@0 Message.sender2) Future.q) perm$R) monitorK))))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1263@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 nw@_1258@0 Message.sender2) Future.q) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1263@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 nw@_1258@0 Message.sender2) Future.q) perm$N)))
    (IsGoodMask Mask@174)
    (wf Heap@104 exhaleMask@_1263@5)
    (wf Heap@104 Mask@174)
  )(and 
    anon79_Else@23_assertion
    anon79_Else@24
))))
(let ((anon53@12 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@4 nw@_1358@0 Message.cust1) perm$R))
    (= exhaleMask@_1363@5 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@4 nw@_1358@0 Message.cust1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@4 nw@_1358@0 Message.cust1) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@4 nw@_1358@0 Message.cust1) perm$R) (Fractions 100)))))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@4 nw@_1358@0 Message.cust1) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@4 nw@_1358@0 Message.cust1) perm$N)))
    (IsGoodMask Mask@114)
    (wf Heap@95 exhaleMask@_1363@5)
    (wf Heap@95 Mask@114)
  )(and 
    anon53@12_assertion
    anon53@13
))))
(let ((anon79_Else@22 (=> (and true
    (> monitorK 0)
  )(and 
    anon79_Else@22_assertion
    anon79_Else@23
))))
(let ((anon53@11 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon53@11_assertion
    anon53@12
))))
(let ((anon79_Else@21 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1263@3 nw@_1258@0 Message.old1) perm$R))
    (= exhaleMask@_1263@4 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1263@3 nw@_1258@0 Message.old1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1263@3 nw@_1258@0 Message.old1) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1263@3 nw@_1258@0 Message.old1) perm$R) (Fractions 100)))))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1263@3 nw@_1258@0 Message.old1) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1263@3 nw@_1258@0 Message.old1) perm$N)))
    (IsGoodMask Mask@174)
    (wf Heap@104 exhaleMask@_1263@4)
    (wf Heap@104 Mask@174)
  )(and 
    anon79_Else@21_assertion
    anon79_Else@22
))))
(let ((anon53@10 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1363@3 nw@_1358@0 Message.vo1) perm$R))
    (= exhaleMask@_1363@4 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1363@3 nw@_1358@0 Message.vo1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1363@3 nw@_1358@0 Message.vo1) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1363@3 nw@_1358@0 Message.vo1) perm$R) (Fractions 100)))))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1363@3 nw@_1358@0 Message.vo1) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1363@3 nw@_1358@0 Message.vo1) perm$N)))
    (IsGoodMask Mask@114)
    (wf Heap@95 exhaleMask@_1363@4)
    (wf Heap@95 Mask@114)
  )(and 
    anon53@10_assertion
    anon53@11
))))
(let ((anon79_Else@20 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon79_Else@20_assertion
    anon79_Else@21
))))
(let ((anon53@9 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon53@9_assertion
    anon53@10
))))
(let ((anon79_Else@19 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1263@2 nw@_1258@0 Message.vr1) perm$R))
    (= exhaleMask@_1263@3 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1263@2 nw@_1258@0 Message.vr1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1263@2 nw@_1258@0 Message.vr1) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1263@2 nw@_1258@0 Message.vr1) perm$R) (Fractions 100)))))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1263@2 nw@_1258@0 Message.vr1) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1263@2 nw@_1258@0 Message.vr1) perm$N)))
    (IsGoodMask Mask@174)
    (wf Heap@104 exhaleMask@_1263@3)
    (wf Heap@104 Mask@174)
  )(and 
    anon79_Else@19_assertion
    anon79_Else@20
))))
(let ((anon53@8 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1363@2 nw@_1358@0 Message.v1) perm$R))
    (= exhaleMask@_1363@3 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1363@2 nw@_1358@0 Message.v1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1363@2 nw@_1358@0 Message.v1) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1363@2 nw@_1358@0 Message.v1) perm$R) (Fractions 100)))))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1363@2 nw@_1358@0 Message.v1) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1363@2 nw@_1358@0 Message.v1) perm$N)))
    (IsGoodMask Mask@114)
    (wf Heap@95 exhaleMask@_1363@3)
    (wf Heap@95 Mask@114)
  )(and 
    anon53@8_assertion
    anon53@9
))))
(let ((anon79_Else@18 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon79_Else@18_assertion
    anon79_Else@19
))))
(let ((anon53@7 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon53@7_assertion
    anon53@8
))))
(let ((anon79_Else@17 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1263@1 nw@_1258@0 Message.receiver2) perm$R))
    (= exhaleMask@_1263@2 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1263@1 nw@_1258@0 Message.receiver2 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1263@1 nw@_1258@0 Message.receiver2) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1263@1 nw@_1258@0 Message.receiver2) perm$R) (Fractions 100)))))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1263@1 nw@_1258@0 Message.receiver2) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1263@1 nw@_1258@0 Message.receiver2) perm$N)))
    (IsGoodMask Mask@174)
    (wf Heap@104 exhaleMask@_1263@2)
    (wf Heap@104 Mask@174)
  )(and 
    anon79_Else@17_assertion
    anon79_Else@18
))))
(let ((anon53@6 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@1 nw@_1358@0 Message.receiver1) perm$R))
    (= exhaleMask@_1363@2 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@1 nw@_1358@0 Message.receiver1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@1 nw@_1358@0 Message.receiver1) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@1 nw@_1358@0 Message.receiver1) perm$R) (Fractions 100)))))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@1 nw@_1358@0 Message.receiver1) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@1 nw@_1358@0 Message.receiver1) perm$N)))
    (IsGoodMask Mask@114)
    (wf Heap@95 exhaleMask@_1363@2)
    (wf Heap@95 Mask@114)
  )(and 
    anon53@6_assertion
    anon53@7
))))
(let ((anon79_Else@16 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon79_Else@16_assertion
    anon79_Else@17
))))
(let ((anon53@5 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon53@5_assertion
    anon53@6
))))
(let ((anon79_Else@15 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1263@0 nw@_1258@0 Message.sender2) perm$R))
    (= exhaleMask@_1263@1 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1263@0 nw@_1258@0 Message.sender2 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1263@0 nw@_1258@0 Message.sender2) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1263@0 nw@_1258@0 Message.sender2) perm$R) (Fractions 100)))))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1263@0 nw@_1258@0 Message.sender2) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1263@0 nw@_1258@0 Message.sender2) perm$N)))
    (IsGoodMask Mask@174)
    (wf Heap@104 exhaleMask@_1263@1)
    (wf Heap@104 Mask@174)
  )(and 
    anon79_Else@15_assertion
    anon79_Else@16
))))
(let ((anon53@4 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@0 nw@_1358@0 Message.sender1) perm$R))
    (= exhaleMask@_1363@1 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@0 nw@_1358@0 Message.sender1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@0 nw@_1358@0 Message.sender1) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@0 nw@_1358@0 Message.sender1) perm$R) (Fractions 100)))))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@0 nw@_1358@0 Message.sender1) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1363@0 nw@_1358@0 Message.sender1) perm$N)))
    (IsGoodMask Mask@114)
    (wf Heap@95 exhaleMask@_1363@1)
    (wf Heap@95 Mask@114)
  )(and 
    anon53@4_assertion
    anon53@5
))))
(let ((anon79_Else@14 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon79_Else@14_assertion
    anon79_Else@15
))))
(let ((anon53@3 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon53@3_assertion
    anon53@4
))))
(let ((anon79_Else@13 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@174 nw@_1258@0 Message.type) perm$R))
    (= (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@174 nw@_1258@0 Message.type (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@174 nw@_1258@0 Message.type) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@174 nw@_1258@0 Message.type) perm$R) (Fractions 100)))) exhaleMask@_1263@0)
    (=> (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@174 nw@_1258@0 Message.type) perm$R) (Fractions 100)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@174 nw@_1258@0 Message.type) perm$N)))
    (IsGoodMask Mask@174)
    (wf Heap@104 exhaleMask@_1263@0)
    (wf Heap@104 Mask@174)
  )(and 
    anon79_Else@13_assertion
    anon79_Else@14
))))
(let ((anon53@2 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@114 nw@_1358@0 Message.type) perm$R))
    (= (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@114 nw@_1358@0 Message.type (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@114 nw@_1358@0 Message.type) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@114 nw@_1358@0 Message.type) perm$R) (Fractions 100)))) exhaleMask@_1363@0)
    (=> (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@114 nw@_1358@0 Message.type) perm$R) (Fractions 100)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@114 nw@_1358@0 Message.type) perm$N)))
    (IsGoodMask Mask@114)
    (wf Heap@95 exhaleMask@_1363@0)
    (wf Heap@95 Mask@114)
  )(and 
    anon53@2_assertion
    anon53@3
))))
(let ((anon79_Else@12 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon79_Else@12_assertion
    anon79_Else@13
))))
(let ((anon53@1 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon53@1_assertion
    anon53@2
))))
(let ((anon79_Else@11 (=> (and true
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@104 receiver@140@0 FactorialCont.v) 1)
  )(and 
    anon79_Else@11_assertion
    anon79_Else@12
))))
(let ((anon53 (=> (and true
  )(and 
    anon53_assertion
    anon53@1
))))
(let ((anon79_Else@10 (=> (and true
    (not (= receiver@140@0 null))
  )(and 
    anon79_Else@10_assertion
    anon79_Else@11
))))
(let ((anon92_Else (=> (and true
    (= nw@_1321@0 null)
  )
    anon53
)))
(let ((anon92_Then@4 (=> (and true
    (= vo@150@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@95 nw@_1321@0 FactorialCont.vo))
  )
    anon53
)))
(let ((anon79_Else@9 (=> (and true
    (= 1 ($@Message.factorial Heap@104 Mask@174 nw@_1258@0 0))
  )(and 
    anon79_Else@9_assertion
    anon79_Else@10
))))
(let ((anon92_Then@3 (=> (and true
    (= v@149@0 (- (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@95 nw@_1321@0 FactorialCont.v) 1))
  )(and 
    anon92_Then@3_assertion
    anon92_Then@4
))))
(let ((anon79_Else@8 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 nw@_1258@0 Message.sender2) Future.q)))
  )(and 
    anon79_Else@8_assertion
    anon79_Else@9
))))
(let ((anon92_Then@2 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch)))
  )(and 
    anon92_Then@2_assertion
    anon92_Then@3
))))
(let ((anon79_Else@7 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 nw@_1258@0 Message.sender2)))
  )(and 
    anon79_Else@7_assertion
    anon79_Else@8
))))
(let ((anon92_Then@1 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1321@0 FactorialCont.q)))
  )(and 
    anon92_Then@1_assertion
    anon92_Then@2
))))
(let ((anon79_Else@6 (=> (and true
    (= receiver@140@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@104 mo@131@0 Message.cust1))
    (CanRead$ref$ Mask@174 mo@131@0 Message.cust1)
  )(and 
    anon79_Else@6_assertion
    anon79_Else@7
))))
(let ((anon92_Then (=> (and true
    (not (= nw@_1321@0 null))
  )(and 
    anon92_Then_assertion
    anon92_Then@1
))))
(let ((anon79_Else@5 (=> (and true
    (not (= null mo@131@0))
  )(and 
    anon79_Else@5_assertion
    anon79_Else@6
))))
(let (($branchMerge_2 (=> (and true
  )
    (and anon92_Else anon92_Then)
)))
(let ((anon79_Else@4 (=> (and true
    (not (= nw@_1258@0 null))
  )(and 
    anon79_Else@4_assertion
    anon79_Else@5
))))
(let ((anon91_Else (=> (and true
    (not (= nw@_1321@0 null))
  )
    $branchMerge_2
)))
(let ((anon91_Then@1 (=> (and true
    (= vo@150@0 v@149@0)
  )
    $branchMerge_2
)))
(let ((anon79_Else@3 (=> (and true
    (< (* 1000 methodCallK@_1262) (Fractions 1))
    (< (* 1000 methodCallK@_1262) whileK@_1176)
    (< 0 methodCallK@_1262)
    (= (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@73 nw@_1258@0 Message.sender2 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@73 mo@131@0 Message.sender1)) Heap@104)
    (CanRead$ref$ Mask@174 mo@131@0 Message.sender1)
    (wf Heap@104 Mask@174)
  )(and 
    anon79_Else@3_assertion
    anon79_Else@4
))))
(let ((anon91_Then (=> (and true
    (= nw@_1321@0 null)
  )(and 
    anon91_Then_assertion
    anon91_Then@1
))))
(let ((anon79_Else@2 (=> (and true
    (not (= null mo@131@0))
  )(and 
    anon79_Else@2_assertion
    anon79_Else@3
))))
(let ((anon47@12 (=> (and true
    (>= vo@150@0 0)
  )
    (and anon91_Else anon91_Then)
)))
(let ((anon79_Else@1 (=> (and true
    (CanWrite$ref$ Mask@174 nw@_1258@0 Message.sender2)
  )(and 
    anon79_Else@1_assertion
    anon79_Else@2
))))
(let ((anon47@11 (=> (and true
    (>= v@149@0 0)
  )(and 
    anon47@11_assertion
    anon47@12
))))
(let ((anon79_Else (=> (and true
    (<= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@73 nw@_1258@0 held) 0)
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ Heap@73 nw@_1258@0 mu) $LockBottom)
    (= (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@71 nw@_1258@0 Message.type (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@71 nw@_1258@0 Message.type) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@71 nw@_1258@0 Message.type) perm$R) (Fractions 100)))) Mask@157)
    (= Mask@158 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@157 nw@_1258@0 Message.sender1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@157 nw@_1258@0 Message.sender1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@157 nw@_1258@0 Message.sender1) perm$R) (Fractions 100)))))
    (= Mask@159 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@158 nw@_1258@0 Message.sender3 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@158 nw@_1258@0 Message.sender3) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@158 nw@_1258@0 Message.sender3) perm$R) (Fractions 100)))))
    (= Mask@160 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@159 nw@_1258@0 Message.sender2 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@159 nw@_1258@0 Message.sender2) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@159 nw@_1258@0 Message.sender2) perm$R) (Fractions 100)))))
    (= Mask@161 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@160 nw@_1258@0 Message.sender4 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@160 nw@_1258@0 Message.sender4) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@160 nw@_1258@0 Message.sender4) perm$R) (Fractions 100)))))
    (= Mask@162 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@161 nw@_1258@0 Message.receiver1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@161 nw@_1258@0 Message.receiver1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@161 nw@_1258@0 Message.receiver1) perm$R) (Fractions 100)))))
    (= Mask@163 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@162 nw@_1258@0 Message.receiver2 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@162 nw@_1258@0 Message.receiver2) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@162 nw@_1258@0 Message.receiver2) perm$R) (Fractions 100)))))
    (= Mask@164 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@163 nw@_1258@0 Message.receiver3 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@163 nw@_1258@0 Message.receiver3) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@163 nw@_1258@0 Message.receiver3) perm$R) (Fractions 100)))))
    (= Mask@165 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@164 nw@_1258@0 Message.receiver4 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@164 nw@_1258@0 Message.receiver4) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@164 nw@_1258@0 Message.receiver4) perm$R) (Fractions 100)))))
    (= Mask@166 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@165 nw@_1258@0 Message.v1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@165 nw@_1258@0 Message.v1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@165 nw@_1258@0 Message.v1) perm$R) (Fractions 100)))))
    (= Mask@167 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@166 nw@_1258@0 Message.vo1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@166 nw@_1258@0 Message.vo1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@166 nw@_1258@0 Message.vo1) perm$R) (Fractions 100)))))
    (= Mask@168 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@167 nw@_1258@0 Message.cust1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@167 nw@_1258@0 Message.cust1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@167 nw@_1258@0 Message.cust1) perm$R) (Fractions 100)))))
    (= Mask@169 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@168 nw@_1258@0 Message.vr1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@168 nw@_1258@0 Message.vr1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@168 nw@_1258@0 Message.vr1) perm$R) (Fractions 100)))))
    (= Mask@170 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@169 nw@_1258@0 Message.old1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@169 nw@_1258@0 Message.old1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@169 nw@_1258@0 Message.old1) perm$R) (Fractions 100)))))
    (= Mask@171 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@170 nw@_1258@0 Message.vr2 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@170 nw@_1258@0 Message.vr2) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@170 nw@_1258@0 Message.vr2) perm$R) (Fractions 100)))))
    (= Mask@172 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@171 nw@_1258@0 Message.old2 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@171 nw@_1258@0 Message.old2) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@171 nw@_1258@0 Message.old2) perm$R) (Fractions 100)))))
    (= Mask@173 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@172 nw@_1258@0 Message.vr3 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@172 nw@_1258@0 Message.vr3) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@172 nw@_1258@0 Message.vr3) perm$R) (Fractions 100)))))
    (= Mask@174 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@173 nw@_1258@0 mu (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@173 nw@_1258@0 mu) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@173 nw@_1258@0 mu) perm$R) (Fractions 100)))))
    (= Message@t (dtype nw@_1258@0))
    (forall( (|f_$15_$0| Field$Bool$))(and (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ Mask@71 nw@_1258@0 |f_$15_$0|) perm$R) 0) (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ Mask@71 nw@_1258@0 |f_$15_$0|) perm$N) 0)))
    (forall( (|f_$15_$1| Field$Int$))(and (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@71 nw@_1258@0 |f_$15_$1|) perm$R) 0) (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@71 nw@_1258@0 |f_$15_$1|) perm$N) 0)))
    (forall( (|f_$15_$2| Field$ref$))(and (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@71 nw@_1258@0 |f_$15_$2|) perm$R) 0) (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@71 nw@_1258@0 |f_$15_$2|) perm$N) 0)))
    (forall( (|f_$15_$3| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(and (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@71 nw@_1258@0 |f_$15_$3|) perm$R) 0) (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@71 nw@_1258@0 |f_$15_$3|) perm$N) 0)))
    (forall( (|f_$15_$4| Field$Mu$))(and (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@71 nw@_1258@0 |f_$15_$4|) perm$R) 0) (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@71 nw@_1258@0 |f_$15_$4|) perm$N) 0)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@73 mo@131@0 Message.cust1)))
    (not (= nw@_1258@0 null))
    (not (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ Heap@73 nw@_1258@0 rdheld))
  )(and 
    anon79_Else_assertion
    anon79_Else@1
))))
(let ((anon47@10 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1358@0 Message.sender1) Future.q)))
  )(and 
    anon47@10_assertion
    anon47@11
))))
(let ((anon78_Then@2 (=> (and true
    (CanRead$ref$ Mask@71 mo@131@0 Message.cust1)
  )
    (and anon79_Else anon79_Then)
)))
(let ((anon47@9 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@95 nw@_1358@0 Message.sender1)))
  )(and 
    anon47@9_assertion
    anon47@10
))))
(let ((anon78_Then@1 (=> (and true
    (not (= null mo@131@0))
  )(and 
    anon78_Then@1_assertion
    anon78_Then@2
))))
(let ((anon47@8 (=> (and true
    (= v@149@0 (- (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@95 mo@131@0 Message.v1) 1))
    (= vo@150@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@95 mo@131@0 Message.vo1))
    (CanRead$Int$ Mask@114 mo@131@0 Message.vo1)
  )(and 
    anon47@8_assertion
    anon47@9
))))
(let ((anon78_Then (=> (and true
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@73 mo@131@0 Message.v1) 0)
  )(and 
    anon78_Then_assertion
    anon78_Then@1
))))
(let ((anon47@7 (=> (and true
    (not (= null mo@131@0))
  )(and 
    anon47@7_assertion
    anon47@8
))))
(let ((anon47@6 (=> (and true
    (CanRead$Int$ Mask@114 mo@131@0 Message.v1)
  )(and 
    anon47@6_assertion
    anon47@7
))))
(let ((anon47@5 (=> (and true
    (not (= null mo@131@0))
  )(and 
    anon47@5_assertion
    anon47@6
))))
(let ((anon47@4 (=> (and true
    (not (= nw@_1358@0 null))
  )(and 
    anon47@4_assertion
    anon47@5
))))
(let ((anon47@3 (=> (and true
    (< (* 1000 methodCallK@_1362) (Fractions 1))
    (< (* 1000 methodCallK@_1362) whileK@_1176)
    (< 0 methodCallK@_1362)
    (= Heap@95 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@94 nw@_1358@0 Message.sender1 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@94 mo@131@0 Message.sender1)))
    (CanRead$ref$ Mask@114 mo@131@0 Message.sender1)
    (wf Heap@95 Mask@114)
  )(and 
    anon47@3_assertion
    anon47@4
))))
(let ((anon47@2 (=> (and true
    (not (= null mo@131@0))
  )(and 
    anon47@2_assertion
    anon47@3
))))
(let ((anon47@1 (=> (and true
    (CanWrite$ref$ Mask@114 nw@_1358@0 Message.sender1)
  )(and 
    anon47@1_assertion
    anon47@2
))))
(let ((anon47 (=> (and true
    (<= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@94 nw@_1358@0 held) 0)
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@92 token@_1338@0 joinable) 0)
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ Heap@94 nw@_1358@0 mu) $LockBottom)
    (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1345@12 token@_1338@0 joinable) perm$N) 0)
    (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1345@12 token@_1338@0 joinable) perm$R) 0)
    (= (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@99 nw@_1358@0 Message.sender2 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@99 nw@_1358@0 Message.sender2) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@99 nw@_1358@0 Message.sender2) perm$R) (Fractions 100)))) Mask@100)
    (= Heap@93 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@92 token@_1338@0 joinable asyncstate@_1339@0))
    (= Heap@94 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@93 token@_1338@0 forkK asyncMethodCallK@_1344))
    (= Mask@101 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@100 nw@_1358@0 Message.sender4 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@100 nw@_1358@0 Message.sender4) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@100 nw@_1358@0 Message.sender4) perm$R) (Fractions 100)))))
    (= Mask@102 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@101 nw@_1358@0 Message.receiver1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@101 nw@_1358@0 Message.receiver1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@101 nw@_1358@0 Message.receiver1) perm$R) (Fractions 100)))))
    (= Mask@103 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@102 nw@_1358@0 Message.receiver2 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@102 nw@_1358@0 Message.receiver2) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@102 nw@_1358@0 Message.receiver2) perm$R) (Fractions 100)))))
    (= Mask@104 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@103 nw@_1358@0 Message.receiver3 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@103 nw@_1358@0 Message.receiver3) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@103 nw@_1358@0 Message.receiver3) perm$R) (Fractions 100)))))
    (= Mask@105 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@104 nw@_1358@0 Message.receiver4 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@104 nw@_1358@0 Message.receiver4) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@104 nw@_1358@0 Message.receiver4) perm$R) (Fractions 100)))))
    (= Mask@106 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@105 nw@_1358@0 Message.v1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@105 nw@_1358@0 Message.v1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@105 nw@_1358@0 Message.v1) perm$R) (Fractions 100)))))
    (= Mask@107 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@106 nw@_1358@0 Message.vo1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@106 nw@_1358@0 Message.vo1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@106 nw@_1358@0 Message.vo1) perm$R) (Fractions 100)))))
    (= Mask@108 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@107 nw@_1358@0 Message.cust1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@107 nw@_1358@0 Message.cust1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@107 nw@_1358@0 Message.cust1) perm$R) (Fractions 100)))))
    (= Mask@109 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@108 nw@_1358@0 Message.vr1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@108 nw@_1358@0 Message.vr1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@108 nw@_1358@0 Message.vr1) perm$R) (Fractions 100)))))
    (= Mask@110 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@109 nw@_1358@0 Message.old1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@109 nw@_1358@0 Message.old1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@109 nw@_1358@0 Message.old1) perm$R) (Fractions 100)))))
    (= Mask@111 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@110 nw@_1358@0 Message.vr2 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@110 nw@_1358@0 Message.vr2) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@110 nw@_1358@0 Message.vr2) perm$R) (Fractions 100)))))
    (= Mask@112 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@111 nw@_1358@0 Message.old2 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@111 nw@_1358@0 Message.old2) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@111 nw@_1358@0 Message.old2) perm$R) (Fractions 100)))))
    (= Mask@113 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@112 nw@_1358@0 Message.vr3 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@112 nw@_1358@0 Message.vr3) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@112 nw@_1358@0 Message.vr3) perm$R) (Fractions 100)))))
    (= Mask@114 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@113 nw@_1358@0 mu (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@113 nw@_1358@0 mu) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@113 nw@_1358@0 mu) perm$R) (Fractions 100)))))
    (= Mask@96 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1345@12 token@_1338@0 joinable (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1345@12 token@_1338@0 joinable) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1345@12 token@_1338@0 joinable) perm$R) (Fractions 100)))))
    (= Mask@97 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@96 nw@_1358@0 Message.type (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@96 nw@_1358@0 Message.type) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@96 nw@_1358@0 Message.type) perm$R) (Fractions 100)))))
    (= Mask@98 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@97 nw@_1358@0 Message.sender1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@97 nw@_1358@0 Message.sender1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@97 nw@_1358@0 Message.sender1) perm$R) (Fractions 100)))))
    (= Mask@99 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@98 nw@_1358@0 Message.sender3 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@98 nw@_1358@0 Message.sender3) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@98 nw@_1358@0 Message.sender3) perm$R) (Fractions 100)))))
    (= Message@t (dtype nw@_1358@0))
    (forall( (|f_$17_$0| Field$Bool$))(and (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ Mask@96 nw@_1358@0 |f_$17_$0|) perm$R) 0) (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ Mask@96 nw@_1358@0 |f_$17_$0|) perm$N) 0)))
    (forall( (|f_$17_$1| Field$Int$))(and (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@96 nw@_1358@0 |f_$17_$1|) perm$R) 0) (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@96 nw@_1358@0 |f_$17_$1|) perm$N) 0)))
    (forall( (|f_$17_$2| Field$ref$))(and (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@96 nw@_1358@0 |f_$17_$2|) perm$R) 0) (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@96 nw@_1358@0 |f_$17_$2|) perm$N) 0)))
    (forall( (|f_$17_$3| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(and (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@96 nw@_1358@0 |f_$17_$3|) perm$R) 0) (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@96 nw@_1358@0 |f_$17_$3|) perm$N) 0)))
    (forall( (|f_$17_$4| Field$Mu$))(and (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@96 nw@_1358@0 |f_$17_$4|) perm$R) 0) (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@96 nw@_1358@0 |f_$17_$4|) perm$N) 0)))
    (not (= asyncstate@_1339@0 0))
    (not (= nw@_1358@0 null))
    (not (= token@_1338@0 null))
    (not (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ Heap@94 nw@_1358@0 rdheld))
    (wf Heap@92 exhaleMask@_1345@12)
    (wf Heap@94 Mask@96)
  )(and 
    anon47_assertion
    anon47@1
))))
(let ((anon90_Else (=> (and true
    (= exhaleMask@_1345@7 exhaleMask@_1345@12)
    (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust))
  )
    anon47
)))
(let ((anon90_Then@8 (=> (and true
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1345@10 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.vo) perm$R))
    (= exhaleMask@_1345@11 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1345@10 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.vo (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1345@10 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.vo) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1345@10 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.vo) perm$R) monitorK))))
    (= exhaleMask@_1345@12 exhaleMask@_1345@11)
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1345@10 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.vo) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1345@10 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.vo) perm$N)))
    (IsGoodMask Mask@95)
    (wf Heap@92 exhaleMask@_1345@11)
    (wf Heap@92 Mask@95)
  )
    anon47
)))
(let ((anon90_Then@7 (=> (and true
    (> monitorK 0)
  )(and 
    anon90_Then@7_assertion
    anon90_Then@8
))))
(let ((anon90_Then@6 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1345@9 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.q) FactorialContChannel.initExpState) perm$R))
    (= (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1345@9 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.q) FactorialContChannel.initExpState (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1345@9 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.q) FactorialContChannel.initExpState) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1345@9 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.q) FactorialContChannel.initExpState) perm$R) (Fractions 100)))) exhaleMask@_1345@10)
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1345@9 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.q) FactorialContChannel.initExpState) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1345@9 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.q) FactorialContChannel.initExpState) perm$N)))
    (IsGoodMask Mask@95)
    (wf Heap@92 exhaleMask@_1345@10)
    (wf Heap@92 Mask@95)
  )(and 
    anon90_Then@6_assertion
    anon90_Then@7
))))
(let ((anon90_Then@5 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon90_Then@5_assertion
    anon90_Then@6
))))
(let ((anon90_Then@4 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1345@8 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.q) FactorialContChannel.valid) perm$R))
    (= exhaleMask@_1345@9 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1345@8 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.q) FactorialContChannel.valid (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1345@8 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.q) FactorialContChannel.valid) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1345@8 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.q) FactorialContChannel.valid) perm$R) (Fractions 100)))))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1345@8 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.q) FactorialContChannel.valid) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1345@8 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.q) FactorialContChannel.valid) perm$N)))
    (IsGoodMask Mask@95)
    (wf Heap@92 exhaleMask@_1345@9)
    (wf Heap@92 Mask@95)
  )(and 
    anon90_Then@4_assertion
    anon90_Then@5
))))
(let ((anon90_Then@3 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon90_Then@3_assertion
    anon90_Then@4
))))
(let ((anon90_Then@2 (=> (and true
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1345@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.q) perm$R))
    (= exhaleMask@_1345@8 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1345@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.q (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1345@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.q) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1345@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.q) perm$R) monitorK))))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1345@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.q) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1345@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.q) perm$N)))
    (IsGoodMask Mask@95)
    (wf Heap@92 exhaleMask@_1345@8)
    (wf Heap@92 Mask@95)
  )(and 
    anon90_Then@2_assertion
    anon90_Then@3
))))
(let ((anon90_Then@1 (=> (and true
    (> monitorK 0)
  )(and 
    anon90_Then@1_assertion
    anon90_Then@2
))))
(let ((anon90_Then (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust)))
  )(and 
    anon90_Then_assertion
    anon90_Then@1
))))
(let ((anon44@16 (=> (and true
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1345@6 nw@_1321@0 FactorialCont.cust) perm$R))
    (= exhaleMask@_1345@7 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1345@6 nw@_1321@0 FactorialCont.cust (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1345@6 nw@_1321@0 FactorialCont.cust) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1345@6 nw@_1321@0 FactorialCont.cust) perm$R) monitorK))))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1345@6 nw@_1321@0 FactorialCont.cust) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1345@6 nw@_1321@0 FactorialCont.cust) perm$N)))
    (IsGoodMask Mask@95)
    (wf Heap@92 exhaleMask@_1345@7)
    (wf Heap@92 Mask@95)
  )
    (and anon90_Else anon90_Then)
)))
(let ((anon44@15 (=> (and true
    (> monitorK 0)
  )(and 
    anon44@15_assertion
    anon44@16
))))
(let ((anon44@14 (=> (and true
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1345@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch) perm$R))
    (= exhaleMask@_1345@6 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1345@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1345@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1345@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch) perm$R) monitorK))))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1345@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1345@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch) perm$N)))
    (IsGoodMask Mask@95)
    (wf Heap@92 exhaleMask@_1345@6)
    (wf Heap@92 Mask@95)
  )(and 
    anon44@14_assertion
    anon44@15
))))
(let ((anon44@13 (=> (and true
    (> monitorK 0)
  )(and 
    anon44@13_assertion
    anon44@14
))))
(let ((anon44@12 (=> (and true
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1345@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) perm$R))
    (= exhaleMask@_1345@5 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1345@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1345@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1345@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) perm$R) monitorK))))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1345@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1345@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) perm$N)))
    (IsGoodMask Mask@95)
    (wf Heap@92 exhaleMask@_1345@5)
    (wf Heap@92 Mask@95)
  )(and 
    anon44@12_assertion
    anon44@13
))))
(let ((anon44@11 (=> (and true
    (> monitorK 0)
  )(and 
    anon44@11_assertion
    anon44@12
))))
(let ((anon44@10 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1345@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.initImpState) perm$R))
    (= exhaleMask@_1345@4 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1345@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.initImpState (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1345@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.initImpState) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1345@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.initImpState) perm$R) (Fractions 100)))))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1345@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.initImpState) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1345@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.initImpState) perm$N)))
    (IsGoodMask Mask@95)
    (wf Heap@92 exhaleMask@_1345@4)
    (wf Heap@92 Mask@95)
  )(and 
    anon44@10_assertion
    anon44@11
))))
(let ((anon44@9 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon44@9_assertion
    anon44@10
))))
(let ((anon44@8 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1345@2 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.valid) perm$R))
    (= exhaleMask@_1345@3 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1345@2 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.valid (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1345@2 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.valid) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1345@2 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.valid) perm$R) (Fractions 100)))))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1345@2 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.valid) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1345@2 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.valid) perm$N)))
    (IsGoodMask Mask@95)
    (wf Heap@92 exhaleMask@_1345@3)
    (wf Heap@92 Mask@95)
  )(and 
    anon44@8_assertion
    anon44@9
))))
(let ((anon44@7 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon44@7_assertion
    anon44@8
))))
(let ((anon44@6 (=> (and true
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1345@1 nw@_1321@0 FactorialCont.vo) perm$R))
    (= exhaleMask@_1345@2 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1345@1 nw@_1321@0 FactorialCont.vo (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1345@1 nw@_1321@0 FactorialCont.vo) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1345@1 nw@_1321@0 FactorialCont.vo) perm$R) monitorK))))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1345@1 nw@_1321@0 FactorialCont.vo) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1345@1 nw@_1321@0 FactorialCont.vo) perm$N)))
    (IsGoodMask Mask@95)
    (wf Heap@92 exhaleMask@_1345@2)
    (wf Heap@92 Mask@95)
  )(and 
    anon44@6_assertion
    anon44@7
))))
(let ((anon44@5 (=> (and true
    (> monitorK 0)
  )(and 
    anon44@5_assertion
    anon44@6
))))
(let ((anon44@4 (=> (and true
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1345@0 nw@_1321@0 FactorialCont.v) perm$R))
    (= exhaleMask@_1345@1 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1345@0 nw@_1321@0 FactorialCont.v (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1345@0 nw@_1321@0 FactorialCont.v) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1345@0 nw@_1321@0 FactorialCont.v) perm$R) monitorK))))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1345@0 nw@_1321@0 FactorialCont.v) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1345@0 nw@_1321@0 FactorialCont.v) perm$N)))
    (IsGoodMask Mask@95)
    (wf Heap@92 exhaleMask@_1345@1)
    (wf Heap@92 Mask@95)
  )(and 
    anon44@4_assertion
    anon44@5
))))
(let ((anon44@3 (=> (and true
    (> monitorK 0)
  )(and 
    anon44@3_assertion
    anon44@4
))))
(let ((anon44@2 (=> (and true
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@95 nw@_1321@0 FactorialCont.q) perm$R))
    (= (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@95 nw@_1321@0 FactorialCont.q (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@95 nw@_1321@0 FactorialCont.q) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@95 nw@_1321@0 FactorialCont.q) perm$R) monitorK))) exhaleMask@_1345@0)
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@95 nw@_1321@0 FactorialCont.q) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@95 nw@_1321@0 FactorialCont.q) perm$N)))
    (IsGoodMask Mask@95)
    (wf Heap@92 exhaleMask@_1345@0)
    (wf Heap@92 Mask@95)
  )(and 
    anon44@2_assertion
    anon44@3
))))
(let ((anon44@1 (=> (and true
    (> monitorK 0)
  )(and 
    anon44@1_assertion
    anon44@2
))))
(let ((anon44 (=> (and true
    (= Credits@6 (MapWrite$$@Map@@ref@To@Int@@$ Credits@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch) (- (MapRead$$@Map@@ref@To@Int@@$ Credits@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch)) 1)))
  )(and 
    anon44_assertion
    anon44@1
))))
(let ((anon89_Else (=> (and true
    (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust))
  )
    anon44
)))
(let ((anon89_Then@2 (=> (and true
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@92 nw@_1321@0 FactorialCont.vo) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.vo))
  )
    anon44
)))
(let ((anon89_Then@1 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust) FactorialCont.q)))
  )(and 
    anon89_Then@1_assertion
    anon89_Then@2
))))
(let ((anon89_Then (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.cust)))
  )(and 
    anon89_Then_assertion
    anon89_Then@1
))))
(let ((anon41@5 (=> (and true
    (>= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@92 nw@_1321@0 FactorialCont.vo) 0)
  )
    (and anon89_Else anon89_Then)
)))
(let ((anon41@4 (=> (and true
    (>= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@92 nw@_1321@0 FactorialCont.v) 0)
  )(and 
    anon41@4_assertion
    anon41@5
))))
(let ((anon41@3 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch)))
  )(and 
    anon41@3_assertion
    anon41@4
))))
(let ((anon41@2 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@92 nw@_1321@0 FactorialCont.q)))
  )(and 
    anon41@2_assertion
    anon41@3
))))
(let ((anon41@1 (=> (and true
    (= (MapWrite$$@Map@@$T0@@Int@To@$T0@@$ref$ argsSeq@_1343 0 nw@_1321@0) argsSeq@_1343@0)
    (not (= nw@_1321@0 null))
  )(and 
    anon41@1_assertion
    anon41@2
))))
(let ((anon41 (=> (and true
    (< (* 1000 asyncMethodCallK@_1344) (Fractions 1))
    (< (* 1000 asyncMethodCallK@_1344) whileK@_1176)
    (< 0 asyncMethodCallK@_1344)
    (IsGoodMask Mask@95)
    (wf Heap@92 Mask@95)
  )(and 
    anon41_assertion
    anon41@1
))))
(let ((anon88_Else (=> (and true
    (= Heap@92 Heap@87)
    (= Mask@95 Mask@90)
    (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@87 nw@_1321@0 FactorialCont.cust))
  )
    anon41
)))
(let ((anon88_Then (=> (and true
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1337@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@89 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@89 nw@_1321@0 FactorialCont.cust) FactorialCont.q) FactorialContChannel.valid) Heap@89)
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1337@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@90 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@90 nw@_1321@0 FactorialCont.cust) FactorialCont.q) FactorialContChannel.initExpState) Heap@90)
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@91 nw@_1321@0 FactorialCont.vo) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@91 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@91 nw@_1321@0 FactorialCont.cust) FactorialCont.vo))
    (= Heap@88 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@87 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@87 nw@_1321@0 FactorialCont.cust) FactorialCont.q (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1337@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@87 nw@_1321@0 FactorialCont.cust) FactorialCont.q)))
    (= Heap@89 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Heap@88 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@88 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@88 nw@_1321@0 FactorialCont.cust) FactorialCont.q) FactorialContChannel.valid (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1337@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@88 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@88 nw@_1321@0 FactorialCont.cust) FactorialCont.q) FactorialContChannel.valid)))
    (= Heap@90 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Heap@89 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@89 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@89 nw@_1321@0 FactorialCont.cust) FactorialCont.q) FactorialContChannel.initExpState (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1337@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@89 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@89 nw@_1321@0 FactorialCont.cust) FactorialCont.q) FactorialContChannel.initExpState)))
    (= Heap@91 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@90 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@90 nw@_1321@0 FactorialCont.cust) FactorialCont.vo (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1337@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@90 nw@_1321@0 FactorialCont.cust) FactorialCont.vo)))
    (= Heap@92 Heap@91)
    (= Mask@91 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@90 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@88 nw@_1321@0 FactorialCont.cust) FactorialCont.q (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@90 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@88 nw@_1321@0 FactorialCont.cust) FactorialCont.q) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@90 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@88 nw@_1321@0 FactorialCont.cust) FactorialCont.q) perm$R) monitorK))))
    (= Mask@92 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@91 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@89 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@89 nw@_1321@0 FactorialCont.cust) FactorialCont.q) FactorialContChannel.valid (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@91 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@89 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@89 nw@_1321@0 FactorialCont.cust) FactorialCont.q) FactorialContChannel.valid) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@91 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@89 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@89 nw@_1321@0 FactorialCont.cust) FactorialCont.q) FactorialContChannel.valid) perm$R) (Fractions 100)))))
    (= Mask@93 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@90 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@90 nw@_1321@0 FactorialCont.cust) FactorialCont.q) FactorialContChannel.initExpState (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@90 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@90 nw@_1321@0 FactorialCont.cust) FactorialCont.q) FactorialContChannel.initExpState) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@92 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@90 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@90 nw@_1321@0 FactorialCont.cust) FactorialCont.q) FactorialContChannel.initExpState) perm$R) (Fractions 100)))))
    (= Mask@94 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@93 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@91 nw@_1321@0 FactorialCont.cust) FactorialCont.vo (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@93 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@91 nw@_1321@0 FactorialCont.cust) FactorialCont.vo) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@93 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@91 nw@_1321@0 FactorialCont.cust) FactorialCont.vo) perm$R) monitorK))))
    (= Mask@95 Mask@94)
    (> (Fractions 100) 0)
    (> (Fractions 100) 0)
    (> monitorK 0)
    (> monitorK 0)
    (IsGoodMask Mask@91)
    (IsGoodMask Mask@92)
    (IsGoodMask Mask@93)
    (IsGoodMask Mask@94)
    (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1337@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@89 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@89 nw@_1321@0 FactorialCont.cust) FactorialCont.q) FactorialContChannel.valid))
    (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1337@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@90 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@90 nw@_1321@0 FactorialCont.cust) FactorialCont.q) FactorialContChannel.initExpState))
    (IsGoodState$Int$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1337@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@91 nw@_1321@0 FactorialCont.cust) FactorialCont.vo))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1337@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@88 nw@_1321@0 FactorialCont.cust) FactorialCont.q))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@87 nw@_1321@0 FactorialCont.cust)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@87 nw@_1321@0 FactorialCont.cust)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@88 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@88 nw@_1321@0 FactorialCont.cust) FactorialCont.q)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@88 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@88 nw@_1321@0 FactorialCont.cust) FactorialCont.q)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@89 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@89 nw@_1321@0 FactorialCont.cust) FactorialCont.q)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@90 nw@_1321@0 FactorialCont.cust)))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@88 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@88 nw@_1321@0 FactorialCont.cust) FactorialCont.q)) (= FactorialContChannel@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@88 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@88 nw@_1321@0 FactorialCont.cust) FactorialCont.q))))
    (wf Heap@88 Mask@90)
    (wf Heap@88 Mask@91)
    (wf Heap@89 Mask@91)
    (wf Heap@89 Mask@92)
    (wf Heap@90 Mask@92)
    (wf Heap@90 Mask@93)
    (wf Heap@91 Mask@93)
    (wf Heap@91 Mask@94)
    (wf inhaleHeap@_1337@0 Mask@91)
    (wf inhaleHeap@_1337@0 Mask@92)
    (wf inhaleHeap@_1337@0 Mask@93)
    (wf inhaleHeap@_1337@0 Mask@94)
  )
    anon41
)))
(let ((anon38 (=> (and true
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1337@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@78 nw@_1321@0 FactorialCont.q) FactorialContChannel.valid) Heap@78)
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1337@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@79 nw@_1321@0 FactorialCont.q) FactorialContChannel.valid) Heap@79)
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1337@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@80 nw@_1321@0 FactorialCont.q) FactorialContChannel.initImpState) Heap@80)
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1337@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@81 nw@_1321@0 FactorialCont.q) FactorialContChannel.initExpState) Heap@81)
    (= Heap@74 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@73 nw@_1321@0 FactorialCont.v (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1337@0 nw@_1321@0 FactorialCont.v)))
    (= Heap@75 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@74 nw@_1321@0 FactorialCont.vo (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1337@0 nw@_1321@0 FactorialCont.vo)))
    (= Heap@76 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@75 nw@_1321@0 FactorialCont.cust (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1337@0 nw@_1321@0 FactorialCont.cust)))
    (= Heap@77 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@76 nw@_1321@0 FactorialCont.q (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1337@0 nw@_1321@0 FactorialCont.q)))
    (= Heap@78 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Heap@77 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@77 nw@_1321@0 FactorialCont.q) FactorialContChannel.valid (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1337@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@77 nw@_1321@0 FactorialCont.q) FactorialContChannel.valid)))
    (= Heap@79 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Heap@78 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@78 nw@_1321@0 FactorialCont.q) FactorialContChannel.valid (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1337@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@78 nw@_1321@0 FactorialCont.q) FactorialContChannel.valid)))
    (= Heap@80 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Heap@79 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@79 nw@_1321@0 FactorialCont.q) FactorialContChannel.initImpState (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1337@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@79 nw@_1321@0 FactorialCont.q) FactorialContChannel.initImpState)))
    (= Heap@81 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Heap@80 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@80 nw@_1321@0 FactorialCont.q) FactorialContChannel.initExpState (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1337@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@80 nw@_1321@0 FactorialCont.q) FactorialContChannel.initExpState)))
    (= Heap@82 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@81 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@81 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1337@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@81 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp)))
    (= Heap@83 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@82 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@82 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@82 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1337@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@82 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@82 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch)))
    (= Heap@84 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@83 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@83 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1337@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@83 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp)))
    (= Heap@85 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@84 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@84 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@84 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1337@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@84 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@84 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch)))
    (= Heap@86 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@85 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@85 nw@_1321@0 FactorialCont.q) FactorialContChannel.exp (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1337@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@85 nw@_1321@0 FactorialCont.q) FactorialContChannel.exp)))
    (= Heap@87 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@86 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@86 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@86 nw@_1321@0 FactorialCont.q) FactorialContChannel.exp) FactorialContChannelExpEP.expch (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1337@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@86 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@86 nw@_1321@0 FactorialCont.q) FactorialContChannel.exp) FactorialContChannelExpEP.expch)))
    (= Mask@77 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1326@8 nw@_1321@0 FactorialCont.v (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1326@8 nw@_1321@0 FactorialCont.v) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1326@8 nw@_1321@0 FactorialCont.v) perm$R) (Fractions 50)))))
    (= Mask@78 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@77 nw@_1321@0 FactorialCont.vo (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@77 nw@_1321@0 FactorialCont.vo) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@77 nw@_1321@0 FactorialCont.vo) perm$R) (Fractions 50)))))
    (= Mask@79 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@78 nw@_1321@0 FactorialCont.cust (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@78 nw@_1321@0 FactorialCont.cust) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@78 nw@_1321@0 FactorialCont.cust) perm$R) (Fractions 50)))))
    (= Mask@80 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@79 nw@_1321@0 FactorialCont.q (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@79 nw@_1321@0 FactorialCont.q) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@79 nw@_1321@0 FactorialCont.q) perm$R) (Fractions 50)))))
    (= Mask@81 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@80 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@78 nw@_1321@0 FactorialCont.q) FactorialContChannel.valid (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@80 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@78 nw@_1321@0 FactorialCont.q) FactorialContChannel.valid) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@80 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@78 nw@_1321@0 FactorialCont.q) FactorialContChannel.valid) perm$R) (Fractions 100)))))
    (= Mask@82 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@81 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@79 nw@_1321@0 FactorialCont.q) FactorialContChannel.valid (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@81 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@79 nw@_1321@0 FactorialCont.q) FactorialContChannel.valid) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@81 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@79 nw@_1321@0 FactorialCont.q) FactorialContChannel.valid) perm$R) (Fractions 100)))))
    (= Mask@83 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@82 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@80 nw@_1321@0 FactorialCont.q) FactorialContChannel.initImpState (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@82 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@80 nw@_1321@0 FactorialCont.q) FactorialContChannel.initImpState) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@82 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@80 nw@_1321@0 FactorialCont.q) FactorialContChannel.initImpState) perm$R) (Fractions 100)))))
    (= Mask@84 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@83 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@81 nw@_1321@0 FactorialCont.q) FactorialContChannel.initExpState (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@83 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@81 nw@_1321@0 FactorialCont.q) FactorialContChannel.initExpState) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@83 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@81 nw@_1321@0 FactorialCont.q) FactorialContChannel.initExpState) perm$R) (Fractions 100)))))
    (= Mask@85 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@84 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@82 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@84 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@82 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@84 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@82 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) perm$R) monitorK))))
    (= Mask@86 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@85 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@83 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@83 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@85 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@83 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@83 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@85 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@83 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@83 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch) perm$R) monitorK))))
    (= Mask@87 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@86 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@84 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@86 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@84 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@86 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@84 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) perm$R) monitorK))))
    (= Mask@88 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@87 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@85 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@85 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@87 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@85 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@85 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@87 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@85 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@85 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch) perm$R) monitorK))))
    (= Mask@89 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@88 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@86 nw@_1321@0 FactorialCont.q) FactorialContChannel.exp (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@88 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@86 nw@_1321@0 FactorialCont.q) FactorialContChannel.exp) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@88 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@86 nw@_1321@0 FactorialCont.q) FactorialContChannel.exp) perm$R) monitorK))))
    (= Mask@90 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@89 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@87 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@87 nw@_1321@0 FactorialCont.q) FactorialContChannel.exp) FactorialContChannelExpEP.expch (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@89 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@87 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@87 nw@_1321@0 FactorialCont.q) FactorialContChannel.exp) FactorialContChannelExpEP.expch) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@89 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@87 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@87 nw@_1321@0 FactorialCont.q) FactorialContChannel.exp) FactorialContChannelExpEP.expch) perm$R) monitorK))))
    (= vop@145@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@87 nw@_1321@0 FactorialCont.vo))
    (= vp@144@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@87 nw@_1321@0 FactorialCont.v))
    (> (Fractions 100) 0)
    (> (Fractions 100) 0)
    (> (Fractions 100) 0)
    (> (Fractions 100) 0)
    (> (Fractions 50) 0)
    (> (Fractions 50) 0)
    (> (Fractions 50) 0)
    (> (Fractions 50) 0)
    (> monitorK 0)
    (> monitorK 0)
    (> monitorK 0)
    (> monitorK 0)
    (> monitorK 0)
    (> monitorK 0)
    (>= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@87 nw@_1321@0 FactorialCont.v) 0)
    (>= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@87 nw@_1321@0 FactorialCont.vo) 0)
    (IsGoodInhaleState inhaleHeap@_1337@0 Heap@73 exhaleMask@_1326@8)
    (IsGoodMask Mask@77)
    (IsGoodMask Mask@78)
    (IsGoodMask Mask@79)
    (IsGoodMask Mask@80)
    (IsGoodMask Mask@81)
    (IsGoodMask Mask@82)
    (IsGoodMask Mask@83)
    (IsGoodMask Mask@84)
    (IsGoodMask Mask@85)
    (IsGoodMask Mask@86)
    (IsGoodMask Mask@87)
    (IsGoodMask Mask@88)
    (IsGoodMask Mask@89)
    (IsGoodMask Mask@90)
    (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1337@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@78 nw@_1321@0 FactorialCont.q) FactorialContChannel.valid))
    (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1337@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@79 nw@_1321@0 FactorialCont.q) FactorialContChannel.valid))
    (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1337@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@80 nw@_1321@0 FactorialCont.q) FactorialContChannel.initImpState))
    (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1337@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@81 nw@_1321@0 FactorialCont.q) FactorialContChannel.initExpState))
    (IsGoodState$Int$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1337@0 nw@_1321@0 FactorialCont.v))
    (IsGoodState$Int$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1337@0 nw@_1321@0 FactorialCont.vo))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1337@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@82 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1337@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@83 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@83 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1337@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@84 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1337@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@85 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@85 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1337@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@86 nw@_1321@0 FactorialCont.q) FactorialContChannel.exp))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1337@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@87 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@87 nw@_1321@0 FactorialCont.q) FactorialContChannel.exp) FactorialContChannelExpEP.expch))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1337@0 nw@_1321@0 FactorialCont.cust))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1337@0 nw@_1321@0 FactorialCont.q))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@77 nw@_1321@0 FactorialCont.q)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@77 nw@_1321@0 FactorialCont.q)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@78 nw@_1321@0 FactorialCont.q)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@79 nw@_1321@0 FactorialCont.q)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@80 nw@_1321@0 FactorialCont.q)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@81 nw@_1321@0 FactorialCont.q)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@82 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@82 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@83 nw@_1321@0 FactorialCont.q)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@84 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@84 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@85 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@85 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@85 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@85 nw@_1321@0 FactorialCont.q)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@86 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@86 nw@_1321@0 FactorialCont.q) FactorialContChannel.exp)))
    (not (= nw@_1321@0 null))
    (not (= nw@_1321@0 null))
    (not (= nw@_1321@0 null))
    (not (= nw@_1321@0 null))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@76 nw@_1321@0 FactorialCont.cust)) (= FactorialCont@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@76 nw@_1321@0 FactorialCont.cust))))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@77 nw@_1321@0 FactorialCont.q)) (= FactorialContChannel@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@77 nw@_1321@0 FactorialCont.q))))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@82 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@82 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp)) (= FactorialContChannelImpEP@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@82 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@82 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp))))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@83 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@83 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@83 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch)) (= (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@83 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@83 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@83 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch)) Channel@t))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@84 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@84 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp)) (= FactorialContChannelImpEP@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@84 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@84 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp))))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@85 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@85 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@85 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch)) (= (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@85 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@85 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@85 nw@_1321@0 FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch)) Channel@t))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@86 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@86 nw@_1321@0 FactorialCont.q) FactorialContChannel.exp)) (= FactorialContChannelExpEP@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@86 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@86 nw@_1321@0 FactorialCont.q) FactorialContChannel.exp))))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@87 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@87 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@87 nw@_1321@0 FactorialCont.q) FactorialContChannel.exp) FactorialContChannelExpEP.expch)) (= (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@87 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@87 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@87 nw@_1321@0 FactorialCont.q) FactorialContChannel.exp) FactorialContChannelExpEP.expch)) Channel@t))
    (wf Heap@73 exhaleMask@_1326@8)
    (wf Heap@74 exhaleMask@_1326@8)
    (wf Heap@74 Mask@77)
    (wf Heap@75 Mask@77)
    (wf Heap@75 Mask@78)
    (wf Heap@76 Mask@78)
    (wf Heap@76 Mask@79)
    (wf Heap@77 Mask@79)
    (wf Heap@77 Mask@80)
    (wf Heap@78 Mask@80)
    (wf Heap@78 Mask@81)
    (wf Heap@79 Mask@81)
    (wf Heap@79 Mask@82)
    (wf Heap@80 Mask@82)
    (wf Heap@80 Mask@83)
    (wf Heap@81 Mask@83)
    (wf Heap@81 Mask@84)
    (wf Heap@82 Mask@84)
    (wf Heap@82 Mask@85)
    (wf Heap@83 Mask@85)
    (wf Heap@83 Mask@86)
    (wf Heap@84 Mask@86)
    (wf Heap@84 Mask@87)
    (wf Heap@85 Mask@87)
    (wf Heap@85 Mask@88)
    (wf Heap@86 Mask@88)
    (wf Heap@86 Mask@89)
    (wf Heap@87 Mask@89)
    (wf Heap@87 Mask@90)
    (wf inhaleHeap@_1337@0 Mask@77)
    (wf inhaleHeap@_1337@0 Mask@78)
    (wf inhaleHeap@_1337@0 Mask@79)
    (wf inhaleHeap@_1337@0 Mask@80)
    (wf inhaleHeap@_1337@0 Mask@81)
    (wf inhaleHeap@_1337@0 Mask@82)
    (wf inhaleHeap@_1337@0 Mask@83)
    (wf inhaleHeap@_1337@0 Mask@84)
    (wf inhaleHeap@_1337@0 Mask@85)
    (wf inhaleHeap@_1337@0 Mask@86)
    (wf inhaleHeap@_1337@0 Mask@87)
    (wf inhaleHeap@_1337@0 Mask@88)
    (wf inhaleHeap@_1337@0 Mask@89)
    (wf inhaleHeap@_1337@0 Mask@90)
  )
    (and anon88_Else anon88_Then)
)))
(let ((anon87_Else (=> (and true
    (= exhaleMask@_1326@8 exhaleMask@_1326@3)
    (= null custp@146@0)
  )
    anon38
)))
(let ((anon87_Then@8 (=> (and true
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1326@6 custp@146@0 FactorialCont.vo) perm$R))
    (= exhaleMask@_1326@7 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1326@6 custp@146@0 FactorialCont.vo (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1326@6 custp@146@0 FactorialCont.vo) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1326@6 custp@146@0 FactorialCont.vo) perm$R) monitorK))))
    (= exhaleMask@_1326@8 exhaleMask@_1326@7)
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1326@6 custp@146@0 FactorialCont.vo) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1326@6 custp@146@0 FactorialCont.vo) perm$N)))
    (IsGoodMask Mask@76)
    (wf Heap@73 exhaleMask@_1326@7)
    (wf Heap@73 Mask@76)
  )
    anon38
)))
(let ((anon87_Then@7 (=> (and true
    (> monitorK 0)
  )(and 
    anon87_Then@7_assertion
    anon87_Then@8
))))
(let ((anon87_Then@6 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1326@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@73 custp@146@0 FactorialCont.q) FactorialContChannel.initExpState) perm$R))
    (= exhaleMask@_1326@6 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1326@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@73 custp@146@0 FactorialCont.q) FactorialContChannel.initExpState (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1326@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@73 custp@146@0 FactorialCont.q) FactorialContChannel.initExpState) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1326@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@73 custp@146@0 FactorialCont.q) FactorialContChannel.initExpState) perm$R) (Fractions 100)))))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1326@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@73 custp@146@0 FactorialCont.q) FactorialContChannel.initExpState) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1326@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@73 custp@146@0 FactorialCont.q) FactorialContChannel.initExpState) perm$N)))
    (IsGoodMask Mask@76)
    (wf Heap@73 exhaleMask@_1326@6)
    (wf Heap@73 Mask@76)
  )(and 
    anon87_Then@6_assertion
    anon87_Then@7
))))
(let ((anon87_Then@5 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon87_Then@5_assertion
    anon87_Then@6
))))
(let ((anon87_Then@4 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1326@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@73 custp@146@0 FactorialCont.q) FactorialContChannel.valid) perm$R))
    (= exhaleMask@_1326@5 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1326@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@73 custp@146@0 FactorialCont.q) FactorialContChannel.valid (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1326@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@73 custp@146@0 FactorialCont.q) FactorialContChannel.valid) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1326@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@73 custp@146@0 FactorialCont.q) FactorialContChannel.valid) perm$R) (Fractions 100)))))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1326@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@73 custp@146@0 FactorialCont.q) FactorialContChannel.valid) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1326@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@73 custp@146@0 FactorialCont.q) FactorialContChannel.valid) perm$N)))
    (IsGoodMask Mask@76)
    (wf Heap@73 exhaleMask@_1326@5)
    (wf Heap@73 Mask@76)
  )(and 
    anon87_Then@4_assertion
    anon87_Then@5
))))
(let ((anon87_Then@3 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon87_Then@3_assertion
    anon87_Then@4
))))
(let ((anon87_Then@2 (=> (and true
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1326@3 custp@146@0 FactorialCont.q) perm$R))
    (= exhaleMask@_1326@4 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1326@3 custp@146@0 FactorialCont.q (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1326@3 custp@146@0 FactorialCont.q) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1326@3 custp@146@0 FactorialCont.q) perm$R) monitorK))))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1326@3 custp@146@0 FactorialCont.q) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1326@3 custp@146@0 FactorialCont.q) perm$N)))
    (IsGoodMask Mask@76)
    (wf Heap@73 exhaleMask@_1326@4)
    (wf Heap@73 Mask@76)
  )(and 
    anon87_Then@2_assertion
    anon87_Then@3
))))
(let ((anon87_Then@1 (=> (and true
    (> monitorK 0)
  )(and 
    anon87_Then@1_assertion
    anon87_Then@2
))))
(let ((anon87_Then (=> (and true
    (not (= null custp@146@0))
  )(and 
    anon87_Then_assertion
    anon87_Then@1
))))
(let ((anon35@8 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1326@2 nw@_1321@0 FactorialCont.q) perm$R))
    (= exhaleMask@_1326@3 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1326@2 nw@_1321@0 FactorialCont.q (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1326@2 nw@_1321@0 FactorialCont.q) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1326@2 nw@_1321@0 FactorialCont.q) perm$R) (Fractions 100)))))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1326@2 nw@_1321@0 FactorialCont.q) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1326@2 nw@_1321@0 FactorialCont.q) perm$N)))
    (IsGoodMask Mask@76)
    (wf Heap@73 exhaleMask@_1326@3)
    (wf Heap@73 Mask@76)
  )
    (and anon87_Else anon87_Then)
)))
(let ((anon35@7 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon35@7_assertion
    anon35@8
))))
(let ((anon35@6 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1326@1 nw@_1321@0 FactorialCont.cust) perm$R))
    (= exhaleMask@_1326@2 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1326@1 nw@_1321@0 FactorialCont.cust (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1326@1 nw@_1321@0 FactorialCont.cust) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1326@1 nw@_1321@0 FactorialCont.cust) perm$R) (Fractions 100)))))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1326@1 nw@_1321@0 FactorialCont.cust) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1326@1 nw@_1321@0 FactorialCont.cust) perm$N)))
    (IsGoodMask Mask@76)
    (wf Heap@73 exhaleMask@_1326@2)
    (wf Heap@73 Mask@76)
  )(and 
    anon35@6_assertion
    anon35@7
))))
(let ((anon35@5 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon35@5_assertion
    anon35@6
))))
(let ((anon35@4 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1326@0 nw@_1321@0 FactorialCont.vo) perm$R))
    (= exhaleMask@_1326@1 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1326@0 nw@_1321@0 FactorialCont.vo (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1326@0 nw@_1321@0 FactorialCont.vo) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1326@0 nw@_1321@0 FactorialCont.vo) perm$R) (Fractions 100)))))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1326@0 nw@_1321@0 FactorialCont.vo) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1326@0 nw@_1321@0 FactorialCont.vo) perm$N)))
    (IsGoodMask Mask@76)
    (wf Heap@73 exhaleMask@_1326@1)
    (wf Heap@73 Mask@76)
  )(and 
    anon35@4_assertion
    anon35@5
))))
(let ((anon35@3 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon35@3_assertion
    anon35@4
))))
(let ((anon35@2 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@76 nw@_1321@0 FactorialCont.v) perm$R))
    (= (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@76 nw@_1321@0 FactorialCont.v (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@76 nw@_1321@0 FactorialCont.v) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@76 nw@_1321@0 FactorialCont.v) perm$R) (Fractions 100)))) exhaleMask@_1326@0)
    (=> (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@76 nw@_1321@0 FactorialCont.v) perm$R) (Fractions 100)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@76 nw@_1321@0 FactorialCont.v) perm$N)))
    (IsGoodMask Mask@76)
    (wf Heap@73 exhaleMask@_1326@0)
    (wf Heap@73 Mask@76)
  )(and 
    anon35@2_assertion
    anon35@3
))))
(let ((anon35@1 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon35@1_assertion
    anon35@2
))))
(let ((anon35 (=> (and true
  )(and 
    anon35_assertion
    anon35@1
))))
(let ((anon86_Else (=> (and true
    (= null custp@146@0)
  )
    anon35
)))
(let ((anon86_Then@2 (=> (and true
    (= vop@145@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@73 custp@146@0 FactorialCont.vo))
  )
    anon35
)))
(let ((anon86_Then@1 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@73 custp@146@0 FactorialCont.q)))
  )(and 
    anon86_Then@1_assertion
    anon86_Then@2
))))
(let ((anon86_Then (=> (and true
    (not (= null custp@146@0))
  )(and 
    anon86_Then_assertion
    anon86_Then@1
))))
(let ((anon78_Else@9 (=> (and true
    (>= vop@145@0 0)
  )
    (and anon86_Else anon86_Then)
)))
(let ((anon78_Else@8 (=> (and true
    (>= vp@144@0 0)
  )(and 
    anon78_Else@8_assertion
    anon78_Else@9
))))
(let ((anon78_Else@7 (=> (and true
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@73 mo@131@0 Message.cust1) custp@146@0)
    (= vop@145@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@73 mo@131@0 Message.vo1))
    (= vp@144@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@73 mo@131@0 Message.v1))
    (CanRead$ref$ Mask@76 mo@131@0 Message.cust1)
  )(and 
    anon78_Else@7_assertion
    anon78_Else@8
))))
(let ((anon78_Else@6 (=> (and true
    (not (= null mo@131@0))
  )(and 
    anon78_Else@6_assertion
    anon78_Else@7
))))
(let ((anon78_Else@5 (=> (and true
    (CanRead$Int$ Mask@76 mo@131@0 Message.vo1)
  )(and 
    anon78_Else@5_assertion
    anon78_Else@6
))))
(let ((anon78_Else@4 (=> (and true
    (not (= null mo@131@0))
  )(and 
    anon78_Else@4_assertion
    anon78_Else@5
))))
(let ((anon78_Else@3 (=> (and true
    (CanRead$Int$ Mask@76 mo@131@0 Message.v1)
  )(and 
    anon78_Else@3_assertion
    anon78_Else@4
))))
(let ((anon78_Else@2 (=> (and true
    (not (= null mo@131@0))
  )(and 
    anon78_Else@2_assertion
    anon78_Else@3
))))
(let ((anon78_Else@1 (=> (and true
    (not (= nw@_1321@0 null))
  )(and 
    anon78_Else@1_assertion
    anon78_Else@2
))))
(let ((anon78_Else (=> (and true
    (< (* 1000 methodCallK@_1325) (Fractions 1))
    (< (* 1000 methodCallK@_1325) whileK@_1176)
    (< 0 methodCallK@_1325)
    (<= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@73 nw@_1321@0 held) 0)
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ Heap@73 nw@_1321@0 mu) $LockBottom)
    (= FactorialCont@t (dtype nw@_1321@0))
    (= Mask@72 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@71 nw@_1321@0 FactorialCont.q (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@71 nw@_1321@0 FactorialCont.q) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@71 nw@_1321@0 FactorialCont.q) perm$R) (Fractions 100)))))
    (= Mask@73 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@72 nw@_1321@0 FactorialCont.v (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@72 nw@_1321@0 FactorialCont.v) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@72 nw@_1321@0 FactorialCont.v) perm$R) (Fractions 100)))))
    (= Mask@74 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@73 nw@_1321@0 FactorialCont.vo (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@73 nw@_1321@0 FactorialCont.vo) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@73 nw@_1321@0 FactorialCont.vo) perm$R) (Fractions 100)))))
    (= Mask@75 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@74 nw@_1321@0 FactorialCont.cust (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@74 nw@_1321@0 FactorialCont.cust) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@74 nw@_1321@0 FactorialCont.cust) perm$R) (Fractions 100)))))
    (= Mask@76 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@75 nw@_1321@0 mu (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@75 nw@_1321@0 mu) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@75 nw@_1321@0 mu) perm$R) (Fractions 100)))))
    (forall( (|f_$13_$0| Field$Bool$))(and (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ Mask@71 nw@_1321@0 |f_$13_$0|) perm$R) 0) (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ Mask@71 nw@_1321@0 |f_$13_$0|) perm$N) 0)))
    (forall( (|f_$13_$1| Field$Int$))(and (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@71 nw@_1321@0 |f_$13_$1|) perm$R) 0) (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@71 nw@_1321@0 |f_$13_$1|) perm$N) 0)))
    (forall( (|f_$13_$2| Field$ref$))(and (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@71 nw@_1321@0 |f_$13_$2|) perm$R) 0) (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@71 nw@_1321@0 |f_$13_$2|) perm$N) 0)))
    (forall( (|f_$13_$3| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(and (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@71 nw@_1321@0 |f_$13_$3|) perm$R) 0) (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@71 nw@_1321@0 |f_$13_$3|) perm$N) 0)))
    (forall( (|f_$13_$4| Field$Mu$))(and (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@71 nw@_1321@0 |f_$13_$4|) perm$R) 0) (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@71 nw@_1321@0 |f_$13_$4|) perm$N) 0)))
    (not (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@73 mo@131@0 Message.v1) 0))
    (not (= nw@_1321@0 null))
    (not (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ Heap@73 nw@_1321@0 rdheld))
  )(and 
    anon78_Else_assertion
    anon78_Else@1
))))
(let ((anon10@2 (=> (and true
    (CanRead$Int$ Mask@71 mo@131@0 Message.v1)
  )
    (and anon78_Else anon78_Then)
)))
(let ((anon10@1 (=> (and true
    (not (= null mo@131@0))
  )(and 
    anon10@1_assertion
    anon10@2
))))
(let ((anon10 (=> (and true
    (IsGoodMask Mask@71)
    (wf Heap@73 Mask@71)
  )(and 
    anon10_assertion
    anon10@1
))))
(let ((anon77_Else (=> (and true
    (= Heap@73 Heap@65)
    (= Mask@71 Mask@63)
    (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@65 mo@131@0 Message.cust1))
  )
    anon10
)))
(let ((anon77_Then (=> (and true
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1207@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@67 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@67 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.valid) Heap@67)
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1207@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@68 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@68 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.initExpState) Heap@68)
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@72 mo@131@0 Message.v1) (- (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@72 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@72 mo@131@0 Message.cust1) FactorialCont.v) 1))
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@72 mo@131@0 Message.vo1) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@72 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@72 mo@131@0 Message.cust1) FactorialCont.vo))
    (= Heap@66 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@65 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@65 mo@131@0 Message.cust1) FactorialCont.q (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1207@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@65 mo@131@0 Message.cust1) FactorialCont.q)))
    (= Heap@67 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Heap@66 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@66 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@66 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.valid (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1207@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@66 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@66 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.valid)))
    (= Heap@68 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Heap@67 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@67 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@67 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.initExpState (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1207@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@67 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@67 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.initExpState)))
    (= Heap@69 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@68 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@68 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@68 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1207@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@68 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@68 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp)))
    (= Heap@70 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@69 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@69 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@69 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@69 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1207@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@69 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@69 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@69 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch)))
    (= Heap@71 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@70 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@70 mo@131@0 Message.cust1) FactorialCont.v (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1207@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@70 mo@131@0 Message.cust1) FactorialCont.v)))
    (= Heap@72 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@71 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@71 mo@131@0 Message.cust1) FactorialCont.vo (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1207@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@71 mo@131@0 Message.cust1) FactorialCont.vo)))
    (= Heap@73 Heap@72)
    (= Mask@64 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@63 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@66 mo@131@0 Message.cust1) FactorialCont.q (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@63 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@66 mo@131@0 Message.cust1) FactorialCont.q) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@63 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@66 mo@131@0 Message.cust1) FactorialCont.q) perm$R) predicateK))))
    (= Mask@65 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@64 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@67 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@67 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.valid (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@64 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@67 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@67 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.valid) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@64 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@67 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@67 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.valid) perm$R) (Fractions 100)))))
    (= Mask@66 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@65 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@68 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@68 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.initExpState (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@65 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@68 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@68 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.initExpState) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@65 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@68 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@68 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.initExpState) perm$R) (Fractions 100)))))
    (= Mask@67 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@66 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@69 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@69 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@66 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@69 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@69 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@66 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@69 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@69 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp) perm$R) predicateK))))
    (= Mask@68 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@67 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@70 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@70 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@70 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@67 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@70 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@70 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@70 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@67 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@70 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@70 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@70 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch) perm$R) predicateK))))
    (= Mask@69 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@68 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@71 mo@131@0 Message.cust1) FactorialCont.v (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@68 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@71 mo@131@0 Message.cust1) FactorialCont.v) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@68 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@71 mo@131@0 Message.cust1) FactorialCont.v) perm$R) predicateK))))
    (= Mask@70 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@69 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@72 mo@131@0 Message.cust1) FactorialCont.vo (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@69 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@72 mo@131@0 Message.cust1) FactorialCont.vo) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@69 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@72 mo@131@0 Message.cust1) FactorialCont.vo) perm$R) predicateK))))
    (= Mask@71 Mask@70)
    (> (Fractions 100) 0)
    (> (Fractions 100) 0)
    (> predicateK 0)
    (> predicateK 0)
    (> predicateK 0)
    (> predicateK 0)
    (> predicateK 0)
    (IsGoodMask Mask@64)
    (IsGoodMask Mask@65)
    (IsGoodMask Mask@66)
    (IsGoodMask Mask@67)
    (IsGoodMask Mask@68)
    (IsGoodMask Mask@69)
    (IsGoodMask Mask@70)
    (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1207@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@67 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@67 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.valid))
    (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1207@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@68 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@68 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.initExpState))
    (IsGoodState$Int$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1207@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@71 mo@131@0 Message.cust1) FactorialCont.v))
    (IsGoodState$Int$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1207@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@72 mo@131@0 Message.cust1) FactorialCont.vo))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1207@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@66 mo@131@0 Message.cust1) FactorialCont.q))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1207@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@69 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@69 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1207@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@70 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@70 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@70 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@65 mo@131@0 Message.cust1)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@65 mo@131@0 Message.cust1)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@66 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@66 mo@131@0 Message.cust1) FactorialCont.q)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@66 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@66 mo@131@0 Message.cust1) FactorialCont.q)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@67 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@67 mo@131@0 Message.cust1) FactorialCont.q)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@68 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@68 mo@131@0 Message.cust1) FactorialCont.q)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@69 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@69 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@69 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@70 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@70 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@70 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@70 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@70 mo@131@0 Message.cust1)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@71 mo@131@0 Message.cust1)))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@66 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@66 mo@131@0 Message.cust1) FactorialCont.q)) (= FactorialContChannel@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@66 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@66 mo@131@0 Message.cust1) FactorialCont.q))))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@69 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@69 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@69 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp)) (= FactorialContChannelImpEP@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@69 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@69 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@69 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp))))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@70 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@70 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@70 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@70 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch)) (= (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@70 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@70 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@70 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@70 mo@131@0 Message.cust1) FactorialCont.q) FactorialContChannel.imp) FactorialContChannelImpEP.impch)) Channel@t))
    (wf Heap@66 Mask@63)
    (wf Heap@66 Mask@64)
    (wf Heap@67 Mask@64)
    (wf Heap@67 Mask@65)
    (wf Heap@68 Mask@65)
    (wf Heap@68 Mask@66)
    (wf Heap@69 Mask@66)
    (wf Heap@69 Mask@67)
    (wf Heap@70 Mask@67)
    (wf Heap@70 Mask@68)
    (wf Heap@71 Mask@68)
    (wf Heap@71 Mask@69)
    (wf Heap@72 Mask@69)
    (wf Heap@72 Mask@70)
    (wf inhaleHeap@_1207@0 Mask@64)
    (wf inhaleHeap@_1207@0 Mask@65)
    (wf inhaleHeap@_1207@0 Mask@66)
    (wf inhaleHeap@_1207@0 Mask@67)
    (wf inhaleHeap@_1207@0 Mask@68)
    (wf inhaleHeap@_1207@0 Mask@69)
    (wf inhaleHeap@_1207@0 Mask@70)
  )
    anon10
)))
(let (($branchMerge_0 (=> (and true
  )
    (and anon77_Else anon77_Then)
)))
(let ((anon76_Else (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@65 mo@131@0 Message.cust1)))
  )
    $branchMerge_0
)))
(let ((anon76_Then (=> (and true
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@65 mo@131@0 Message.vo1) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@65 mo@131@0 Message.v1))
    (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@65 mo@131@0 Message.cust1))
  )
    $branchMerge_0
)))
(let ((anon75_Then@17 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@55 mo@131@0 Message.invValue) perm$R))
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1207@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@64 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@64 mo@131@0 Message.sender1) Future.q) FutureChannel.valid) Heap@64)
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1207@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@65 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@65 mo@131@0 Message.sender1) Future.q) FutureChannel.initExpState) Heap@65)
    (= (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@55 mo@131@0 Message.invValue (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@55 mo@131@0 Message.invValue) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@55 mo@131@0 Message.invValue) perm$R) (Fractions 100)))) exhaleMask@_1205@0)
    (= Heap@58 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@57 mo@131@0 Message.sender1 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1207@0 mo@131@0 Message.sender1)))
    (= Heap@59 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@58 mo@131@0 Message.receiver1 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1207@0 mo@131@0 Message.receiver1)))
    (= Heap@60 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@59 mo@131@0 Message.cust1 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1207@0 mo@131@0 Message.cust1)))
    (= Heap@61 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@60 mo@131@0 Message.v1 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1207@0 mo@131@0 Message.v1)))
    (= Heap@62 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@61 mo@131@0 Message.vo1 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1207@0 mo@131@0 Message.vo1)))
    (= Heap@63 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@62 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@62 mo@131@0 Message.sender1) Future.q (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1207@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@62 mo@131@0 Message.sender1) Future.q)))
    (= Heap@64 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Heap@63 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@63 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@63 mo@131@0 Message.sender1) Future.q) FutureChannel.valid (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1207@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@63 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@63 mo@131@0 Message.sender1) Future.q) FutureChannel.valid)))
    (= Heap@65 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Heap@64 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@64 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@64 mo@131@0 Message.sender1) Future.q) FutureChannel.initExpState (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1207@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@64 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@64 mo@131@0 Message.sender1) Future.q) FutureChannel.initExpState)))
    (= inhaleHeap@_1207@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Heap@57 mo@131@0 Message.invValue))
    (= Mask@56 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1205@0 mo@131@0 Message.sender1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1205@0 mo@131@0 Message.sender1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1205@0 mo@131@0 Message.sender1) perm$R) predicateK))))
    (= Mask@57 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@56 mo@131@0 Message.receiver1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@56 mo@131@0 Message.receiver1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@56 mo@131@0 Message.receiver1) perm$R) predicateK))))
    (= Mask@58 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@57 mo@131@0 Message.cust1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@57 mo@131@0 Message.cust1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@57 mo@131@0 Message.cust1) perm$R) predicateK))))
    (= Mask@59 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@58 mo@131@0 Message.v1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@58 mo@131@0 Message.v1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@58 mo@131@0 Message.v1) perm$R) predicateK))))
    (= Mask@60 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@59 mo@131@0 Message.vo1 (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@59 mo@131@0 Message.vo1) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@59 mo@131@0 Message.vo1) perm$R) predicateK))))
    (= Mask@61 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@60 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@63 mo@131@0 Message.sender1) Future.q (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@60 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@63 mo@131@0 Message.sender1) Future.q) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@60 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@63 mo@131@0 Message.sender1) Future.q) perm$R) predicateK))))
    (= Mask@62 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@61 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@64 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@64 mo@131@0 Message.sender1) Future.q) FutureChannel.valid (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@61 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@64 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@64 mo@131@0 Message.sender1) Future.q) FutureChannel.valid) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@61 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@64 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@64 mo@131@0 Message.sender1) Future.q) FutureChannel.valid) perm$R) (Fractions 100)))))
    (= Mask@63 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@62 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@65 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@65 mo@131@0 Message.sender1) Future.q) FutureChannel.initExpState (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@62 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@65 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@65 mo@131@0 Message.sender1) Future.q) FutureChannel.initExpState) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@62 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@65 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@65 mo@131@0 Message.sender1) Future.q) FutureChannel.initExpState) perm$R) (Fractions 100)))))
    (=> (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@55 mo@131@0 Message.invValue) perm$R) (Fractions 100)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@55 mo@131@0 Message.invValue) perm$N)))
    (> (Fractions 100) 0)
    (> (Fractions 100) 0)
    (> predicateK 0)
    (> predicateK 0)
    (> predicateK 0)
    (> predicateK 0)
    (> predicateK 0)
    (> predicateK 0)
    (>= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@65 mo@131@0 Message.v1) 0)
    (>= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@65 mo@131@0 Message.vo1) 0)
    (IsGoodInhaleState inhaleHeap@_1207@0 Heap@57 exhaleMask@_1205@0)
    (IsGoodMask Mask@55)
    (IsGoodMask Mask@56)
    (IsGoodMask Mask@57)
    (IsGoodMask Mask@58)
    (IsGoodMask Mask@59)
    (IsGoodMask Mask@60)
    (IsGoodMask Mask@61)
    (IsGoodMask Mask@62)
    (IsGoodMask Mask@63)
    (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1207@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@64 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@64 mo@131@0 Message.sender1) Future.q) FutureChannel.valid))
    (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1207@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@65 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@65 mo@131@0 Message.sender1) Future.q) FutureChannel.initExpState))
    (IsGoodState$Int$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1207@0 mo@131@0 Message.v1))
    (IsGoodState$Int$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1207@0 mo@131@0 Message.vo1))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1207@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@63 mo@131@0 Message.sender1) Future.q))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1207@0 mo@131@0 Message.cust1))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1207@0 mo@131@0 Message.receiver1))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1207@0 mo@131@0 Message.sender1))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@62 mo@131@0 Message.sender1)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@62 mo@131@0 Message.sender1)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@63 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@63 mo@131@0 Message.sender1) Future.q)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@63 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@63 mo@131@0 Message.sender1) Future.q)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@64 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@64 mo@131@0 Message.sender1) Future.q)))
    (not (= null mo@131@0))
    (not (= null mo@131@0))
    (not (= null mo@131@0))
    (not (= null mo@131@0))
    (not (= null mo@131@0))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@58 mo@131@0 Message.sender1)) (= Future@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@58 mo@131@0 Message.sender1))))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@59 mo@131@0 Message.receiver1)) (= FactorialActor@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@59 mo@131@0 Message.receiver1))))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@60 mo@131@0 Message.cust1)) (= FactorialCont@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@60 mo@131@0 Message.cust1))))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@63 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@63 mo@131@0 Message.sender1) Future.q)) (= FutureChannel@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@63 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@63 mo@131@0 Message.sender1) Future.q))))
    (wf Heap@57 exhaleMask@_1205@0)
    (wf Heap@57 exhaleMask@_1205@0)
    (wf Heap@57 Mask@55)
    (wf Heap@58 exhaleMask@_1205@0)
    (wf Heap@58 Mask@56)
    (wf Heap@59 Mask@56)
    (wf Heap@59 Mask@57)
    (wf Heap@60 Mask@57)
    (wf Heap@60 Mask@58)
    (wf Heap@61 Mask@58)
    (wf Heap@61 Mask@59)
    (wf Heap@62 Mask@59)
    (wf Heap@62 Mask@60)
    (wf Heap@63 Mask@60)
    (wf Heap@63 Mask@61)
    (wf Heap@64 Mask@61)
    (wf Heap@64 Mask@62)
    (wf Heap@65 Mask@62)
    (wf Heap@65 Mask@63)
    (wf inhaleHeap@_1207@0 Mask@56)
    (wf inhaleHeap@_1207@0 Mask@57)
    (wf inhaleHeap@_1207@0 Mask@58)
    (wf inhaleHeap@_1207@0 Mask@59)
    (wf inhaleHeap@_1207@0 Mask@60)
    (wf inhaleHeap@_1207@0 Mask@61)
    (wf inhaleHeap@_1207@0 Mask@62)
    (wf inhaleHeap@_1207@0 Mask@63)
  )
    (and anon76_Else anon76_Then)
)))
(let ((anon75_Then@16 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon75_Then@16_assertion
    anon75_Then@17
))))
(let ((anon75_Then@15 (=> (and true
    (not (= null mo@131@0))
  )(and 
    anon75_Then@15_assertion
    anon75_Then@16
))))
(let ((anon75_Then@14 (=> (and true
    (< (* 1000 unfoldK@_1204) whileK@_1176)
    (< 0 unfoldK@_1204)
    (< unfoldK@_1204 (Fractions 1))
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1197@1 msg@128@0 Message.inv) perm$R))
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1203@0 mo@131@0 Message.invValue) Heap@57)
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@55 this@129@0 FactorialActorChannelImpEP.state) 0)
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@56 mo@131@0 Message.type) 1)
    (= exhaleMask@_1197@2 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1197@1 msg@128@0 Message.inv (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1197@1 msg@128@0 Message.inv) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1197@1 msg@128@0 Message.inv) perm$R) (Fractions 100)))))
    (= Heap@55 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@45 this@129@0 FactorialActorChannelImpEP.state (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1203@0 this@129@0 FactorialActorChannelImpEP.state)))
    (= Heap@56 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@55 mo@131@0 Message.type (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1203@0 mo@131@0 Message.type)))
    (= Heap@57 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Heap@56 mo@131@0 Message.invValue (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1203@0 mo@131@0 Message.invValue)))
    (= Mask@53 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1197@2 this@129@0 FactorialActorChannelImpEP.state (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1197@2 this@129@0 FactorialActorChannelImpEP.state) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1197@2 this@129@0 FactorialActorChannelImpEP.state) perm$R) (Fractions 100)))))
    (= Mask@54 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@53 mo@131@0 Message.type (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@53 mo@131@0 Message.type) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@53 mo@131@0 Message.type) perm$R) monitorK))))
    (= Mask@55 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@54 mo@131@0 Message.invValue (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@54 mo@131@0 Message.invValue) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@54 mo@131@0 Message.invValue) perm$R) (Fractions 100)))))
    (= msg@128@0 mo@131@0)
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1197@1 msg@128@0 Message.inv) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1197@1 msg@128@0 Message.inv) perm$N)))
    (> (Fractions 100) 0)
    (> (Fractions 100) 0)
    (> monitorK 0)
    (IsGoodInhaleState inhaleHeap@_1203@0 Heap@45 exhaleMask@_1197@2)
    (IsGoodMask Mask@43)
    (IsGoodMask Mask@53)
    (IsGoodMask Mask@54)
    (IsGoodMask Mask@55)
    (IsGoodMask Mask@55)
    (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1203@0 mo@131@0 Message.invValue))
    (IsGoodState$Int$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1203@0 mo@131@0 Message.type))
    (IsGoodState$Int$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1203@0 this@129@0 FactorialActorChannelImpEP.state))
    (not (= null mo@131@0))
    (not (= null mo@131@0))
    (not (= this@129@0 null))
    (or (= null mo@131@0) (= Message@t (dtype mo@131@0)))
    (wf Heap@45 exhaleMask@_1197@2)
    (wf Heap@45 exhaleMask@_1197@2)
    (wf Heap@45 Mask@43)
    (wf Heap@55 exhaleMask@_1197@2)
    (wf Heap@55 Mask@53)
    (wf Heap@56 Mask@53)
    (wf Heap@56 Mask@54)
    (wf Heap@57 Mask@54)
    (wf Heap@57 Mask@55)
    (wf Heap@57 Mask@55)
    (wf inhaleHeap@_1203@0 Mask@53)
    (wf inhaleHeap@_1203@0 Mask@54)
    (wf inhaleHeap@_1203@0 Mask@55)
  )(and 
    anon75_Then@14_assertion
    anon75_Then@15
))))
(let ((anon75_Then@13 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon75_Then@13_assertion
    anon75_Then@14
))))
(let ((anon75_Then@12 (=> (and true
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1197@0 msg@128@0 Message.type) perm$R))
    (= exhaleMask@_1197@1 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1197@0 msg@128@0 Message.type (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1197@0 msg@128@0 Message.type) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1197@0 msg@128@0 Message.type) perm$R) monitorK))))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1197@0 msg@128@0 Message.type) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1197@0 msg@128@0 Message.type) perm$N)))
    (IsGoodMask Mask@43)
    (wf Heap@45 exhaleMask@_1197@1)
    (wf Heap@45 Mask@43)
  )(and 
    anon75_Then@12_assertion
    anon75_Then@13
))))
(let ((anon75_Then@11 (=> (and true
    (> monitorK 0)
  )(and 
    anon75_Then@11_assertion
    anon75_Then@12
))))
(let ((anon75_Then@10 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@43 this@129@0 FactorialActorChannelImpEP.state) perm$R))
    (= (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@43 this@129@0 FactorialActorChannelImpEP.state (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@43 this@129@0 FactorialActorChannelImpEP.state) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@43 this@129@0 FactorialActorChannelImpEP.state) perm$R) (Fractions 100)))) exhaleMask@_1197@0)
    (=> (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@43 this@129@0 FactorialActorChannelImpEP.state) perm$R) (Fractions 100)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@43 this@129@0 FactorialActorChannelImpEP.state) perm$N)))
    (IsGoodMask Mask@43)
    (wf Heap@45 exhaleMask@_1197@0)
    (wf Heap@45 Mask@43)
  )(and 
    anon75_Then@10_assertion
    anon75_Then@11
))))
(let ((anon75_Then@9 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon75_Then@9_assertion
    anon75_Then@10
))))
(let ((anon75_Then@8 (=> (and true
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@45 this@129@0 FactorialActorChannelImpEP.state) 0)
  )(and 
    anon75_Then@8_assertion
    anon75_Then@9
))))
(let ((anon75_Then@7 (=> (and true
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@45 msg@128@0 Message.type) 1)
  )(and 
    anon75_Then@7_assertion
    anon75_Then@8
))))
(let ((anon75_Then@6 (=> (and true
    (not (= null msg@128@0))
  )(and 
    anon75_Then@6_assertion
    anon75_Then@7
))))
(let ((anon75_Then@5 (=> (and true
    (= this@129@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@45 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@45 this FactorialActor.q) FactorialActorChannel.imp))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@45 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@45 this FactorialActor.q) FactorialActorChannel.imp)))
  )(and 
    anon75_Then@5_assertion
    anon75_Then@6
))))
(let ((anon75_Then@4 (=> (and true
    (CanRead$ref$ Mask@43 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@45 this FactorialActor.q) FactorialActorChannel.imp)
  )(and 
    anon75_Then@4_assertion
    anon75_Then@5
))))
(let ((anon75_Then@3 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@45 this FactorialActor.q)))
  )(and 
    anon75_Then@3_assertion
    anon75_Then@4
))))
(let ((anon75_Then@2 (=> (and true
    (CanRead$ref$ Mask@43 this FactorialActor.q)
  )(and 
    anon75_Then@2_assertion
    anon75_Then@3
))))
(let ((anon75_Then@1 (=> (and true
    (not (= this null))
  )(and 
    anon75_Then@1_assertion
    anon75_Then@2
))))
(let ((anon75_Then (=> (and true
    (< (* 1000 methodCallK@_1196) (Fractions 1))
    (< (* 1000 methodCallK@_1196) whileK@_1176)
    (< 0 methodCallK@_1196)
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@45 msg@128@0 Message.type) 1)
  )(and 
    anon75_Then_assertion
    anon75_Then@1
))))
(let ((anon74_Then@12 (=> (and true
    (CanRead$Int$ Mask@43 msg@128@0 Message.type)
  )
    (and anon75_Else anon75_Then)
)))
(let ((anon74_Then@11 (=> (and true
    (not (= null msg@128@0))
  )(and 
    anon74_Then@11_assertion
    anon74_Then@12
))))
(let ((anon74_Then@10 (=> (and true
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1192@0 msg@128@0 Message.inv) Heap@45)
    (= Credits@4 (MapWrite$$@Map@@ref@To@Int@@$ Credits@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@45 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@45 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@45 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) (- (MapRead$$@Map@@ref@To@Int@@$ Credits@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@45 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@45 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@45 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)) 1)))
    (= Heap@44 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@43 msg@128@0 Message.type (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1192@0 msg@128@0 Message.type)))
    (= Heap@45 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Heap@44 msg@128@0 Message.inv (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1192@0 msg@128@0 Message.inv)))
    (= Mask@42 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@41 msg@128@0 Message.type (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@41 msg@128@0 Message.type) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@41 msg@128@0 Message.type) perm$R) channelK))))
    (= Mask@43 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@42 msg@128@0 Message.inv (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@42 msg@128@0 Message.inv) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@42 msg@128@0 Message.inv) perm$R) (Fractions 100)))))
    (= this@127@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch))
    (> (Fractions 100) 0)
    (> channelK 0)
    (forall( (|o#_1191| ref))(=> (or (or (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ Heap@43 |o#_1191| rdheld) (< 0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@43 |o#_1191| held))) (< (MapRead$$@Map@@ref@To@Int@@$ Credits@3 |o#_1191|) 0)) (MuBelow (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ Heap@43 |o#_1191| mu) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ Heap@43 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu))))
    (IsGoodInhaleState inhaleHeap@_1192@0 Heap@43 Mask@41)
    (IsGoodMask Mask@42)
    (IsGoodMask Mask@43)
    (IsGoodMask Mask@43)
    (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1192@0 msg@128@0 Message.inv))
    (IsGoodState$Int$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1192@0 msg@128@0 Message.type))
    (not (= null msg@128@0))
    (not (= null msg@128@0))
    (not (= null msg@128@0))
    (or (= null msg@128@0) (= Message@t (dtype msg@128@0)))
    (wf Heap@44 Mask@41)
    (wf Heap@44 Mask@42)
    (wf Heap@45 Mask@42)
    (wf Heap@45 Mask@43)
    (wf Heap@45 Mask@43)
    (wf inhaleHeap@_1192@0 Mask@42)
    (wf inhaleHeap@_1192@0 Mask@43)
  )(and 
    anon74_Then@10_assertion
    anon74_Then@11
))))
(let ((anon74_Then@9 (=> (and true
    (CanRead$Mu$ Mask@41 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu)
  )(and 
    anon74_Then@9_assertion
    anon74_Then@10
))))
(let ((anon74_Then@8 (=> (and true
    (< 0 (MapRead$$@Map@@ref@To@Int@@$ Credits@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)))
  )(and 
    anon74_Then@8_assertion
    anon74_Then@9
))))
(let ((anon74_Then@7 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)))
  )(and 
    anon74_Then@7_assertion
    anon74_Then@8
))))
(let ((anon74_Then@6 (=> (and true
    (CanRead$ref$ Mask@41 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)
  )(and 
    anon74_Then@6_assertion
    anon74_Then@7
))))
(let ((anon74_Then@5 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 this FactorialActor.q) FactorialActorChannel.imp)))
  )(and 
    anon74_Then@5_assertion
    anon74_Then@6
))))
(let ((anon74_Then@4 (=> (and true
    (CanRead$ref$ Mask@41 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 this FactorialActor.q) FactorialActorChannel.imp)
  )(and 
    anon74_Then@4_assertion
    anon74_Then@5
))))
(let ((anon74_Then@3 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 this FactorialActor.q)))
  )(and 
    anon74_Then@3_assertion
    anon74_Then@4
))))
(let ((anon74_Then@2 (=> (and true
    (CanRead$ref$ Mask@41 this FactorialActor.q)
  )(and 
    anon74_Then@2_assertion
    anon74_Then@3
))))
(let ((anon74_Then@1 (=> (and true
    (not (= this null))
  )(and 
    anon74_Then@1_assertion
    anon74_Then@2
))))
(let ((anon74_Then (=> (and true
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1189@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@41 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@41 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid) Heap@41)
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@42 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@42 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@42 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state) 0)
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@43 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state) 0)
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@39 this FactorialActor.q) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@39 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@39 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@39 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch))
    (= (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ ZeroMask this FactorialActor.q (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ ZeroMask this FactorialActor.q) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ ZeroMask this FactorialActor.q) perm$R) monitorK))) Mask@33)
    (= (MapWrite$$@Map@@ref@To@Int@@$ ZeroCredits (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) (+ (MapRead$$@Map@@ref@To@Int@@$ ZeroCredits (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)) 1)) Credits@3)
    (= Heap@35 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@34 this FactorialActor.q (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1189@0 this FactorialActor.q)))
    (= Heap@36 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@35 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@35 this FactorialActor.q) FactorialActorChannel.imp (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1189@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@35 this FactorialActor.q) FactorialActorChannel.imp)))
    (= Heap@37 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@36 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@36 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@36 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1189@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@36 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@36 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)))
    (= Heap@38 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ Heap@37 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@37 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@37 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@37 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ inhaleHeap@_1189@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@37 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@37 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@37 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu)))
    (= Heap@39 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@38 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@38 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@38 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1189@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@38 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@38 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch)))
    (= Heap@40 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@39 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@39 this FactorialActor.q) FactorialActorChannel.exp (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1189@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@39 this FactorialActor.q) FactorialActorChannel.exp)))
    (= Heap@41 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Heap@40 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@40 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@40 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1189@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@40 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@40 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid)))
    (= Heap@42 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@41 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@41 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@41 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1189@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@41 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@41 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state)))
    (= Heap@43 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@42 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@42 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@42 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1189@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@42 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@42 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state)))
    (= Mask@34 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@33 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@36 this FactorialActor.q) FactorialActorChannel.imp (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@33 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@36 this FactorialActor.q) FactorialActorChannel.imp) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@33 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@36 this FactorialActor.q) FactorialActorChannel.imp) perm$R) monitorK))))
    (= Mask@35 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@34 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@37 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@37 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@34 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@37 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@37 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@34 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@37 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@37 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) perm$R) monitorK))))
    (= Mask@36 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@35 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@38 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@38 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@38 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@35 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@38 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@38 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@38 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@35 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@38 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@38 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@38 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu) perm$R) monitorK))))
    (= Mask@37 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@36 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@39 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@39 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@36 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@39 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@39 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@36 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@39 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@39 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) perm$R) monitorK))))
    (= Mask@38 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@37 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@40 this FactorialActor.q) FactorialActorChannel.exp (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@37 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@40 this FactorialActor.q) FactorialActorChannel.exp) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@37 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@40 this FactorialActor.q) FactorialActorChannel.exp) perm$R) monitorK))))
    (= Mask@39 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@38 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@41 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@41 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@38 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@41 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@41 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@38 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@41 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@41 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid) perm$R) (Fractions 100)))))
    (= Mask@40 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@39 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@42 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@42 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@39 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@42 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@42 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@39 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@42 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@42 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state) perm$R) (Fractions 100)))))
    (= Mask@41 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@40 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@40 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@40 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state) perm$R) (Fractions 100)))))
    (> (Fractions 100) 0)
    (> (Fractions 100) 0)
    (> (Fractions 100) 0)
    (> monitorK 0)
    (> monitorK 0)
    (> monitorK 0)
    (> monitorK 0)
    (> monitorK 0)
    (> monitorK 0)
    (forall( (|lk#_1190| ref))(!(and (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ Heap |lk#_1190| rdheld) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ Heap@43 |lk#_1190| rdheld)) (= (< 0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap |lk#_1190| held)) (< 0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@43 |lk#_1190| held))))  :pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@43 |lk#_1190| held)) :pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ Heap@43 |lk#_1190| rdheld))))
    (IsGoodInhaleState inhaleHeap@_1189@0 Heap@34 ZeroMask)
    (IsGoodMask Mask@33)
    (IsGoodMask Mask@34)
    (IsGoodMask Mask@35)
    (IsGoodMask Mask@36)
    (IsGoodMask Mask@37)
    (IsGoodMask Mask@38)
    (IsGoodMask Mask@39)
    (IsGoodMask Mask@40)
    (IsGoodMask Mask@41)
    (IsGoodMask Mask@41)
    (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1189@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@41 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@41 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid))
    (IsGoodState$Int$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1189@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@42 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@42 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state))
    (IsGoodState$Int$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1189@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@43 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state))
    (IsGoodState$Mu$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ inhaleHeap@_1189@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@38 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@38 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@38 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1189@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@36 this FactorialActor.q) FactorialActorChannel.imp))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1189@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@37 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@37 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1189@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@39 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@39 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1189@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@40 this FactorialActor.q) FactorialActorChannel.exp))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1189@0 this FactorialActor.q))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@35 this FactorialActor.q)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@35 this FactorialActor.q)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@36 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@36 this FactorialActor.q) FactorialActorChannel.imp)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@37 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@37 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@37 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@38 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@38 this FactorialActor.q) FactorialActorChannel.imp)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@39 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@39 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@39 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@39 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@39 this FactorialActor.q) FactorialActorChannel.imp)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@39 this FactorialActor.q)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@40 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@40 this FactorialActor.q) FactorialActorChannel.exp)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@40 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@40 this FactorialActor.q) FactorialActorChannel.exp)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@41 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@41 this FactorialActor.q) FactorialActorChannel.exp)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@42 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@42 this FactorialActor.q) FactorialActorChannel.imp)))
    (not (= this null))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@35 this FactorialActor.q)) (= FactorialActorChannel@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@35 this FactorialActor.q))))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@36 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@36 this FactorialActor.q) FactorialActorChannel.imp)) (= FactorialActorChannelImpEP@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@36 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@36 this FactorialActor.q) FactorialActorChannel.imp))))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@37 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@37 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@37 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)) (= (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@37 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@37 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@37 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)) Channel@t))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@39 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@39 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@39 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch)) (= FactorialActorChannel@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@39 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@39 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@39 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch))))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@40 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@40 this FactorialActor.q) FactorialActorChannel.exp)) (= FactorialActorChannelExpEP@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@40 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@40 this FactorialActor.q) FactorialActorChannel.exp))))
    (wf Heap@35 Mask@33)
    (wf Heap@35 ZeroMask)
    (wf Heap@36 Mask@33)
    (wf Heap@36 Mask@34)
    (wf Heap@37 Mask@34)
    (wf Heap@37 Mask@35)
    (wf Heap@38 Mask@35)
    (wf Heap@38 Mask@36)
    (wf Heap@39 Mask@36)
    (wf Heap@39 Mask@37)
    (wf Heap@40 Mask@37)
    (wf Heap@40 Mask@38)
    (wf Heap@41 Mask@38)
    (wf Heap@41 Mask@39)
    (wf Heap@42 Mask@39)
    (wf Heap@42 Mask@40)
    (wf Heap@43 Mask@40)
    (wf Heap@43 Mask@41)
    (wf Heap@43 Mask@41)
    (wf inhaleHeap@_1189@0 Mask@33)
    (wf inhaleHeap@_1189@0 Mask@34)
    (wf inhaleHeap@_1189@0 Mask@35)
    (wf inhaleHeap@_1189@0 Mask@36)
    (wf inhaleHeap@_1189@0 Mask@37)
    (wf inhaleHeap@_1189@0 Mask@38)
    (wf inhaleHeap@_1189@0 Mask@39)
    (wf inhaleHeap@_1189@0 Mask@40)
    (wf inhaleHeap@_1189@0 Mask@41)
  )(and 
    anon74_Then_assertion
    anon74_Then@1
))))
(let (($cascade_0_$1_$0 (=> (and true
  )
    anon74_Then
)))
(let ((anon0@49 (=> (and true
    (forall( (|lk#_1187| ref))(!(and (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ Heap |lk#_1187| rdheld) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ Heap@23 |lk#_1187| rdheld)) (= (< 0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap |lk#_1187| held)) (< 0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@23 |lk#_1187| held))))  :pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@23 |lk#_1187| held)) :pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ Heap@23 |lk#_1187| rdheld))))
  )
    (and $cascade_0_$1_$0 anon73_Then)
)))
(let ((anon0@48 (=> (and true
    (forall( (|ch| ref))(or (= null |ch|) (<= 0 (MapRead$$@Map@@ref@To@Int@@$ Credits@1 |ch|))))
  )(and 
    anon0@48_assertion
    anon0@49
))))
(let ((anon0@47 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1177@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state) perm$R))
    (= exhaleMask@_1177@8 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1177@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1177@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1177@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state) perm$R) (Fractions 100)))))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1177@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1177@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state) perm$N)))
    (IsGoodMask Mask@23)
    (wf Heap@23 exhaleMask@_1177@8)
    (wf Heap@23 exhaleMask@_1177@8)
    (wf Heap@23 Mask@23)
  )(and 
    anon0@47_assertion
    anon0@48
))))
(let ((anon0@46 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon0@46_assertion
    anon0@47
))))
(let ((anon0@45 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1177@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state) perm$R))
    (= exhaleMask@_1177@7 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1177@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1177@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1177@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state) perm$R) (Fractions 100)))))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1177@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ exhaleMask@_1177@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state) perm$N)))
    (IsGoodMask Mask@23)
    (wf Heap@23 exhaleMask@_1177@7)
    (wf Heap@23 Mask@23)
  )(and 
    anon0@45_assertion
    anon0@46
))))
(let ((anon0@44 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon0@44_assertion
    anon0@45
))))
(let ((anon0@43 (=> (and true
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1177@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid) perm$R))
    (= exhaleMask@_1177@6 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1177@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1177@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1177@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid) perm$R) (Fractions 100)))))
    (=> (= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1177@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ exhaleMask@_1177@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid) perm$N)))
    (IsGoodMask Mask@23)
    (wf Heap@23 exhaleMask@_1177@6)
    (wf Heap@23 Mask@23)
  )(and 
    anon0@43_assertion
    anon0@44
))))
(let ((anon0@42 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon0@42_assertion
    anon0@43
))))
(let ((anon0@41 (=> (and true
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1177@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.exp) perm$R))
    (= exhaleMask@_1177@5 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1177@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.exp (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1177@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.exp) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1177@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.exp) perm$R) monitorK))))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1177@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.exp) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1177@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.exp) perm$N)))
    (IsGoodMask Mask@23)
    (wf Heap@23 exhaleMask@_1177@5)
    (wf Heap@23 Mask@23)
  )(and 
    anon0@41_assertion
    anon0@42
))))
(let ((anon0@40 (=> (and true
    (> monitorK 0)
  )(and 
    anon0@40_assertion
    anon0@41
))))
(let ((anon0@39 (=> (and true
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1177@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) perm$R))
    (= exhaleMask@_1177@4 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1177@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1177@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1177@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) perm$R) monitorK))))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1177@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1177@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) perm$N)))
    (IsGoodMask Mask@23)
    (wf Heap@23 exhaleMask@_1177@4)
    (wf Heap@23 Mask@23)
  )(and 
    anon0@39_assertion
    anon0@40
))))
(let ((anon0@38 (=> (and true
    (> monitorK 0)
  )(and 
    anon0@38_assertion
    anon0@39
))))
(let ((anon0@37 (=> (and true
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ exhaleMask@_1177@2 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu) perm$R))
    (= exhaleMask@_1177@3 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ exhaleMask@_1177@2 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ exhaleMask@_1177@2 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ exhaleMask@_1177@2 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu) perm$R) monitorK))))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ exhaleMask@_1177@2 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ exhaleMask@_1177@2 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu) perm$N)))
    (IsGoodMask Mask@23)
    (wf Heap@23 exhaleMask@_1177@3)
    (wf Heap@23 Mask@23)
  )(and 
    anon0@37_assertion
    anon0@38
))))
(let ((anon0@36 (=> (and true
    (> monitorK 0)
  )(and 
    anon0@36_assertion
    anon0@37
))))
(let ((anon0@35 (=> (and true
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1177@1 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) perm$R))
    (= exhaleMask@_1177@2 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1177@1 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1177@1 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1177@1 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) perm$R) monitorK))))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1177@1 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1177@1 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) perm$N)))
    (IsGoodMask Mask@23)
    (wf Heap@23 exhaleMask@_1177@2)
    (wf Heap@23 Mask@23)
  )(and 
    anon0@35_assertion
    anon0@36
))))
(let ((anon0@34 (=> (and true
    (> monitorK 0)
  )(and 
    anon0@34_assertion
    anon0@35
))))
(let ((anon0@33 (=> (and true
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1177@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) perm$R))
    (= exhaleMask@_1177@1 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1177@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1177@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1177@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) perm$R) monitorK))))
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1177@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1177@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) perm$N)))
    (IsGoodMask Mask@23)
    (wf Heap@23 exhaleMask@_1177@1)
    (wf Heap@23 Mask@23)
  )(and 
    anon0@33_assertion
    anon0@34
))))
(let ((anon0@32 (=> (and true
    (> monitorK 0)
  )(and 
    anon0@32_assertion
    anon0@33
))))
(let ((anon0@31 (=> (and true
    (<= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@23 this FactorialActor.q) perm$R))
    (= (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@23 this FactorialActor.q (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@23 this FactorialActor.q) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@23 this FactorialActor.q) perm$R) monitorK))) exhaleMask@_1177@0)
    (=> (= monitorK (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@23 this FactorialActor.q) perm$R)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@23 this FactorialActor.q) perm$N)))
    (IsGoodMask Mask@23)
    (wf Heap@23 exhaleMask@_1177@0)
    (wf Heap@23 Mask@23)
  )(and 
    anon0@31_assertion
    anon0@32
))))
(let ((anon0@30 (=> (and true
    (> monitorK 0)
  )(and 
    anon0@30_assertion
    anon0@31
))))
(let ((anon0@29 (=> (and true
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state) 0)
    (= Credits@1 (MapWrite$$@Map@@ref@To@Int@@$ Credits@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) (- (MapRead$$@Map@@ref@To@Int@@$ Credits@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)) 1)))
  )(and 
    anon0@29_assertion
    anon0@30
))))
(let ((anon0@28 (=> (and true
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state) 0)
  )(and 
    anon0@28_assertion
    anon0@29
))))
(let ((anon0@27 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.exp)))
  )(and 
    anon0@27_assertion
    anon0@28
))))
(let ((anon0@26 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)))
  )(and 
    anon0@26_assertion
    anon0@27
))))
(let ((anon0@25 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp)))
  )(and 
    anon0@25_assertion
    anon0@26
))))
(let ((anon0@24 (=> (and true
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch))
  )(and 
    anon0@24_assertion
    anon0@25
))))
(let ((anon0@23 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q)))
  )(and 
    anon0@23_assertion
    anon0@24
))))
(let ((anon0@22 (=> (and true
    (< (* 1000 whileK@_1176) (Fractions 1))
    (< (* 1000 whileK@_1176) methodK@_1151)
    (< 0 whileK@_1176)
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@21 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@21 this FactorialActor.q) FactorialActorChannel.initExpState) perm$R))
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state) 0)
    (= (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@21 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@21 this FactorialActor.q) FactorialActorChannel.initExpState (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@21 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@21 this FactorialActor.q) FactorialActorChannel.initExpState) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@21 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@21 this FactorialActor.q) FactorialActorChannel.initExpState) perm$R) (Fractions 100)))) exhaleMask@_1167@0)
    (= Heap@22 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@21 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@21 this FactorialActor.q) FactorialActorChannel.exp (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1169@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@21 this FactorialActor.q) FactorialActorChannel.exp)))
    (= Heap@23 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@22 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@22 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@22 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1169@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@22 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@22 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state)))
    (= inhaleHeap@_1169@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Heap@21 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@21 this FactorialActor.q) FactorialActorChannel.initExpState))
    (= Mask@22 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1167@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@22 this FactorialActor.q) FactorialActorChannel.exp (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1167@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@22 this FactorialActor.q) FactorialActorChannel.exp) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1167@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@22 this FactorialActor.q) FactorialActorChannel.exp) perm$R) monitorK))))
    (= Mask@23 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@22 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@22 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@22 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state) perm$R) (Fractions 100)))))
    (=> (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@21 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@21 this FactorialActor.q) FactorialActorChannel.initExpState) perm$R) (Fractions 100)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@21 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@21 this FactorialActor.q) FactorialActorChannel.initExpState) perm$N)))
    (> (Fractions 100) 0)
    (> monitorK 0)
    (IsGoodInhaleState inhaleHeap@_1169@0 Heap@21 exhaleMask@_1167@0)
    (IsGoodMask Mask@21)
    (IsGoodMask Mask@22)
    (IsGoodMask Mask@23)
    (IsGoodMask Mask@23)
    (IsGoodState$Int$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1169@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@23 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.state))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1169@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@22 this FactorialActor.q) FactorialActorChannel.exp))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@21 this FactorialActor.q)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@22 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@22 this FactorialActor.q) FactorialActorChannel.exp)))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@22 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@22 this FactorialActor.q) FactorialActorChannel.exp)) (= FactorialActorChannelExpEP@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@22 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@22 this FactorialActor.q) FactorialActorChannel.exp))))
    (wf Heap@21 exhaleMask@_1167@0)
    (wf Heap@21 exhaleMask@_1167@0)
    (wf Heap@21 Mask@21)
    (wf Heap@22 exhaleMask@_1167@0)
    (wf Heap@22 Mask@22)
    (wf Heap@23 Mask@22)
    (wf Heap@23 Mask@23)
    (wf Heap@23 Mask@23)
    (wf inhaleHeap@_1169@0 Mask@22)
    (wf inhaleHeap@_1169@0 Mask@23)
  )(and 
    anon0@22_assertion
    anon0@23
))))
(let ((anon0@21 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon0@21_assertion
    anon0@22
))))
(let ((anon0@20 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@21 this FactorialActor.q)))
  )(and 
    anon0@20_assertion
    anon0@21
))))
(let ((anon0@19 (=> (and true
    (CanRead$ref$ Mask@21 this FactorialActor.q)
  )(and 
    anon0@19_assertion
    anon0@20
))))
(let ((anon0@18 (=> (and true
    (not (= this null))
  )(and 
    anon0@18_assertion
    anon0@19
))))
(let ((anon0@17 (=> (and true
    (< (* 1000 unfoldK@_1166) methodK@_1151)
    (< 0 unfoldK@_1166)
    (< unfoldK@_1166 (Fractions 1))
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@19 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@19 this FactorialActor.q) FactorialActorChannel.initImpState) perm$R))
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@21 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@21 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@21 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state) 0)
    (= (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@19 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@19 this FactorialActor.q) FactorialActorChannel.initImpState (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@19 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@19 this FactorialActor.q) FactorialActorChannel.initImpState) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@19 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@19 this FactorialActor.q) FactorialActorChannel.initImpState) perm$R) (Fractions 100)))) exhaleMask@_1163@0)
    (= Heap@20 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@19 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@19 this FactorialActor.q) FactorialActorChannel.imp (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1165@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@19 this FactorialActor.q) FactorialActorChannel.imp)))
    (= Heap@21 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ Heap@20 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@20 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@20 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1165@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@20 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@20 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state)))
    (= inhaleHeap@_1165@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Heap@19 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@19 this FactorialActor.q) FactorialActorChannel.initImpState))
    (= Mask@20 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1163@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@20 this FactorialActor.q) FactorialActorChannel.imp (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1163@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@20 this FactorialActor.q) FactorialActorChannel.imp) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1163@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@20 this FactorialActor.q) FactorialActorChannel.imp) perm$R) monitorK))))
    (= Mask@21 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@20 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@21 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@21 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@20 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@21 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@21 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ Mask@20 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@21 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@21 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state) perm$R) (Fractions 100)))))
    (=> (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@19 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@19 this FactorialActor.q) FactorialActorChannel.initImpState) perm$R) (Fractions 100)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@19 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@19 this FactorialActor.q) FactorialActorChannel.initImpState) perm$N)))
    (> (Fractions 100) 0)
    (> monitorK 0)
    (IsGoodInhaleState inhaleHeap@_1165@0 Heap@19 exhaleMask@_1163@0)
    (IsGoodMask Mask@19)
    (IsGoodMask Mask@20)
    (IsGoodMask Mask@21)
    (IsGoodMask Mask@21)
    (IsGoodState$Int$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ inhaleHeap@_1165@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@21 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@21 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.state))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1165@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@20 this FactorialActor.q) FactorialActorChannel.imp))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@19 this FactorialActor.q)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@20 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@20 this FactorialActor.q) FactorialActorChannel.imp)))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@20 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@20 this FactorialActor.q) FactorialActorChannel.imp)) (= FactorialActorChannelImpEP@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@20 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@20 this FactorialActor.q) FactorialActorChannel.imp))))
    (wf Heap@19 exhaleMask@_1163@0)
    (wf Heap@19 exhaleMask@_1163@0)
    (wf Heap@19 Mask@19)
    (wf Heap@20 exhaleMask@_1163@0)
    (wf Heap@20 Mask@20)
    (wf Heap@21 Mask@20)
    (wf Heap@21 Mask@21)
    (wf Heap@21 Mask@21)
    (wf inhaleHeap@_1165@0 Mask@20)
    (wf inhaleHeap@_1165@0 Mask@21)
  )(and 
    anon0@17_assertion
    anon0@18
))))
(let ((anon0@16 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon0@16_assertion
    anon0@17
))))
(let ((anon0@15 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@19 this FactorialActor.q)))
  )(and 
    anon0@15_assertion
    anon0@16
))))
(let ((anon0@14 (=> (and true
    (CanRead$ref$ Mask@19 this FactorialActor.q)
  )(and 
    anon0@14_assertion
    anon0@15
))))
(let ((anon0@13 (=> (and true
    (not (= this null))
  )(and 
    anon0@13_assertion
    anon0@14
))))
(let ((anon0@12 (=> (and true
    (< (* 1000 unfoldK@_1162) methodK@_1151)
    (< 0 unfoldK@_1162)
    (< unfoldK@_1162 (Fractions 1))
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.valid) perm$R))
    (= (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.valid (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.valid) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.valid) perm$R) (Fractions 100)))) exhaleMask@_1159@0)
    (= Heap@12 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1161@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)))
    (= Heap@13 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@12 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@12 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@12 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1161@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@12 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@12 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch)))
    (= Heap@14 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@13 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@13 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@13 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@13 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.imp (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1161@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@13 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@13 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@13 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.imp)))
    (= Heap@15 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@14 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@14 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@14 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@14 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.exp (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1161@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@14 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@14 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@14 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.exp)))
    (= Heap@16 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@15 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@15 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@15 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@15 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@15 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1161@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@15 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@15 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@15 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@15 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)))
    (= Heap@17 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.exp) FactorialActorChannelExpEP.expch (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1161@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.exp) FactorialActorChannelExpEP.expch)))
    (= Heap@18 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ Heap@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ inhaleHeap@_1161@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu)))
    (= Heap@19 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ Heap@18 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@18 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@18 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@18 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@18 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@18 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.exp) FactorialActorChannelExpEP.expch) mu (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ inhaleHeap@_1161@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@18 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@18 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@18 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@18 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@18 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.exp) FactorialActorChannelExpEP.expch) mu)))
    (= inhaleHeap@_1161@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Heap@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.valid))
    (= Mask@12 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1159@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@12 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@12 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1159@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@12 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@12 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1159@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@12 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@12 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) perm$R) monitorK))))
    (= Mask@13 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@12 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@13 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@13 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@12 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@13 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@13 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@12 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@13 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@13 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) perm$R) monitorK))))
    (= Mask@14 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@13 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@14 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@14 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@14 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.imp (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@13 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@14 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@14 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@14 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.imp) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@13 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@14 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@14 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@14 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.imp) perm$R) monitorK))))
    (= Mask@15 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@14 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@15 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@15 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@15 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.exp (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@14 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@15 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@15 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@15 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.exp) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@14 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@15 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@15 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@15 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.exp) perm$R) monitorK))))
    (= Mask@16 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@15 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@15 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@15 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) perm$R) monitorK))))
    (= Mask@17 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@16 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.exp) FactorialActorChannelExpEP.expch (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@16 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.exp) FactorialActorChannelExpEP.expch) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@16 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.exp) FactorialActorChannelExpEP.expch) perm$R) monitorK))))
    (= Mask@18 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@18 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@18 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@18 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@18 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@18 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@18 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@18 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@18 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@18 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@18 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@18 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@18 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@18 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@18 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@18 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu) perm$R) monitorK))))
    (= Mask@19 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@18 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@19 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@19 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@19 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@19 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@19 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.exp) FactorialActorChannelExpEP.expch) mu (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@18 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@19 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@19 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@19 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@19 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@19 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.exp) FactorialActorChannelExpEP.expch) mu) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ Mask@18 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@19 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@19 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@19 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@19 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@19 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.exp) FactorialActorChannelExpEP.expch) mu) perm$R) monitorK))))
    (=> (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.valid) perm$R) (Fractions 100)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.valid) perm$N)))
    (> monitorK 0)
    (> monitorK 0)
    (> monitorK 0)
    (> monitorK 0)
    (> monitorK 0)
    (> monitorK 0)
    (> monitorK 0)
    (> monitorK 0)
    (IsGoodInhaleState inhaleHeap@_1161@0 Heap@11 exhaleMask@_1159@0)
    (IsGoodMask Mask@11)
    (IsGoodMask Mask@12)
    (IsGoodMask Mask@13)
    (IsGoodMask Mask@14)
    (IsGoodMask Mask@15)
    (IsGoodMask Mask@16)
    (IsGoodMask Mask@17)
    (IsGoodMask Mask@18)
    (IsGoodMask Mask@19)
    (IsGoodMask Mask@19)
    (IsGoodState$Mu$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ inhaleHeap@_1161@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@18 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@18 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@18 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@18 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@18 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) mu))
    (IsGoodState$Mu$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ inhaleHeap@_1161@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@19 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@19 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@19 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@19 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@19 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.exp) FactorialActorChannelExpEP.expch) mu))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1161@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@12 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@12 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1161@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@13 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@13 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1161@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@14 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@14 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@14 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.imp))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1161@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@15 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@15 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@15 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.exp))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1161@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1161@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.exp) FactorialActorChannelExpEP.expch))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 this FactorialActor.q) FactorialActorChannel.imp)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@12 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@12 this FactorialActor.q) FactorialActorChannel.imp)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@13 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@13 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@13 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@13 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@13 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@13 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@14 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@14 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@14 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@14 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.imp)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@14 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@14 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@14 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@15 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@15 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@15 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@15 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.exp)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@15 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@15 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@15 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@15 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.imp)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.exp)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.exp) FactorialActorChannelExpEP.expch)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@18 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@18 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@18 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@18 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@18 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.exp) FactorialActorChannelExpEP.expch)))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@12 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@12 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@12 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)) (= (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@12 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@12 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@12 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)) Channel@t))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@13 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@13 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@13 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch)) (= FactorialActorChannel@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@13 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@13 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@13 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch))))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@14 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@14 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@14 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@14 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.imp)) (= FactorialActorChannelImpEP@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@14 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@14 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@14 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@14 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.imp))))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@15 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@15 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@15 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@15 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.exp)) (= FactorialActorChannelExpEP@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@15 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@15 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@15 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@15 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.exp))))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)) (= (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@16 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)) Channel@t))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.exp) FactorialActorChannelExpEP.expch)) (= (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@17 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) FactorialActorChannel.exp) FactorialActorChannelExpEP.expch)) Channel@t))
    (wf Heap@11 exhaleMask@_1159@0)
    (wf Heap@11 exhaleMask@_1159@0)
    (wf Heap@11 Mask@11)
    (wf Heap@12 exhaleMask@_1159@0)
    (wf Heap@12 Mask@12)
    (wf Heap@13 Mask@12)
    (wf Heap@13 Mask@13)
    (wf Heap@14 Mask@13)
    (wf Heap@14 Mask@14)
    (wf Heap@15 Mask@14)
    (wf Heap@15 Mask@15)
    (wf Heap@16 Mask@15)
    (wf Heap@16 Mask@16)
    (wf Heap@17 Mask@16)
    (wf Heap@17 Mask@17)
    (wf Heap@18 Mask@17)
    (wf Heap@18 Mask@18)
    (wf Heap@19 Mask@18)
    (wf Heap@19 Mask@19)
    (wf Heap@19 Mask@19)
    (wf inhaleHeap@_1161@0 Mask@12)
    (wf inhaleHeap@_1161@0 Mask@13)
    (wf inhaleHeap@_1161@0 Mask@14)
    (wf inhaleHeap@_1161@0 Mask@15)
    (wf inhaleHeap@_1161@0 Mask@16)
    (wf inhaleHeap@_1161@0 Mask@17)
    (wf inhaleHeap@_1161@0 Mask@18)
    (wf inhaleHeap@_1161@0 Mask@19)
  )(and 
    anon0@12_assertion
    anon0@13
))))
(let ((anon0@11 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon0@11_assertion
    anon0@12
))))
(let ((anon0@10 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 this FactorialActor.q) FactorialActorChannel.imp)))
  )(and 
    anon0@10_assertion
    anon0@11
))))
(let ((anon0@9 (=> (and true
    (CanRead$ref$ Mask@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 this FactorialActor.q) FactorialActorChannel.imp)
  )(and 
    anon0@9_assertion
    anon0@10
))))
(let ((anon0@8 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 this FactorialActor.q)))
  )(and 
    anon0@8_assertion
    anon0@9
))))
(let ((anon0@7 (=> (and true
    (CanRead$ref$ Mask@11 this FactorialActor.q)
  )(and 
    anon0@7_assertion
    anon0@8
))))
(let ((anon0@6 (=> (and true
    (not (= this null))
  )(and 
    anon0@6_assertion
    anon0@7
))))
(let ((anon0@5 (=> (and true
    (< (* 1000 unfoldK@_1158) methodK@_1151)
    (< 0 unfoldK@_1158)
    (< unfoldK@_1158 (Fractions 1))
    (<= (Fractions 100) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 this FactorialActor.q) FactorialActorChannel.valid) perm$R))
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1157@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@10 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@10 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.valid) Heap@10)
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1157@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid) Heap@11)
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 this FactorialActor.q) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.ch))
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 this FactorialActor.q) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch))
    (= (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 this FactorialActor.q) FactorialActorChannel.valid (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 this FactorialActor.q) FactorialActorChannel.valid) perm$R (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 this FactorialActor.q) FactorialActorChannel.valid) perm$R) (Fractions 100)))) exhaleMask@_1155@0)
    (= (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@9 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@10 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@10 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.valid (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@9 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@10 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@10 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.valid) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@9 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@10 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@10 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.valid) perm$R) (Fractions 100)))) Mask@10)
    (= (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Heap@9 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@9 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@9 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.valid (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1157@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@9 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@9 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.valid)) Heap@10)
    (= Heap@11 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Heap@10 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@10 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@10 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1157@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@10 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@10 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid)))
    (= Heap@6 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 this FactorialActor.q) FactorialActorChannel.imp (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1157@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 this FactorialActor.q) FactorialActorChannel.imp)))
    (= Heap@7 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@6 this FactorialActor.q) FactorialActorChannel.exp (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1157@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@6 this FactorialActor.q) FactorialActorChannel.exp)))
    (= Heap@8 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@7 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1157@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@7 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch)))
    (= Heap@9 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@8 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@8 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@8 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.ch (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1157@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@8 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@8 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.ch)))
    (= inhaleHeap@_1157@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Heap@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 this FactorialActor.q) FactorialActorChannel.valid))
    (= Mask@11 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@10 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@10 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@10 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid) perm$R) (Fractions 100)))))
    (= Mask@6 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1155@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@6 this FactorialActor.q) FactorialActorChannel.imp (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1155@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@6 this FactorialActor.q) FactorialActorChannel.imp) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ exhaleMask@_1155@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@6 this FactorialActor.q) FactorialActorChannel.imp) perm$R) monitorK))))
    (= Mask@7 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@7 this FactorialActor.q) FactorialActorChannel.exp (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@7 this FactorialActor.q) FactorialActorChannel.exp) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@7 this FactorialActor.q) FactorialActorChannel.exp) perm$R) monitorK))))
    (= Mask@8 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@8 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@8 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@8 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@8 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@8 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@8 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch) perm$R) monitorK))))
    (= Mask@9 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@8 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@9 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@9 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.ch (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@8 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@9 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@9 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.ch) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@8 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@9 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@9 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.ch) perm$R) monitorK))))
    (=> (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 this FactorialActor.q) FactorialActorChannel.valid) perm$R) (Fractions 100)) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 this FactorialActor.q) FactorialActorChannel.valid) perm$N)))
    (> (Fractions 100) 0)
    (> (Fractions 100) 0)
    (> monitorK 0)
    (> monitorK 0)
    (> monitorK 0)
    (> monitorK 0)
    (IsGoodInhaleState inhaleHeap@_1157@0 Heap@5 exhaleMask@_1155@0)
    (IsGoodMask Mask@10)
    (IsGoodMask Mask@11)
    (IsGoodMask Mask@11)
    (IsGoodMask Mask@5)
    (IsGoodMask Mask@6)
    (IsGoodMask Mask@7)
    (IsGoodMask Mask@8)
    (IsGoodMask Mask@9)
    (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1157@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@10 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@10 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.valid))
    (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1157@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@11 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.valid))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1157@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@6 this FactorialActor.q) FactorialActorChannel.imp))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1157@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@7 this FactorialActor.q) FactorialActorChannel.exp))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1157@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@8 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@8 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1157@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@9 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@9 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.ch))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@10 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@10 this FactorialActor.q) FactorialActorChannel.exp)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 this FactorialActor.q)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@6 this FactorialActor.q)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@7 this FactorialActor.q) FactorialActorChannel.imp)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@8 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@8 this FactorialActor.q) FactorialActorChannel.exp)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@9 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@9 this FactorialActor.q) FactorialActorChannel.exp)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@9 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@9 this FactorialActor.q) FactorialActorChannel.imp)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@9 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@9 this FactorialActor.q) FactorialActorChannel.imp)))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@6 this FactorialActor.q) FactorialActorChannel.imp)) (= FactorialActorChannelImpEP@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@6 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@6 this FactorialActor.q) FactorialActorChannel.imp))))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@7 this FactorialActor.q) FactorialActorChannel.exp)) (= FactorialActorChannelExpEP@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@7 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@7 this FactorialActor.q) FactorialActorChannel.exp))))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@8 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@8 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@8 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch)) (= FactorialActorChannel@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@8 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@8 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@8 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.ch))))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@9 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@9 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@9 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.ch)) (= FactorialActorChannel@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@9 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@9 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@9 this FactorialActor.q) FactorialActorChannel.exp) FactorialActorChannelExpEP.ch))))
    (wf Heap@10 Mask@10)
    (wf Heap@10 Mask@9)
    (wf Heap@11 Mask@10)
    (wf Heap@11 Mask@11)
    (wf Heap@11 Mask@11)
    (wf Heap@5 exhaleMask@_1155@0)
    (wf Heap@5 exhaleMask@_1155@0)
    (wf Heap@5 Mask@5)
    (wf Heap@6 exhaleMask@_1155@0)
    (wf Heap@6 Mask@6)
    (wf Heap@7 Mask@6)
    (wf Heap@7 Mask@7)
    (wf Heap@8 Mask@7)
    (wf Heap@8 Mask@8)
    (wf Heap@9 Mask@8)
    (wf Heap@9 Mask@9)
    (wf inhaleHeap@_1157@0 Mask@10)
    (wf inhaleHeap@_1157@0 Mask@11)
    (wf inhaleHeap@_1157@0 Mask@6)
    (wf inhaleHeap@_1157@0 Mask@7)
    (wf inhaleHeap@_1157@0 Mask@8)
    (wf inhaleHeap@_1157@0 Mask@9)
  )(and 
    anon0@5_assertion
    anon0@6
))))
(let ((anon0@4 (=> (and true
    (> (Fractions 100) 0)
  )(and 
    anon0@4_assertion
    anon0@5
))))
(let ((anon0@3 (=> (and true
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 this FactorialActor.q)))
  )(and 
    anon0@3_assertion
    anon0@4
))))
(let ((anon0@2 (=> (and true
    (CanRead$ref$ Mask@5 this FactorialActor.q)
  )(and 
    anon0@2_assertion
    anon0@3
))))
(let ((anon0@1 (=> (and true
    (not (= this null))
  )(and 
    anon0@1_assertion
    anon0@2
))))
(let ((anon0 (=> (and true
    (< (* 1000 methodK@_1151) (Fractions 1))
    (< (* 1000 unfoldK@_1154) methodK@_1151)
    (< 0 methodK@_1151)
    (< 0 unfoldK@_1154)
    (< unfoldK@_1154 (Fractions 1))
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1153@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@1 this FactorialActor.q) FactorialActorChannel.valid) Heap@1)
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1153@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@2 this FactorialActor.q) FactorialActorChannel.initImpState) Heap@2)
    (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1153@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@3 this FactorialActor.q) FactorialActorChannel.initExpState) Heap@3)
    (= (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ ZeroMask this FactorialActor.q (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ ZeroMask this FactorialActor.q) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ ZeroMask this FactorialActor.q) perm$R) monitorK))) Mask@0)
    (= (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap this FactorialActor.q (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1153@0 this FactorialActor.q)) Heap@0)
    (= (MapWrite$$@Map@@ref@To@Int@@$ ZeroCredits (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) (+ (MapRead$$@Map@@ref@To@Int@@$ ZeroCredits (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)) 1)) Credits@0)
    (= Credits@0 Credits)
    (= Heap@1 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Heap@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@0 this FactorialActor.q) FactorialActorChannel.valid (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1153@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@0 this FactorialActor.q) FactorialActorChannel.valid)))
    (= Heap@2 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Heap@1 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@1 this FactorialActor.q) FactorialActorChannel.initImpState (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1153@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@1 this FactorialActor.q) FactorialActorChannel.initImpState)))
    (= Heap@3 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Heap@2 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@2 this FactorialActor.q) FactorialActorChannel.initExpState (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1153@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@2 this FactorialActor.q) FactorialActorChannel.initExpState)))
    (= Heap@4 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@3 this FactorialActor.q) FactorialActorChannel.imp (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1153@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@3 this FactorialActor.q) FactorialActorChannel.imp)))
    (= Heap@5 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@4 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1153@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@4 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)))
    (= Heap@5 Heap)
    (= Mask@1 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@1 this FactorialActor.q) FactorialActorChannel.valid (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@1 this FactorialActor.q) FactorialActorChannel.valid) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@1 this FactorialActor.q) FactorialActorChannel.valid) perm$R) (Fractions 100)))))
    (= Mask@2 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@1 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@2 this FactorialActor.q) FactorialActorChannel.initImpState (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@1 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@2 this FactorialActor.q) FactorialActorChannel.initImpState) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@1 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@2 this FactorialActor.q) FactorialActorChannel.initImpState) perm$R) (Fractions 100)))))
    (= Mask@3 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@2 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@3 this FactorialActor.q) FactorialActorChannel.initExpState (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@2 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@3 this FactorialActor.q) FactorialActorChannel.initExpState) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Mask@2 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@3 this FactorialActor.q) FactorialActorChannel.initExpState) perm$R) (Fractions 100)))))
    (= Mask@4 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@4 this FactorialActor.q) FactorialActorChannel.imp (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@4 this FactorialActor.q) FactorialActorChannel.imp) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@3 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@4 this FactorialActor.q) FactorialActorChannel.imp) perm$R) monitorK))))
    (= Mask@5 (MapWrite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch (MapWrite$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) perm$R (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ Mask@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch) perm$R) monitorK))))
    (= Mask@5 Mask)
    (= module@default CurrentModule)
    (> (Fractions 100) 0)
    (> (Fractions 100) 0)
    (> (Fractions 100) 0)
    (> monitorK 0)
    (> monitorK 0)
    (> monitorK 0)
    (IsGoodInhaleState inhaleHeap@_1153@0 Heap ZeroMask)
    (IsGoodMask Mask@0)
    (IsGoodMask Mask@1)
    (IsGoodMask Mask@2)
    (IsGoodMask Mask@3)
    (IsGoodMask Mask@4)
    (IsGoodMask Mask@5)
    (IsGoodMask Mask@5)
    (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1153@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@1 this FactorialActor.q) FactorialActorChannel.valid))
    (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1153@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@2 this FactorialActor.q) FactorialActorChannel.initImpState))
    (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ inhaleHeap@_1153@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@3 this FactorialActor.q) FactorialActorChannel.initExpState))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1153@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@4 this FactorialActor.q) FactorialActorChannel.imp))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1153@0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch))
    (IsGoodState$ref$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ inhaleHeap@_1153@0 this FactorialActor.q))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@0 this FactorialActor.q)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@0 this FactorialActor.q)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@1 this FactorialActor.q)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@2 this FactorialActor.q)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@3 this FactorialActor.q)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@4 this FactorialActor.q) FactorialActorChannel.imp)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@4 this FactorialActor.q) FactorialActorChannel.imp)))
    (not (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)))
    (not (= this null))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@0 this FactorialActor.q)) (= FactorialActorChannel@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@0 this FactorialActor.q))))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@4 this FactorialActor.q) FactorialActorChannel.imp)) (= FactorialActorChannelImpEP@t (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@4 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@4 this FactorialActor.q) FactorialActorChannel.imp))))
    (or (= null (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)) (= (dtype (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ Heap@5 this FactorialActor.q) FactorialActorChannel.imp) FactorialActorChannelImpEP.impch)) Channel@t))
    (wf Heap@0 Mask@0)
    (wf Heap@0 ZeroMask)
    (wf Heap@1 Mask@0)
    (wf Heap@1 Mask@1)
    (wf Heap@2 Mask@1)
    (wf Heap@2 Mask@2)
    (wf Heap@3 Mask@2)
    (wf Heap@3 Mask@3)
    (wf Heap@4 Mask@3)
    (wf Heap@4 Mask@4)
    (wf Heap@5 Mask@4)
    (wf Heap@5 Mask@5)
    (wf Heap@5 Mask@5)
    (wf inhaleHeap@_1153@0 Mask@0)
    (wf inhaleHeap@_1153@0 Mask@1)
    (wf inhaleHeap@_1153@0 Mask@2)
    (wf inhaleHeap@_1153@0 Mask@3)
    (wf inhaleHeap@_1153@0 Mask@4)
    (wf inhaleHeap@_1153@0 Mask@5)
    CanAssumeFunctionDefs
  )(and 
    anon0_assertion
    anon0@1
))))
(let ((PreconditionGeneratedEntry (=> (and true
    (IsGoodMask Mask)
    (not (= this null))
    (or (= null cont@75) (= FactorialCont@t (dtype cont@75)))
    (or (= null current@67) (= Message@t (dtype current@67)))
    (or (= null cust@151) (= FactorialCont@t (dtype cust@151)))
    (or (= null custp@146) (= FactorialCont@t (dtype custp@146)))
    (or (= null m@136) (= Message@t (dtype m@136)))
    (or (= null m@142) (= Message@t (dtype m@142)))
    (or (= null m@154) (= Message@t (dtype m@154)))
    (or (= null m@69) (= Message@t (dtype m@69)))
    (or (= null m@71) (= Message@t (dtype m@71)))
    (or (= null m@77) (= Message@t (dtype m@77)))
    (or (= null mi@130) (= Message@t (dtype mi@130)))
    (or (= null mo@131) (= Message@t (dtype mo@131)))
    (or (= null msg@128) (= Message@t (dtype msg@128)))
    (or (= oldv@139 null) (= FactorialActor@t (dtype oldv@139)))
    (or (= r@73 null) (= Message@t (dtype r@73)))
    (or (= r@79 null) (= Message@t (dtype r@79)))
    (or (= receiver@134 null) (= Future@t (dtype receiver@134)))
    (or (= receiver@140 null) (= FactorialCont@t (dtype receiver@140)))
    (or (= receiver@152 null) (= FactorialActor@t (dtype receiver@152)))
    (or (= this null) (= FactorialActor@t (dtype this)))
    (or (= this@127 null) (= (dtype this@127) Channel@t))
    (or (= this@129 null) (= FactorialActorChannelImpEP@t (dtype this@129)))
    (or (= this@132 null) (= Message@t (dtype this@132)))
    (or (= this@135 null) (= FutureChannelExpEP@t (dtype this@135)))
    (or (= this@137 null) (= Message@t (dtype this@137)))
    (or (= this@141 null) (= FactorialContChannelExpEP@t (dtype this@141)))
    (or (= this@143 null) (= FactorialCont@t (dtype this@143)))
    (or (= this@147 null) (= FactorialCont@t (dtype this@147)))
    (or (= this@148 null) (= Message@t (dtype this@148)))
    (or (= this@153 null) (= FactorialActorChannelExpEP@t (dtype this@153)))
    (wf Heap Mask)
  )
    anon0
)))
(let (($start (=> (and true
    (< (* 1000 channelK) (Fractions 1))
    (< (* 1000 monitorK) (Fractions 1))
    (< (* 1000 predicateK) (Fractions 1))
    (< 0 channelK)
    (< 0 monitorK)
    (< 0 predicateK)
    (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ Permission$Full perm$N) 0)
    (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ Permission$Zero perm$N) 0)
    (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ Permission$Zero perm$R) 0)
    (= monitorK channelK)
    (= Permission$FullFraction (Fractions 100))
    (= Permission$FullFraction (MapRead$$@Map@@PermissionComponent@To@Int@@$ Permission$Full perm$R))
    (= predicateK channelK)
    (> Permission$denominator 0)
    (forall( (|a_$10| Bool) (|b_$10| Field$Mu$))(!(= (IsGoodState$Bool$ (combine$Bool$Field$Mu$$ |a_$10| |b_$10|)) (and (IsGoodState$Field$Mu$$ |b_$10|) (IsGoodState$Bool$ |a_$10|)))  :pattern ( (IsGoodState$Bool$ (combine$Bool$Field$Mu$$ |a_$10| |b_$10|)))))
    (forall( (|a_$100| ref) (|b_$100| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(!(= (IsGoodState$ref$ (combine$ref$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$100| |b_$100|)) (and (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |b_$100|) (IsGoodState$ref$ |a_$100|)))  :pattern ( (IsGoodState$ref$ (combine$ref$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$100| |b_$100|)))))
    (forall( (|a_$101| ref) (|b_$101| ModuleName))(!(= (IsGoodState$ref$ (combine$ref$ModuleName$ |a_$101| |b_$101|)) (and (IsGoodState$ModuleName$ |b_$101|) (IsGoodState$ref$ |a_$101|)))  :pattern ( (IsGoodState$ref$ (combine$ref$ModuleName$ |a_$101| |b_$101|)))))
    (forall( (|a_$102| ref) (|b_$102| TypeName))(!(= (IsGoodState$ref$ (combine$ref$TypeName$ |a_$102| |b_$102|)) (and (IsGoodState$TypeName$ |b_$102|) (IsGoodState$ref$ |a_$102|)))  :pattern ( (IsGoodState$ref$ (combine$ref$TypeName$ |a_$102| |b_$102|)))))
    (forall( (|a_$103| ref) (|b_$103| $@Map@@$T0@@Int@To@$T0@@))(!(= (IsGoodState$ref$ (combine$ref$$@Map@@$T0@@Int@To@$T0@@$ |a_$103| |b_$103|)) (and (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ |b_$103|) (IsGoodState$ref$ |a_$103|)))  :pattern ( (IsGoodState$ref$ (combine$ref$$@Map@@$T0@@Int@To@$T0@@$ |a_$103| |b_$103|)))))
    (forall( (|a_$104| Field$Int$) (|b_$104| Bool))(!(= (IsGoodState$Field$Int$$ (combine$Field$Int$$Bool$ |a_$104| |b_$104|)) (and (IsGoodState$Bool$ |b_$104|) (IsGoodState$Field$Int$$ |a_$104|)))  :pattern ( (IsGoodState$Field$Int$$ (combine$Field$Int$$Bool$ |a_$104| |b_$104|)))))
    (forall( (|a_$105| Field$Int$) (|b_$105| Int))(!(= (IsGoodState$Field$Int$$ (combine$Field$Int$$Int$ |a_$105| |b_$105|)) (and (IsGoodState$Int$ |b_$105|) (IsGoodState$Field$Int$$ |a_$105|)))  :pattern ( (IsGoodState$Field$Int$$ (combine$Field$Int$$Int$ |a_$105| |b_$105|)))))
    (forall( (|a_$106| Field$Int$) (|b_$106| $@Map@@PermissionComponent@To@Int@@))(!(= (IsGoodState$Field$Int$$ (combine$Field$Int$$$@Map@@PermissionComponent@To@Int@@$ |a_$106| |b_$106|)) (and (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ |b_$106|) (IsGoodState$Field$Int$$ |a_$106|)))  :pattern ( (IsGoodState$Field$Int$$ (combine$Field$Int$$$@Map@@PermissionComponent@To@Int@@$ |a_$106| |b_$106|)))))
    (forall( (|a_$107| Field$Int$) (|b_$107| PermissionComponent))(!(= (IsGoodState$Field$Int$$ (combine$Field$Int$$PermissionComponent$ |a_$107| |b_$107|)) (and (IsGoodState$PermissionComponent$ |b_$107|) (IsGoodState$Field$Int$$ |a_$107|)))  :pattern ( (IsGoodState$Field$Int$$ (combine$Field$Int$$PermissionComponent$ |a_$107| |b_$107|)))))
    (forall( (|a_$108| Field$Int$) (|b_$108| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@))(!(= (IsGoodState$Field$Int$$ (combine$Field$Int$$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$108| |b_$108|)) (and (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |b_$108|) (IsGoodState$Field$Int$$ |a_$108|)))  :pattern ( (IsGoodState$Field$Int$$ (combine$Field$Int$$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$108| |b_$108|)))))
    (forall( (|a_$109| Field$Int$) (|b_$109| ref))(!(= (IsGoodState$Field$Int$$ (combine$Field$Int$$ref$ |a_$109| |b_$109|)) (and (IsGoodState$ref$ |b_$109|) (IsGoodState$Field$Int$$ |a_$109|)))  :pattern ( (IsGoodState$Field$Int$$ (combine$Field$Int$$ref$ |a_$109| |b_$109|)))))
    (forall( (|a_$11| Bool) (|b_$11| Mu))(!(= (IsGoodState$Bool$ (combine$Bool$Mu$ |a_$11| |b_$11|)) (and (IsGoodState$Mu$ |b_$11|) (IsGoodState$Bool$ |a_$11|)))  :pattern ( (IsGoodState$Bool$ (combine$Bool$Mu$ |a_$11| |b_$11|)))))
    (forall( (|a_$110| Field$Int$) (|b_$110| Field$Int$))(!(= (IsGoodState$Field$Int$$ (combine$Field$Int$$Field$Int$$ |a_$110| |b_$110|)) (and (IsGoodState$Field$Int$$ |b_$110|) (IsGoodState$Field$Int$$ |a_$110|)))  :pattern ( (IsGoodState$Field$Int$$ (combine$Field$Int$$Field$Int$$ |a_$110| |b_$110|)))))
    (forall( (|a_$111| Field$Int$) (|b_$111| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@))(!(= (IsGoodState$Field$Int$$ (combine$Field$Int$$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$111| |b_$111|)) (and (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |b_$111|) (IsGoodState$Field$Int$$ |a_$111|)))  :pattern ( (IsGoodState$Field$Int$$ (combine$Field$Int$$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$111| |b_$111|)))))
    (forall( (|a_$112| Field$Int$) (|b_$112| Field$Mu$))(!(= (IsGoodState$Field$Int$$ (combine$Field$Int$$Field$Mu$$ |a_$112| |b_$112|)) (and (IsGoodState$Field$Mu$$ |b_$112|) (IsGoodState$Field$Int$$ |a_$112|)))  :pattern ( (IsGoodState$Field$Int$$ (combine$Field$Int$$Field$Mu$$ |a_$112| |b_$112|)))))
    (forall( (|a_$113| Field$Int$) (|b_$113| Mu))(!(= (IsGoodState$Field$Int$$ (combine$Field$Int$$Mu$ |a_$113| |b_$113|)) (and (IsGoodState$Mu$ |b_$113|) (IsGoodState$Field$Int$$ |a_$113|)))  :pattern ( (IsGoodState$Field$Int$$ (combine$Field$Int$$Mu$ |a_$113| |b_$113|)))))
    (forall( (|a_$114| Field$Int$) (|b_$114| Field$Bool$))(!(= (IsGoodState$Field$Int$$ (combine$Field$Int$$Field$Bool$$ |a_$114| |b_$114|)) (and (IsGoodState$Field$Bool$$ |b_$114|) (IsGoodState$Field$Int$$ |a_$114|)))  :pattern ( (IsGoodState$Field$Int$$ (combine$Field$Int$$Field$Bool$$ |a_$114| |b_$114|)))))
    (forall( (|a_$115| Field$Int$) (|b_$115| $@Map@@ref@To@Int@@))(!(= (IsGoodState$Field$Int$$ (combine$Field$Int$$$@Map@@ref@To@Int@@$ |a_$115| |b_$115|)) (and (IsGoodState$$@Map@@ref@To@Int@@$ |b_$115|) (IsGoodState$Field$Int$$ |a_$115|)))  :pattern ( (IsGoodState$Field$Int$$ (combine$Field$Int$$$@Map@@ref@To@Int@@$ |a_$115| |b_$115|)))))
    (forall( (|a_$116| Field$Int$) (|b_$116| Field$ref$))(!(= (IsGoodState$Field$Int$$ (combine$Field$Int$$Field$ref$$ |a_$116| |b_$116|)) (and (IsGoodState$Field$ref$$ |b_$116|) (IsGoodState$Field$Int$$ |a_$116|)))  :pattern ( (IsGoodState$Field$Int$$ (combine$Field$Int$$Field$ref$$ |a_$116| |b_$116|)))))
    (forall( (|a_$117| Field$Int$) (|b_$117| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(!(= (IsGoodState$Field$Int$$ (combine$Field$Int$$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$117| |b_$117|)) (and (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |b_$117|) (IsGoodState$Field$Int$$ |a_$117|)))  :pattern ( (IsGoodState$Field$Int$$ (combine$Field$Int$$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$117| |b_$117|)))))
    (forall( (|a_$118| Field$Int$) (|b_$118| ModuleName))(!(= (IsGoodState$Field$Int$$ (combine$Field$Int$$ModuleName$ |a_$118| |b_$118|)) (and (IsGoodState$ModuleName$ |b_$118|) (IsGoodState$Field$Int$$ |a_$118|)))  :pattern ( (IsGoodState$Field$Int$$ (combine$Field$Int$$ModuleName$ |a_$118| |b_$118|)))))
    (forall( (|a_$119| Field$Int$) (|b_$119| TypeName))(!(= (IsGoodState$Field$Int$$ (combine$Field$Int$$TypeName$ |a_$119| |b_$119|)) (and (IsGoodState$TypeName$ |b_$119|) (IsGoodState$Field$Int$$ |a_$119|)))  :pattern ( (IsGoodState$Field$Int$$ (combine$Field$Int$$TypeName$ |a_$119| |b_$119|)))))
    (forall( (|a_$12| Bool) (|b_$12| Field$Bool$))(!(= (IsGoodState$Bool$ (combine$Bool$Field$Bool$$ |a_$12| |b_$12|)) (and (IsGoodState$Field$Bool$$ |b_$12|) (IsGoodState$Bool$ |a_$12|)))  :pattern ( (IsGoodState$Bool$ (combine$Bool$Field$Bool$$ |a_$12| |b_$12|)))))
    (forall( (|a_$120| Field$Int$) (|b_$120| $@Map@@$T0@@Int@To@$T0@@))(!(= (IsGoodState$Field$Int$$ (combine$Field$Int$$$@Map@@$T0@@Int@To@$T0@@$ |a_$120| |b_$120|)) (and (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ |b_$120|) (IsGoodState$Field$Int$$ |a_$120|)))  :pattern ( (IsGoodState$Field$Int$$ (combine$Field$Int$$$@Map@@$T0@@Int@To@$T0@@$ |a_$120| |b_$120|)))))
    (forall( (|a_$121| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@) (|b_$121| Bool))(!(= (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ |a_$121| |b_$121|)) (and (IsGoodState$Bool$ |b_$121|) (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$121|)))  :pattern ( (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ |a_$121| |b_$121|)))))
    (forall( (|a_$122| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@) (|b_$122| Int))(!(= (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ |a_$122| |b_$122|)) (and (IsGoodState$Int$ |b_$122|) (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$122|)))  :pattern ( (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ |a_$122| |b_$122|)))))
    (forall( (|a_$123| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@) (|b_$123| $@Map@@PermissionComponent@To@Int@@))(!(= (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@PermissionComponent@To@Int@@$ |a_$123| |b_$123|)) (and (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ |b_$123|) (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$123|)))  :pattern ( (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@PermissionComponent@To@Int@@$ |a_$123| |b_$123|)))))
    (forall( (|a_$124| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@) (|b_$124| PermissionComponent))(!(= (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$PermissionComponent$ |a_$124| |b_$124|)) (and (IsGoodState$PermissionComponent$ |b_$124|) (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$124|)))  :pattern ( (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$PermissionComponent$ |a_$124| |b_$124|)))))
    (forall( (|a_$125| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@) (|b_$125| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@))(!(= (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$125| |b_$125|)) (and (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |b_$125|) (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$125|)))  :pattern ( (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$125| |b_$125|)))))
    (forall( (|a_$126| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@) (|b_$126| ref))(!(= (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ |a_$126| |b_$126|)) (and (IsGoodState$ref$ |b_$126|) (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$126|)))  :pattern ( (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ |a_$126| |b_$126|)))))
    (forall( (|a_$127| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@) (|b_$127| Field$Int$))(!(= (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Field$Int$$ |a_$127| |b_$127|)) (and (IsGoodState$Field$Int$$ |b_$127|) (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$127|)))  :pattern ( (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Field$Int$$ |a_$127| |b_$127|)))))
    (forall( (|a_$128| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@) (|b_$128| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@))(!(= (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$128| |b_$128|)) (and (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |b_$128|) (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$128|)))  :pattern ( (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$128| |b_$128|)))))
    (forall( (|a_$129| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@) (|b_$129| Field$Mu$))(!(= (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Field$Mu$$ |a_$129| |b_$129|)) (and (IsGoodState$Field$Mu$$ |b_$129|) (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$129|)))  :pattern ( (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Field$Mu$$ |a_$129| |b_$129|)))))
    (forall( (|a_$13| Bool) (|b_$13| $@Map@@ref@To@Int@@))(!(= (IsGoodState$Bool$ (combine$Bool$$@Map@@ref@To@Int@@$ |a_$13| |b_$13|)) (and (IsGoodState$$@Map@@ref@To@Int@@$ |b_$13|) (IsGoodState$Bool$ |a_$13|)))  :pattern ( (IsGoodState$Bool$ (combine$Bool$$@Map@@ref@To@Int@@$ |a_$13| |b_$13|)))))
    (forall( (|a_$130| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@) (|b_$130| Mu))(!(= (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ |a_$130| |b_$130|)) (and (IsGoodState$Mu$ |b_$130|) (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$130|)))  :pattern ( (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ |a_$130| |b_$130|)))))
    (forall( (|a_$131| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@) (|b_$131| Field$Bool$))(!(= (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Field$Bool$$ |a_$131| |b_$131|)) (and (IsGoodState$Field$Bool$$ |b_$131|) (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$131|)))  :pattern ( (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Field$Bool$$ |a_$131| |b_$131|)))))
    (forall( (|a_$132| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@) (|b_$132| $@Map@@ref@To@Int@@))(!(= (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@ref@To@Int@@$ |a_$132| |b_$132|)) (and (IsGoodState$$@Map@@ref@To@Int@@$ |b_$132|) (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$132|)))  :pattern ( (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@ref@To@Int@@$ |a_$132| |b_$132|)))))
    (forall( (|a_$133| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@) (|b_$133| Field$ref$))(!(= (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Field$ref$$ |a_$133| |b_$133|)) (and (IsGoodState$Field$ref$$ |b_$133|) (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$133|)))  :pattern ( (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Field$ref$$ |a_$133| |b_$133|)))))
    (forall( (|a_$134| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@) (|b_$134| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(!(= (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$134| |b_$134|)) (and (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |b_$134|) (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$134|)))  :pattern ( (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$134| |b_$134|)))))
    (forall( (|a_$135| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@) (|b_$135| ModuleName))(!(= (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ModuleName$ |a_$135| |b_$135|)) (and (IsGoodState$ModuleName$ |b_$135|) (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$135|)))  :pattern ( (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ModuleName$ |a_$135| |b_$135|)))))
    (forall( (|a_$136| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@) (|b_$136| TypeName))(!(= (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$TypeName$ |a_$136| |b_$136|)) (and (IsGoodState$TypeName$ |b_$136|) (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$136|)))  :pattern ( (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$TypeName$ |a_$136| |b_$136|)))))
    (forall( (|a_$137| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@) (|b_$137| $@Map@@$T0@@Int@To@$T0@@))(!(= (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@Int@To@$T0@@$ |a_$137| |b_$137|)) (and (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ |b_$137|) (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$137|)))  :pattern ( (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@Int@To@$T0@@$ |a_$137| |b_$137|)))))
    (forall( (|a_$138| Field$Mu$) (|b_$138| Bool))(!(= (IsGoodState$Field$Mu$$ (combine$Field$Mu$$Bool$ |a_$138| |b_$138|)) (and (IsGoodState$Bool$ |b_$138|) (IsGoodState$Field$Mu$$ |a_$138|)))  :pattern ( (IsGoodState$Field$Mu$$ (combine$Field$Mu$$Bool$ |a_$138| |b_$138|)))))
    (forall( (|a_$139| Field$Mu$) (|b_$139| Int))(!(= (IsGoodState$Field$Mu$$ (combine$Field$Mu$$Int$ |a_$139| |b_$139|)) (and (IsGoodState$Int$ |b_$139|) (IsGoodState$Field$Mu$$ |a_$139|)))  :pattern ( (IsGoodState$Field$Mu$$ (combine$Field$Mu$$Int$ |a_$139| |b_$139|)))))
    (forall( (|a_$14| Bool) (|b_$14| Field$ref$))(!(= (IsGoodState$Bool$ (combine$Bool$Field$ref$$ |a_$14| |b_$14|)) (and (IsGoodState$Field$ref$$ |b_$14|) (IsGoodState$Bool$ |a_$14|)))  :pattern ( (IsGoodState$Bool$ (combine$Bool$Field$ref$$ |a_$14| |b_$14|)))))
    (forall( (|a_$140| Field$Mu$) (|b_$140| $@Map@@PermissionComponent@To@Int@@))(!(= (IsGoodState$Field$Mu$$ (combine$Field$Mu$$$@Map@@PermissionComponent@To@Int@@$ |a_$140| |b_$140|)) (and (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ |b_$140|) (IsGoodState$Field$Mu$$ |a_$140|)))  :pattern ( (IsGoodState$Field$Mu$$ (combine$Field$Mu$$$@Map@@PermissionComponent@To@Int@@$ |a_$140| |b_$140|)))))
    (forall( (|a_$141| Field$Mu$) (|b_$141| PermissionComponent))(!(= (IsGoodState$Field$Mu$$ (combine$Field$Mu$$PermissionComponent$ |a_$141| |b_$141|)) (and (IsGoodState$PermissionComponent$ |b_$141|) (IsGoodState$Field$Mu$$ |a_$141|)))  :pattern ( (IsGoodState$Field$Mu$$ (combine$Field$Mu$$PermissionComponent$ |a_$141| |b_$141|)))))
    (forall( (|a_$142| Field$Mu$) (|b_$142| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@))(!(= (IsGoodState$Field$Mu$$ (combine$Field$Mu$$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$142| |b_$142|)) (and (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |b_$142|) (IsGoodState$Field$Mu$$ |a_$142|)))  :pattern ( (IsGoodState$Field$Mu$$ (combine$Field$Mu$$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$142| |b_$142|)))))
    (forall( (|a_$143| Field$Mu$) (|b_$143| ref))(!(= (IsGoodState$Field$Mu$$ (combine$Field$Mu$$ref$ |a_$143| |b_$143|)) (and (IsGoodState$ref$ |b_$143|) (IsGoodState$Field$Mu$$ |a_$143|)))  :pattern ( (IsGoodState$Field$Mu$$ (combine$Field$Mu$$ref$ |a_$143| |b_$143|)))))
    (forall( (|a_$144| Field$Mu$) (|b_$144| Field$Int$))(!(= (IsGoodState$Field$Mu$$ (combine$Field$Mu$$Field$Int$$ |a_$144| |b_$144|)) (and (IsGoodState$Field$Int$$ |b_$144|) (IsGoodState$Field$Mu$$ |a_$144|)))  :pattern ( (IsGoodState$Field$Mu$$ (combine$Field$Mu$$Field$Int$$ |a_$144| |b_$144|)))))
    (forall( (|a_$145| Field$Mu$) (|b_$145| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@))(!(= (IsGoodState$Field$Mu$$ (combine$Field$Mu$$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$145| |b_$145|)) (and (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |b_$145|) (IsGoodState$Field$Mu$$ |a_$145|)))  :pattern ( (IsGoodState$Field$Mu$$ (combine$Field$Mu$$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$145| |b_$145|)))))
    (forall( (|a_$146| Field$Mu$) (|b_$146| Field$Mu$))(!(= (IsGoodState$Field$Mu$$ (combine$Field$Mu$$Field$Mu$$ |a_$146| |b_$146|)) (and (IsGoodState$Field$Mu$$ |b_$146|) (IsGoodState$Field$Mu$$ |a_$146|)))  :pattern ( (IsGoodState$Field$Mu$$ (combine$Field$Mu$$Field$Mu$$ |a_$146| |b_$146|)))))
    (forall( (|a_$147| Field$Mu$) (|b_$147| Mu))(!(= (IsGoodState$Field$Mu$$ (combine$Field$Mu$$Mu$ |a_$147| |b_$147|)) (and (IsGoodState$Mu$ |b_$147|) (IsGoodState$Field$Mu$$ |a_$147|)))  :pattern ( (IsGoodState$Field$Mu$$ (combine$Field$Mu$$Mu$ |a_$147| |b_$147|)))))
    (forall( (|a_$148| Field$Mu$) (|b_$148| Field$Bool$))(!(= (IsGoodState$Field$Mu$$ (combine$Field$Mu$$Field$Bool$$ |a_$148| |b_$148|)) (and (IsGoodState$Field$Bool$$ |b_$148|) (IsGoodState$Field$Mu$$ |a_$148|)))  :pattern ( (IsGoodState$Field$Mu$$ (combine$Field$Mu$$Field$Bool$$ |a_$148| |b_$148|)))))
    (forall( (|a_$149| Field$Mu$) (|b_$149| $@Map@@ref@To@Int@@))(!(= (IsGoodState$Field$Mu$$ (combine$Field$Mu$$$@Map@@ref@To@Int@@$ |a_$149| |b_$149|)) (and (IsGoodState$$@Map@@ref@To@Int@@$ |b_$149|) (IsGoodState$Field$Mu$$ |a_$149|)))  :pattern ( (IsGoodState$Field$Mu$$ (combine$Field$Mu$$$@Map@@ref@To@Int@@$ |a_$149| |b_$149|)))))
    (forall( (|a_$15| Bool) (|b_$15| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(!(= (IsGoodState$Bool$ (combine$Bool$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$15| |b_$15|)) (and (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |b_$15|) (IsGoodState$Bool$ |a_$15|)))  :pattern ( (IsGoodState$Bool$ (combine$Bool$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$15| |b_$15|)))))
    (forall( (|a_$150| Field$Mu$) (|b_$150| Field$ref$))(!(= (IsGoodState$Field$Mu$$ (combine$Field$Mu$$Field$ref$$ |a_$150| |b_$150|)) (and (IsGoodState$Field$ref$$ |b_$150|) (IsGoodState$Field$Mu$$ |a_$150|)))  :pattern ( (IsGoodState$Field$Mu$$ (combine$Field$Mu$$Field$ref$$ |a_$150| |b_$150|)))))
    (forall( (|a_$151| Field$Mu$) (|b_$151| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(!(= (IsGoodState$Field$Mu$$ (combine$Field$Mu$$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$151| |b_$151|)) (and (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |b_$151|) (IsGoodState$Field$Mu$$ |a_$151|)))  :pattern ( (IsGoodState$Field$Mu$$ (combine$Field$Mu$$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$151| |b_$151|)))))
    (forall( (|a_$152| Field$Mu$) (|b_$152| ModuleName))(!(= (IsGoodState$Field$Mu$$ (combine$Field$Mu$$ModuleName$ |a_$152| |b_$152|)) (and (IsGoodState$ModuleName$ |b_$152|) (IsGoodState$Field$Mu$$ |a_$152|)))  :pattern ( (IsGoodState$Field$Mu$$ (combine$Field$Mu$$ModuleName$ |a_$152| |b_$152|)))))
    (forall( (|a_$153| Field$Mu$) (|b_$153| TypeName))(!(= (IsGoodState$Field$Mu$$ (combine$Field$Mu$$TypeName$ |a_$153| |b_$153|)) (and (IsGoodState$TypeName$ |b_$153|) (IsGoodState$Field$Mu$$ |a_$153|)))  :pattern ( (IsGoodState$Field$Mu$$ (combine$Field$Mu$$TypeName$ |a_$153| |b_$153|)))))
    (forall( (|a_$154| Field$Mu$) (|b_$154| $@Map@@$T0@@Int@To@$T0@@))(!(= (IsGoodState$Field$Mu$$ (combine$Field$Mu$$$@Map@@$T0@@Int@To@$T0@@$ |a_$154| |b_$154|)) (and (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ |b_$154|) (IsGoodState$Field$Mu$$ |a_$154|)))  :pattern ( (IsGoodState$Field$Mu$$ (combine$Field$Mu$$$@Map@@$T0@@Int@To@$T0@@$ |a_$154| |b_$154|)))))
    (forall( (|a_$155| Mu) (|b_$155| Bool))(!(= (IsGoodState$Mu$ (combine$Mu$Bool$ |a_$155| |b_$155|)) (and (IsGoodState$Bool$ |b_$155|) (IsGoodState$Mu$ |a_$155|)))  :pattern ( (IsGoodState$Mu$ (combine$Mu$Bool$ |a_$155| |b_$155|)))))
    (forall( (|a_$156| Mu) (|b_$156| Int))(!(= (IsGoodState$Mu$ (combine$Mu$Int$ |a_$156| |b_$156|)) (and (IsGoodState$Int$ |b_$156|) (IsGoodState$Mu$ |a_$156|)))  :pattern ( (IsGoodState$Mu$ (combine$Mu$Int$ |a_$156| |b_$156|)))))
    (forall( (|a_$157| Mu) (|b_$157| $@Map@@PermissionComponent@To@Int@@))(!(= (IsGoodState$Mu$ (combine$Mu$$@Map@@PermissionComponent@To@Int@@$ |a_$157| |b_$157|)) (and (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ |b_$157|) (IsGoodState$Mu$ |a_$157|)))  :pattern ( (IsGoodState$Mu$ (combine$Mu$$@Map@@PermissionComponent@To@Int@@$ |a_$157| |b_$157|)))))
    (forall( (|a_$158| Mu) (|b_$158| PermissionComponent))(!(= (IsGoodState$Mu$ (combine$Mu$PermissionComponent$ |a_$158| |b_$158|)) (and (IsGoodState$PermissionComponent$ |b_$158|) (IsGoodState$Mu$ |a_$158|)))  :pattern ( (IsGoodState$Mu$ (combine$Mu$PermissionComponent$ |a_$158| |b_$158|)))))
    (forall( (|a_$159| Mu) (|b_$159| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@))(!(= (IsGoodState$Mu$ (combine$Mu$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$159| |b_$159|)) (and (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |b_$159|) (IsGoodState$Mu$ |a_$159|)))  :pattern ( (IsGoodState$Mu$ (combine$Mu$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$159| |b_$159|)))))
    (forall( (|a_$16| Bool) (|b_$16| ModuleName))(!(= (IsGoodState$Bool$ (combine$Bool$ModuleName$ |a_$16| |b_$16|)) (and (IsGoodState$ModuleName$ |b_$16|) (IsGoodState$Bool$ |a_$16|)))  :pattern ( (IsGoodState$Bool$ (combine$Bool$ModuleName$ |a_$16| |b_$16|)))))
    (forall( (|a_$160| Mu) (|b_$160| ref))(!(= (IsGoodState$Mu$ (combine$Mu$ref$ |a_$160| |b_$160|)) (and (IsGoodState$ref$ |b_$160|) (IsGoodState$Mu$ |a_$160|)))  :pattern ( (IsGoodState$Mu$ (combine$Mu$ref$ |a_$160| |b_$160|)))))
    (forall( (|a_$161| Mu) (|b_$161| Field$Int$))(!(= (IsGoodState$Mu$ (combine$Mu$Field$Int$$ |a_$161| |b_$161|)) (and (IsGoodState$Field$Int$$ |b_$161|) (IsGoodState$Mu$ |a_$161|)))  :pattern ( (IsGoodState$Mu$ (combine$Mu$Field$Int$$ |a_$161| |b_$161|)))))
    (forall( (|a_$162| Mu) (|b_$162| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@))(!(= (IsGoodState$Mu$ (combine$Mu$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$162| |b_$162|)) (and (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |b_$162|) (IsGoodState$Mu$ |a_$162|)))  :pattern ( (IsGoodState$Mu$ (combine$Mu$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$162| |b_$162|)))))
    (forall( (|a_$163| Mu) (|b_$163| Field$Mu$))(!(= (IsGoodState$Mu$ (combine$Mu$Field$Mu$$ |a_$163| |b_$163|)) (and (IsGoodState$Field$Mu$$ |b_$163|) (IsGoodState$Mu$ |a_$163|)))  :pattern ( (IsGoodState$Mu$ (combine$Mu$Field$Mu$$ |a_$163| |b_$163|)))))
    (forall( (|a_$164| Mu) (|b_$164| Mu))(!(= (IsGoodState$Mu$ (combine$Mu$Mu$ |a_$164| |b_$164|)) (and (IsGoodState$Mu$ |b_$164|) (IsGoodState$Mu$ |a_$164|)))  :pattern ( (IsGoodState$Mu$ (combine$Mu$Mu$ |a_$164| |b_$164|)))))
    (forall( (|a_$165| Mu) (|b_$165| Field$Bool$))(!(= (IsGoodState$Mu$ (combine$Mu$Field$Bool$$ |a_$165| |b_$165|)) (and (IsGoodState$Field$Bool$$ |b_$165|) (IsGoodState$Mu$ |a_$165|)))  :pattern ( (IsGoodState$Mu$ (combine$Mu$Field$Bool$$ |a_$165| |b_$165|)))))
    (forall( (|a_$166| Mu) (|b_$166| $@Map@@ref@To@Int@@))(!(= (IsGoodState$Mu$ (combine$Mu$$@Map@@ref@To@Int@@$ |a_$166| |b_$166|)) (and (IsGoodState$$@Map@@ref@To@Int@@$ |b_$166|) (IsGoodState$Mu$ |a_$166|)))  :pattern ( (IsGoodState$Mu$ (combine$Mu$$@Map@@ref@To@Int@@$ |a_$166| |b_$166|)))))
    (forall( (|a_$167| Mu) (|b_$167| Field$ref$))(!(= (IsGoodState$Mu$ (combine$Mu$Field$ref$$ |a_$167| |b_$167|)) (and (IsGoodState$Field$ref$$ |b_$167|) (IsGoodState$Mu$ |a_$167|)))  :pattern ( (IsGoodState$Mu$ (combine$Mu$Field$ref$$ |a_$167| |b_$167|)))))
    (forall( (|a_$168| Mu) (|b_$168| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(!(= (IsGoodState$Mu$ (combine$Mu$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$168| |b_$168|)) (and (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |b_$168|) (IsGoodState$Mu$ |a_$168|)))  :pattern ( (IsGoodState$Mu$ (combine$Mu$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$168| |b_$168|)))))
    (forall( (|a_$169| Mu) (|b_$169| ModuleName))(!(= (IsGoodState$Mu$ (combine$Mu$ModuleName$ |a_$169| |b_$169|)) (and (IsGoodState$ModuleName$ |b_$169|) (IsGoodState$Mu$ |a_$169|)))  :pattern ( (IsGoodState$Mu$ (combine$Mu$ModuleName$ |a_$169| |b_$169|)))))
    (forall( (|a_$17| Bool) (|b_$17| TypeName))(!(= (IsGoodState$Bool$ (combine$Bool$TypeName$ |a_$17| |b_$17|)) (and (IsGoodState$TypeName$ |b_$17|) (IsGoodState$Bool$ |a_$17|)))  :pattern ( (IsGoodState$Bool$ (combine$Bool$TypeName$ |a_$17| |b_$17|)))))
    (forall( (|a_$170| Mu) (|b_$170| TypeName))(!(= (IsGoodState$Mu$ (combine$Mu$TypeName$ |a_$170| |b_$170|)) (and (IsGoodState$TypeName$ |b_$170|) (IsGoodState$Mu$ |a_$170|)))  :pattern ( (IsGoodState$Mu$ (combine$Mu$TypeName$ |a_$170| |b_$170|)))))
    (forall( (|a_$171| Mu) (|b_$171| $@Map@@$T0@@Int@To@$T0@@))(!(= (IsGoodState$Mu$ (combine$Mu$$@Map@@$T0@@Int@To@$T0@@$ |a_$171| |b_$171|)) (and (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ |b_$171|) (IsGoodState$Mu$ |a_$171|)))  :pattern ( (IsGoodState$Mu$ (combine$Mu$$@Map@@$T0@@Int@To@$T0@@$ |a_$171| |b_$171|)))))
    (forall( (|a_$172| Field$Bool$) (|b_$172| Bool))(!(= (IsGoodState$Field$Bool$$ (combine$Field$Bool$$Bool$ |a_$172| |b_$172|)) (and (IsGoodState$Bool$ |b_$172|) (IsGoodState$Field$Bool$$ |a_$172|)))  :pattern ( (IsGoodState$Field$Bool$$ (combine$Field$Bool$$Bool$ |a_$172| |b_$172|)))))
    (forall( (|a_$173| Field$Bool$) (|b_$173| Int))(!(= (IsGoodState$Field$Bool$$ (combine$Field$Bool$$Int$ |a_$173| |b_$173|)) (and (IsGoodState$Int$ |b_$173|) (IsGoodState$Field$Bool$$ |a_$173|)))  :pattern ( (IsGoodState$Field$Bool$$ (combine$Field$Bool$$Int$ |a_$173| |b_$173|)))))
    (forall( (|a_$174| Field$Bool$) (|b_$174| $@Map@@PermissionComponent@To@Int@@))(!(= (IsGoodState$Field$Bool$$ (combine$Field$Bool$$$@Map@@PermissionComponent@To@Int@@$ |a_$174| |b_$174|)) (and (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ |b_$174|) (IsGoodState$Field$Bool$$ |a_$174|)))  :pattern ( (IsGoodState$Field$Bool$$ (combine$Field$Bool$$$@Map@@PermissionComponent@To@Int@@$ |a_$174| |b_$174|)))))
    (forall( (|a_$175| Field$Bool$) (|b_$175| PermissionComponent))(!(= (IsGoodState$Field$Bool$$ (combine$Field$Bool$$PermissionComponent$ |a_$175| |b_$175|)) (and (IsGoodState$PermissionComponent$ |b_$175|) (IsGoodState$Field$Bool$$ |a_$175|)))  :pattern ( (IsGoodState$Field$Bool$$ (combine$Field$Bool$$PermissionComponent$ |a_$175| |b_$175|)))))
    (forall( (|a_$176| Field$Bool$) (|b_$176| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@))(!(= (IsGoodState$Field$Bool$$ (combine$Field$Bool$$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$176| |b_$176|)) (and (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |b_$176|) (IsGoodState$Field$Bool$$ |a_$176|)))  :pattern ( (IsGoodState$Field$Bool$$ (combine$Field$Bool$$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$176| |b_$176|)))))
    (forall( (|a_$177| Field$Bool$) (|b_$177| ref))(!(= (IsGoodState$Field$Bool$$ (combine$Field$Bool$$ref$ |a_$177| |b_$177|)) (and (IsGoodState$ref$ |b_$177|) (IsGoodState$Field$Bool$$ |a_$177|)))  :pattern ( (IsGoodState$Field$Bool$$ (combine$Field$Bool$$ref$ |a_$177| |b_$177|)))))
    (forall( (|a_$178| Field$Bool$) (|b_$178| Field$Int$))(!(= (IsGoodState$Field$Bool$$ (combine$Field$Bool$$Field$Int$$ |a_$178| |b_$178|)) (and (IsGoodState$Field$Int$$ |b_$178|) (IsGoodState$Field$Bool$$ |a_$178|)))  :pattern ( (IsGoodState$Field$Bool$$ (combine$Field$Bool$$Field$Int$$ |a_$178| |b_$178|)))))
    (forall( (|a_$179| Field$Bool$) (|b_$179| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@))(!(= (IsGoodState$Field$Bool$$ (combine$Field$Bool$$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$179| |b_$179|)) (and (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |b_$179|) (IsGoodState$Field$Bool$$ |a_$179|)))  :pattern ( (IsGoodState$Field$Bool$$ (combine$Field$Bool$$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$179| |b_$179|)))))
    (forall( (|a_$18| Bool) (|b_$18| $@Map@@$T0@@Int@To@$T0@@))(!(= (IsGoodState$Bool$ (combine$Bool$$@Map@@$T0@@Int@To@$T0@@$ |a_$18| |b_$18|)) (and (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ |b_$18|) (IsGoodState$Bool$ |a_$18|)))  :pattern ( (IsGoodState$Bool$ (combine$Bool$$@Map@@$T0@@Int@To@$T0@@$ |a_$18| |b_$18|)))))
    (forall( (|a_$180| Field$Bool$) (|b_$180| Field$Mu$))(!(= (IsGoodState$Field$Bool$$ (combine$Field$Bool$$Field$Mu$$ |a_$180| |b_$180|)) (and (IsGoodState$Field$Mu$$ |b_$180|) (IsGoodState$Field$Bool$$ |a_$180|)))  :pattern ( (IsGoodState$Field$Bool$$ (combine$Field$Bool$$Field$Mu$$ |a_$180| |b_$180|)))))
    (forall( (|a_$181| Field$Bool$) (|b_$181| Mu))(!(= (IsGoodState$Field$Bool$$ (combine$Field$Bool$$Mu$ |a_$181| |b_$181|)) (and (IsGoodState$Mu$ |b_$181|) (IsGoodState$Field$Bool$$ |a_$181|)))  :pattern ( (IsGoodState$Field$Bool$$ (combine$Field$Bool$$Mu$ |a_$181| |b_$181|)))))
    (forall( (|a_$182| Field$Bool$) (|b_$182| Field$Bool$))(!(= (IsGoodState$Field$Bool$$ (combine$Field$Bool$$Field$Bool$$ |a_$182| |b_$182|)) (and (IsGoodState$Field$Bool$$ |b_$182|) (IsGoodState$Field$Bool$$ |a_$182|)))  :pattern ( (IsGoodState$Field$Bool$$ (combine$Field$Bool$$Field$Bool$$ |a_$182| |b_$182|)))))
    (forall( (|a_$183| Field$Bool$) (|b_$183| $@Map@@ref@To@Int@@))(!(= (IsGoodState$Field$Bool$$ (combine$Field$Bool$$$@Map@@ref@To@Int@@$ |a_$183| |b_$183|)) (and (IsGoodState$$@Map@@ref@To@Int@@$ |b_$183|) (IsGoodState$Field$Bool$$ |a_$183|)))  :pattern ( (IsGoodState$Field$Bool$$ (combine$Field$Bool$$$@Map@@ref@To@Int@@$ |a_$183| |b_$183|)))))
    (forall( (|a_$184| Field$Bool$) (|b_$184| Field$ref$))(!(= (IsGoodState$Field$Bool$$ (combine$Field$Bool$$Field$ref$$ |a_$184| |b_$184|)) (and (IsGoodState$Field$ref$$ |b_$184|) (IsGoodState$Field$Bool$$ |a_$184|)))  :pattern ( (IsGoodState$Field$Bool$$ (combine$Field$Bool$$Field$ref$$ |a_$184| |b_$184|)))))
    (forall( (|a_$185| Field$Bool$) (|b_$185| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(!(= (IsGoodState$Field$Bool$$ (combine$Field$Bool$$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$185| |b_$185|)) (and (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |b_$185|) (IsGoodState$Field$Bool$$ |a_$185|)))  :pattern ( (IsGoodState$Field$Bool$$ (combine$Field$Bool$$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$185| |b_$185|)))))
    (forall( (|a_$186| Field$Bool$) (|b_$186| ModuleName))(!(= (IsGoodState$Field$Bool$$ (combine$Field$Bool$$ModuleName$ |a_$186| |b_$186|)) (and (IsGoodState$ModuleName$ |b_$186|) (IsGoodState$Field$Bool$$ |a_$186|)))  :pattern ( (IsGoodState$Field$Bool$$ (combine$Field$Bool$$ModuleName$ |a_$186| |b_$186|)))))
    (forall( (|a_$187| Field$Bool$) (|b_$187| TypeName))(!(= (IsGoodState$Field$Bool$$ (combine$Field$Bool$$TypeName$ |a_$187| |b_$187|)) (and (IsGoodState$TypeName$ |b_$187|) (IsGoodState$Field$Bool$$ |a_$187|)))  :pattern ( (IsGoodState$Field$Bool$$ (combine$Field$Bool$$TypeName$ |a_$187| |b_$187|)))))
    (forall( (|a_$188| Field$Bool$) (|b_$188| $@Map@@$T0@@Int@To@$T0@@))(!(= (IsGoodState$Field$Bool$$ (combine$Field$Bool$$$@Map@@$T0@@Int@To@$T0@@$ |a_$188| |b_$188|)) (and (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ |b_$188|) (IsGoodState$Field$Bool$$ |a_$188|)))  :pattern ( (IsGoodState$Field$Bool$$ (combine$Field$Bool$$$@Map@@$T0@@Int@To@$T0@@$ |a_$188| |b_$188|)))))
    (forall( (|a_$189| $@Map@@ref@To@Int@@) (|b_$189| Bool))(!(= (IsGoodState$$@Map@@ref@To@Int@@$ (combine$$@Map@@ref@To@Int@@$Bool$ |a_$189| |b_$189|)) (and (IsGoodState$Bool$ |b_$189|) (IsGoodState$$@Map@@ref@To@Int@@$ |a_$189|)))  :pattern ( (IsGoodState$$@Map@@ref@To@Int@@$ (combine$$@Map@@ref@To@Int@@$Bool$ |a_$189| |b_$189|)))))
    (forall( (|a_$19| Int) (|b_$19| Bool))(!(= (IsGoodState$Int$ (combine$Int$Bool$ |a_$19| |b_$19|)) (and (IsGoodState$Bool$ |b_$19|) (IsGoodState$Int$ |a_$19|)))  :pattern ( (IsGoodState$Int$ (combine$Int$Bool$ |a_$19| |b_$19|)))))
    (forall( (|a_$190| $@Map@@ref@To@Int@@) (|b_$190| Int))(!(= (IsGoodState$$@Map@@ref@To@Int@@$ (combine$$@Map@@ref@To@Int@@$Int$ |a_$190| |b_$190|)) (and (IsGoodState$Int$ |b_$190|) (IsGoodState$$@Map@@ref@To@Int@@$ |a_$190|)))  :pattern ( (IsGoodState$$@Map@@ref@To@Int@@$ (combine$$@Map@@ref@To@Int@@$Int$ |a_$190| |b_$190|)))))
    (forall( (|a_$191| $@Map@@ref@To@Int@@) (|b_$191| $@Map@@PermissionComponent@To@Int@@))(!(= (IsGoodState$$@Map@@ref@To@Int@@$ (combine$$@Map@@ref@To@Int@@$$@Map@@PermissionComponent@To@Int@@$ |a_$191| |b_$191|)) (and (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ |b_$191|) (IsGoodState$$@Map@@ref@To@Int@@$ |a_$191|)))  :pattern ( (IsGoodState$$@Map@@ref@To@Int@@$ (combine$$@Map@@ref@To@Int@@$$@Map@@PermissionComponent@To@Int@@$ |a_$191| |b_$191|)))))
    (forall( (|a_$192| $@Map@@ref@To@Int@@) (|b_$192| PermissionComponent))(!(= (IsGoodState$$@Map@@ref@To@Int@@$ (combine$$@Map@@ref@To@Int@@$PermissionComponent$ |a_$192| |b_$192|)) (and (IsGoodState$PermissionComponent$ |b_$192|) (IsGoodState$$@Map@@ref@To@Int@@$ |a_$192|)))  :pattern ( (IsGoodState$$@Map@@ref@To@Int@@$ (combine$$@Map@@ref@To@Int@@$PermissionComponent$ |a_$192| |b_$192|)))))
    (forall( (|a_$193| $@Map@@ref@To@Int@@) (|b_$193| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@))(!(= (IsGoodState$$@Map@@ref@To@Int@@$ (combine$$@Map@@ref@To@Int@@$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$193| |b_$193|)) (and (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |b_$193|) (IsGoodState$$@Map@@ref@To@Int@@$ |a_$193|)))  :pattern ( (IsGoodState$$@Map@@ref@To@Int@@$ (combine$$@Map@@ref@To@Int@@$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$193| |b_$193|)))))
    (forall( (|a_$194| $@Map@@ref@To@Int@@) (|b_$194| ref))(!(= (IsGoodState$$@Map@@ref@To@Int@@$ (combine$$@Map@@ref@To@Int@@$ref$ |a_$194| |b_$194|)) (and (IsGoodState$ref$ |b_$194|) (IsGoodState$$@Map@@ref@To@Int@@$ |a_$194|)))  :pattern ( (IsGoodState$$@Map@@ref@To@Int@@$ (combine$$@Map@@ref@To@Int@@$ref$ |a_$194| |b_$194|)))))
    (forall( (|a_$195| $@Map@@ref@To@Int@@) (|b_$195| Field$Int$))(!(= (IsGoodState$$@Map@@ref@To@Int@@$ (combine$$@Map@@ref@To@Int@@$Field$Int$$ |a_$195| |b_$195|)) (and (IsGoodState$Field$Int$$ |b_$195|) (IsGoodState$$@Map@@ref@To@Int@@$ |a_$195|)))  :pattern ( (IsGoodState$$@Map@@ref@To@Int@@$ (combine$$@Map@@ref@To@Int@@$Field$Int$$ |a_$195| |b_$195|)))))
    (forall( (|a_$196| $@Map@@ref@To@Int@@) (|b_$196| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@))(!(= (IsGoodState$$@Map@@ref@To@Int@@$ (combine$$@Map@@ref@To@Int@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$196| |b_$196|)) (and (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |b_$196|) (IsGoodState$$@Map@@ref@To@Int@@$ |a_$196|)))  :pattern ( (IsGoodState$$@Map@@ref@To@Int@@$ (combine$$@Map@@ref@To@Int@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$196| |b_$196|)))))
    (forall( (|a_$197| $@Map@@ref@To@Int@@) (|b_$197| Field$Mu$))(!(= (IsGoodState$$@Map@@ref@To@Int@@$ (combine$$@Map@@ref@To@Int@@$Field$Mu$$ |a_$197| |b_$197|)) (and (IsGoodState$Field$Mu$$ |b_$197|) (IsGoodState$$@Map@@ref@To@Int@@$ |a_$197|)))  :pattern ( (IsGoodState$$@Map@@ref@To@Int@@$ (combine$$@Map@@ref@To@Int@@$Field$Mu$$ |a_$197| |b_$197|)))))
    (forall( (|a_$198| $@Map@@ref@To@Int@@) (|b_$198| Mu))(!(= (IsGoodState$$@Map@@ref@To@Int@@$ (combine$$@Map@@ref@To@Int@@$Mu$ |a_$198| |b_$198|)) (and (IsGoodState$Mu$ |b_$198|) (IsGoodState$$@Map@@ref@To@Int@@$ |a_$198|)))  :pattern ( (IsGoodState$$@Map@@ref@To@Int@@$ (combine$$@Map@@ref@To@Int@@$Mu$ |a_$198| |b_$198|)))))
    (forall( (|a_$199| $@Map@@ref@To@Int@@) (|b_$199| Field$Bool$))(!(= (IsGoodState$$@Map@@ref@To@Int@@$ (combine$$@Map@@ref@To@Int@@$Field$Bool$$ |a_$199| |b_$199|)) (and (IsGoodState$Field$Bool$$ |b_$199|) (IsGoodState$$@Map@@ref@To@Int@@$ |a_$199|)))  :pattern ( (IsGoodState$$@Map@@ref@To@Int@@$ (combine$$@Map@@ref@To@Int@@$Field$Bool$$ |a_$199| |b_$199|)))))
    (forall( (|a_$2| Bool) (|b_$2| Bool))(!(= (IsGoodState$Bool$ (combine$Bool$Bool$ |a_$2| |b_$2|)) (and (IsGoodState$Bool$ |b_$2|) (IsGoodState$Bool$ |a_$2|)))  :pattern ( (IsGoodState$Bool$ (combine$Bool$Bool$ |a_$2| |b_$2|)))))
    (forall( (|a_$20| Int) (|b_$20| Int))(!(= (IsGoodState$Int$ (combine$Int$Int$ |a_$20| |b_$20|)) (and (IsGoodState$Int$ |b_$20|) (IsGoodState$Int$ |a_$20|)))  :pattern ( (IsGoodState$Int$ (combine$Int$Int$ |a_$20| |b_$20|)))))
    (forall( (|a_$200| $@Map@@ref@To@Int@@) (|b_$200| $@Map@@ref@To@Int@@))(!(= (IsGoodState$$@Map@@ref@To@Int@@$ (combine$$@Map@@ref@To@Int@@$$@Map@@ref@To@Int@@$ |a_$200| |b_$200|)) (and (IsGoodState$$@Map@@ref@To@Int@@$ |b_$200|) (IsGoodState$$@Map@@ref@To@Int@@$ |a_$200|)))  :pattern ( (IsGoodState$$@Map@@ref@To@Int@@$ (combine$$@Map@@ref@To@Int@@$$@Map@@ref@To@Int@@$ |a_$200| |b_$200|)))))
    (forall( (|a_$201| $@Map@@ref@To@Int@@) (|b_$201| Field$ref$))(!(= (IsGoodState$$@Map@@ref@To@Int@@$ (combine$$@Map@@ref@To@Int@@$Field$ref$$ |a_$201| |b_$201|)) (and (IsGoodState$Field$ref$$ |b_$201|) (IsGoodState$$@Map@@ref@To@Int@@$ |a_$201|)))  :pattern ( (IsGoodState$$@Map@@ref@To@Int@@$ (combine$$@Map@@ref@To@Int@@$Field$ref$$ |a_$201| |b_$201|)))))
    (forall( (|a_$202| $@Map@@ref@To@Int@@) (|b_$202| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(!(= (IsGoodState$$@Map@@ref@To@Int@@$ (combine$$@Map@@ref@To@Int@@$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$202| |b_$202|)) (and (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |b_$202|) (IsGoodState$$@Map@@ref@To@Int@@$ |a_$202|)))  :pattern ( (IsGoodState$$@Map@@ref@To@Int@@$ (combine$$@Map@@ref@To@Int@@$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$202| |b_$202|)))))
    (forall( (|a_$203| $@Map@@ref@To@Int@@) (|b_$203| ModuleName))(!(= (IsGoodState$$@Map@@ref@To@Int@@$ (combine$$@Map@@ref@To@Int@@$ModuleName$ |a_$203| |b_$203|)) (and (IsGoodState$ModuleName$ |b_$203|) (IsGoodState$$@Map@@ref@To@Int@@$ |a_$203|)))  :pattern ( (IsGoodState$$@Map@@ref@To@Int@@$ (combine$$@Map@@ref@To@Int@@$ModuleName$ |a_$203| |b_$203|)))))
    (forall( (|a_$204| $@Map@@ref@To@Int@@) (|b_$204| TypeName))(!(= (IsGoodState$$@Map@@ref@To@Int@@$ (combine$$@Map@@ref@To@Int@@$TypeName$ |a_$204| |b_$204|)) (and (IsGoodState$TypeName$ |b_$204|) (IsGoodState$$@Map@@ref@To@Int@@$ |a_$204|)))  :pattern ( (IsGoodState$$@Map@@ref@To@Int@@$ (combine$$@Map@@ref@To@Int@@$TypeName$ |a_$204| |b_$204|)))))
    (forall( (|a_$205| $@Map@@ref@To@Int@@) (|b_$205| $@Map@@$T0@@Int@To@$T0@@))(!(= (IsGoodState$$@Map@@ref@To@Int@@$ (combine$$@Map@@ref@To@Int@@$$@Map@@$T0@@Int@To@$T0@@$ |a_$205| |b_$205|)) (and (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ |b_$205|) (IsGoodState$$@Map@@ref@To@Int@@$ |a_$205|)))  :pattern ( (IsGoodState$$@Map@@ref@To@Int@@$ (combine$$@Map@@ref@To@Int@@$$@Map@@$T0@@Int@To@$T0@@$ |a_$205| |b_$205|)))))
    (forall( (|a_$206| Field$ref$) (|b_$206| Bool))(!(= (IsGoodState$Field$ref$$ (combine$Field$ref$$Bool$ |a_$206| |b_$206|)) (and (IsGoodState$Bool$ |b_$206|) (IsGoodState$Field$ref$$ |a_$206|)))  :pattern ( (IsGoodState$Field$ref$$ (combine$Field$ref$$Bool$ |a_$206| |b_$206|)))))
    (forall( (|a_$207| Field$ref$) (|b_$207| Int))(!(= (IsGoodState$Field$ref$$ (combine$Field$ref$$Int$ |a_$207| |b_$207|)) (and (IsGoodState$Int$ |b_$207|) (IsGoodState$Field$ref$$ |a_$207|)))  :pattern ( (IsGoodState$Field$ref$$ (combine$Field$ref$$Int$ |a_$207| |b_$207|)))))
    (forall( (|a_$208| Field$ref$) (|b_$208| $@Map@@PermissionComponent@To@Int@@))(!(= (IsGoodState$Field$ref$$ (combine$Field$ref$$$@Map@@PermissionComponent@To@Int@@$ |a_$208| |b_$208|)) (and (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ |b_$208|) (IsGoodState$Field$ref$$ |a_$208|)))  :pattern ( (IsGoodState$Field$ref$$ (combine$Field$ref$$$@Map@@PermissionComponent@To@Int@@$ |a_$208| |b_$208|)))))
    (forall( (|a_$209| Field$ref$) (|b_$209| PermissionComponent))(!(= (IsGoodState$Field$ref$$ (combine$Field$ref$$PermissionComponent$ |a_$209| |b_$209|)) (and (IsGoodState$PermissionComponent$ |b_$209|) (IsGoodState$Field$ref$$ |a_$209|)))  :pattern ( (IsGoodState$Field$ref$$ (combine$Field$ref$$PermissionComponent$ |a_$209| |b_$209|)))))
    (forall( (|a_$21| Int) (|b_$21| $@Map@@PermissionComponent@To@Int@@))(!(= (IsGoodState$Int$ (combine$Int$$@Map@@PermissionComponent@To@Int@@$ |a_$21| |b_$21|)) (and (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ |b_$21|) (IsGoodState$Int$ |a_$21|)))  :pattern ( (IsGoodState$Int$ (combine$Int$$@Map@@PermissionComponent@To@Int@@$ |a_$21| |b_$21|)))))
    (forall( (|a_$210| Field$ref$) (|b_$210| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@))(!(= (IsGoodState$Field$ref$$ (combine$Field$ref$$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$210| |b_$210|)) (and (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |b_$210|) (IsGoodState$Field$ref$$ |a_$210|)))  :pattern ( (IsGoodState$Field$ref$$ (combine$Field$ref$$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$210| |b_$210|)))))
    (forall( (|a_$211| Field$ref$) (|b_$211| ref))(!(= (IsGoodState$Field$ref$$ (combine$Field$ref$$ref$ |a_$211| |b_$211|)) (and (IsGoodState$ref$ |b_$211|) (IsGoodState$Field$ref$$ |a_$211|)))  :pattern ( (IsGoodState$Field$ref$$ (combine$Field$ref$$ref$ |a_$211| |b_$211|)))))
    (forall( (|a_$212| Field$ref$) (|b_$212| Field$Int$))(!(= (IsGoodState$Field$ref$$ (combine$Field$ref$$Field$Int$$ |a_$212| |b_$212|)) (and (IsGoodState$Field$Int$$ |b_$212|) (IsGoodState$Field$ref$$ |a_$212|)))  :pattern ( (IsGoodState$Field$ref$$ (combine$Field$ref$$Field$Int$$ |a_$212| |b_$212|)))))
    (forall( (|a_$213| Field$ref$) (|b_$213| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@))(!(= (IsGoodState$Field$ref$$ (combine$Field$ref$$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$213| |b_$213|)) (and (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |b_$213|) (IsGoodState$Field$ref$$ |a_$213|)))  :pattern ( (IsGoodState$Field$ref$$ (combine$Field$ref$$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$213| |b_$213|)))))
    (forall( (|a_$214| Field$ref$) (|b_$214| Field$Mu$))(!(= (IsGoodState$Field$ref$$ (combine$Field$ref$$Field$Mu$$ |a_$214| |b_$214|)) (and (IsGoodState$Field$Mu$$ |b_$214|) (IsGoodState$Field$ref$$ |a_$214|)))  :pattern ( (IsGoodState$Field$ref$$ (combine$Field$ref$$Field$Mu$$ |a_$214| |b_$214|)))))
    (forall( (|a_$215| Field$ref$) (|b_$215| Mu))(!(= (IsGoodState$Field$ref$$ (combine$Field$ref$$Mu$ |a_$215| |b_$215|)) (and (IsGoodState$Mu$ |b_$215|) (IsGoodState$Field$ref$$ |a_$215|)))  :pattern ( (IsGoodState$Field$ref$$ (combine$Field$ref$$Mu$ |a_$215| |b_$215|)))))
    (forall( (|a_$216| Field$ref$) (|b_$216| Field$Bool$))(!(= (IsGoodState$Field$ref$$ (combine$Field$ref$$Field$Bool$$ |a_$216| |b_$216|)) (and (IsGoodState$Field$Bool$$ |b_$216|) (IsGoodState$Field$ref$$ |a_$216|)))  :pattern ( (IsGoodState$Field$ref$$ (combine$Field$ref$$Field$Bool$$ |a_$216| |b_$216|)))))
    (forall( (|a_$217| Field$ref$) (|b_$217| $@Map@@ref@To@Int@@))(!(= (IsGoodState$Field$ref$$ (combine$Field$ref$$$@Map@@ref@To@Int@@$ |a_$217| |b_$217|)) (and (IsGoodState$$@Map@@ref@To@Int@@$ |b_$217|) (IsGoodState$Field$ref$$ |a_$217|)))  :pattern ( (IsGoodState$Field$ref$$ (combine$Field$ref$$$@Map@@ref@To@Int@@$ |a_$217| |b_$217|)))))
    (forall( (|a_$218| Field$ref$) (|b_$218| Field$ref$))(!(= (IsGoodState$Field$ref$$ (combine$Field$ref$$Field$ref$$ |a_$218| |b_$218|)) (and (IsGoodState$Field$ref$$ |b_$218|) (IsGoodState$Field$ref$$ |a_$218|)))  :pattern ( (IsGoodState$Field$ref$$ (combine$Field$ref$$Field$ref$$ |a_$218| |b_$218|)))))
    (forall( (|a_$219| Field$ref$) (|b_$219| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(!(= (IsGoodState$Field$ref$$ (combine$Field$ref$$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$219| |b_$219|)) (and (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |b_$219|) (IsGoodState$Field$ref$$ |a_$219|)))  :pattern ( (IsGoodState$Field$ref$$ (combine$Field$ref$$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$219| |b_$219|)))))
    (forall( (|a_$22| Int) (|b_$22| PermissionComponent))(!(= (IsGoodState$Int$ (combine$Int$PermissionComponent$ |a_$22| |b_$22|)) (and (IsGoodState$PermissionComponent$ |b_$22|) (IsGoodState$Int$ |a_$22|)))  :pattern ( (IsGoodState$Int$ (combine$Int$PermissionComponent$ |a_$22| |b_$22|)))))
    (forall( (|a_$220| Field$ref$) (|b_$220| ModuleName))(!(= (IsGoodState$Field$ref$$ (combine$Field$ref$$ModuleName$ |a_$220| |b_$220|)) (and (IsGoodState$ModuleName$ |b_$220|) (IsGoodState$Field$ref$$ |a_$220|)))  :pattern ( (IsGoodState$Field$ref$$ (combine$Field$ref$$ModuleName$ |a_$220| |b_$220|)))))
    (forall( (|a_$221| Field$ref$) (|b_$221| TypeName))(!(= (IsGoodState$Field$ref$$ (combine$Field$ref$$TypeName$ |a_$221| |b_$221|)) (and (IsGoodState$TypeName$ |b_$221|) (IsGoodState$Field$ref$$ |a_$221|)))  :pattern ( (IsGoodState$Field$ref$$ (combine$Field$ref$$TypeName$ |a_$221| |b_$221|)))))
    (forall( (|a_$222| Field$ref$) (|b_$222| $@Map@@$T0@@Int@To@$T0@@))(!(= (IsGoodState$Field$ref$$ (combine$Field$ref$$$@Map@@$T0@@Int@To@$T0@@$ |a_$222| |b_$222|)) (and (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ |b_$222|) (IsGoodState$Field$ref$$ |a_$222|)))  :pattern ( (IsGoodState$Field$ref$$ (combine$Field$ref$$$@Map@@$T0@@Int@To@$T0@@$ |a_$222| |b_$222|)))))
    (forall( (|a_$223| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$) (|b_$223| Bool))(!(= (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ (combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$Bool$ |a_$223| |b_$223|)) (and (IsGoodState$Bool$ |b_$223|) (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$223|)))  :pattern ( (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ (combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$Bool$ |a_$223| |b_$223|)))))
    (forall( (|a_$224| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$) (|b_$224| Int))(!(= (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ (combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$Int$ |a_$224| |b_$224|)) (and (IsGoodState$Int$ |b_$224|) (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$224|)))  :pattern ( (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ (combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$Int$ |a_$224| |b_$224|)))))
    (forall( (|a_$225| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$) (|b_$225| $@Map@@PermissionComponent@To@Int@@))(!(= (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ (combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$$@Map@@PermissionComponent@To@Int@@$ |a_$225| |b_$225|)) (and (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ |b_$225|) (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$225|)))  :pattern ( (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ (combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$$@Map@@PermissionComponent@To@Int@@$ |a_$225| |b_$225|)))))
    (forall( (|a_$226| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$) (|b_$226| PermissionComponent))(!(= (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ (combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$PermissionComponent$ |a_$226| |b_$226|)) (and (IsGoodState$PermissionComponent$ |b_$226|) (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$226|)))  :pattern ( (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ (combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$PermissionComponent$ |a_$226| |b_$226|)))))
    (forall( (|a_$227| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$) (|b_$227| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@))(!(= (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ (combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$227| |b_$227|)) (and (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |b_$227|) (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$227|)))  :pattern ( (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ (combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$227| |b_$227|)))))
    (forall( (|a_$228| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$) (|b_$228| ref))(!(= (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ (combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ref$ |a_$228| |b_$228|)) (and (IsGoodState$ref$ |b_$228|) (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$228|)))  :pattern ( (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ (combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ref$ |a_$228| |b_$228|)))))
    (forall( (|a_$229| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$) (|b_$229| Field$Int$))(!(= (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ (combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$Field$Int$$ |a_$229| |b_$229|)) (and (IsGoodState$Field$Int$$ |b_$229|) (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$229|)))  :pattern ( (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ (combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$Field$Int$$ |a_$229| |b_$229|)))))
    (forall( (|a_$23| Int) (|b_$23| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@))(!(= (IsGoodState$Int$ (combine$Int$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$23| |b_$23|)) (and (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |b_$23|) (IsGoodState$Int$ |a_$23|)))  :pattern ( (IsGoodState$Int$ (combine$Int$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$23| |b_$23|)))))
    (forall( (|a_$230| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$) (|b_$230| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@))(!(= (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ (combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$230| |b_$230|)) (and (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |b_$230|) (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$230|)))  :pattern ( (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ (combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$230| |b_$230|)))))
    (forall( (|a_$231| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$) (|b_$231| Field$Mu$))(!(= (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ (combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$Field$Mu$$ |a_$231| |b_$231|)) (and (IsGoodState$Field$Mu$$ |b_$231|) (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$231|)))  :pattern ( (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ (combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$Field$Mu$$ |a_$231| |b_$231|)))))
    (forall( (|a_$232| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$) (|b_$232| Mu))(!(= (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ (combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$Mu$ |a_$232| |b_$232|)) (and (IsGoodState$Mu$ |b_$232|) (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$232|)))  :pattern ( (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ (combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$Mu$ |a_$232| |b_$232|)))))
    (forall( (|a_$233| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$) (|b_$233| Field$Bool$))(!(= (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ (combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$Field$Bool$$ |a_$233| |b_$233|)) (and (IsGoodState$Field$Bool$$ |b_$233|) (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$233|)))  :pattern ( (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ (combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$Field$Bool$$ |a_$233| |b_$233|)))))
    (forall( (|a_$234| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$) (|b_$234| $@Map@@ref@To@Int@@))(!(= (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ (combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$$@Map@@ref@To@Int@@$ |a_$234| |b_$234|)) (and (IsGoodState$$@Map@@ref@To@Int@@$ |b_$234|) (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$234|)))  :pattern ( (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ (combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$$@Map@@ref@To@Int@@$ |a_$234| |b_$234|)))))
    (forall( (|a_$235| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$) (|b_$235| Field$ref$))(!(= (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ (combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$Field$ref$$ |a_$235| |b_$235|)) (and (IsGoodState$Field$ref$$ |b_$235|) (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$235|)))  :pattern ( (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ (combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$Field$ref$$ |a_$235| |b_$235|)))))
    (forall( (|a_$236| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$) (|b_$236| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(!(= (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ (combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$236| |b_$236|)) (and (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |b_$236|) (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$236|)))  :pattern ( (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ (combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$236| |b_$236|)))))
    (forall( (|a_$237| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$) (|b_$237| ModuleName))(!(= (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ (combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ModuleName$ |a_$237| |b_$237|)) (and (IsGoodState$ModuleName$ |b_$237|) (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$237|)))  :pattern ( (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ (combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ModuleName$ |a_$237| |b_$237|)))))
    (forall( (|a_$238| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$) (|b_$238| TypeName))(!(= (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ (combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$TypeName$ |a_$238| |b_$238|)) (and (IsGoodState$TypeName$ |b_$238|) (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$238|)))  :pattern ( (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ (combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$TypeName$ |a_$238| |b_$238|)))))
    (forall( (|a_$239| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$) (|b_$239| $@Map@@$T0@@Int@To@$T0@@))(!(= (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ (combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$$@Map@@$T0@@Int@To@$T0@@$ |a_$239| |b_$239|)) (and (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ |b_$239|) (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$239|)))  :pattern ( (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ (combine$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$$@Map@@$T0@@Int@To@$T0@@$ |a_$239| |b_$239|)))))
    (forall( (|a_$24| Int) (|b_$24| ref))(!(= (IsGoodState$Int$ (combine$Int$ref$ |a_$24| |b_$24|)) (and (IsGoodState$ref$ |b_$24|) (IsGoodState$Int$ |a_$24|)))  :pattern ( (IsGoodState$Int$ (combine$Int$ref$ |a_$24| |b_$24|)))))
    (forall( (|a_$240| ModuleName) (|b_$240| Bool))(!(= (IsGoodState$ModuleName$ (combine$ModuleName$Bool$ |a_$240| |b_$240|)) (and (IsGoodState$Bool$ |b_$240|) (IsGoodState$ModuleName$ |a_$240|)))  :pattern ( (IsGoodState$ModuleName$ (combine$ModuleName$Bool$ |a_$240| |b_$240|)))))
    (forall( (|a_$241| ModuleName) (|b_$241| Int))(!(= (IsGoodState$ModuleName$ (combine$ModuleName$Int$ |a_$241| |b_$241|)) (and (IsGoodState$Int$ |b_$241|) (IsGoodState$ModuleName$ |a_$241|)))  :pattern ( (IsGoodState$ModuleName$ (combine$ModuleName$Int$ |a_$241| |b_$241|)))))
    (forall( (|a_$242| ModuleName) (|b_$242| $@Map@@PermissionComponent@To@Int@@))(!(= (IsGoodState$ModuleName$ (combine$ModuleName$$@Map@@PermissionComponent@To@Int@@$ |a_$242| |b_$242|)) (and (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ |b_$242|) (IsGoodState$ModuleName$ |a_$242|)))  :pattern ( (IsGoodState$ModuleName$ (combine$ModuleName$$@Map@@PermissionComponent@To@Int@@$ |a_$242| |b_$242|)))))
    (forall( (|a_$243| ModuleName) (|b_$243| PermissionComponent))(!(= (IsGoodState$ModuleName$ (combine$ModuleName$PermissionComponent$ |a_$243| |b_$243|)) (and (IsGoodState$PermissionComponent$ |b_$243|) (IsGoodState$ModuleName$ |a_$243|)))  :pattern ( (IsGoodState$ModuleName$ (combine$ModuleName$PermissionComponent$ |a_$243| |b_$243|)))))
    (forall( (|a_$244| ModuleName) (|b_$244| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@))(!(= (IsGoodState$ModuleName$ (combine$ModuleName$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$244| |b_$244|)) (and (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |b_$244|) (IsGoodState$ModuleName$ |a_$244|)))  :pattern ( (IsGoodState$ModuleName$ (combine$ModuleName$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$244| |b_$244|)))))
    (forall( (|a_$245| ModuleName) (|b_$245| ref))(!(= (IsGoodState$ModuleName$ (combine$ModuleName$ref$ |a_$245| |b_$245|)) (and (IsGoodState$ref$ |b_$245|) (IsGoodState$ModuleName$ |a_$245|)))  :pattern ( (IsGoodState$ModuleName$ (combine$ModuleName$ref$ |a_$245| |b_$245|)))))
    (forall( (|a_$246| ModuleName) (|b_$246| Field$Int$))(!(= (IsGoodState$ModuleName$ (combine$ModuleName$Field$Int$$ |a_$246| |b_$246|)) (and (IsGoodState$Field$Int$$ |b_$246|) (IsGoodState$ModuleName$ |a_$246|)))  :pattern ( (IsGoodState$ModuleName$ (combine$ModuleName$Field$Int$$ |a_$246| |b_$246|)))))
    (forall( (|a_$247| ModuleName) (|b_$247| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@))(!(= (IsGoodState$ModuleName$ (combine$ModuleName$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$247| |b_$247|)) (and (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |b_$247|) (IsGoodState$ModuleName$ |a_$247|)))  :pattern ( (IsGoodState$ModuleName$ (combine$ModuleName$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$247| |b_$247|)))))
    (forall( (|a_$248| ModuleName) (|b_$248| Field$Mu$))(!(= (IsGoodState$ModuleName$ (combine$ModuleName$Field$Mu$$ |a_$248| |b_$248|)) (and (IsGoodState$Field$Mu$$ |b_$248|) (IsGoodState$ModuleName$ |a_$248|)))  :pattern ( (IsGoodState$ModuleName$ (combine$ModuleName$Field$Mu$$ |a_$248| |b_$248|)))))
    (forall( (|a_$249| ModuleName) (|b_$249| Mu))(!(= (IsGoodState$ModuleName$ (combine$ModuleName$Mu$ |a_$249| |b_$249|)) (and (IsGoodState$Mu$ |b_$249|) (IsGoodState$ModuleName$ |a_$249|)))  :pattern ( (IsGoodState$ModuleName$ (combine$ModuleName$Mu$ |a_$249| |b_$249|)))))
    (forall( (|a_$25| Int) (|b_$25| Field$Int$))(!(= (IsGoodState$Int$ (combine$Int$Field$Int$$ |a_$25| |b_$25|)) (and (IsGoodState$Field$Int$$ |b_$25|) (IsGoodState$Int$ |a_$25|)))  :pattern ( (IsGoodState$Int$ (combine$Int$Field$Int$$ |a_$25| |b_$25|)))))
    (forall( (|a_$250| ModuleName) (|b_$250| Field$Bool$))(!(= (IsGoodState$ModuleName$ (combine$ModuleName$Field$Bool$$ |a_$250| |b_$250|)) (and (IsGoodState$Field$Bool$$ |b_$250|) (IsGoodState$ModuleName$ |a_$250|)))  :pattern ( (IsGoodState$ModuleName$ (combine$ModuleName$Field$Bool$$ |a_$250| |b_$250|)))))
    (forall( (|a_$251| ModuleName) (|b_$251| $@Map@@ref@To@Int@@))(!(= (IsGoodState$ModuleName$ (combine$ModuleName$$@Map@@ref@To@Int@@$ |a_$251| |b_$251|)) (and (IsGoodState$$@Map@@ref@To@Int@@$ |b_$251|) (IsGoodState$ModuleName$ |a_$251|)))  :pattern ( (IsGoodState$ModuleName$ (combine$ModuleName$$@Map@@ref@To@Int@@$ |a_$251| |b_$251|)))))
    (forall( (|a_$252| ModuleName) (|b_$252| Field$ref$))(!(= (IsGoodState$ModuleName$ (combine$ModuleName$Field$ref$$ |a_$252| |b_$252|)) (and (IsGoodState$Field$ref$$ |b_$252|) (IsGoodState$ModuleName$ |a_$252|)))  :pattern ( (IsGoodState$ModuleName$ (combine$ModuleName$Field$ref$$ |a_$252| |b_$252|)))))
    (forall( (|a_$253| ModuleName) (|b_$253| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(!(= (IsGoodState$ModuleName$ (combine$ModuleName$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$253| |b_$253|)) (and (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |b_$253|) (IsGoodState$ModuleName$ |a_$253|)))  :pattern ( (IsGoodState$ModuleName$ (combine$ModuleName$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$253| |b_$253|)))))
    (forall( (|a_$254| ModuleName) (|b_$254| ModuleName))(!(= (IsGoodState$ModuleName$ (combine$ModuleName$ModuleName$ |a_$254| |b_$254|)) (and (IsGoodState$ModuleName$ |b_$254|) (IsGoodState$ModuleName$ |a_$254|)))  :pattern ( (IsGoodState$ModuleName$ (combine$ModuleName$ModuleName$ |a_$254| |b_$254|)))))
    (forall( (|a_$255| ModuleName) (|b_$255| TypeName))(!(= (IsGoodState$ModuleName$ (combine$ModuleName$TypeName$ |a_$255| |b_$255|)) (and (IsGoodState$TypeName$ |b_$255|) (IsGoodState$ModuleName$ |a_$255|)))  :pattern ( (IsGoodState$ModuleName$ (combine$ModuleName$TypeName$ |a_$255| |b_$255|)))))
    (forall( (|a_$256| ModuleName) (|b_$256| $@Map@@$T0@@Int@To@$T0@@))(!(= (IsGoodState$ModuleName$ (combine$ModuleName$$@Map@@$T0@@Int@To@$T0@@$ |a_$256| |b_$256|)) (and (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ |b_$256|) (IsGoodState$ModuleName$ |a_$256|)))  :pattern ( (IsGoodState$ModuleName$ (combine$ModuleName$$@Map@@$T0@@Int@To@$T0@@$ |a_$256| |b_$256|)))))
    (forall( (|a_$257| TypeName) (|b_$257| Bool))(!(= (IsGoodState$TypeName$ (combine$TypeName$Bool$ |a_$257| |b_$257|)) (and (IsGoodState$Bool$ |b_$257|) (IsGoodState$TypeName$ |a_$257|)))  :pattern ( (IsGoodState$TypeName$ (combine$TypeName$Bool$ |a_$257| |b_$257|)))))
    (forall( (|a_$258| TypeName) (|b_$258| Int))(!(= (IsGoodState$TypeName$ (combine$TypeName$Int$ |a_$258| |b_$258|)) (and (IsGoodState$Int$ |b_$258|) (IsGoodState$TypeName$ |a_$258|)))  :pattern ( (IsGoodState$TypeName$ (combine$TypeName$Int$ |a_$258| |b_$258|)))))
    (forall( (|a_$259| TypeName) (|b_$259| $@Map@@PermissionComponent@To@Int@@))(!(= (IsGoodState$TypeName$ (combine$TypeName$$@Map@@PermissionComponent@To@Int@@$ |a_$259| |b_$259|)) (and (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ |b_$259|) (IsGoodState$TypeName$ |a_$259|)))  :pattern ( (IsGoodState$TypeName$ (combine$TypeName$$@Map@@PermissionComponent@To@Int@@$ |a_$259| |b_$259|)))))
    (forall( (|a_$26| Int) (|b_$26| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@))(!(= (IsGoodState$Int$ (combine$Int$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$26| |b_$26|)) (and (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |b_$26|) (IsGoodState$Int$ |a_$26|)))  :pattern ( (IsGoodState$Int$ (combine$Int$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$26| |b_$26|)))))
    (forall( (|a_$260| TypeName) (|b_$260| PermissionComponent))(!(= (IsGoodState$TypeName$ (combine$TypeName$PermissionComponent$ |a_$260| |b_$260|)) (and (IsGoodState$PermissionComponent$ |b_$260|) (IsGoodState$TypeName$ |a_$260|)))  :pattern ( (IsGoodState$TypeName$ (combine$TypeName$PermissionComponent$ |a_$260| |b_$260|)))))
    (forall( (|a_$261| TypeName) (|b_$261| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@))(!(= (IsGoodState$TypeName$ (combine$TypeName$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$261| |b_$261|)) (and (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |b_$261|) (IsGoodState$TypeName$ |a_$261|)))  :pattern ( (IsGoodState$TypeName$ (combine$TypeName$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$261| |b_$261|)))))
    (forall( (|a_$262| TypeName) (|b_$262| ref))(!(= (IsGoodState$TypeName$ (combine$TypeName$ref$ |a_$262| |b_$262|)) (and (IsGoodState$ref$ |b_$262|) (IsGoodState$TypeName$ |a_$262|)))  :pattern ( (IsGoodState$TypeName$ (combine$TypeName$ref$ |a_$262| |b_$262|)))))
    (forall( (|a_$263| TypeName) (|b_$263| Field$Int$))(!(= (IsGoodState$TypeName$ (combine$TypeName$Field$Int$$ |a_$263| |b_$263|)) (and (IsGoodState$Field$Int$$ |b_$263|) (IsGoodState$TypeName$ |a_$263|)))  :pattern ( (IsGoodState$TypeName$ (combine$TypeName$Field$Int$$ |a_$263| |b_$263|)))))
    (forall( (|a_$264| TypeName) (|b_$264| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@))(!(= (IsGoodState$TypeName$ (combine$TypeName$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$264| |b_$264|)) (and (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |b_$264|) (IsGoodState$TypeName$ |a_$264|)))  :pattern ( (IsGoodState$TypeName$ (combine$TypeName$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$264| |b_$264|)))))
    (forall( (|a_$265| TypeName) (|b_$265| Field$Mu$))(!(= (IsGoodState$TypeName$ (combine$TypeName$Field$Mu$$ |a_$265| |b_$265|)) (and (IsGoodState$Field$Mu$$ |b_$265|) (IsGoodState$TypeName$ |a_$265|)))  :pattern ( (IsGoodState$TypeName$ (combine$TypeName$Field$Mu$$ |a_$265| |b_$265|)))))
    (forall( (|a_$266| TypeName) (|b_$266| Mu))(!(= (IsGoodState$TypeName$ (combine$TypeName$Mu$ |a_$266| |b_$266|)) (and (IsGoodState$Mu$ |b_$266|) (IsGoodState$TypeName$ |a_$266|)))  :pattern ( (IsGoodState$TypeName$ (combine$TypeName$Mu$ |a_$266| |b_$266|)))))
    (forall( (|a_$267| TypeName) (|b_$267| Field$Bool$))(!(= (IsGoodState$TypeName$ (combine$TypeName$Field$Bool$$ |a_$267| |b_$267|)) (and (IsGoodState$Field$Bool$$ |b_$267|) (IsGoodState$TypeName$ |a_$267|)))  :pattern ( (IsGoodState$TypeName$ (combine$TypeName$Field$Bool$$ |a_$267| |b_$267|)))))
    (forall( (|a_$268| TypeName) (|b_$268| $@Map@@ref@To@Int@@))(!(= (IsGoodState$TypeName$ (combine$TypeName$$@Map@@ref@To@Int@@$ |a_$268| |b_$268|)) (and (IsGoodState$$@Map@@ref@To@Int@@$ |b_$268|) (IsGoodState$TypeName$ |a_$268|)))  :pattern ( (IsGoodState$TypeName$ (combine$TypeName$$@Map@@ref@To@Int@@$ |a_$268| |b_$268|)))))
    (forall( (|a_$269| TypeName) (|b_$269| Field$ref$))(!(= (IsGoodState$TypeName$ (combine$TypeName$Field$ref$$ |a_$269| |b_$269|)) (and (IsGoodState$Field$ref$$ |b_$269|) (IsGoodState$TypeName$ |a_$269|)))  :pattern ( (IsGoodState$TypeName$ (combine$TypeName$Field$ref$$ |a_$269| |b_$269|)))))
    (forall( (|a_$27| Int) (|b_$27| Field$Mu$))(!(= (IsGoodState$Int$ (combine$Int$Field$Mu$$ |a_$27| |b_$27|)) (and (IsGoodState$Field$Mu$$ |b_$27|) (IsGoodState$Int$ |a_$27|)))  :pattern ( (IsGoodState$Int$ (combine$Int$Field$Mu$$ |a_$27| |b_$27|)))))
    (forall( (|a_$270| TypeName) (|b_$270| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(!(= (IsGoodState$TypeName$ (combine$TypeName$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$270| |b_$270|)) (and (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |b_$270|) (IsGoodState$TypeName$ |a_$270|)))  :pattern ( (IsGoodState$TypeName$ (combine$TypeName$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$270| |b_$270|)))))
    (forall( (|a_$271| TypeName) (|b_$271| ModuleName))(!(= (IsGoodState$TypeName$ (combine$TypeName$ModuleName$ |a_$271| |b_$271|)) (and (IsGoodState$ModuleName$ |b_$271|) (IsGoodState$TypeName$ |a_$271|)))  :pattern ( (IsGoodState$TypeName$ (combine$TypeName$ModuleName$ |a_$271| |b_$271|)))))
    (forall( (|a_$272| TypeName) (|b_$272| TypeName))(!(= (IsGoodState$TypeName$ (combine$TypeName$TypeName$ |a_$272| |b_$272|)) (and (IsGoodState$TypeName$ |b_$272|) (IsGoodState$TypeName$ |a_$272|)))  :pattern ( (IsGoodState$TypeName$ (combine$TypeName$TypeName$ |a_$272| |b_$272|)))))
    (forall( (|a_$273| TypeName) (|b_$273| $@Map@@$T0@@Int@To@$T0@@))(!(= (IsGoodState$TypeName$ (combine$TypeName$$@Map@@$T0@@Int@To@$T0@@$ |a_$273| |b_$273|)) (and (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ |b_$273|) (IsGoodState$TypeName$ |a_$273|)))  :pattern ( (IsGoodState$TypeName$ (combine$TypeName$$@Map@@$T0@@Int@To@$T0@@$ |a_$273| |b_$273|)))))
    (forall( (|a_$274| $@Map@@$T0@@Int@To@$T0@@) (|b_$274| Bool))(!(= (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ (combine$$@Map@@$T0@@Int@To@$T0@@$Bool$ |a_$274| |b_$274|)) (and (IsGoodState$Bool$ |b_$274|) (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ |a_$274|)))  :pattern ( (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ (combine$$@Map@@$T0@@Int@To@$T0@@$Bool$ |a_$274| |b_$274|)))))
    (forall( (|a_$275| $@Map@@$T0@@Int@To@$T0@@) (|b_$275| Int))(!(= (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ (combine$$@Map@@$T0@@Int@To@$T0@@$Int$ |a_$275| |b_$275|)) (and (IsGoodState$Int$ |b_$275|) (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ |a_$275|)))  :pattern ( (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ (combine$$@Map@@$T0@@Int@To@$T0@@$Int$ |a_$275| |b_$275|)))))
    (forall( (|a_$276| $@Map@@$T0@@Int@To@$T0@@) (|b_$276| $@Map@@PermissionComponent@To@Int@@))(!(= (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ (combine$$@Map@@$T0@@Int@To@$T0@@$$@Map@@PermissionComponent@To@Int@@$ |a_$276| |b_$276|)) (and (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ |b_$276|) (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ |a_$276|)))  :pattern ( (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ (combine$$@Map@@$T0@@Int@To@$T0@@$$@Map@@PermissionComponent@To@Int@@$ |a_$276| |b_$276|)))))
    (forall( (|a_$277| $@Map@@$T0@@Int@To@$T0@@) (|b_$277| PermissionComponent))(!(= (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ (combine$$@Map@@$T0@@Int@To@$T0@@$PermissionComponent$ |a_$277| |b_$277|)) (and (IsGoodState$PermissionComponent$ |b_$277|) (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ |a_$277|)))  :pattern ( (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ (combine$$@Map@@$T0@@Int@To@$T0@@$PermissionComponent$ |a_$277| |b_$277|)))))
    (forall( (|a_$278| $@Map@@$T0@@Int@To@$T0@@) (|b_$278| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@))(!(= (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ (combine$$@Map@@$T0@@Int@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$278| |b_$278|)) (and (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |b_$278|) (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ |a_$278|)))  :pattern ( (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ (combine$$@Map@@$T0@@Int@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$278| |b_$278|)))))
    (forall( (|a_$279| $@Map@@$T0@@Int@To@$T0@@) (|b_$279| ref))(!(= (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ (combine$$@Map@@$T0@@Int@To@$T0@@$ref$ |a_$279| |b_$279|)) (and (IsGoodState$ref$ |b_$279|) (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ |a_$279|)))  :pattern ( (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ (combine$$@Map@@$T0@@Int@To@$T0@@$ref$ |a_$279| |b_$279|)))))
    (forall( (|a_$28| Int) (|b_$28| Mu))(!(= (IsGoodState$Int$ (combine$Int$Mu$ |a_$28| |b_$28|)) (and (IsGoodState$Mu$ |b_$28|) (IsGoodState$Int$ |a_$28|)))  :pattern ( (IsGoodState$Int$ (combine$Int$Mu$ |a_$28| |b_$28|)))))
    (forall( (|a_$280| $@Map@@$T0@@Int@To@$T0@@) (|b_$280| Field$Int$))(!(= (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ (combine$$@Map@@$T0@@Int@To@$T0@@$Field$Int$$ |a_$280| |b_$280|)) (and (IsGoodState$Field$Int$$ |b_$280|) (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ |a_$280|)))  :pattern ( (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ (combine$$@Map@@$T0@@Int@To@$T0@@$Field$Int$$ |a_$280| |b_$280|)))))
    (forall( (|a_$281| $@Map@@$T0@@Int@To@$T0@@) (|b_$281| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@))(!(= (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ (combine$$@Map@@$T0@@Int@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$281| |b_$281|)) (and (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |b_$281|) (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ |a_$281|)))  :pattern ( (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ (combine$$@Map@@$T0@@Int@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$281| |b_$281|)))))
    (forall( (|a_$282| $@Map@@$T0@@Int@To@$T0@@) (|b_$282| Field$Mu$))(!(= (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ (combine$$@Map@@$T0@@Int@To@$T0@@$Field$Mu$$ |a_$282| |b_$282|)) (and (IsGoodState$Field$Mu$$ |b_$282|) (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ |a_$282|)))  :pattern ( (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ (combine$$@Map@@$T0@@Int@To@$T0@@$Field$Mu$$ |a_$282| |b_$282|)))))
    (forall( (|a_$283| $@Map@@$T0@@Int@To@$T0@@) (|b_$283| Mu))(!(= (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ (combine$$@Map@@$T0@@Int@To@$T0@@$Mu$ |a_$283| |b_$283|)) (and (IsGoodState$Mu$ |b_$283|) (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ |a_$283|)))  :pattern ( (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ (combine$$@Map@@$T0@@Int@To@$T0@@$Mu$ |a_$283| |b_$283|)))))
    (forall( (|a_$284| $@Map@@$T0@@Int@To@$T0@@) (|b_$284| Field$Bool$))(!(= (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ (combine$$@Map@@$T0@@Int@To@$T0@@$Field$Bool$$ |a_$284| |b_$284|)) (and (IsGoodState$Field$Bool$$ |b_$284|) (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ |a_$284|)))  :pattern ( (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ (combine$$@Map@@$T0@@Int@To@$T0@@$Field$Bool$$ |a_$284| |b_$284|)))))
    (forall( (|a_$285| $@Map@@$T0@@Int@To@$T0@@) (|b_$285| $@Map@@ref@To@Int@@))(!(= (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ (combine$$@Map@@$T0@@Int@To@$T0@@$$@Map@@ref@To@Int@@$ |a_$285| |b_$285|)) (and (IsGoodState$$@Map@@ref@To@Int@@$ |b_$285|) (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ |a_$285|)))  :pattern ( (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ (combine$$@Map@@$T0@@Int@To@$T0@@$$@Map@@ref@To@Int@@$ |a_$285| |b_$285|)))))
    (forall( (|a_$286| $@Map@@$T0@@Int@To@$T0@@) (|b_$286| Field$ref$))(!(= (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ (combine$$@Map@@$T0@@Int@To@$T0@@$Field$ref$$ |a_$286| |b_$286|)) (and (IsGoodState$Field$ref$$ |b_$286|) (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ |a_$286|)))  :pattern ( (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ (combine$$@Map@@$T0@@Int@To@$T0@@$Field$ref$$ |a_$286| |b_$286|)))))
    (forall( (|a_$287| $@Map@@$T0@@Int@To@$T0@@) (|b_$287| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(!(= (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ (combine$$@Map@@$T0@@Int@To@$T0@@$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$287| |b_$287|)) (and (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |b_$287|) (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ |a_$287|)))  :pattern ( (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ (combine$$@Map@@$T0@@Int@To@$T0@@$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$287| |b_$287|)))))
    (forall( (|a_$288| $@Map@@$T0@@Int@To@$T0@@) (|b_$288| ModuleName))(!(= (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ (combine$$@Map@@$T0@@Int@To@$T0@@$ModuleName$ |a_$288| |b_$288|)) (and (IsGoodState$ModuleName$ |b_$288|) (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ |a_$288|)))  :pattern ( (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ (combine$$@Map@@$T0@@Int@To@$T0@@$ModuleName$ |a_$288| |b_$288|)))))
    (forall( (|a_$289| $@Map@@$T0@@Int@To@$T0@@) (|b_$289| TypeName))(!(= (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ (combine$$@Map@@$T0@@Int@To@$T0@@$TypeName$ |a_$289| |b_$289|)) (and (IsGoodState$TypeName$ |b_$289|) (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ |a_$289|)))  :pattern ( (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ (combine$$@Map@@$T0@@Int@To@$T0@@$TypeName$ |a_$289| |b_$289|)))))
    (forall( (|a_$29| Int) (|b_$29| Field$Bool$))(!(= (IsGoodState$Int$ (combine$Int$Field$Bool$$ |a_$29| |b_$29|)) (and (IsGoodState$Field$Bool$$ |b_$29|) (IsGoodState$Int$ |a_$29|)))  :pattern ( (IsGoodState$Int$ (combine$Int$Field$Bool$$ |a_$29| |b_$29|)))))
    (forall( (|a_$290| $@Map@@$T0@@Int@To@$T0@@) (|b_$290| $@Map@@$T0@@Int@To@$T0@@))(!(= (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ (combine$$@Map@@$T0@@Int@To@$T0@@$$@Map@@$T0@@Int@To@$T0@@$ |a_$290| |b_$290|)) (and (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ |b_$290|) (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ |a_$290|)))  :pattern ( (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ (combine$$@Map@@$T0@@Int@To@$T0@@$$@Map@@$T0@@Int@To@$T0@@$ |a_$290| |b_$290|)))))
    (forall( (|a_$3| Bool) (|b_$3| Int))(!(= (IsGoodState$Bool$ (combine$Bool$Int$ |a_$3| |b_$3|)) (and (IsGoodState$Int$ |b_$3|) (IsGoodState$Bool$ |a_$3|)))  :pattern ( (IsGoodState$Bool$ (combine$Bool$Int$ |a_$3| |b_$3|)))))
    (forall( (|a_$30| Int) (|b_$30| $@Map@@ref@To@Int@@))(!(= (IsGoodState$Int$ (combine$Int$$@Map@@ref@To@Int@@$ |a_$30| |b_$30|)) (and (IsGoodState$$@Map@@ref@To@Int@@$ |b_$30|) (IsGoodState$Int$ |a_$30|)))  :pattern ( (IsGoodState$Int$ (combine$Int$$@Map@@ref@To@Int@@$ |a_$30| |b_$30|)))))
    (forall( (|a_$31| Int) (|b_$31| Field$ref$))(!(= (IsGoodState$Int$ (combine$Int$Field$ref$$ |a_$31| |b_$31|)) (and (IsGoodState$Field$ref$$ |b_$31|) (IsGoodState$Int$ |a_$31|)))  :pattern ( (IsGoodState$Int$ (combine$Int$Field$ref$$ |a_$31| |b_$31|)))))
    (forall( (|a_$32| Int) (|b_$32| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(!(= (IsGoodState$Int$ (combine$Int$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$32| |b_$32|)) (and (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |b_$32|) (IsGoodState$Int$ |a_$32|)))  :pattern ( (IsGoodState$Int$ (combine$Int$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$32| |b_$32|)))))
    (forall( (|a_$33| Int) (|b_$33| ModuleName))(!(= (IsGoodState$Int$ (combine$Int$ModuleName$ |a_$33| |b_$33|)) (and (IsGoodState$ModuleName$ |b_$33|) (IsGoodState$Int$ |a_$33|)))  :pattern ( (IsGoodState$Int$ (combine$Int$ModuleName$ |a_$33| |b_$33|)))))
    (forall( (|a_$34| Int) (|b_$34| TypeName))(!(= (IsGoodState$Int$ (combine$Int$TypeName$ |a_$34| |b_$34|)) (and (IsGoodState$TypeName$ |b_$34|) (IsGoodState$Int$ |a_$34|)))  :pattern ( (IsGoodState$Int$ (combine$Int$TypeName$ |a_$34| |b_$34|)))))
    (forall( (|a_$35| Int) (|b_$35| $@Map@@$T0@@Int@To@$T0@@))(!(= (IsGoodState$Int$ (combine$Int$$@Map@@$T0@@Int@To@$T0@@$ |a_$35| |b_$35|)) (and (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ |b_$35|) (IsGoodState$Int$ |a_$35|)))  :pattern ( (IsGoodState$Int$ (combine$Int$$@Map@@$T0@@Int@To@$T0@@$ |a_$35| |b_$35|)))))
    (forall( (|a_$36| $@Map@@PermissionComponent@To@Int@@) (|b_$36| Bool))(!(= (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ (combine$$@Map@@PermissionComponent@To@Int@@$Bool$ |a_$36| |b_$36|)) (and (IsGoodState$Bool$ |b_$36|) (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ |a_$36|)))  :pattern ( (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ (combine$$@Map@@PermissionComponent@To@Int@@$Bool$ |a_$36| |b_$36|)))))
    (forall( (|a_$37| $@Map@@PermissionComponent@To@Int@@) (|b_$37| Int))(!(= (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ (combine$$@Map@@PermissionComponent@To@Int@@$Int$ |a_$37| |b_$37|)) (and (IsGoodState$Int$ |b_$37|) (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ |a_$37|)))  :pattern ( (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ (combine$$@Map@@PermissionComponent@To@Int@@$Int$ |a_$37| |b_$37|)))))
    (forall( (|a_$38| $@Map@@PermissionComponent@To@Int@@) (|b_$38| $@Map@@PermissionComponent@To@Int@@))(!(= (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ (combine$$@Map@@PermissionComponent@To@Int@@$$@Map@@PermissionComponent@To@Int@@$ |a_$38| |b_$38|)) (and (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ |b_$38|) (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ |a_$38|)))  :pattern ( (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ (combine$$@Map@@PermissionComponent@To@Int@@$$@Map@@PermissionComponent@To@Int@@$ |a_$38| |b_$38|)))))
    (forall( (|a_$39| $@Map@@PermissionComponent@To@Int@@) (|b_$39| PermissionComponent))(!(= (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ (combine$$@Map@@PermissionComponent@To@Int@@$PermissionComponent$ |a_$39| |b_$39|)) (and (IsGoodState$PermissionComponent$ |b_$39|) (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ |a_$39|)))  :pattern ( (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ (combine$$@Map@@PermissionComponent@To@Int@@$PermissionComponent$ |a_$39| |b_$39|)))))
    (forall( (|a_$4| Bool) (|b_$4| $@Map@@PermissionComponent@To@Int@@))(!(= (IsGoodState$Bool$ (combine$Bool$$@Map@@PermissionComponent@To@Int@@$ |a_$4| |b_$4|)) (and (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ |b_$4|) (IsGoodState$Bool$ |a_$4|)))  :pattern ( (IsGoodState$Bool$ (combine$Bool$$@Map@@PermissionComponent@To@Int@@$ |a_$4| |b_$4|)))))
    (forall( (|a_$40| $@Map@@PermissionComponent@To@Int@@) (|b_$40| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@))(!(= (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ (combine$$@Map@@PermissionComponent@To@Int@@$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$40| |b_$40|)) (and (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |b_$40|) (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ |a_$40|)))  :pattern ( (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ (combine$$@Map@@PermissionComponent@To@Int@@$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$40| |b_$40|)))))
    (forall( (|a_$41| $@Map@@PermissionComponent@To@Int@@) (|b_$41| ref))(!(= (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ (combine$$@Map@@PermissionComponent@To@Int@@$ref$ |a_$41| |b_$41|)) (and (IsGoodState$ref$ |b_$41|) (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ |a_$41|)))  :pattern ( (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ (combine$$@Map@@PermissionComponent@To@Int@@$ref$ |a_$41| |b_$41|)))))
    (forall( (|a_$42| $@Map@@PermissionComponent@To@Int@@) (|b_$42| Field$Int$))(!(= (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ (combine$$@Map@@PermissionComponent@To@Int@@$Field$Int$$ |a_$42| |b_$42|)) (and (IsGoodState$Field$Int$$ |b_$42|) (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ |a_$42|)))  :pattern ( (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ (combine$$@Map@@PermissionComponent@To@Int@@$Field$Int$$ |a_$42| |b_$42|)))))
    (forall( (|a_$43| $@Map@@PermissionComponent@To@Int@@) (|b_$43| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@))(!(= (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ (combine$$@Map@@PermissionComponent@To@Int@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$43| |b_$43|)) (and (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |b_$43|) (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ |a_$43|)))  :pattern ( (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ (combine$$@Map@@PermissionComponent@To@Int@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$43| |b_$43|)))))
    (forall( (|a_$44| $@Map@@PermissionComponent@To@Int@@) (|b_$44| Field$Mu$))(!(= (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ (combine$$@Map@@PermissionComponent@To@Int@@$Field$Mu$$ |a_$44| |b_$44|)) (and (IsGoodState$Field$Mu$$ |b_$44|) (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ |a_$44|)))  :pattern ( (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ (combine$$@Map@@PermissionComponent@To@Int@@$Field$Mu$$ |a_$44| |b_$44|)))))
    (forall( (|a_$45| $@Map@@PermissionComponent@To@Int@@) (|b_$45| Mu))(!(= (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ (combine$$@Map@@PermissionComponent@To@Int@@$Mu$ |a_$45| |b_$45|)) (and (IsGoodState$Mu$ |b_$45|) (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ |a_$45|)))  :pattern ( (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ (combine$$@Map@@PermissionComponent@To@Int@@$Mu$ |a_$45| |b_$45|)))))
    (forall( (|a_$46| $@Map@@PermissionComponent@To@Int@@) (|b_$46| Field$Bool$))(!(= (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ (combine$$@Map@@PermissionComponent@To@Int@@$Field$Bool$$ |a_$46| |b_$46|)) (and (IsGoodState$Field$Bool$$ |b_$46|) (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ |a_$46|)))  :pattern ( (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ (combine$$@Map@@PermissionComponent@To@Int@@$Field$Bool$$ |a_$46| |b_$46|)))))
    (forall( (|a_$47| $@Map@@PermissionComponent@To@Int@@) (|b_$47| $@Map@@ref@To@Int@@))(!(= (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ (combine$$@Map@@PermissionComponent@To@Int@@$$@Map@@ref@To@Int@@$ |a_$47| |b_$47|)) (and (IsGoodState$$@Map@@ref@To@Int@@$ |b_$47|) (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ |a_$47|)))  :pattern ( (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ (combine$$@Map@@PermissionComponent@To@Int@@$$@Map@@ref@To@Int@@$ |a_$47| |b_$47|)))))
    (forall( (|a_$48| $@Map@@PermissionComponent@To@Int@@) (|b_$48| Field$ref$))(!(= (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ (combine$$@Map@@PermissionComponent@To@Int@@$Field$ref$$ |a_$48| |b_$48|)) (and (IsGoodState$Field$ref$$ |b_$48|) (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ |a_$48|)))  :pattern ( (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ (combine$$@Map@@PermissionComponent@To@Int@@$Field$ref$$ |a_$48| |b_$48|)))))
    (forall( (|a_$49| $@Map@@PermissionComponent@To@Int@@) (|b_$49| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(!(= (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ (combine$$@Map@@PermissionComponent@To@Int@@$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$49| |b_$49|)) (and (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |b_$49|) (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ |a_$49|)))  :pattern ( (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ (combine$$@Map@@PermissionComponent@To@Int@@$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$49| |b_$49|)))))
    (forall( (|a_$5| Bool) (|b_$5| PermissionComponent))(!(= (IsGoodState$Bool$ (combine$Bool$PermissionComponent$ |a_$5| |b_$5|)) (and (IsGoodState$PermissionComponent$ |b_$5|) (IsGoodState$Bool$ |a_$5|)))  :pattern ( (IsGoodState$Bool$ (combine$Bool$PermissionComponent$ |a_$5| |b_$5|)))))
    (forall( (|a_$50| $@Map@@PermissionComponent@To@Int@@) (|b_$50| ModuleName))(!(= (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ (combine$$@Map@@PermissionComponent@To@Int@@$ModuleName$ |a_$50| |b_$50|)) (and (IsGoodState$ModuleName$ |b_$50|) (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ |a_$50|)))  :pattern ( (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ (combine$$@Map@@PermissionComponent@To@Int@@$ModuleName$ |a_$50| |b_$50|)))))
    (forall( (|a_$51| $@Map@@PermissionComponent@To@Int@@) (|b_$51| TypeName))(!(= (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ (combine$$@Map@@PermissionComponent@To@Int@@$TypeName$ |a_$51| |b_$51|)) (and (IsGoodState$TypeName$ |b_$51|) (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ |a_$51|)))  :pattern ( (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ (combine$$@Map@@PermissionComponent@To@Int@@$TypeName$ |a_$51| |b_$51|)))))
    (forall( (|a_$52| $@Map@@PermissionComponent@To@Int@@) (|b_$52| $@Map@@$T0@@Int@To@$T0@@))(!(= (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ (combine$$@Map@@PermissionComponent@To@Int@@$$@Map@@$T0@@Int@To@$T0@@$ |a_$52| |b_$52|)) (and (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ |b_$52|) (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ |a_$52|)))  :pattern ( (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ (combine$$@Map@@PermissionComponent@To@Int@@$$@Map@@$T0@@Int@To@$T0@@$ |a_$52| |b_$52|)))))
    (forall( (|a_$53| PermissionComponent) (|b_$53| Bool))(!(= (IsGoodState$PermissionComponent$ (combine$PermissionComponent$Bool$ |a_$53| |b_$53|)) (and (IsGoodState$Bool$ |b_$53|) (IsGoodState$PermissionComponent$ |a_$53|)))  :pattern ( (IsGoodState$PermissionComponent$ (combine$PermissionComponent$Bool$ |a_$53| |b_$53|)))))
    (forall( (|a_$54| PermissionComponent) (|b_$54| Int))(!(= (IsGoodState$PermissionComponent$ (combine$PermissionComponent$Int$ |a_$54| |b_$54|)) (and (IsGoodState$Int$ |b_$54|) (IsGoodState$PermissionComponent$ |a_$54|)))  :pattern ( (IsGoodState$PermissionComponent$ (combine$PermissionComponent$Int$ |a_$54| |b_$54|)))))
    (forall( (|a_$55| PermissionComponent) (|b_$55| $@Map@@PermissionComponent@To@Int@@))(!(= (IsGoodState$PermissionComponent$ (combine$PermissionComponent$$@Map@@PermissionComponent@To@Int@@$ |a_$55| |b_$55|)) (and (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ |b_$55|) (IsGoodState$PermissionComponent$ |a_$55|)))  :pattern ( (IsGoodState$PermissionComponent$ (combine$PermissionComponent$$@Map@@PermissionComponent@To@Int@@$ |a_$55| |b_$55|)))))
    (forall( (|a_$56| PermissionComponent) (|b_$56| PermissionComponent))(!(= (IsGoodState$PermissionComponent$ (combine$PermissionComponent$PermissionComponent$ |a_$56| |b_$56|)) (and (IsGoodState$PermissionComponent$ |b_$56|) (IsGoodState$PermissionComponent$ |a_$56|)))  :pattern ( (IsGoodState$PermissionComponent$ (combine$PermissionComponent$PermissionComponent$ |a_$56| |b_$56|)))))
    (forall( (|a_$57| PermissionComponent) (|b_$57| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@))(!(= (IsGoodState$PermissionComponent$ (combine$PermissionComponent$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$57| |b_$57|)) (and (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |b_$57|) (IsGoodState$PermissionComponent$ |a_$57|)))  :pattern ( (IsGoodState$PermissionComponent$ (combine$PermissionComponent$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$57| |b_$57|)))))
    (forall( (|a_$58| PermissionComponent) (|b_$58| ref))(!(= (IsGoodState$PermissionComponent$ (combine$PermissionComponent$ref$ |a_$58| |b_$58|)) (and (IsGoodState$ref$ |b_$58|) (IsGoodState$PermissionComponent$ |a_$58|)))  :pattern ( (IsGoodState$PermissionComponent$ (combine$PermissionComponent$ref$ |a_$58| |b_$58|)))))
    (forall( (|a_$59| PermissionComponent) (|b_$59| Field$Int$))(!(= (IsGoodState$PermissionComponent$ (combine$PermissionComponent$Field$Int$$ |a_$59| |b_$59|)) (and (IsGoodState$Field$Int$$ |b_$59|) (IsGoodState$PermissionComponent$ |a_$59|)))  :pattern ( (IsGoodState$PermissionComponent$ (combine$PermissionComponent$Field$Int$$ |a_$59| |b_$59|)))))
    (forall( (|a_$6| Bool) (|b_$6| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@))(!(= (IsGoodState$Bool$ (combine$Bool$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$6| |b_$6|)) (and (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |b_$6|) (IsGoodState$Bool$ |a_$6|)))  :pattern ( (IsGoodState$Bool$ (combine$Bool$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$6| |b_$6|)))))
    (forall( (|a_$60| PermissionComponent) (|b_$60| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@))(!(= (IsGoodState$PermissionComponent$ (combine$PermissionComponent$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$60| |b_$60|)) (and (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |b_$60|) (IsGoodState$PermissionComponent$ |a_$60|)))  :pattern ( (IsGoodState$PermissionComponent$ (combine$PermissionComponent$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$60| |b_$60|)))))
    (forall( (|a_$61| PermissionComponent) (|b_$61| Field$Mu$))(!(= (IsGoodState$PermissionComponent$ (combine$PermissionComponent$Field$Mu$$ |a_$61| |b_$61|)) (and (IsGoodState$Field$Mu$$ |b_$61|) (IsGoodState$PermissionComponent$ |a_$61|)))  :pattern ( (IsGoodState$PermissionComponent$ (combine$PermissionComponent$Field$Mu$$ |a_$61| |b_$61|)))))
    (forall( (|a_$62| PermissionComponent) (|b_$62| Mu))(!(= (IsGoodState$PermissionComponent$ (combine$PermissionComponent$Mu$ |a_$62| |b_$62|)) (and (IsGoodState$Mu$ |b_$62|) (IsGoodState$PermissionComponent$ |a_$62|)))  :pattern ( (IsGoodState$PermissionComponent$ (combine$PermissionComponent$Mu$ |a_$62| |b_$62|)))))
    (forall( (|a_$63| PermissionComponent) (|b_$63| Field$Bool$))(!(= (IsGoodState$PermissionComponent$ (combine$PermissionComponent$Field$Bool$$ |a_$63| |b_$63|)) (and (IsGoodState$Field$Bool$$ |b_$63|) (IsGoodState$PermissionComponent$ |a_$63|)))  :pattern ( (IsGoodState$PermissionComponent$ (combine$PermissionComponent$Field$Bool$$ |a_$63| |b_$63|)))))
    (forall( (|a_$64| PermissionComponent) (|b_$64| $@Map@@ref@To@Int@@))(!(= (IsGoodState$PermissionComponent$ (combine$PermissionComponent$$@Map@@ref@To@Int@@$ |a_$64| |b_$64|)) (and (IsGoodState$$@Map@@ref@To@Int@@$ |b_$64|) (IsGoodState$PermissionComponent$ |a_$64|)))  :pattern ( (IsGoodState$PermissionComponent$ (combine$PermissionComponent$$@Map@@ref@To@Int@@$ |a_$64| |b_$64|)))))
    (forall( (|a_$65| PermissionComponent) (|b_$65| Field$ref$))(!(= (IsGoodState$PermissionComponent$ (combine$PermissionComponent$Field$ref$$ |a_$65| |b_$65|)) (and (IsGoodState$Field$ref$$ |b_$65|) (IsGoodState$PermissionComponent$ |a_$65|)))  :pattern ( (IsGoodState$PermissionComponent$ (combine$PermissionComponent$Field$ref$$ |a_$65| |b_$65|)))))
    (forall( (|a_$66| PermissionComponent) (|b_$66| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(!(= (IsGoodState$PermissionComponent$ (combine$PermissionComponent$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$66| |b_$66|)) (and (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |b_$66|) (IsGoodState$PermissionComponent$ |a_$66|)))  :pattern ( (IsGoodState$PermissionComponent$ (combine$PermissionComponent$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$66| |b_$66|)))))
    (forall( (|a_$67| PermissionComponent) (|b_$67| ModuleName))(!(= (IsGoodState$PermissionComponent$ (combine$PermissionComponent$ModuleName$ |a_$67| |b_$67|)) (and (IsGoodState$ModuleName$ |b_$67|) (IsGoodState$PermissionComponent$ |a_$67|)))  :pattern ( (IsGoodState$PermissionComponent$ (combine$PermissionComponent$ModuleName$ |a_$67| |b_$67|)))))
    (forall( (|a_$68| PermissionComponent) (|b_$68| TypeName))(!(= (IsGoodState$PermissionComponent$ (combine$PermissionComponent$TypeName$ |a_$68| |b_$68|)) (and (IsGoodState$TypeName$ |b_$68|) (IsGoodState$PermissionComponent$ |a_$68|)))  :pattern ( (IsGoodState$PermissionComponent$ (combine$PermissionComponent$TypeName$ |a_$68| |b_$68|)))))
    (forall( (|a_$69| PermissionComponent) (|b_$69| $@Map@@$T0@@Int@To@$T0@@))(!(= (IsGoodState$PermissionComponent$ (combine$PermissionComponent$$@Map@@$T0@@Int@To@$T0@@$ |a_$69| |b_$69|)) (and (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ |b_$69|) (IsGoodState$PermissionComponent$ |a_$69|)))  :pattern ( (IsGoodState$PermissionComponent$ (combine$PermissionComponent$$@Map@@$T0@@Int@To@$T0@@$ |a_$69| |b_$69|)))))
    (forall( (|a_$7| Bool) (|b_$7| ref))(!(= (IsGoodState$Bool$ (combine$Bool$ref$ |a_$7| |b_$7|)) (and (IsGoodState$ref$ |b_$7|) (IsGoodState$Bool$ |a_$7|)))  :pattern ( (IsGoodState$Bool$ (combine$Bool$ref$ |a_$7| |b_$7|)))))
    (forall( (|a_$70| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|b_$70| Bool))(!(= (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ |a_$70| |b_$70|)) (and (IsGoodState$Bool$ |b_$70|) (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$70|)))  :pattern ( (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ |a_$70| |b_$70|)))))
    (forall( (|a_$71| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|b_$71| Int))(!(= (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ |a_$71| |b_$71|)) (and (IsGoodState$Int$ |b_$71|) (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$71|)))  :pattern ( (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ |a_$71| |b_$71|)))))
    (forall( (|a_$72| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|b_$72| $@Map@@PermissionComponent@To@Int@@))(!(= (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@PermissionComponent@To@Int@@$ |a_$72| |b_$72|)) (and (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ |b_$72|) (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$72|)))  :pattern ( (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@PermissionComponent@To@Int@@$ |a_$72| |b_$72|)))))
    (forall( (|a_$73| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|b_$73| PermissionComponent))(!(= (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$PermissionComponent$ |a_$73| |b_$73|)) (and (IsGoodState$PermissionComponent$ |b_$73|) (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$73|)))  :pattern ( (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$PermissionComponent$ |a_$73| |b_$73|)))))
    (forall( (|a_$74| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|b_$74| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@))(!(= (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$74| |b_$74|)) (and (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |b_$74|) (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$74|)))  :pattern ( (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$74| |b_$74|)))))
    (forall( (|a_$75| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|b_$75| ref))(!(= (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ |a_$75| |b_$75|)) (and (IsGoodState$ref$ |b_$75|) (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$75|)))  :pattern ( (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ |a_$75| |b_$75|)))))
    (forall( (|a_$76| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|b_$76| Field$Int$))(!(= (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Field$Int$$ |a_$76| |b_$76|)) (and (IsGoodState$Field$Int$$ |b_$76|) (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$76|)))  :pattern ( (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Field$Int$$ |a_$76| |b_$76|)))))
    (forall( (|a_$77| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|b_$77| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@))(!(= (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$77| |b_$77|)) (and (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |b_$77|) (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$77|)))  :pattern ( (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$77| |b_$77|)))))
    (forall( (|a_$78| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|b_$78| Field$Mu$))(!(= (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Field$Mu$$ |a_$78| |b_$78|)) (and (IsGoodState$Field$Mu$$ |b_$78|) (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$78|)))  :pattern ( (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Field$Mu$$ |a_$78| |b_$78|)))))
    (forall( (|a_$79| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|b_$79| Mu))(!(= (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ |a_$79| |b_$79|)) (and (IsGoodState$Mu$ |b_$79|) (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$79|)))  :pattern ( (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ |a_$79| |b_$79|)))))
    (forall( (|a_$8| Bool) (|b_$8| Field$Int$))(!(= (IsGoodState$Bool$ (combine$Bool$Field$Int$$ |a_$8| |b_$8|)) (and (IsGoodState$Field$Int$$ |b_$8|) (IsGoodState$Bool$ |a_$8|)))  :pattern ( (IsGoodState$Bool$ (combine$Bool$Field$Int$$ |a_$8| |b_$8|)))))
    (forall( (|a_$80| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|b_$80| Field$Bool$))(!(= (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Field$Bool$$ |a_$80| |b_$80|)) (and (IsGoodState$Field$Bool$$ |b_$80|) (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$80|)))  :pattern ( (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Field$Bool$$ |a_$80| |b_$80|)))))
    (forall( (|a_$81| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|b_$81| $@Map@@ref@To@Int@@))(!(= (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@ref@To@Int@@$ |a_$81| |b_$81|)) (and (IsGoodState$$@Map@@ref@To@Int@@$ |b_$81|) (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$81|)))  :pattern ( (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@ref@To@Int@@$ |a_$81| |b_$81|)))))
    (forall( (|a_$82| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|b_$82| Field$ref$))(!(= (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Field$ref$$ |a_$82| |b_$82|)) (and (IsGoodState$Field$ref$$ |b_$82|) (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$82|)))  :pattern ( (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Field$ref$$ |a_$82| |b_$82|)))))
    (forall( (|a_$83| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|b_$83| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(!(= (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$83| |b_$83|)) (and (IsGoodState$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |b_$83|) (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$83|)))  :pattern ( (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |a_$83| |b_$83|)))))
    (forall( (|a_$84| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|b_$84| ModuleName))(!(= (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ModuleName$ |a_$84| |b_$84|)) (and (IsGoodState$ModuleName$ |b_$84|) (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$84|)))  :pattern ( (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ModuleName$ |a_$84| |b_$84|)))))
    (forall( (|a_$85| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|b_$85| TypeName))(!(= (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$TypeName$ |a_$85| |b_$85|)) (and (IsGoodState$TypeName$ |b_$85|) (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$85|)))  :pattern ( (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$TypeName$ |a_$85| |b_$85|)))))
    (forall( (|a_$86| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|b_$86| $@Map@@$T0@@Int@To@$T0@@))(!(= (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@Int@To@$T0@@$ |a_$86| |b_$86|)) (and (IsGoodState$$@Map@@$T0@@Int@To@$T0@@$ |b_$86|) (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$86|)))  :pattern ( (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@Int@To@$T0@@$ |a_$86| |b_$86|)))))
    (forall( (|a_$87| ref) (|b_$87| Bool))(!(= (IsGoodState$ref$ (combine$ref$Bool$ |a_$87| |b_$87|)) (and (IsGoodState$Bool$ |b_$87|) (IsGoodState$ref$ |a_$87|)))  :pattern ( (IsGoodState$ref$ (combine$ref$Bool$ |a_$87| |b_$87|)))))
    (forall( (|a_$88| ref) (|b_$88| Int))(!(= (IsGoodState$ref$ (combine$ref$Int$ |a_$88| |b_$88|)) (and (IsGoodState$Int$ |b_$88|) (IsGoodState$ref$ |a_$88|)))  :pattern ( (IsGoodState$ref$ (combine$ref$Int$ |a_$88| |b_$88|)))))
    (forall( (|a_$89| ref) (|b_$89| $@Map@@PermissionComponent@To@Int@@))(!(= (IsGoodState$ref$ (combine$ref$$@Map@@PermissionComponent@To@Int@@$ |a_$89| |b_$89|)) (and (IsGoodState$$@Map@@PermissionComponent@To@Int@@$ |b_$89|) (IsGoodState$ref$ |a_$89|)))  :pattern ( (IsGoodState$ref$ (combine$ref$$@Map@@PermissionComponent@To@Int@@$ |a_$89| |b_$89|)))))
    (forall( (|a_$9| Bool) (|b_$9| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@))(!(= (IsGoodState$Bool$ (combine$Bool$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$9| |b_$9|)) (and (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |b_$9|) (IsGoodState$Bool$ |a_$9|)))  :pattern ( (IsGoodState$Bool$ (combine$Bool$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$9| |b_$9|)))))
    (forall( (|a_$90| ref) (|b_$90| PermissionComponent))(!(= (IsGoodState$ref$ (combine$ref$PermissionComponent$ |a_$90| |b_$90|)) (and (IsGoodState$PermissionComponent$ |b_$90|) (IsGoodState$ref$ |a_$90|)))  :pattern ( (IsGoodState$ref$ (combine$ref$PermissionComponent$ |a_$90| |b_$90|)))))
    (forall( (|a_$91| ref) (|b_$91| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@))(!(= (IsGoodState$ref$ (combine$ref$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$91| |b_$91|)) (and (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |b_$91|) (IsGoodState$ref$ |a_$91|)))  :pattern ( (IsGoodState$ref$ (combine$ref$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |a_$91| |b_$91|)))))
    (forall( (|a_$92| ref) (|b_$92| ref))(!(= (IsGoodState$ref$ (combine$ref$ref$ |a_$92| |b_$92|)) (and (IsGoodState$ref$ |b_$92|) (IsGoodState$ref$ |a_$92|)))  :pattern ( (IsGoodState$ref$ (combine$ref$ref$ |a_$92| |b_$92|)))))
    (forall( (|a_$93| ref) (|b_$93| Field$Int$))(!(= (IsGoodState$ref$ (combine$ref$Field$Int$$ |a_$93| |b_$93|)) (and (IsGoodState$Field$Int$$ |b_$93|) (IsGoodState$ref$ |a_$93|)))  :pattern ( (IsGoodState$ref$ (combine$ref$Field$Int$$ |a_$93| |b_$93|)))))
    (forall( (|a_$94| ref) (|b_$94| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@))(!(= (IsGoodState$ref$ (combine$ref$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$94| |b_$94|)) (and (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |b_$94|) (IsGoodState$ref$ |a_$94|)))  :pattern ( (IsGoodState$ref$ (combine$ref$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |a_$94| |b_$94|)))))
    (forall( (|a_$95| ref) (|b_$95| Field$Mu$))(!(= (IsGoodState$ref$ (combine$ref$Field$Mu$$ |a_$95| |b_$95|)) (and (IsGoodState$Field$Mu$$ |b_$95|) (IsGoodState$ref$ |a_$95|)))  :pattern ( (IsGoodState$ref$ (combine$ref$Field$Mu$$ |a_$95| |b_$95|)))))
    (forall( (|a_$96| ref) (|b_$96| Mu))(!(= (IsGoodState$ref$ (combine$ref$Mu$ |a_$96| |b_$96|)) (and (IsGoodState$Mu$ |b_$96|) (IsGoodState$ref$ |a_$96|)))  :pattern ( (IsGoodState$ref$ (combine$ref$Mu$ |a_$96| |b_$96|)))))
    (forall( (|a_$97| ref) (|b_$97| Field$Bool$))(!(= (IsGoodState$ref$ (combine$ref$Field$Bool$$ |a_$97| |b_$97|)) (and (IsGoodState$Field$Bool$$ |b_$97|) (IsGoodState$ref$ |a_$97|)))  :pattern ( (IsGoodState$ref$ (combine$ref$Field$Bool$$ |a_$97| |b_$97|)))))
    (forall( (|a_$98| ref) (|b_$98| $@Map@@ref@To@Int@@))(!(= (IsGoodState$ref$ (combine$ref$$@Map@@ref@To@Int@@$ |a_$98| |b_$98|)) (and (IsGoodState$$@Map@@ref@To@Int@@$ |b_$98|) (IsGoodState$ref$ |a_$98|)))  :pattern ( (IsGoodState$ref$ (combine$ref$$@Map@@ref@To@Int@@$ |a_$98| |b_$98|)))))
    (forall( (|a_$99| ref) (|b_$99| Field$ref$))(!(= (IsGoodState$ref$ (combine$ref$Field$ref$$ |a_$99| |b_$99|)) (and (IsGoodState$Field$ref$$ |b_$99|) (IsGoodState$ref$ |a_$99|)))  :pattern ( (IsGoodState$ref$ (combine$ref$Field$ref$$ |a_$99| |b_$99|)))))
    (forall( (|con_$0_$0| Bool) (|a_$1_$0| Bool) (|b_$1_$0| Bool))(!(=> (not |con_$0_$0|) (= (ite$Bool$ |con_$0_$0| |a_$1_$0| |b_$1_$0|) |b_$1_$0|))  :pattern ( (ite$Bool$ |con_$0_$0| |a_$1_$0| |b_$1_$0|))))
    (forall( (|con_$0_$1| Bool) (|a_$1_$1| Int) (|b_$1_$1| Int))(!(=> (not |con_$0_$1|) (= (ite$Int$ |con_$0_$1| |a_$1_$1| |b_$1_$1|) |b_$1_$1|))  :pattern ( (ite$Int$ |con_$0_$1| |a_$1_$1| |b_$1_$1|))))
    (forall( (|con_$0_$10| Bool) (|a_$1_$10| Field$Bool$) (|b_$1_$10| Field$Bool$))(!(=> (not |con_$0_$10|) (= (ite$Field$Bool$$ |con_$0_$10| |a_$1_$10| |b_$1_$10|) |b_$1_$10|))  :pattern ( (ite$Field$Bool$$ |con_$0_$10| |a_$1_$10| |b_$1_$10|))))
    (forall( (|con_$0_$11| Bool) (|a_$1_$11| $@Map@@ref@To@Int@@) (|b_$1_$11| $@Map@@ref@To@Int@@))(!(=> (not |con_$0_$11|) (= (ite$$@Map@@ref@To@Int@@$ |con_$0_$11| |a_$1_$11| |b_$1_$11|) |b_$1_$11|))  :pattern ( (ite$$@Map@@ref@To@Int@@$ |con_$0_$11| |a_$1_$11| |b_$1_$11|))))
    (forall( (|con_$0_$12| Bool) (|a_$1_$12| Field$ref$) (|b_$1_$12| Field$ref$))(!(=> (not |con_$0_$12|) (= (ite$Field$ref$$ |con_$0_$12| |a_$1_$12| |b_$1_$12|) |b_$1_$12|))  :pattern ( (ite$Field$ref$$ |con_$0_$12| |a_$1_$12| |b_$1_$12|))))
    (forall( (|con_$0_$13| Bool) (|a_$1_$13| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$) (|b_$1_$13| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(!(=> (not |con_$0_$13|) (= (ite$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |con_$0_$13| |a_$1_$13| |b_$1_$13|) |b_$1_$13|))  :pattern ( (ite$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |con_$0_$13| |a_$1_$13| |b_$1_$13|))))
    (forall( (|con_$0_$14| Bool) (|a_$1_$14| ModuleName) (|b_$1_$14| ModuleName))(!(=> (not |con_$0_$14|) (= (ite$ModuleName$ |con_$0_$14| |a_$1_$14| |b_$1_$14|) |b_$1_$14|))  :pattern ( (ite$ModuleName$ |con_$0_$14| |a_$1_$14| |b_$1_$14|))))
    (forall( (|con_$0_$15| Bool) (|a_$1_$15| TypeName) (|b_$1_$15| TypeName))(!(=> (not |con_$0_$15|) (= (ite$TypeName$ |con_$0_$15| |a_$1_$15| |b_$1_$15|) |b_$1_$15|))  :pattern ( (ite$TypeName$ |con_$0_$15| |a_$1_$15| |b_$1_$15|))))
    (forall( (|con_$0_$16| Bool) (|a_$1_$16| $@Map@@$T0@@Int@To@$T0@@) (|b_$1_$16| $@Map@@$T0@@Int@To@$T0@@))(!(=> (not |con_$0_$16|) (= (ite$$@Map@@$T0@@Int@To@$T0@@$ |con_$0_$16| |a_$1_$16| |b_$1_$16|) |b_$1_$16|))  :pattern ( (ite$$@Map@@$T0@@Int@To@$T0@@$ |con_$0_$16| |a_$1_$16| |b_$1_$16|))))
    (forall( (|con_$0_$2| Bool) (|a_$1_$2| $@Map@@PermissionComponent@To@Int@@) (|b_$1_$2| $@Map@@PermissionComponent@To@Int@@))(!(=> (not |con_$0_$2|) (= (ite$$@Map@@PermissionComponent@To@Int@@$ |con_$0_$2| |a_$1_$2| |b_$1_$2|) |b_$1_$2|))  :pattern ( (ite$$@Map@@PermissionComponent@To@Int@@$ |con_$0_$2| |a_$1_$2| |b_$1_$2|))))
    (forall( (|con_$0_$3| Bool) (|a_$1_$3| PermissionComponent) (|b_$1_$3| PermissionComponent))(!(=> (not |con_$0_$3|) (= (ite$PermissionComponent$ |con_$0_$3| |a_$1_$3| |b_$1_$3|) |b_$1_$3|))  :pattern ( (ite$PermissionComponent$ |con_$0_$3| |a_$1_$3| |b_$1_$3|))))
    (forall( (|con_$0_$4| Bool) (|a_$1_$4| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|b_$1_$4| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@))(!(=> (not |con_$0_$4|) (= (ite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |con_$0_$4| |a_$1_$4| |b_$1_$4|) |b_$1_$4|))  :pattern ( (ite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |con_$0_$4| |a_$1_$4| |b_$1_$4|))))
    (forall( (|con_$0_$5| Bool) (|a_$1_$5| ref) (|b_$1_$5| ref))(!(=> (not |con_$0_$5|) (= (ite$ref$ |con_$0_$5| |a_$1_$5| |b_$1_$5|) |b_$1_$5|))  :pattern ( (ite$ref$ |con_$0_$5| |a_$1_$5| |b_$1_$5|))))
    (forall( (|con_$0_$6| Bool) (|a_$1_$6| Field$Int$) (|b_$1_$6| Field$Int$))(!(=> (not |con_$0_$6|) (= (ite$Field$Int$$ |con_$0_$6| |a_$1_$6| |b_$1_$6|) |b_$1_$6|))  :pattern ( (ite$Field$Int$$ |con_$0_$6| |a_$1_$6| |b_$1_$6|))))
    (forall( (|con_$0_$7| Bool) (|a_$1_$7| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@) (|b_$1_$7| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@))(!(=> (not |con_$0_$7|) (= (ite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |con_$0_$7| |a_$1_$7| |b_$1_$7|) |b_$1_$7|))  :pattern ( (ite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |con_$0_$7| |a_$1_$7| |b_$1_$7|))))
    (forall( (|con_$0_$8| Bool) (|a_$1_$8| Field$Mu$) (|b_$1_$8| Field$Mu$))(!(=> (not |con_$0_$8|) (= (ite$Field$Mu$$ |con_$0_$8| |a_$1_$8| |b_$1_$8|) |b_$1_$8|))  :pattern ( (ite$Field$Mu$$ |con_$0_$8| |a_$1_$8| |b_$1_$8|))))
    (forall( (|con_$0_$9| Bool) (|a_$1_$9| Mu) (|b_$1_$9| Mu))(!(=> (not |con_$0_$9|) (= (ite$Mu$ |con_$0_$9| |a_$1_$9| |b_$1_$9|) |b_$1_$9|))  :pattern ( (ite$Mu$ |con_$0_$9| |a_$1_$9| |b_$1_$9|))))
    (forall( (|con_$1| Bool) (|a_$0_$0| Bool) (|b_$0_$0| Bool))(!(=> |con_$1| (= (ite$Bool$ |con_$1| |a_$0_$0| |b_$0_$0|) |a_$0_$0|))  :pattern ( (ite$Bool$ |con_$1| |a_$0_$0| |b_$0_$0|))))
    (forall( (|con_$10| Bool) (|a_$0_$9| Mu) (|b_$0_$9| Mu))(!(=> |con_$10| (= (ite$Mu$ |con_$10| |a_$0_$9| |b_$0_$9|) |a_$0_$9|))  :pattern ( (ite$Mu$ |con_$10| |a_$0_$9| |b_$0_$9|))))
    (forall( (|con_$11| Bool) (|a_$0_$10| Field$Bool$) (|b_$0_$10| Field$Bool$))(!(=> |con_$11| (= (ite$Field$Bool$$ |con_$11| |a_$0_$10| |b_$0_$10|) |a_$0_$10|))  :pattern ( (ite$Field$Bool$$ |con_$11| |a_$0_$10| |b_$0_$10|))))
    (forall( (|con_$12| Bool) (|a_$0_$11| $@Map@@ref@To@Int@@) (|b_$0_$11| $@Map@@ref@To@Int@@))(!(=> |con_$12| (= (ite$$@Map@@ref@To@Int@@$ |con_$12| |a_$0_$11| |b_$0_$11|) |a_$0_$11|))  :pattern ( (ite$$@Map@@ref@To@Int@@$ |con_$12| |a_$0_$11| |b_$0_$11|))))
    (forall( (|con_$13| Bool) (|a_$0_$12| Field$ref$) (|b_$0_$12| Field$ref$))(!(=> |con_$13| (= (ite$Field$ref$$ |con_$13| |a_$0_$12| |b_$0_$12|) |a_$0_$12|))  :pattern ( (ite$Field$ref$$ |con_$13| |a_$0_$12| |b_$0_$12|))))
    (forall( (|con_$14| Bool) (|a_$0_$13| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$) (|b_$0_$13| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(!(=> |con_$14| (= (ite$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |con_$14| |a_$0_$13| |b_$0_$13|) |a_$0_$13|))  :pattern ( (ite$Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$ |con_$14| |a_$0_$13| |b_$0_$13|))))
    (forall( (|con_$15| Bool) (|a_$0_$14| ModuleName) (|b_$0_$14| ModuleName))(!(=> |con_$15| (= (ite$ModuleName$ |con_$15| |a_$0_$14| |b_$0_$14|) |a_$0_$14|))  :pattern ( (ite$ModuleName$ |con_$15| |a_$0_$14| |b_$0_$14|))))
    (forall( (|con_$16| Bool) (|a_$0_$15| TypeName) (|b_$0_$15| TypeName))(!(=> |con_$16| (= (ite$TypeName$ |con_$16| |a_$0_$15| |b_$0_$15|) |a_$0_$15|))  :pattern ( (ite$TypeName$ |con_$16| |a_$0_$15| |b_$0_$15|))))
    (forall( (|con_$17| Bool) (|a_$0_$16| $@Map@@$T0@@Int@To@$T0@@) (|b_$0_$16| $@Map@@$T0@@Int@To@$T0@@))(!(=> |con_$17| (= (ite$$@Map@@$T0@@Int@To@$T0@@$ |con_$17| |a_$0_$16| |b_$0_$16|) |a_$0_$16|))  :pattern ( (ite$$@Map@@$T0@@Int@To@$T0@@$ |con_$17| |a_$0_$16| |b_$0_$16|))))
    (forall( (|con_$2| Bool) (|a_$0_$1| Int) (|b_$0_$1| Int))(!(=> |con_$2| (= (ite$Int$ |con_$2| |a_$0_$1| |b_$0_$1|) |a_$0_$1|))  :pattern ( (ite$Int$ |con_$2| |a_$0_$1| |b_$0_$1|))))
    (forall( (|con_$3| Bool) (|a_$0_$2| $@Map@@PermissionComponent@To@Int@@) (|b_$0_$2| $@Map@@PermissionComponent@To@Int@@))(!(=> |con_$3| (= (ite$$@Map@@PermissionComponent@To@Int@@$ |con_$3| |a_$0_$2| |b_$0_$2|) |a_$0_$2|))  :pattern ( (ite$$@Map@@PermissionComponent@To@Int@@$ |con_$3| |a_$0_$2| |b_$0_$2|))))
    (forall( (|con_$4| Bool) (|a_$0_$3| PermissionComponent) (|b_$0_$3| PermissionComponent))(!(=> |con_$4| (= (ite$PermissionComponent$ |con_$4| |a_$0_$3| |b_$0_$3|) |a_$0_$3|))  :pattern ( (ite$PermissionComponent$ |con_$4| |a_$0_$3| |b_$0_$3|))))
    (forall( (|con_$5| Bool) (|a_$0_$4| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|b_$0_$4| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@))(!(=> |con_$5| (= (ite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |con_$5| |a_$0_$4| |b_$0_$4|) |a_$0_$4|))  :pattern ( (ite$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ |con_$5| |a_$0_$4| |b_$0_$4|))))
    (forall( (|con_$6| Bool) (|a_$0_$5| ref) (|b_$0_$5| ref))(!(=> |con_$6| (= (ite$ref$ |con_$6| |a_$0_$5| |b_$0_$5|) |a_$0_$5|))  :pattern ( (ite$ref$ |con_$6| |a_$0_$5| |b_$0_$5|))))
    (forall( (|con_$7| Bool) (|a_$0_$6| Field$Int$) (|b_$0_$6| Field$Int$))(!(=> |con_$7| (= (ite$Field$Int$$ |con_$7| |a_$0_$6| |b_$0_$6|) |a_$0_$6|))  :pattern ( (ite$Field$Int$$ |con_$7| |a_$0_$6| |b_$0_$6|))))
    (forall( (|con_$8| Bool) (|a_$0_$7| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@) (|b_$0_$7| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@))(!(=> |con_$8| (= (ite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |con_$8| |a_$0_$7| |b_$0_$7|) |a_$0_$7|))  :pattern ( (ite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |con_$8| |a_$0_$7| |b_$0_$7|))))
    (forall( (|con_$9| Bool) (|a_$0_$8| Field$Mu$) (|b_$0_$8| Field$Mu$))(!(=> |con_$9| (= (ite$Field$Mu$$ |con_$9| |a_$0_$8| |b_$0_$8|) |a_$0_$8|))  :pattern ( (ite$Field$Mu$$ |con_$9| |a_$0_$8| |b_$0_$8|))))
    (forall( (|f_$10_$0| Field$Bool$))(=> (NonPredicateField$Bool$ |f_$10_$0|) (not (PredicateField$Bool$ |f_$10_$0|))))
    (forall( (|f_$10_$1| Field$Int$))(=> (NonPredicateField$Int$ |f_$10_$1|) (not (PredicateField$Int$ |f_$10_$1|))))
    (forall( (|f_$10_$2| Field$ref$))(=> (NonPredicateField$ref$ |f_$10_$2|) (not (PredicateField$ref$ |f_$10_$2|))))
    (forall( (|f_$10_$3| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(=> (NonPredicateField$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |f_$10_$3|) (not (PredicateField$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |f_$10_$3|))))
    (forall( (|f_$10_$4| Field$Mu$))(=> (NonPredicateField$Mu$ |f_$10_$4|) (not (PredicateField$Mu$ |f_$10_$4|))))
    (forall( (|f_$11_$0| Field$Bool$))(=> (PredicateField$Bool$ |f_$11_$0|) (not (NonPredicateField$Bool$ |f_$11_$0|))))
    (forall( (|f_$11_$1| Field$Int$))(=> (PredicateField$Int$ |f_$11_$1|) (not (NonPredicateField$Int$ |f_$11_$1|))))
    (forall( (|f_$11_$2| Field$ref$))(=> (PredicateField$ref$ |f_$11_$2|) (not (NonPredicateField$ref$ |f_$11_$2|))))
    (forall( (|f_$11_$3| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(=> (PredicateField$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |f_$11_$3|) (not (NonPredicateField$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |f_$11_$3|))))
    (forall( (|f_$11_$4| Field$Mu$))(=> (PredicateField$Mu$ |f_$11_$4|) (not (NonPredicateField$Mu$ |f_$11_$4|))))
    (forall( (|h_$0| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@) (|m_$6| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$7| ref) (|q| ref))(!(=> (and (or (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ |h_$0| |q| rdheld) (< 0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ |h_$0| |q| held))) (and (and (wf |h_$0| |m_$6|) (not (= |q| |o_$7|))) (or (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ |h_$0| |o_$7| rdheld) (< 0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ |h_$0| |o_$7| held))))) (not (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ |h_$0| |q| mu) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ |h_$0| |o_$7| mu))))  :pattern ( (wf |h_$0| |m_$6|) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ |h_$0| |o_$7| mu) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ |h_$0| |q| mu))))
    (forall( (|Heap_$0| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@) (|Mask_$0| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|this_$0| ref))(!(=> (and (wf |Heap_$0| |Mask_$0|) (= module@default CurrentModule)) (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ |Heap_$0| |this_$0| Future.q) ($@Future.getQ |Heap_$0| |Mask_$0| |this_$0|)))  :pattern ( ($@Future.getQ |Heap_$0| |Mask_$0| |this_$0|))))
    (forall( (|Heap_$1| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@) (|Mask_$1| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|this_$1| ref))(!(=> (and (and (wf |Heap_$1| |Mask_$1|) (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ nostate (combine$ref$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ |Heap_$1| |this_$1| Future.q) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |Heap_$1| (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ |Heap_$1| |this_$1| Future.q) FutureChannel.valid))))) CanAssumeFunctionDefs) (= ($@Future.getQ |Heap_$1| |Mask_$1| |this_$1|) ($@@Future.getQ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ nostate (combine$ref$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ |Heap_$1| |this_$1| Future.q) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |Heap_$1| (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ |Heap_$1| |this_$1| Future.q) FutureChannel.valid))) |this_$1|)))  :pattern ( ($@Future.getQ |Heap_$1| |Mask_$1| |this_$1|))))
    (forall( (|Heap_$10| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@) (|Mask_$10| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|this_$10| ref))(!(=> (and (and (wf |Heap_$10| |Mask_$10|) (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ nostate (combine$ref$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ |Heap_$10| |this_$10| FactorialCont.q) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |Heap_$10| (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ |Heap_$10| |this_$10| FactorialCont.q) FactorialContChannel.valid))))) CanAssumeFunctionDefs) (= ($@FactorialCont.getQ |Heap_$10| |Mask_$10| |this_$10|) ($@@FactorialCont.getQ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ nostate (combine$ref$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ |Heap_$10| |this_$10| FactorialCont.q) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |Heap_$10| (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ |Heap_$10| |this_$10| FactorialCont.q) FactorialContChannel.valid))) |this_$10|)))  :pattern ( ($@FactorialCont.getQ |Heap_$10| |Mask_$10| |this_$10|))))
    (forall( (|Heap_$2| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@) (|Mask_$2| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|this_$2| ref) (|v#49| Int))(!(=> (and (wf |Heap_$2| |Mask_$2|) (= module@default CurrentModule)) (= (ite$Int$ (= |v#49| 0) 1 (* |v#49| ($@Message.factorial |Heap_$2| |Mask_$2| |this_$2| (- |v#49| 1)))) ($@Message.factorial |Heap_$2| |Mask_$2| |this_$2| |v#49|)))  :pattern ( ($@Message.factorial |Heap_$2| |Mask_$2| |this_$2| |v#49|))))
    (forall( (|Heap_$3| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@) (|Mask_$3| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|this_$3| ref) (|v#49_$0| Int))(!(= ($@Message.factorial |Heap_$3| |Mask_$3| |this_$3| |v#49_$0|) ($@Message.factorial@limited |Heap_$3| |Mask_$3| |this_$3| |v#49_$0|))  :pattern ( ($@Message.factorial |Heap_$3| |Mask_$3| |this_$3| |v#49_$0|))))
    (forall( (|Heap_$4| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@) (|Mask_$4| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|this_$4| ref) (|v#49_$1| Int))(!(=> (and (and (wf |Heap_$4| |Mask_$4|) (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ nostate nostate))) CanAssumeFunctionDefs) (= ($@Message.factorial@limited |Heap_$4| |Mask_$4| |this_$4| |v#49_$1|) ($@@Message.factorial (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ nostate nostate) |this_$4| |v#49_$1|)))  :pattern ( ($@Message.factorial@limited |Heap_$4| |Mask_$4| |this_$4| |v#49_$1|))))
    (forall( (|Heap_$5| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@) (|Mask_$5| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|this_$5| ref) (|v#49_$2| Int))(!(=> (and (wf |Heap_$5| |Mask_$5|) CanAssumeFunctionDefs) (=> (= |v#49_$2| 0) (= 1 ($@Message.factorial |Heap_$5| |Mask_$5| |this_$5| |v#49_$2|))))  :pattern ( ($@Message.factorial |Heap_$5| |Mask_$5| |this_$5| |v#49_$2|))))
    (forall( (|Heap_$6| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@) (|Mask_$6| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|this_$6| ref) (|v#49_$3| Int))(!(=> (and (wf |Heap_$6| |Mask_$6|) CanAssumeFunctionDefs) (=> (> |v#49_$3| 0) (= (* |v#49_$3| ($@Message.factorial |Heap_$6| |Mask_$6| |this_$6| (- |v#49_$3| 1))) ($@Message.factorial |Heap_$6| |Mask_$6| |this_$6| |v#49_$3|))))  :pattern ( ($@Message.factorial |Heap_$6| |Mask_$6| |this_$6| |v#49_$3|))))
    (forall( (|Heap_$7| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@) (|Mask_$7| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|this_$7| ref))(!(=> (and (wf |Heap_$7| |Mask_$7|) (= module@default CurrentModule)) (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ |Heap_$7| |this_$7| FactorialActor.q) ($@FactorialActor.getQ |Heap_$7| |Mask_$7| |this_$7|)))  :pattern ( ($@FactorialActor.getQ |Heap_$7| |Mask_$7| |this_$7|))))
    (forall( (|Heap_$8| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@) (|Mask_$8| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|this_$8| ref))(!(=> (and (and (wf |Heap_$8| |Mask_$8|) (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ nostate (combine$ref$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ |Heap_$8| |this_$8| FactorialActor.q) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |Heap_$8| (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ |Heap_$8| |this_$8| FactorialActor.q) FactorialActorChannel.valid))))) CanAssumeFunctionDefs) (= ($@FactorialActor.getQ |Heap_$8| |Mask_$8| |this_$8|) ($@@FactorialActor.getQ (combine$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ nostate (combine$ref$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ |Heap_$8| |this_$8| FactorialActor.q) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |Heap_$8| (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ |Heap_$8| |this_$8| FactorialActor.q) FactorialActorChannel.valid))) |this_$8|)))  :pattern ( ($@FactorialActor.getQ |Heap_$8| |Mask_$8| |this_$8|))))
    (forall( (|Heap_$9| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@) (|Mask_$9| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|this_$9| ref))(!(=> (and (wf |Heap_$9| |Mask_$9|) (= module@default CurrentModule)) (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ |Heap_$9| |this_$9| FactorialCont.q) ($@FactorialCont.getQ |Heap_$9| |Mask_$9| |this_$9|)))  :pattern ( ($@FactorialCont.getQ |Heap_$9| |Mask_$9| |this_$9|))))
    (forall( (|ih| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@) (|h| $@Map@@$T0@@ref@Field$$T0$@To@$T0@@) (|m_$2| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@))(!(= (IsGoodInhaleState |ih| |h| |m_$2|) (and (forall( (|o_$5| ref))(!(=> (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ |h| |o_$5| rdheld) (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ |ih| |o_$5| mu) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ |h| |o_$5| mu)))  :pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ |h| |o_$5| rdheld)))) (and (forall( (|o_$4| ref))(!(=> (< 0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ |h| |o_$4| held)) (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ |ih| |o_$4| mu) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ |h| |o_$4| mu)))  :pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ |h| |o_$4| held)))) (and (forall( (|o_$3| ref))(!(= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ |ih| |o_$3| rdheld) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ |h| |o_$3| rdheld))  :pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ |ih| |o_$3| rdheld)))) (and (forall( (|o_$2| ref))(!(= (< 0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ |ih| |o_$2| held)) (< 0 (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ |h| |o_$2| held)))  :pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ |ih| |o_$2| held)))) (and (forall( (|o_$1_$4| ref) (|f_$0_$4| Field$Mu$))(!(=> (CanRead$Mu$ |m_$2| |o_$1_$4| |f_$0_$4|) (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ |ih| |o_$1_$4| |f_$0_$4|) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ |h| |o_$1_$4| |f_$0_$4|)))  :pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Mu$ |ih| |o_$1_$4| |f_$0_$4|)))) (and (forall( (|o_$1_$3| ref) (|f_$0_$3| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(!(=> (CanRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$2| |o_$1_$3| |f_$0_$3|) (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |ih| |o_$1_$3| |f_$0_$3|) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |h| |o_$1_$3| |f_$0_$3|)))  :pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |ih| |o_$1_$3| |f_$0_$3|)))) (and (forall( (|o_$1_$2| ref) (|f_$0_$2| Field$ref$))(!(=> (CanRead$ref$ |m_$2| |o_$1_$2| |f_$0_$2|) (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ |ih| |o_$1_$2| |f_$0_$2|) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ |h| |o_$1_$2| |f_$0_$2|)))  :pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ref$ |ih| |o_$1_$2| |f_$0_$2|)))) (and (forall( (|o_$1_$1| ref) (|f_$0_$1| Field$Int$))(!(=> (CanRead$Int$ |m_$2| |o_$1_$1| |f_$0_$1|) (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ |ih| |o_$1_$1| |f_$0_$1|) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ |h| |o_$1_$1| |f_$0_$1|)))  :pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Int$ |ih| |o_$1_$1| |f_$0_$1|)))) (forall( (|o_$1_$0| ref) (|f_$0_$0| Field$Bool$))(!(=> (CanRead$Bool$ |m_$2| |o_$1_$0| |f_$0_$0|) (= (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ |ih| |o_$1_$0| |f_$0_$0|) (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ |h| |o_$1_$0| |f_$0_$0|)))  :pattern ( (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$Bool$ |ih| |o_$1_$0| |f_$0_$0|)))))))))))))  :pattern ( (IsGoodInhaleState |ih| |h| |m_$2|))))
    (forall( (|m_$0| Mu) (|n_$1| Mu) (|o_$0| Mu))(!(=> (and (MuBelow |n_$1| |o_$0|) (MuBelow |m_$0| |n_$1|)) (MuBelow |m_$0| |o_$0|))  :pattern ( (MuBelow |m_$0| |n_$1|) (MuBelow |n_$1| |o_$0|))))
    (forall( (|m_$1| Mu) (|n_$2| Mu))(=> (MuBelow |m_$1| |n_$2|) (not (= |n_$2| $LockBottom))))
    (forall( (|m_$3_$0| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|obj_$1| ref) (|f_$1_$0| Field$Bool$))(!(= (CanRead$Bool$ |m_$3_$0| |obj_$1| |f_$1_$0|) (or (< 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ |m_$3_$0| |obj_$1| |f_$1_$0|) perm$R)) (< 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ |m_$3_$0| |obj_$1| |f_$1_$0|) perm$N))))  :expand  false :pattern ( (CanRead$Bool$ |m_$3_$0| |obj_$1| |f_$1_$0|))))
    (forall( (|m_$3_$1| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|obj_$2| ref) (|f_$1_$1| Field$Int$))(!(= (CanRead$Int$ |m_$3_$1| |obj_$2| |f_$1_$1|) (or (< 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ |m_$3_$1| |obj_$2| |f_$1_$1|) perm$R)) (< 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ |m_$3_$1| |obj_$2| |f_$1_$1|) perm$N))))  :expand  false :pattern ( (CanRead$Int$ |m_$3_$1| |obj_$2| |f_$1_$1|))))
    (forall( (|m_$3_$2| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|obj_$3| ref) (|f_$1_$2| Field$ref$))(!(= (CanRead$ref$ |m_$3_$2| |obj_$3| |f_$1_$2|) (or (< 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ |m_$3_$2| |obj_$3| |f_$1_$2|) perm$R)) (< 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ |m_$3_$2| |obj_$3| |f_$1_$2|) perm$N))))  :expand  false :pattern ( (CanRead$ref$ |m_$3_$2| |obj_$3| |f_$1_$2|))))
    (forall( (|m_$3_$3| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|obj_$4| ref) (|f_$1_$3| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(!(= (CanRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$3_$3| |obj_$4| |f_$1_$3|) (or (< 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$3_$3| |obj_$4| |f_$1_$3|) perm$R)) (< 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$3_$3| |obj_$4| |f_$1_$3|) perm$N))))  :expand  false :pattern ( (CanRead$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$3_$3| |obj_$4| |f_$1_$3|))))
    (forall( (|m_$3_$4| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|obj_$5| ref) (|f_$1_$4| Field$Mu$))(!(= (CanRead$Mu$ |m_$3_$4| |obj_$5| |f_$1_$4|) (or (< 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ |m_$3_$4| |obj_$5| |f_$1_$4|) perm$R)) (< 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ |m_$3_$4| |obj_$5| |f_$1_$4|) perm$N))))  :expand  false :pattern ( (CanRead$Mu$ |m_$3_$4| |obj_$5| |f_$1_$4|))))
    (forall( (|m_$4_$0| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|obj_$0_$0| ref) (|f_$2_$0| Field$Bool$))(!(= (CanWrite$Bool$ |m_$4_$0| |obj_$0_$0| |f_$2_$0|) (and (= Permission$FullFraction (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ |m_$4_$0| |obj_$0_$0| |f_$2_$0|) perm$R)) (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ |m_$4_$0| |obj_$0_$0| |f_$2_$0|) perm$N) 0)))  :expand  false :pattern ( (CanWrite$Bool$ |m_$4_$0| |obj_$0_$0| |f_$2_$0|))))
    (forall( (|m_$4_$1| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|obj_$0_$1| ref) (|f_$2_$1| Field$Int$))(!(= (CanWrite$Int$ |m_$4_$1| |obj_$0_$1| |f_$2_$1|) (and (= Permission$FullFraction (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ |m_$4_$1| |obj_$0_$1| |f_$2_$1|) perm$R)) (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ |m_$4_$1| |obj_$0_$1| |f_$2_$1|) perm$N) 0)))  :expand  false :pattern ( (CanWrite$Int$ |m_$4_$1| |obj_$0_$1| |f_$2_$1|))))
    (forall( (|m_$4_$2| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|obj_$0_$2| ref) (|f_$2_$2| Field$ref$))(!(= (CanWrite$ref$ |m_$4_$2| |obj_$0_$2| |f_$2_$2|) (and (= Permission$FullFraction (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ |m_$4_$2| |obj_$0_$2| |f_$2_$2|) perm$R)) (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ |m_$4_$2| |obj_$0_$2| |f_$2_$2|) perm$N) 0)))  :expand  false :pattern ( (CanWrite$ref$ |m_$4_$2| |obj_$0_$2| |f_$2_$2|))))
    (forall( (|m_$4_$3| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|obj_$0_$3| ref) (|f_$2_$3| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(!(= (CanWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$4_$3| |obj_$0_$3| |f_$2_$3|) (and (= Permission$FullFraction (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$4_$3| |obj_$0_$3| |f_$2_$3|) perm$R)) (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$4_$3| |obj_$0_$3| |f_$2_$3|) perm$N) 0)))  :expand  false :pattern ( (CanWrite$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$4_$3| |obj_$0_$3| |f_$2_$3|))))
    (forall( (|m_$4_$4| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|obj_$0_$4| ref) (|f_$2_$4| Field$Mu$))(!(= (CanWrite$Mu$ |m_$4_$4| |obj_$0_$4| |f_$2_$4|) (and (= Permission$FullFraction (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ |m_$4_$4| |obj_$0_$4| |f_$2_$4|) perm$R)) (= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ |m_$4_$4| |obj_$0_$4| |f_$2_$4|) perm$N) 0)))  :expand  false :pattern ( (CanWrite$Mu$ |m_$4_$4| |obj_$0_$4| |f_$2_$4|))))
    (forall( (|m_$5| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@))(!(= (IsGoodMask |m_$5|) (and (forall( (|o_$6_$4| ref) (|f_$3_$4| Field$Mu$))(and (and (=> (NonPredicateField$Mu$ |f_$3_$4|) (and (<= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ |m_$5| |o_$6_$4| |f_$3_$4|) perm$R) Permission$FullFraction) (=> (< 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ |m_$5| |o_$6_$4| |f_$3_$4|) perm$N)) (< (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ |m_$5| |o_$6_$4| |f_$3_$4|) perm$R) Permission$FullFraction)))) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ |m_$5| |o_$6_$4| |f_$3_$4|) perm$R))) (=> (< (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ |m_$5| |o_$6_$4| |f_$3_$4|) perm$N) 0) (< 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ |m_$5| |o_$6_$4| |f_$3_$4|) perm$R))))) (and (forall( (|o_$6_$3| ref) (|f_$3_$3| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(and (and (=> (NonPredicateField$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |f_$3_$3|) (and (<= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$5| |o_$6_$3| |f_$3_$3|) perm$R) Permission$FullFraction) (=> (< 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$5| |o_$6_$3| |f_$3_$3|) perm$N)) (< (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$5| |o_$6_$3| |f_$3_$3|) perm$R) Permission$FullFraction)))) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$5| |o_$6_$3| |f_$3_$3|) perm$R))) (=> (< (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$5| |o_$6_$3| |f_$3_$3|) perm$N) 0) (< 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$5| |o_$6_$3| |f_$3_$3|) perm$R))))) (and (forall( (|o_$6_$2| ref) (|f_$3_$2| Field$ref$))(and (and (=> (NonPredicateField$ref$ |f_$3_$2|) (and (<= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ |m_$5| |o_$6_$2| |f_$3_$2|) perm$R) Permission$FullFraction) (=> (< 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ |m_$5| |o_$6_$2| |f_$3_$2|) perm$N)) (< (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ |m_$5| |o_$6_$2| |f_$3_$2|) perm$R) Permission$FullFraction)))) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ |m_$5| |o_$6_$2| |f_$3_$2|) perm$R))) (=> (< (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ |m_$5| |o_$6_$2| |f_$3_$2|) perm$N) 0) (< 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ |m_$5| |o_$6_$2| |f_$3_$2|) perm$R))))) (and (forall( (|o_$6_$1| ref) (|f_$3_$1| Field$Int$))(and (and (=> (NonPredicateField$Int$ |f_$3_$1|) (and (<= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ |m_$5| |o_$6_$1| |f_$3_$1|) perm$R) Permission$FullFraction) (=> (< 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ |m_$5| |o_$6_$1| |f_$3_$1|) perm$N)) (< (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ |m_$5| |o_$6_$1| |f_$3_$1|) perm$R) Permission$FullFraction)))) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ |m_$5| |o_$6_$1| |f_$3_$1|) perm$R))) (=> (< (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ |m_$5| |o_$6_$1| |f_$3_$1|) perm$N) 0) (< 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ |m_$5| |o_$6_$1| |f_$3_$1|) perm$R))))) (forall( (|o_$6_$0| ref) (|f_$3_$0| Field$Bool$))(and (and (=> (NonPredicateField$Bool$ |f_$3_$0|) (and (<= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ |m_$5| |o_$6_$0| |f_$3_$0|) perm$R) Permission$FullFraction) (=> (< 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ |m_$5| |o_$6_$0| |f_$3_$0|) perm$N)) (< (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ |m_$5| |o_$6_$0| |f_$3_$0|) perm$R) Permission$FullFraction)))) (<= 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ |m_$5| |o_$6_$0| |f_$3_$0|) perm$R))) (=> (< (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ |m_$5| |o_$6_$0| |f_$3_$0|) perm$N) 0) (< 0 (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ |m_$5| |o_$6_$0| |f_$3_$0|) perm$R))))))))))  :expand  true :pattern ( (IsGoodMask |m_$5|))))
    (forall( (|m_$7_$0| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$8_$0| ref) (|f_$4_$0| Field$Bool$) (|howMuch_$3| Int) (|q_$0_$0| ref) (|g_$4| Field$Bool$))(!(= (ite$Int$ (and (= |o_$8_$0| |q_$0_$0|) (= |f_$4_$0| |g_$4|)) (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ |m_$7_$0| |q_$0_$0| |g_$4|) perm$R) |howMuch_$3|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ |m_$7_$0| |q_$0_$0| |g_$4|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ (DecPerm$Bool$ |m_$7_$0| |o_$8_$0| |f_$4_$0| |howMuch_$3|) |q_$0_$0| |g_$4|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ (DecPerm$Bool$ |m_$7_$0| |o_$8_$0| |f_$4_$0| |howMuch_$3|) |q_$0_$0| |g_$4|) perm$R))))
    (forall( (|m_$7_$1| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$8_$1| ref) (|f_$4_$1| Field$Int$) (|howMuch_$4| Int) (|q_$0_$1| ref) (|g_$5| Field$Bool$))(!(= (ite$Int$ (and (= |o_$8_$1| |q_$0_$1|) false) (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ |m_$7_$1| |q_$0_$1| |g_$5|) perm$R) |howMuch_$4|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ |m_$7_$1| |q_$0_$1| |g_$5|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ (DecPerm$Int$ |m_$7_$1| |o_$8_$1| |f_$4_$1| |howMuch_$4|) |q_$0_$1| |g_$5|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ (DecPerm$Int$ |m_$7_$1| |o_$8_$1| |f_$4_$1| |howMuch_$4|) |q_$0_$1| |g_$5|) perm$R))))
    (forall( (|m_$7_$10| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$8_$10| ref) (|f_$4_$10| Field$Bool$) (|howMuch_$13| Int) (|q_$0_$10| ref) (|g_$14| Field$ref$))(!(= (ite$Int$ (and (= |o_$8_$10| |q_$0_$10|) false) (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ |m_$7_$10| |q_$0_$10| |g_$14|) perm$R) |howMuch_$13|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ |m_$7_$10| |q_$0_$10| |g_$14|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ (DecPerm$Bool$ |m_$7_$10| |o_$8_$10| |f_$4_$10| |howMuch_$13|) |q_$0_$10| |g_$14|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ (DecPerm$Bool$ |m_$7_$10| |o_$8_$10| |f_$4_$10| |howMuch_$13|) |q_$0_$10| |g_$14|) perm$R))))
    (forall( (|m_$7_$11| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$8_$11| ref) (|f_$4_$11| Field$Int$) (|howMuch_$14| Int) (|q_$0_$11| ref) (|g_$15| Field$ref$))(!(= (ite$Int$ (and (= |o_$8_$11| |q_$0_$11|) false) (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ |m_$7_$11| |q_$0_$11| |g_$15|) perm$R) |howMuch_$14|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ |m_$7_$11| |q_$0_$11| |g_$15|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ (DecPerm$Int$ |m_$7_$11| |o_$8_$11| |f_$4_$11| |howMuch_$14|) |q_$0_$11| |g_$15|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ (DecPerm$Int$ |m_$7_$11| |o_$8_$11| |f_$4_$11| |howMuch_$14|) |q_$0_$11| |g_$15|) perm$R))))
    (forall( (|m_$7_$12| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$8_$12| ref) (|f_$4_$12| Field$ref$) (|howMuch_$15| Int) (|q_$0_$12| ref) (|g_$16| Field$ref$))(!(= (ite$Int$ (and (= |o_$8_$12| |q_$0_$12|) (= |f_$4_$12| |g_$16|)) (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ |m_$7_$12| |q_$0_$12| |g_$16|) perm$R) |howMuch_$15|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ |m_$7_$12| |q_$0_$12| |g_$16|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ (DecPerm$ref$ |m_$7_$12| |o_$8_$12| |f_$4_$12| |howMuch_$15|) |q_$0_$12| |g_$16|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ (DecPerm$ref$ |m_$7_$12| |o_$8_$12| |f_$4_$12| |howMuch_$15|) |q_$0_$12| |g_$16|) perm$R))))
    (forall( (|m_$7_$13| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$8_$13| ref) (|f_$4_$13| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$) (|howMuch_$16| Int) (|q_$0_$13| ref) (|g_$17| Field$ref$))(!(= (ite$Int$ (and (= |o_$8_$13| |q_$0_$13|) false) (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ |m_$7_$13| |q_$0_$13| |g_$17|) perm$R) |howMuch_$16|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ |m_$7_$13| |q_$0_$13| |g_$17|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ (DecPerm$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$7_$13| |o_$8_$13| |f_$4_$13| |howMuch_$16|) |q_$0_$13| |g_$17|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ (DecPerm$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$7_$13| |o_$8_$13| |f_$4_$13| |howMuch_$16|) |q_$0_$13| |g_$17|) perm$R))))
    (forall( (|m_$7_$14| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$8_$14| ref) (|f_$4_$14| Field$Mu$) (|howMuch_$17| Int) (|q_$0_$14| ref) (|g_$18| Field$ref$))(!(= (ite$Int$ (and (= |o_$8_$14| |q_$0_$14|) false) (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ |m_$7_$14| |q_$0_$14| |g_$18|) perm$R) |howMuch_$17|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ |m_$7_$14| |q_$0_$14| |g_$18|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ (DecPerm$Mu$ |m_$7_$14| |o_$8_$14| |f_$4_$14| |howMuch_$17|) |q_$0_$14| |g_$18|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ (DecPerm$Mu$ |m_$7_$14| |o_$8_$14| |f_$4_$14| |howMuch_$17|) |q_$0_$14| |g_$18|) perm$R))))
    (forall( (|m_$7_$15| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$8_$15| ref) (|f_$4_$15| Field$Bool$) (|howMuch_$18| Int) (|q_$0_$15| ref) (|g_$19| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(!(= (ite$Int$ (and (= |o_$8_$15| |q_$0_$15|) false) (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$7_$15| |q_$0_$15| |g_$19|) perm$R) |howMuch_$18|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$7_$15| |q_$0_$15| |g_$19|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (DecPerm$Bool$ |m_$7_$15| |o_$8_$15| |f_$4_$15| |howMuch_$18|) |q_$0_$15| |g_$19|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (DecPerm$Bool$ |m_$7_$15| |o_$8_$15| |f_$4_$15| |howMuch_$18|) |q_$0_$15| |g_$19|) perm$R))))
    (forall( (|m_$7_$16| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$8_$16| ref) (|f_$4_$16| Field$Int$) (|howMuch_$19| Int) (|q_$0_$16| ref) (|g_$20| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(!(= (ite$Int$ (and (= |o_$8_$16| |q_$0_$16|) false) (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$7_$16| |q_$0_$16| |g_$20|) perm$R) |howMuch_$19|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$7_$16| |q_$0_$16| |g_$20|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (DecPerm$Int$ |m_$7_$16| |o_$8_$16| |f_$4_$16| |howMuch_$19|) |q_$0_$16| |g_$20|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (DecPerm$Int$ |m_$7_$16| |o_$8_$16| |f_$4_$16| |howMuch_$19|) |q_$0_$16| |g_$20|) perm$R))))
    (forall( (|m_$7_$17| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$8_$17| ref) (|f_$4_$17| Field$ref$) (|howMuch_$20| Int) (|q_$0_$17| ref) (|g_$21| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(!(= (ite$Int$ (and (= |o_$8_$17| |q_$0_$17|) false) (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$7_$17| |q_$0_$17| |g_$21|) perm$R) |howMuch_$20|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$7_$17| |q_$0_$17| |g_$21|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (DecPerm$ref$ |m_$7_$17| |o_$8_$17| |f_$4_$17| |howMuch_$20|) |q_$0_$17| |g_$21|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (DecPerm$ref$ |m_$7_$17| |o_$8_$17| |f_$4_$17| |howMuch_$20|) |q_$0_$17| |g_$21|) perm$R))))
    (forall( (|m_$7_$18| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$8_$18| ref) (|f_$4_$18| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$) (|howMuch_$21| Int) (|q_$0_$18| ref) (|g_$22| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(!(= (ite$Int$ (and (= |o_$8_$18| |q_$0_$18|) (= |f_$4_$18| |g_$22|)) (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$7_$18| |q_$0_$18| |g_$22|) perm$R) |howMuch_$21|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$7_$18| |q_$0_$18| |g_$22|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (DecPerm$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$7_$18| |o_$8_$18| |f_$4_$18| |howMuch_$21|) |q_$0_$18| |g_$22|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (DecPerm$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$7_$18| |o_$8_$18| |f_$4_$18| |howMuch_$21|) |q_$0_$18| |g_$22|) perm$R))))
    (forall( (|m_$7_$19| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$8_$19| ref) (|f_$4_$19| Field$Mu$) (|howMuch_$22| Int) (|q_$0_$19| ref) (|g_$23| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(!(= (ite$Int$ (and (= |o_$8_$19| |q_$0_$19|) false) (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$7_$19| |q_$0_$19| |g_$23|) perm$R) |howMuch_$22|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$7_$19| |q_$0_$19| |g_$23|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (DecPerm$Mu$ |m_$7_$19| |o_$8_$19| |f_$4_$19| |howMuch_$22|) |q_$0_$19| |g_$23|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (DecPerm$Mu$ |m_$7_$19| |o_$8_$19| |f_$4_$19| |howMuch_$22|) |q_$0_$19| |g_$23|) perm$R))))
    (forall( (|m_$7_$2| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$8_$2| ref) (|f_$4_$2| Field$ref$) (|howMuch_$5| Int) (|q_$0_$2| ref) (|g_$6| Field$Bool$))(!(= (ite$Int$ (and (= |o_$8_$2| |q_$0_$2|) false) (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ |m_$7_$2| |q_$0_$2| |g_$6|) perm$R) |howMuch_$5|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ |m_$7_$2| |q_$0_$2| |g_$6|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ (DecPerm$ref$ |m_$7_$2| |o_$8_$2| |f_$4_$2| |howMuch_$5|) |q_$0_$2| |g_$6|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ (DecPerm$ref$ |m_$7_$2| |o_$8_$2| |f_$4_$2| |howMuch_$5|) |q_$0_$2| |g_$6|) perm$R))))
    (forall( (|m_$7_$20| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$8_$20| ref) (|f_$4_$20| Field$Bool$) (|howMuch_$23| Int) (|q_$0_$20| ref) (|g_$24| Field$Mu$))(!(= (ite$Int$ (and (= |o_$8_$20| |q_$0_$20|) false) (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ |m_$7_$20| |q_$0_$20| |g_$24|) perm$R) |howMuch_$23|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ |m_$7_$20| |q_$0_$20| |g_$24|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ (DecPerm$Bool$ |m_$7_$20| |o_$8_$20| |f_$4_$20| |howMuch_$23|) |q_$0_$20| |g_$24|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ (DecPerm$Bool$ |m_$7_$20| |o_$8_$20| |f_$4_$20| |howMuch_$23|) |q_$0_$20| |g_$24|) perm$R))))
    (forall( (|m_$7_$21| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$8_$21| ref) (|f_$4_$21| Field$Int$) (|howMuch_$24| Int) (|q_$0_$21| ref) (|g_$25| Field$Mu$))(!(= (ite$Int$ (and (= |o_$8_$21| |q_$0_$21|) false) (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ |m_$7_$21| |q_$0_$21| |g_$25|) perm$R) |howMuch_$24|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ |m_$7_$21| |q_$0_$21| |g_$25|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ (DecPerm$Int$ |m_$7_$21| |o_$8_$21| |f_$4_$21| |howMuch_$24|) |q_$0_$21| |g_$25|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ (DecPerm$Int$ |m_$7_$21| |o_$8_$21| |f_$4_$21| |howMuch_$24|) |q_$0_$21| |g_$25|) perm$R))))
    (forall( (|m_$7_$22| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$8_$22| ref) (|f_$4_$22| Field$ref$) (|howMuch_$25| Int) (|q_$0_$22| ref) (|g_$26| Field$Mu$))(!(= (ite$Int$ (and (= |o_$8_$22| |q_$0_$22|) false) (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ |m_$7_$22| |q_$0_$22| |g_$26|) perm$R) |howMuch_$25|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ |m_$7_$22| |q_$0_$22| |g_$26|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ (DecPerm$ref$ |m_$7_$22| |o_$8_$22| |f_$4_$22| |howMuch_$25|) |q_$0_$22| |g_$26|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ (DecPerm$ref$ |m_$7_$22| |o_$8_$22| |f_$4_$22| |howMuch_$25|) |q_$0_$22| |g_$26|) perm$R))))
    (forall( (|m_$7_$23| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$8_$23| ref) (|f_$4_$23| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$) (|howMuch_$26| Int) (|q_$0_$23| ref) (|g_$27| Field$Mu$))(!(= (ite$Int$ (and (= |o_$8_$23| |q_$0_$23|) false) (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ |m_$7_$23| |q_$0_$23| |g_$27|) perm$R) |howMuch_$26|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ |m_$7_$23| |q_$0_$23| |g_$27|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ (DecPerm$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$7_$23| |o_$8_$23| |f_$4_$23| |howMuch_$26|) |q_$0_$23| |g_$27|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ (DecPerm$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$7_$23| |o_$8_$23| |f_$4_$23| |howMuch_$26|) |q_$0_$23| |g_$27|) perm$R))))
    (forall( (|m_$7_$24| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$8_$24| ref) (|f_$4_$24| Field$Mu$) (|howMuch_$27| Int) (|q_$0_$24| ref) (|g_$28| Field$Mu$))(!(= (ite$Int$ (and (= |o_$8_$24| |q_$0_$24|) (= |f_$4_$24| |g_$28|)) (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ |m_$7_$24| |q_$0_$24| |g_$28|) perm$R) |howMuch_$27|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ |m_$7_$24| |q_$0_$24| |g_$28|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ (DecPerm$Mu$ |m_$7_$24| |o_$8_$24| |f_$4_$24| |howMuch_$27|) |q_$0_$24| |g_$28|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ (DecPerm$Mu$ |m_$7_$24| |o_$8_$24| |f_$4_$24| |howMuch_$27|) |q_$0_$24| |g_$28|) perm$R))))
    (forall( (|m_$7_$3| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$8_$3| ref) (|f_$4_$3| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$) (|howMuch_$6| Int) (|q_$0_$3| ref) (|g_$7| Field$Bool$))(!(= (ite$Int$ (and (= |o_$8_$3| |q_$0_$3|) false) (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ |m_$7_$3| |q_$0_$3| |g_$7|) perm$R) |howMuch_$6|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ |m_$7_$3| |q_$0_$3| |g_$7|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ (DecPerm$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$7_$3| |o_$8_$3| |f_$4_$3| |howMuch_$6|) |q_$0_$3| |g_$7|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ (DecPerm$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$7_$3| |o_$8_$3| |f_$4_$3| |howMuch_$6|) |q_$0_$3| |g_$7|) perm$R))))
    (forall( (|m_$7_$4| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$8_$4| ref) (|f_$4_$4| Field$Mu$) (|howMuch_$7| Int) (|q_$0_$4| ref) (|g_$8| Field$Bool$))(!(= (ite$Int$ (and (= |o_$8_$4| |q_$0_$4|) false) (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ |m_$7_$4| |q_$0_$4| |g_$8|) perm$R) |howMuch_$7|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ |m_$7_$4| |q_$0_$4| |g_$8|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ (DecPerm$Mu$ |m_$7_$4| |o_$8_$4| |f_$4_$4| |howMuch_$7|) |q_$0_$4| |g_$8|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ (DecPerm$Mu$ |m_$7_$4| |o_$8_$4| |f_$4_$4| |howMuch_$7|) |q_$0_$4| |g_$8|) perm$R))))
    (forall( (|m_$7_$5| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$8_$5| ref) (|f_$4_$5| Field$Bool$) (|howMuch_$8| Int) (|q_$0_$5| ref) (|g_$9| Field$Int$))(!(= (ite$Int$ (and (= |o_$8_$5| |q_$0_$5|) false) (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ |m_$7_$5| |q_$0_$5| |g_$9|) perm$R) |howMuch_$8|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ |m_$7_$5| |q_$0_$5| |g_$9|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ (DecPerm$Bool$ |m_$7_$5| |o_$8_$5| |f_$4_$5| |howMuch_$8|) |q_$0_$5| |g_$9|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ (DecPerm$Bool$ |m_$7_$5| |o_$8_$5| |f_$4_$5| |howMuch_$8|) |q_$0_$5| |g_$9|) perm$R))))
    (forall( (|m_$7_$6| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$8_$6| ref) (|f_$4_$6| Field$Int$) (|howMuch_$9| Int) (|q_$0_$6| ref) (|g_$10| Field$Int$))(!(= (ite$Int$ (and (= |o_$8_$6| |q_$0_$6|) (= |f_$4_$6| |g_$10|)) (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ |m_$7_$6| |q_$0_$6| |g_$10|) perm$R) |howMuch_$9|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ |m_$7_$6| |q_$0_$6| |g_$10|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ (DecPerm$Int$ |m_$7_$6| |o_$8_$6| |f_$4_$6| |howMuch_$9|) |q_$0_$6| |g_$10|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ (DecPerm$Int$ |m_$7_$6| |o_$8_$6| |f_$4_$6| |howMuch_$9|) |q_$0_$6| |g_$10|) perm$R))))
    (forall( (|m_$7_$7| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$8_$7| ref) (|f_$4_$7| Field$ref$) (|howMuch_$10| Int) (|q_$0_$7| ref) (|g_$11| Field$Int$))(!(= (ite$Int$ (and (= |o_$8_$7| |q_$0_$7|) false) (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ |m_$7_$7| |q_$0_$7| |g_$11|) perm$R) |howMuch_$10|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ |m_$7_$7| |q_$0_$7| |g_$11|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ (DecPerm$ref$ |m_$7_$7| |o_$8_$7| |f_$4_$7| |howMuch_$10|) |q_$0_$7| |g_$11|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ (DecPerm$ref$ |m_$7_$7| |o_$8_$7| |f_$4_$7| |howMuch_$10|) |q_$0_$7| |g_$11|) perm$R))))
    (forall( (|m_$7_$8| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$8_$8| ref) (|f_$4_$8| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$) (|howMuch_$11| Int) (|q_$0_$8| ref) (|g_$12| Field$Int$))(!(= (ite$Int$ (and (= |o_$8_$8| |q_$0_$8|) false) (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ |m_$7_$8| |q_$0_$8| |g_$12|) perm$R) |howMuch_$11|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ |m_$7_$8| |q_$0_$8| |g_$12|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ (DecPerm$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$7_$8| |o_$8_$8| |f_$4_$8| |howMuch_$11|) |q_$0_$8| |g_$12|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ (DecPerm$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$7_$8| |o_$8_$8| |f_$4_$8| |howMuch_$11|) |q_$0_$8| |g_$12|) perm$R))))
    (forall( (|m_$7_$9| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$8_$9| ref) (|f_$4_$9| Field$Mu$) (|howMuch_$12| Int) (|q_$0_$9| ref) (|g_$13| Field$Int$))(!(= (ite$Int$ (and (= |o_$8_$9| |q_$0_$9|) false) (- (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ |m_$7_$9| |q_$0_$9| |g_$13|) perm$R) |howMuch_$12|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ |m_$7_$9| |q_$0_$9| |g_$13|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ (DecPerm$Mu$ |m_$7_$9| |o_$8_$9| |f_$4_$9| |howMuch_$12|) |q_$0_$9| |g_$13|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ (DecPerm$Mu$ |m_$7_$9| |o_$8_$9| |f_$4_$9| |howMuch_$12|) |q_$0_$9| |g_$13|) perm$R))))
    (forall( (|m_$9_$0| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$10_$0| ref) (|f_$6_$0| Field$Bool$) (|howMuch_$1_$0| Int) (|q_$2_$0| ref) (|g_$1_$0| Field$Bool$))(!(= (ite$Int$ (and (= |o_$10_$0| |q_$2_$0|) (= |f_$6_$0| |g_$1_$0|)) (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ |m_$9_$0| |q_$2_$0| |g_$1_$0|) perm$R) |howMuch_$1_$0|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ |m_$9_$0| |q_$2_$0| |g_$1_$0|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ (IncPerm$Bool$ |m_$9_$0| |o_$10_$0| |f_$6_$0| |howMuch_$1_$0|) |q_$2_$0| |g_$1_$0|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ (IncPerm$Bool$ |m_$9_$0| |o_$10_$0| |f_$6_$0| |howMuch_$1_$0|) |q_$2_$0| |g_$1_$0|) perm$R))))
    (forall( (|m_$9_$1| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$10_$1| ref) (|f_$6_$1| Field$Int$) (|howMuch_$1_$1| Int) (|q_$2_$1| ref) (|g_$1_$1| Field$Bool$))(!(= (ite$Int$ (and (= |o_$10_$1| |q_$2_$1|) false) (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ |m_$9_$1| |q_$2_$1| |g_$1_$1|) perm$R) |howMuch_$1_$1|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ |m_$9_$1| |q_$2_$1| |g_$1_$1|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ (IncPerm$Int$ |m_$9_$1| |o_$10_$1| |f_$6_$1| |howMuch_$1_$1|) |q_$2_$1| |g_$1_$1|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ (IncPerm$Int$ |m_$9_$1| |o_$10_$1| |f_$6_$1| |howMuch_$1_$1|) |q_$2_$1| |g_$1_$1|) perm$R))))
    (forall( (|m_$9_$10| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$10_$10| ref) (|f_$6_$10| Field$Bool$) (|howMuch_$1_$10| Int) (|q_$2_$10| ref) (|g_$1_$10| Field$ref$))(!(= (ite$Int$ (and (= |o_$10_$10| |q_$2_$10|) false) (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ |m_$9_$10| |q_$2_$10| |g_$1_$10|) perm$R) |howMuch_$1_$10|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ |m_$9_$10| |q_$2_$10| |g_$1_$10|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ (IncPerm$Bool$ |m_$9_$10| |o_$10_$10| |f_$6_$10| |howMuch_$1_$10|) |q_$2_$10| |g_$1_$10|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ (IncPerm$Bool$ |m_$9_$10| |o_$10_$10| |f_$6_$10| |howMuch_$1_$10|) |q_$2_$10| |g_$1_$10|) perm$R))))
    (forall( (|m_$9_$11| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$10_$11| ref) (|f_$6_$11| Field$Int$) (|howMuch_$1_$11| Int) (|q_$2_$11| ref) (|g_$1_$11| Field$ref$))(!(= (ite$Int$ (and (= |o_$10_$11| |q_$2_$11|) false) (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ |m_$9_$11| |q_$2_$11| |g_$1_$11|) perm$R) |howMuch_$1_$11|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ |m_$9_$11| |q_$2_$11| |g_$1_$11|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ (IncPerm$Int$ |m_$9_$11| |o_$10_$11| |f_$6_$11| |howMuch_$1_$11|) |q_$2_$11| |g_$1_$11|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ (IncPerm$Int$ |m_$9_$11| |o_$10_$11| |f_$6_$11| |howMuch_$1_$11|) |q_$2_$11| |g_$1_$11|) perm$R))))
    (forall( (|m_$9_$12| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$10_$12| ref) (|f_$6_$12| Field$ref$) (|howMuch_$1_$12| Int) (|q_$2_$12| ref) (|g_$1_$12| Field$ref$))(!(= (ite$Int$ (and (= |o_$10_$12| |q_$2_$12|) (= |f_$6_$12| |g_$1_$12|)) (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ |m_$9_$12| |q_$2_$12| |g_$1_$12|) perm$R) |howMuch_$1_$12|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ |m_$9_$12| |q_$2_$12| |g_$1_$12|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ (IncPerm$ref$ |m_$9_$12| |o_$10_$12| |f_$6_$12| |howMuch_$1_$12|) |q_$2_$12| |g_$1_$12|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ (IncPerm$ref$ |m_$9_$12| |o_$10_$12| |f_$6_$12| |howMuch_$1_$12|) |q_$2_$12| |g_$1_$12|) perm$R))))
    (forall( (|m_$9_$13| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$10_$13| ref) (|f_$6_$13| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$) (|howMuch_$1_$13| Int) (|q_$2_$13| ref) (|g_$1_$13| Field$ref$))(!(= (ite$Int$ (and (= |o_$10_$13| |q_$2_$13|) false) (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ |m_$9_$13| |q_$2_$13| |g_$1_$13|) perm$R) |howMuch_$1_$13|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ |m_$9_$13| |q_$2_$13| |g_$1_$13|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ (IncPerm$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$9_$13| |o_$10_$13| |f_$6_$13| |howMuch_$1_$13|) |q_$2_$13| |g_$1_$13|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ (IncPerm$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$9_$13| |o_$10_$13| |f_$6_$13| |howMuch_$1_$13|) |q_$2_$13| |g_$1_$13|) perm$R))))
    (forall( (|m_$9_$14| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$10_$14| ref) (|f_$6_$14| Field$Mu$) (|howMuch_$1_$14| Int) (|q_$2_$14| ref) (|g_$1_$14| Field$ref$))(!(= (ite$Int$ (and (= |o_$10_$14| |q_$2_$14|) false) (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ |m_$9_$14| |q_$2_$14| |g_$1_$14|) perm$R) |howMuch_$1_$14|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ |m_$9_$14| |q_$2_$14| |g_$1_$14|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ (IncPerm$Mu$ |m_$9_$14| |o_$10_$14| |f_$6_$14| |howMuch_$1_$14|) |q_$2_$14| |g_$1_$14|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ (IncPerm$Mu$ |m_$9_$14| |o_$10_$14| |f_$6_$14| |howMuch_$1_$14|) |q_$2_$14| |g_$1_$14|) perm$R))))
    (forall( (|m_$9_$15| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$10_$15| ref) (|f_$6_$15| Field$Bool$) (|howMuch_$1_$15| Int) (|q_$2_$15| ref) (|g_$1_$15| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(!(= (ite$Int$ (and (= |o_$10_$15| |q_$2_$15|) false) (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$9_$15| |q_$2_$15| |g_$1_$15|) perm$R) |howMuch_$1_$15|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$9_$15| |q_$2_$15| |g_$1_$15|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (IncPerm$Bool$ |m_$9_$15| |o_$10_$15| |f_$6_$15| |howMuch_$1_$15|) |q_$2_$15| |g_$1_$15|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (IncPerm$Bool$ |m_$9_$15| |o_$10_$15| |f_$6_$15| |howMuch_$1_$15|) |q_$2_$15| |g_$1_$15|) perm$R))))
    (forall( (|m_$9_$16| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$10_$16| ref) (|f_$6_$16| Field$Int$) (|howMuch_$1_$16| Int) (|q_$2_$16| ref) (|g_$1_$16| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(!(= (ite$Int$ (and (= |o_$10_$16| |q_$2_$16|) false) (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$9_$16| |q_$2_$16| |g_$1_$16|) perm$R) |howMuch_$1_$16|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$9_$16| |q_$2_$16| |g_$1_$16|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (IncPerm$Int$ |m_$9_$16| |o_$10_$16| |f_$6_$16| |howMuch_$1_$16|) |q_$2_$16| |g_$1_$16|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (IncPerm$Int$ |m_$9_$16| |o_$10_$16| |f_$6_$16| |howMuch_$1_$16|) |q_$2_$16| |g_$1_$16|) perm$R))))
    (forall( (|m_$9_$17| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$10_$17| ref) (|f_$6_$17| Field$ref$) (|howMuch_$1_$17| Int) (|q_$2_$17| ref) (|g_$1_$17| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(!(= (ite$Int$ (and (= |o_$10_$17| |q_$2_$17|) false) (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$9_$17| |q_$2_$17| |g_$1_$17|) perm$R) |howMuch_$1_$17|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$9_$17| |q_$2_$17| |g_$1_$17|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (IncPerm$ref$ |m_$9_$17| |o_$10_$17| |f_$6_$17| |howMuch_$1_$17|) |q_$2_$17| |g_$1_$17|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (IncPerm$ref$ |m_$9_$17| |o_$10_$17| |f_$6_$17| |howMuch_$1_$17|) |q_$2_$17| |g_$1_$17|) perm$R))))
    (forall( (|m_$9_$18| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$10_$18| ref) (|f_$6_$18| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$) (|howMuch_$1_$18| Int) (|q_$2_$18| ref) (|g_$1_$18| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(!(= (ite$Int$ (and (= |o_$10_$18| |q_$2_$18|) (= |f_$6_$18| |g_$1_$18|)) (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$9_$18| |q_$2_$18| |g_$1_$18|) perm$R) |howMuch_$1_$18|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$9_$18| |q_$2_$18| |g_$1_$18|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (IncPerm$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$9_$18| |o_$10_$18| |f_$6_$18| |howMuch_$1_$18|) |q_$2_$18| |g_$1_$18|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (IncPerm$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$9_$18| |o_$10_$18| |f_$6_$18| |howMuch_$1_$18|) |q_$2_$18| |g_$1_$18|) perm$R))))
    (forall( (|m_$9_$19| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$10_$19| ref) (|f_$6_$19| Field$Mu$) (|howMuch_$1_$19| Int) (|q_$2_$19| ref) (|g_$1_$19| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$))(!(= (ite$Int$ (and (= |o_$10_$19| |q_$2_$19|) false) (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$9_$19| |q_$2_$19| |g_$1_$19|) perm$R) |howMuch_$1_$19|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$9_$19| |q_$2_$19| |g_$1_$19|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (IncPerm$Mu$ |m_$9_$19| |o_$10_$19| |f_$6_$19| |howMuch_$1_$19|) |q_$2_$19| |g_$1_$19|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ (IncPerm$Mu$ |m_$9_$19| |o_$10_$19| |f_$6_$19| |howMuch_$1_$19|) |q_$2_$19| |g_$1_$19|) perm$R))))
    (forall( (|m_$9_$2| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$10_$2| ref) (|f_$6_$2| Field$ref$) (|howMuch_$1_$2| Int) (|q_$2_$2| ref) (|g_$1_$2| Field$Bool$))(!(= (ite$Int$ (and (= |o_$10_$2| |q_$2_$2|) false) (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ |m_$9_$2| |q_$2_$2| |g_$1_$2|) perm$R) |howMuch_$1_$2|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ |m_$9_$2| |q_$2_$2| |g_$1_$2|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ (IncPerm$ref$ |m_$9_$2| |o_$10_$2| |f_$6_$2| |howMuch_$1_$2|) |q_$2_$2| |g_$1_$2|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ (IncPerm$ref$ |m_$9_$2| |o_$10_$2| |f_$6_$2| |howMuch_$1_$2|) |q_$2_$2| |g_$1_$2|) perm$R))))
    (forall( (|m_$9_$20| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$10_$20| ref) (|f_$6_$20| Field$Bool$) (|howMuch_$1_$20| Int) (|q_$2_$20| ref) (|g_$1_$20| Field$Mu$))(!(= (ite$Int$ (and (= |o_$10_$20| |q_$2_$20|) false) (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ |m_$9_$20| |q_$2_$20| |g_$1_$20|) perm$R) |howMuch_$1_$20|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ |m_$9_$20| |q_$2_$20| |g_$1_$20|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ (IncPerm$Bool$ |m_$9_$20| |o_$10_$20| |f_$6_$20| |howMuch_$1_$20|) |q_$2_$20| |g_$1_$20|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ (IncPerm$Bool$ |m_$9_$20| |o_$10_$20| |f_$6_$20| |howMuch_$1_$20|) |q_$2_$20| |g_$1_$20|) perm$R))))
    (forall( (|m_$9_$21| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$10_$21| ref) (|f_$6_$21| Field$Int$) (|howMuch_$1_$21| Int) (|q_$2_$21| ref) (|g_$1_$21| Field$Mu$))(!(= (ite$Int$ (and (= |o_$10_$21| |q_$2_$21|) false) (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ |m_$9_$21| |q_$2_$21| |g_$1_$21|) perm$R) |howMuch_$1_$21|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ |m_$9_$21| |q_$2_$21| |g_$1_$21|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ (IncPerm$Int$ |m_$9_$21| |o_$10_$21| |f_$6_$21| |howMuch_$1_$21|) |q_$2_$21| |g_$1_$21|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ (IncPerm$Int$ |m_$9_$21| |o_$10_$21| |f_$6_$21| |howMuch_$1_$21|) |q_$2_$21| |g_$1_$21|) perm$R))))
    (forall( (|m_$9_$22| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$10_$22| ref) (|f_$6_$22| Field$ref$) (|howMuch_$1_$22| Int) (|q_$2_$22| ref) (|g_$1_$22| Field$Mu$))(!(= (ite$Int$ (and (= |o_$10_$22| |q_$2_$22|) false) (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ |m_$9_$22| |q_$2_$22| |g_$1_$22|) perm$R) |howMuch_$1_$22|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ |m_$9_$22| |q_$2_$22| |g_$1_$22|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ (IncPerm$ref$ |m_$9_$22| |o_$10_$22| |f_$6_$22| |howMuch_$1_$22|) |q_$2_$22| |g_$1_$22|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ (IncPerm$ref$ |m_$9_$22| |o_$10_$22| |f_$6_$22| |howMuch_$1_$22|) |q_$2_$22| |g_$1_$22|) perm$R))))
    (forall( (|m_$9_$23| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$10_$23| ref) (|f_$6_$23| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$) (|howMuch_$1_$23| Int) (|q_$2_$23| ref) (|g_$1_$23| Field$Mu$))(!(= (ite$Int$ (and (= |o_$10_$23| |q_$2_$23|) false) (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ |m_$9_$23| |q_$2_$23| |g_$1_$23|) perm$R) |howMuch_$1_$23|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ |m_$9_$23| |q_$2_$23| |g_$1_$23|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ (IncPerm$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$9_$23| |o_$10_$23| |f_$6_$23| |howMuch_$1_$23|) |q_$2_$23| |g_$1_$23|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ (IncPerm$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$9_$23| |o_$10_$23| |f_$6_$23| |howMuch_$1_$23|) |q_$2_$23| |g_$1_$23|) perm$R))))
    (forall( (|m_$9_$24| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$10_$24| ref) (|f_$6_$24| Field$Mu$) (|howMuch_$1_$24| Int) (|q_$2_$24| ref) (|g_$1_$24| Field$Mu$))(!(= (ite$Int$ (and (= |o_$10_$24| |q_$2_$24|) (= |f_$6_$24| |g_$1_$24|)) (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ |m_$9_$24| |q_$2_$24| |g_$1_$24|) perm$R) |howMuch_$1_$24|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ |m_$9_$24| |q_$2_$24| |g_$1_$24|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ (IncPerm$Mu$ |m_$9_$24| |o_$10_$24| |f_$6_$24| |howMuch_$1_$24|) |q_$2_$24| |g_$1_$24|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ (IncPerm$Mu$ |m_$9_$24| |o_$10_$24| |f_$6_$24| |howMuch_$1_$24|) |q_$2_$24| |g_$1_$24|) perm$R))))
    (forall( (|m_$9_$3| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$10_$3| ref) (|f_$6_$3| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$) (|howMuch_$1_$3| Int) (|q_$2_$3| ref) (|g_$1_$3| Field$Bool$))(!(= (ite$Int$ (and (= |o_$10_$3| |q_$2_$3|) false) (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ |m_$9_$3| |q_$2_$3| |g_$1_$3|) perm$R) |howMuch_$1_$3|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ |m_$9_$3| |q_$2_$3| |g_$1_$3|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ (IncPerm$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$9_$3| |o_$10_$3| |f_$6_$3| |howMuch_$1_$3|) |q_$2_$3| |g_$1_$3|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ (IncPerm$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$9_$3| |o_$10_$3| |f_$6_$3| |howMuch_$1_$3|) |q_$2_$3| |g_$1_$3|) perm$R))))
    (forall( (|m_$9_$4| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$10_$4| ref) (|f_$6_$4| Field$Mu$) (|howMuch_$1_$4| Int) (|q_$2_$4| ref) (|g_$1_$4| Field$Bool$))(!(= (ite$Int$ (and (= |o_$10_$4| |q_$2_$4|) false) (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ |m_$9_$4| |q_$2_$4| |g_$1_$4|) perm$R) |howMuch_$1_$4|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ |m_$9_$4| |q_$2_$4| |g_$1_$4|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ (IncPerm$Mu$ |m_$9_$4| |o_$10_$4| |f_$6_$4| |howMuch_$1_$4|) |q_$2_$4| |g_$1_$4|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ (IncPerm$Mu$ |m_$9_$4| |o_$10_$4| |f_$6_$4| |howMuch_$1_$4|) |q_$2_$4| |g_$1_$4|) perm$R))))
    (forall( (|m_$9_$5| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$10_$5| ref) (|f_$6_$5| Field$Bool$) (|howMuch_$1_$5| Int) (|q_$2_$5| ref) (|g_$1_$5| Field$Int$))(!(= (ite$Int$ (and (= |o_$10_$5| |q_$2_$5|) false) (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ |m_$9_$5| |q_$2_$5| |g_$1_$5|) perm$R) |howMuch_$1_$5|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ |m_$9_$5| |q_$2_$5| |g_$1_$5|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ (IncPerm$Bool$ |m_$9_$5| |o_$10_$5| |f_$6_$5| |howMuch_$1_$5|) |q_$2_$5| |g_$1_$5|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ (IncPerm$Bool$ |m_$9_$5| |o_$10_$5| |f_$6_$5| |howMuch_$1_$5|) |q_$2_$5| |g_$1_$5|) perm$R))))
    (forall( (|m_$9_$6| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$10_$6| ref) (|f_$6_$6| Field$Int$) (|howMuch_$1_$6| Int) (|q_$2_$6| ref) (|g_$1_$6| Field$Int$))(!(= (ite$Int$ (and (= |o_$10_$6| |q_$2_$6|) (= |f_$6_$6| |g_$1_$6|)) (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ |m_$9_$6| |q_$2_$6| |g_$1_$6|) perm$R) |howMuch_$1_$6|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ |m_$9_$6| |q_$2_$6| |g_$1_$6|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ (IncPerm$Int$ |m_$9_$6| |o_$10_$6| |f_$6_$6| |howMuch_$1_$6|) |q_$2_$6| |g_$1_$6|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ (IncPerm$Int$ |m_$9_$6| |o_$10_$6| |f_$6_$6| |howMuch_$1_$6|) |q_$2_$6| |g_$1_$6|) perm$R))))
    (forall( (|m_$9_$7| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$10_$7| ref) (|f_$6_$7| Field$ref$) (|howMuch_$1_$7| Int) (|q_$2_$7| ref) (|g_$1_$7| Field$Int$))(!(= (ite$Int$ (and (= |o_$10_$7| |q_$2_$7|) false) (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ |m_$9_$7| |q_$2_$7| |g_$1_$7|) perm$R) |howMuch_$1_$7|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ |m_$9_$7| |q_$2_$7| |g_$1_$7|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ (IncPerm$ref$ |m_$9_$7| |o_$10_$7| |f_$6_$7| |howMuch_$1_$7|) |q_$2_$7| |g_$1_$7|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ (IncPerm$ref$ |m_$9_$7| |o_$10_$7| |f_$6_$7| |howMuch_$1_$7|) |q_$2_$7| |g_$1_$7|) perm$R))))
    (forall( (|m_$9_$8| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$10_$8| ref) (|f_$6_$8| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$) (|howMuch_$1_$8| Int) (|q_$2_$8| ref) (|g_$1_$8| Field$Int$))(!(= (ite$Int$ (and (= |o_$10_$8| |q_$2_$8|) false) (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ |m_$9_$8| |q_$2_$8| |g_$1_$8|) perm$R) |howMuch_$1_$8|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ |m_$9_$8| |q_$2_$8| |g_$1_$8|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ (IncPerm$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$9_$8| |o_$10_$8| |f_$6_$8| |howMuch_$1_$8|) |q_$2_$8| |g_$1_$8|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ (IncPerm$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ |m_$9_$8| |o_$10_$8| |f_$6_$8| |howMuch_$1_$8|) |q_$2_$8| |g_$1_$8|) perm$R))))
    (forall( (|m_$9_$9| $@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@) (|o_$10_$9| ref) (|f_$6_$9| Field$Mu$) (|howMuch_$1_$9| Int) (|q_$2_$9| ref) (|g_$1_$9| Field$Int$))(!(= (ite$Int$ (and (= |o_$10_$9| |q_$2_$9|) false) (+ (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ |m_$9_$9| |q_$2_$9| |g_$1_$9|) perm$R) |howMuch_$1_$9|) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ |m_$9_$9| |q_$2_$9| |g_$1_$9|) perm$R)) (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ (IncPerm$Mu$ |m_$9_$9| |o_$10_$9| |f_$6_$9| |howMuch_$1_$9|) |q_$2_$9| |g_$1_$9|) perm$R))  :pattern ( (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ (IncPerm$Mu$ |m_$9_$9| |o_$10_$9| |f_$6_$9| |howMuch_$1_$9|) |q_$2_$9| |g_$1_$9|) perm$R))))
    (forall( (|m| Mu) (|n_$0| Mu))(!(not (and (MuBelow |n_$0| |m|) (MuBelow |m| |n_$0|)))  :pattern ( (MuBelow |m| |n_$0|) (MuBelow |n_$0| |m|))))
    (forall( (|n| Int))(!(= (* |n| Permission$denominator) (Fractions |n|))  :pattern ( (Fractions |n|))))
    (forall( (|o_$14| ref))(= (MapRead$$@Map@@ref@To@Int@@$ ZeroCredits |o_$14|) 0))
    (forall( (|o_$17| ref) (|f_$19| Field$Bool$) (|pc_$0| PermissionComponent))(= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Bool$ ZeroMask |o_$17| |f_$19|) |pc_$0|) 0))
    (forall( (|o_$18| ref) (|f_$20| Field$Int$) (|pc_$1| PermissionComponent))(= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Int$ ZeroMask |o_$18| |f_$20|) |pc_$1|) 0))
    (forall( (|o_$19| ref) (|f_$21| Field$ref$) (|pc_$2| PermissionComponent))(= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$ref$ ZeroMask |o_$19| |f_$21|) |pc_$2|) 0))
    (forall( (|o_$20| ref) (|f_$22| Field$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$) (|pc_$3| PermissionComponent))(= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ ZeroMask |o_$20| |f_$22|) |pc_$3|) 0))
    (forall( (|o_$21| ref) (|f_$23| Field$Mu$) (|pc_$4| PermissionComponent))(= (MapRead$$@Map@@PermissionComponent@To@Int@@$ (MapRead$$@Map@@$T0@@ref@Field$$T0$@To@$@Map@@PermissionComponent@To@Int@@@@$Mu$ ZeroMask |o_$21| |f_$23|) |pc_$4|) 0))
    (forall( (|x| Int) (|y| Int))(=> (and (<= |x| |y|) (<= 0 |x|)) (<= (Fractions |x|) (Fractions |y|))))
    (IsGoodMask ZeroMask)
    (IsGoodState$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ nostate)
    (NonPredicateField$Bool$ rdheld)
    (NonPredicateField$Int$ FactorialActorChannelExpEP.state)
    (NonPredicateField$Int$ FactorialActorChannelImpEP.state)
    (NonPredicateField$Int$ FactorialCont.v)
    (NonPredicateField$Int$ FactorialCont.vo)
    (NonPredicateField$Int$ FactorialContChannelExpEP.state)
    (NonPredicateField$Int$ FactorialContChannelImpEP.state)
    (NonPredicateField$Int$ forkK)
    (NonPredicateField$Int$ FutureChannelExpEP.state)
    (NonPredicateField$Int$ FutureChannelImpEP.state)
    (NonPredicateField$Int$ held)
    (NonPredicateField$Int$ joinable)
    (NonPredicateField$Int$ Message.type)
    (NonPredicateField$Int$ Message.v1)
    (NonPredicateField$Int$ Message.vo1)
    (NonPredicateField$Int$ Message.vr1)
    (NonPredicateField$Int$ Message.vr2)
    (NonPredicateField$Int$ Message.vr3)
    (NonPredicateField$Mu$ mu)
    (NonPredicateField$ref$ FactorialActor.q)
    (NonPredicateField$ref$ FactorialActorChannel.exp)
    (NonPredicateField$ref$ FactorialActorChannel.imp)
    (NonPredicateField$ref$ FactorialActorChannelExpEP.ch)
    (NonPredicateField$ref$ FactorialActorChannelExpEP.expch)
    (NonPredicateField$ref$ FactorialActorChannelImpEP.ch)
    (NonPredicateField$ref$ FactorialActorChannelImpEP.impch)
    (NonPredicateField$ref$ FactorialCont.cust)
    (NonPredicateField$ref$ FactorialCont.q)
    (NonPredicateField$ref$ FactorialContChannel.exp)
    (NonPredicateField$ref$ FactorialContChannel.imp)
    (NonPredicateField$ref$ FactorialContChannelExpEP.ch)
    (NonPredicateField$ref$ FactorialContChannelExpEP.expch)
    (NonPredicateField$ref$ FactorialContChannelImpEP.ch)
    (NonPredicateField$ref$ FactorialContChannelImpEP.impch)
    (NonPredicateField$ref$ Future.q)
    (NonPredicateField$ref$ Future.sent)
    (NonPredicateField$ref$ Future.value)
    (NonPredicateField$ref$ FutureChannel.exp)
    (NonPredicateField$ref$ FutureChannel.imp)
    (NonPredicateField$ref$ FutureChannelExpEP.ch)
    (NonPredicateField$ref$ FutureChannelExpEP.expch)
    (NonPredicateField$ref$ FutureChannelImpEP.ch)
    (NonPredicateField$ref$ FutureChannelImpEP.impch)
    (NonPredicateField$ref$ Message.cust1)
    (NonPredicateField$ref$ Message.old1)
    (NonPredicateField$ref$ Message.old2)
    (NonPredicateField$ref$ Message.receiver1)
    (NonPredicateField$ref$ Message.receiver2)
    (NonPredicateField$ref$ Message.receiver3)
    (NonPredicateField$ref$ Message.receiver4)
    (NonPredicateField$ref$ Message.sender1)
    (NonPredicateField$ref$ Message.sender2)
    (NonPredicateField$ref$ Message.sender3)
    (NonPredicateField$ref$ Message.sender4)
    (PredicateField$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ FactorialActorChannel.initExpState)
    (PredicateField$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ FactorialActorChannel.initImpState)
    (PredicateField$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ FactorialActorChannel.valid)
    (PredicateField$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ FactorialActorChannelExpEP.valid)
    (PredicateField$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ FactorialActorChannelImpEP.valid)
    (PredicateField$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ FactorialContChannel.initExpState)
    (PredicateField$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ FactorialContChannel.initImpState)
    (PredicateField$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ FactorialContChannel.valid)
    (PredicateField$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ FactorialContChannelExpEP.valid)
    (PredicateField$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ FactorialContChannelImpEP.valid)
    (PredicateField$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ FutureChannel.initExpState)
    (PredicateField$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ FutureChannel.initImpState)
    (PredicateField$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ FutureChannel.valid)
    (PredicateField$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ FutureChannelExpEP.valid)
    (PredicateField$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ FutureChannelImpEP.valid)
    (PredicateField$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Message.inv)
    (PredicateField$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Message.invFinalResult)
    (PredicateField$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Message.invResult1)
    (PredicateField$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Message.invResult2)
    (PredicateField$$@Map@@$T0@@ref@Field$$T0$@To@$T0@@$ Message.invValue)
  )
    PreconditionGeneratedEntry
)))
(let (($root (=> (and true
  )(and 
    (or anon74_Else_assertion anon74_Else@1_assertion)
    $start
))))
   $root

))

;Commands
   (check-sat)
   ;(get-unsat-core)
