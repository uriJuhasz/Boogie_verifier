type Integer = int;
type Boolean = bool;
type HeapType = <a>[ref,Field (a)]a;
type MaskType = <a>[ref,Field (a)][PermissionComponent]int;
type CreditsType = [ref]int;
type ArgSeq = <T>[int]T;
type Field m0;
type ref;
type PermissionComponent;
type PartialHeapType;
type ModuleName;
type TypeName;
type Mu;
const null : ref;
const unique perm$R : PermissionComponent;
const unique perm$N : PermissionComponent;
const Permission$denominator : int;
const Permission$FullFraction : int;
const Permission$Zero : [PermissionComponent]int;
const Permission$Full : [PermissionComponent]int;
const ZeroMask : MaskType;
const unique joinable : Field (int);
const unique forkK : Field (int);
const channelK : int;
const monitorK : int;
const predicateK : int;
const emptyPartialHeap : PartialHeapType;
const CurrentModule : ModuleName;
const CanAssumeFunctionDefs : bool;
const unique mu : Field (Mu);
const $LockBottom : Mu;
const unique held : Field (int);
const unique rdheld : Field (bool);
const ZeroCredits : CreditsType;
const unique Node#t : TypeName;
const unique module#default : ModuleName;
const unique Node.next : Field (ref);
const unique Node.prev : Field (ref);
const unique Node.inv : Field (int);
const unique Node.invLeft : Field (int);
const unique Node.invRight : Field (int);
function Fractions(int) : int;
function IsGoodState(PartialHeapType) : bool;
function heapFragment <T> (T) : PartialHeapType;
function dtype(ref) : TypeName;
function MuBelow(Mu,Mu) : bool;
function Acquire$Heap(int) : HeapType;
function Acquire$Mask(int) : MaskType;
function Acquire$SecMask(int) : MaskType;
function Acquire$Credits(int) : CreditsType;
function LastSeen$Heap(Mu,int) : HeapType;
function LastSeen$Mask(Mu,int) : MaskType;
function LastSeen$SecMask(Mu,int) : MaskType;
function LastSeen$Credits(Mu,int) : CreditsType;
function wf(HeapType,MaskType,MaskType) : bool;
function IsGoodExhaleState(HeapType,HeapType,MaskType,MaskType) : bool;
function {:expand  false} CanRead <T> (MaskType,MaskType,ref,Field (T)) : bool;
function {:expand  false} CanWrite <T> (MaskType,ref,Field (T)) : bool;
function {:expand  true} IsGoodMask(MaskType) : bool;
function DecPerm <T> (MaskType,ref,Field (T),int) : MaskType;
function IncPerm <T> (MaskType,ref,Field (T),int) : MaskType;
function NonPredicateField <T> (Field (T)) : bool;
function PredicateField <T> (Field (T)) : bool;
function ite <T> (bool,T,T) : T;
function #Node.inv#trigger(ref) : bool;
function #Node.invLeft#trigger(ref) : bool;
function #Node.invRight#trigger(ref) : bool;
var Heap : HeapType;
var Mask : MaskType;
var SecMask : MaskType;
var Credits : CreditsType;
var oldPrev#2 : ref;
var oldNext#4 : ref;
var methodK#_170 : int;
var Mask_$_0 : MaskType;
var predVer#_321_$_0 : int;
var SecMask_$_0 : MaskType;
var SecMask_$_1 : MaskType;
var SecMask_$_2 : MaskType;
var SecMask_$_4 : MaskType;
var SecMask_$_6 : MaskType;
var unfoldK#_333 : int;
var Mask_$_1 : MaskType;
var SecMask_$_24 : MaskType;
var Heap_$_1 : HeapType;
var Mask_$_2 : MaskType;
var Mask_$_3 : MaskType;
var Mask_$_4 : MaskType;
var Mask_$_6 : MaskType;
var SecMask_$_30 : MaskType;
var predRec#_346_$_1 : ref;
var predRec#_346 : ref;
var predFlag#_348_$_0 : bool;
var predFlag#_348 : bool;
var predVer#_347_$_1 : int;
var predVer#_347 : int;
var SecMask_$_36 : MaskType;
var Mask_$_8 : MaskType;
var predRec#_355_$_1 : ref;
var predRec#_355 : ref;
var predFlag#_357_$_0 : bool;
var predFlag#_357 : bool;
var predVer#_356_$_1 : int;
var predVer#_356 : int;
var cond#_364_$_0 : bool;
var SecMask_$_105 : MaskType;
var Mask_$_21 : MaskType;
var Heap_$_6 : HeapType;
var predRec#_377_$_2 : ref;
var predRec#_377 : ref;
var predFlag#_379_$_1 : bool;
var predFlag#_379 : bool;
var predVer#_378_$_2 : int;
var predVer#_378 : int;
var cond#_386_$_1 : bool;
var cond#_386 : bool;
var predRec#_399_$_2 : ref;
var predRec#_399 : ref;
var predFlag#_401_$_1 : bool;
var predFlag#_401 : bool;
var predVer#_400_$_2 : int;
var predVer#_400 : int;
var cond#_408_$_0 : bool;
var SecMask_$_174 : MaskType;
var Heap_$_11 : HeapType;
var Mask_$_34 : MaskType;
var predRec#_421_$_2 : ref;
var predRec#_421 : ref;
var predFlag#_423_$_1 : bool;
var predFlag#_423 : bool;
var predVer#_422_$_2 : int;
var predVer#_422 : int;
var cond#_430_$_1 : bool;
var cond#_430 : bool;
var predRec#_443_$_2 : ref;
var predRec#_443 : ref;
var predFlag#_445_$_1 : bool;
var predFlag#_445 : bool;
var predVer#_444_$_2 : int;
var predVer#_444 : int;
var cond#_452_$_0 : bool;
var Mask_$_80 : MaskType;
var Heap_$_15 : HeapType;
var cond#_453_$_1 : bool;
var cond#_453 : bool;
var lastSeenMu#_464_$_0 : Mu;
var lastSeenHeld#_463_$_1 : int;
var lastAcquire#_462_$_0 : int;
var Heap_$_16 : HeapType;
var Mask_$_81 : MaskType;
var Mask_$_82 : MaskType;
var Mask_$_83 : MaskType;
var Mask_$_84 : MaskType;
var Mask_$_85 : MaskType;
var Mask_$_86 : MaskType;
var Mask_$_90 : MaskType;
var Mask_$_94 : MaskType;
var Mask_$_98 : MaskType;
var Mask_$_102 : MaskType;
var cond#_466_$_0 : bool;
var Mask_$_147 : MaskType;
var Heap_$_19 : HeapType;
var cond#_471_$_1 : bool;
var cond#_471 : bool;
var oldPrev#2_$_0 : ref;
var oldNext#4_$_0 : ref;
var cond#_476_$_0 : bool;
var Heap_$_21 : HeapType;
var cond#_477_$_0 : bool;
var Heap_$_23 : HeapType;
var Heap_$_24 : HeapType;
var Heap_$_25 : HeapType;
var exhaleMask#_485_$_0 : MaskType;
var exhaleMask#_485_$_1 : MaskType;
var exhaleMask#_485_$_2 : MaskType;
var exhaleMask#_485_$_3 : MaskType;
var exhaleMask#_485_$_4 : MaskType;
var exhaleMask#_485_$_5 : MaskType;
var exhaleMask#_485_$_9 : MaskType;
var exhaleMask#_485_$_13 : MaskType;
var exhaleMask#_485_$_17 : MaskType;
var exhaleMask#_485_$_21 : MaskType;
var exhaleHeap#_484_$_0 : HeapType;
var held#_478_$_0 : int;
var Heap_$_26 : HeapType;
var cond#_501_$_0 : bool;
var Mask_$_149 : MaskType;
var Heap_$_30 : HeapType;
var cond#_502_$_1 : bool;
var cond#_502 : bool;
var cond#_549_$_0 : bool;
var Mask_$_150 : MaskType;
var Heap_$_33 : HeapType;
var cond#_573_$_1 : bool;
var cond#_573 : bool;
var foldK#_600 : int;
var exhaleMask#_602_$_0 : MaskType;
var SecMask_$_175 : MaskType;
var exhaleMask#_602_$_1 : MaskType;
var SecMask_$_176 : MaskType;
var exhaleMask#_602_$_2 : MaskType;
var SecMask_$_177 : MaskType;
var SecMask_$_179 : MaskType;
var exhaleMask#_602_$_4 : MaskType;
var exhaleMask#_602_$_6 : MaskType;
var SecMask_$_181 : MaskType;
var exhaleHeap#_601_$_0 : HeapType;
var Mask_$_151 : MaskType;
var predVer#_598_$_0 : int;
var cond#_608_$_0 : bool;
var cond#_621_$_2 : bool;
var cond#_621 : bool;
var Heap_$_37 : HeapType;
var Mask_$_159 : MaskType;
var cond#_609_$_1 : bool;
var cond#_609 : bool;
var predRec#_610_$_2 : ref;
var predRec#_610 : ref;
var predVer#_611_$_2 : int;
var predVer#_611 : int;
var predFlag#_612_$_1 : bool;
var predFlag#_612 : bool;
var cond#_620_$_1 : bool;
var cond#_620 : bool;
var predRec#_622_$_3 : ref;
var predRec#_622 : ref;
var predVer#_623_$_3 : int;
var predVer#_623 : int;
var predFlag#_624_$_2 : bool;
var predFlag#_624 : bool;
var SecMask_$_207 : MaskType;
var predRec#_632_$_2 : ref;
var predRec#_632 : ref;
var predVer#_633_$_2 : int;
var predVer#_633 : int;
var predFlag#_634_$_1 : bool;
var predFlag#_634 : bool;
var predRec#_642_$_0 : ref;
var predRec#_642 : ref;
var predVer#_643_$_1 : int;
var predVer#_643 : int;
var predFlag#_644_$_0 : bool;
var predFlag#_644 : bool;
var exhaleMask#_654_$_0 : MaskType;
var SecMask_$_533 : MaskType;
var SecMask_$_860 : MaskType;
var exhaleMask#_654_$_2 : MaskType;
var exhaleHeap#_653_$_0 : HeapType;
var exhaleMask#_654_$_1 : MaskType;
var SecMask_$_859 : MaskType;
var SecMask_$_534 : MaskType;
var SecMask_$_536 : MaskType;
var SecMask_$_537 : MaskType;
var SecMask_$_539 : MaskType;
var SecMask_$_540 : MaskType;
var SecMask_$_542 : MaskType;
var SecMask_$_700 : MaskType;
var SecMask_$_858 : MaskType;
var SecMask_$_701 : MaskType;
var SecMask_$_703 : MaskType;
var SecMask_$_857 : MaskType;
var SecMask_$_704 : MaskType;
var SecMask_$_706 : MaskType;
var SecMask_$_707 : MaskType;
var SecMask_$_709 : MaskType;
var SecMask_$_710 : MaskType;
var SecMask_$_712 : MaskType;
var SecMask_$_856 : MaskType;
var SecMask_$_713 : MaskType;
var SecMask_$_715 : MaskType;
var SecMask_$_855 : MaskType;
var SecMask_$_716 : MaskType;
var SecMask_$_718 : MaskType;
var SecMask_$_719 : MaskType;
var SecMask_$_721 : MaskType;
var SecMask_$_722 : MaskType;
var SecMask_$_724 : MaskType;
var SecMask_$_854 : MaskType;
var SecMask_$_725 : MaskType;
var SecMask_$_727 : MaskType;
var SecMask_$_853 : MaskType;
var SecMask_$_728 : MaskType;
var SecMask_$_730 : MaskType;
var SecMask_$_731 : MaskType;
var SecMask_$_733 : MaskType;
var SecMask_$_734 : MaskType;
var SecMask_$_736 : MaskType;
var SecMask_$_852 : MaskType;
var SecMask_$_737 : MaskType;
var SecMask_$_739 : MaskType;
var SecMask_$_851 : MaskType;
var SecMask_$_740 : MaskType;
var SecMask_$_742 : MaskType;
var SecMask_$_743 : MaskType;
var SecMask_$_745 : MaskType;
var SecMask_$_746 : MaskType;
var SecMask_$_748 : MaskType;
var SecMask_$_850 : MaskType;
var SecMask_$_749 : MaskType;
var SecMask_$_751 : MaskType;
var SecMask_$_849 : MaskType;
var SecMask_$_752 : MaskType;
var SecMask_$_754 : MaskType;
var SecMask_$_755 : MaskType;
var SecMask_$_757 : MaskType;
var SecMask_$_758 : MaskType;
var SecMask_$_760 : MaskType;
var SecMask_$_848 : MaskType;
var SecMask_$_761 : MaskType;
var SecMask_$_763 : MaskType;
var SecMask_$_847 : MaskType;
var SecMask_$_764 : MaskType;
var SecMask_$_766 : MaskType;
var SecMask_$_767 : MaskType;
var SecMask_$_769 : MaskType;
var SecMask_$_770 : MaskType;
var SecMask_$_772 : MaskType;
var SecMask_$_846 : MaskType;
var SecMask_$_773 : MaskType;
var SecMask_$_775 : MaskType;
var SecMask_$_845 : MaskType;
var SecMask_$_776 : MaskType;
var SecMask_$_778 : MaskType;
var SecMask_$_779 : MaskType;
var SecMask_$_781 : MaskType;
var SecMask_$_782 : MaskType;
var SecMask_$_784 : MaskType;
var SecMask_$_844 : MaskType;
var SecMask_$_785 : MaskType;
var SecMask_$_787 : MaskType;
var SecMask_$_843 : MaskType;
var SecMask_$_788 : MaskType;
var SecMask_$_790 : MaskType;
var SecMask_$_791 : MaskType;
var SecMask_$_793 : MaskType;
var SecMask_$_794 : MaskType;
var SecMask_$_796 : MaskType;
var SecMask_$_842 : MaskType;
var SecMask_$_797 : MaskType;
var SecMask_$_799 : MaskType;
var SecMask_$_841 : MaskType;
var SecMask_$_800 : MaskType;
var SecMask_$_802 : MaskType;
var SecMask_$_803 : MaskType;
var SecMask_$_805 : MaskType;
var SecMask_$_806 : MaskType;
var SecMask_$_808 : MaskType;
var SecMask_$_840 : MaskType;
var SecMask_$_809 : MaskType;
var SecMask_$_811 : MaskType;
var SecMask_$_839 : MaskType;
var SecMask_$_812 : MaskType;
var SecMask_$_814 : MaskType;
var SecMask_$_815 : MaskType;
var SecMask_$_817 : MaskType;
var SecMask_$_818 : MaskType;
var SecMask_$_820 : MaskType;
var SecMask_$_838 : MaskType;
var SecMask_$_821 : MaskType;
var SecMask_$_823 : MaskType;
var SecMask_$_837 : MaskType;
var SecMask_$_824 : MaskType;
var SecMask_$_826 : MaskType;
var SecMask_$_827 : MaskType;
var SecMask_$_829 : MaskType;
var SecMask_$_830 : MaskType;
var SecMask_$_832 : MaskType;
var SecMask_$_836 : MaskType;
var SecMask_$_833 : MaskType;
var SecMask_$_835 : MaskType;
var SecMask_$_834 : MaskType;
var SecMask_$_831 : MaskType;
var SecMask_$_828 : MaskType;
var SecMask_$_825 : MaskType;
var SecMask_$_822 : MaskType;
var SecMask_$_819 : MaskType;
var SecMask_$_816 : MaskType;
var SecMask_$_813 : MaskType;
var SecMask_$_810 : MaskType;
var SecMask_$_807 : MaskType;
var SecMask_$_804 : MaskType;
var SecMask_$_801 : MaskType;
var SecMask_$_798 : MaskType;
var SecMask_$_795 : MaskType;
var SecMask_$_792 : MaskType;
var SecMask_$_789 : MaskType;
var SecMask_$_786 : MaskType;
var SecMask_$_783 : MaskType;
var SecMask_$_780 : MaskType;
var SecMask_$_777 : MaskType;
var SecMask_$_774 : MaskType;
var SecMask_$_771 : MaskType;
var SecMask_$_768 : MaskType;
var SecMask_$_765 : MaskType;
var SecMask_$_762 : MaskType;
var SecMask_$_759 : MaskType;
var SecMask_$_756 : MaskType;
var SecMask_$_753 : MaskType;
var SecMask_$_750 : MaskType;
var SecMask_$_747 : MaskType;
var SecMask_$_744 : MaskType;
var SecMask_$_741 : MaskType;
var SecMask_$_738 : MaskType;
var SecMask_$_735 : MaskType;
var SecMask_$_732 : MaskType;
var SecMask_$_729 : MaskType;
var SecMask_$_726 : MaskType;
var SecMask_$_723 : MaskType;
var SecMask_$_720 : MaskType;
var SecMask_$_717 : MaskType;
var SecMask_$_714 : MaskType;
var SecMask_$_711 : MaskType;
var SecMask_$_708 : MaskType;
var SecMask_$_705 : MaskType;
var SecMask_$_702 : MaskType;
var SecMask_$_543 : MaskType;
var SecMask_$_545 : MaskType;
var SecMask_$_699 : MaskType;
var SecMask_$_546 : MaskType;
var SecMask_$_548 : MaskType;
var SecMask_$_549 : MaskType;
var SecMask_$_551 : MaskType;
var SecMask_$_552 : MaskType;
var SecMask_$_554 : MaskType;
var SecMask_$_698 : MaskType;
var SecMask_$_555 : MaskType;
var SecMask_$_557 : MaskType;
var SecMask_$_697 : MaskType;
var SecMask_$_558 : MaskType;
var SecMask_$_560 : MaskType;
var SecMask_$_561 : MaskType;
var SecMask_$_563 : MaskType;
var SecMask_$_564 : MaskType;
var SecMask_$_566 : MaskType;
var SecMask_$_696 : MaskType;
var SecMask_$_567 : MaskType;
var SecMask_$_569 : MaskType;
var SecMask_$_695 : MaskType;
var SecMask_$_570 : MaskType;
var SecMask_$_572 : MaskType;
var SecMask_$_573 : MaskType;
var SecMask_$_575 : MaskType;
var SecMask_$_576 : MaskType;
var SecMask_$_578 : MaskType;
var SecMask_$_694 : MaskType;
var SecMask_$_579 : MaskType;
var SecMask_$_581 : MaskType;
var SecMask_$_693 : MaskType;
var SecMask_$_582 : MaskType;
var SecMask_$_584 : MaskType;
var SecMask_$_585 : MaskType;
var SecMask_$_587 : MaskType;
var SecMask_$_588 : MaskType;
var SecMask_$_590 : MaskType;
var SecMask_$_692 : MaskType;
var SecMask_$_591 : MaskType;
var SecMask_$_593 : MaskType;
var SecMask_$_691 : MaskType;
var SecMask_$_594 : MaskType;
var SecMask_$_596 : MaskType;
var SecMask_$_597 : MaskType;
var SecMask_$_599 : MaskType;
var SecMask_$_600 : MaskType;
var SecMask_$_602 : MaskType;
var SecMask_$_690 : MaskType;
var SecMask_$_603 : MaskType;
var SecMask_$_605 : MaskType;
var SecMask_$_689 : MaskType;
var SecMask_$_606 : MaskType;
var SecMask_$_608 : MaskType;
var SecMask_$_609 : MaskType;
var SecMask_$_611 : MaskType;
var SecMask_$_612 : MaskType;
var SecMask_$_614 : MaskType;
var SecMask_$_688 : MaskType;
var SecMask_$_615 : MaskType;
var SecMask_$_617 : MaskType;
var SecMask_$_687 : MaskType;
var SecMask_$_618 : MaskType;
var SecMask_$_620 : MaskType;
var SecMask_$_621 : MaskType;
var SecMask_$_623 : MaskType;
var SecMask_$_624 : MaskType;
var SecMask_$_626 : MaskType;
var SecMask_$_686 : MaskType;
var SecMask_$_627 : MaskType;
var SecMask_$_629 : MaskType;
var SecMask_$_685 : MaskType;
var SecMask_$_630 : MaskType;
var SecMask_$_632 : MaskType;
var SecMask_$_633 : MaskType;
var SecMask_$_635 : MaskType;
var SecMask_$_636 : MaskType;
var SecMask_$_638 : MaskType;
var SecMask_$_684 : MaskType;
var SecMask_$_639 : MaskType;
var SecMask_$_641 : MaskType;
var SecMask_$_683 : MaskType;
var SecMask_$_642 : MaskType;
var SecMask_$_644 : MaskType;
var SecMask_$_645 : MaskType;
var SecMask_$_647 : MaskType;
var SecMask_$_648 : MaskType;
var SecMask_$_650 : MaskType;
var SecMask_$_682 : MaskType;
var SecMask_$_651 : MaskType;
var SecMask_$_653 : MaskType;
var SecMask_$_681 : MaskType;
var SecMask_$_654 : MaskType;
var SecMask_$_656 : MaskType;
var SecMask_$_657 : MaskType;
var SecMask_$_659 : MaskType;
var SecMask_$_660 : MaskType;
var SecMask_$_662 : MaskType;
var SecMask_$_680 : MaskType;
var SecMask_$_663 : MaskType;
var SecMask_$_665 : MaskType;
var SecMask_$_679 : MaskType;
var SecMask_$_666 : MaskType;
var SecMask_$_668 : MaskType;
var SecMask_$_669 : MaskType;
var SecMask_$_671 : MaskType;
var SecMask_$_672 : MaskType;
var SecMask_$_674 : MaskType;
var SecMask_$_678 : MaskType;
var SecMask_$_675 : MaskType;
var SecMask_$_677 : MaskType;
var SecMask_$_676 : MaskType;
var SecMask_$_673 : MaskType;
var SecMask_$_670 : MaskType;
var SecMask_$_667 : MaskType;
var SecMask_$_664 : MaskType;
var SecMask_$_661 : MaskType;
var SecMask_$_658 : MaskType;
var SecMask_$_655 : MaskType;
var SecMask_$_652 : MaskType;
var SecMask_$_649 : MaskType;
var SecMask_$_646 : MaskType;
var SecMask_$_643 : MaskType;
var SecMask_$_640 : MaskType;
var SecMask_$_637 : MaskType;
var SecMask_$_634 : MaskType;
var SecMask_$_631 : MaskType;
var SecMask_$_628 : MaskType;
var SecMask_$_625 : MaskType;
var SecMask_$_622 : MaskType;
var SecMask_$_619 : MaskType;
var SecMask_$_616 : MaskType;
var SecMask_$_613 : MaskType;
var SecMask_$_610 : MaskType;
var SecMask_$_607 : MaskType;
var SecMask_$_604 : MaskType;
var SecMask_$_601 : MaskType;
var SecMask_$_598 : MaskType;
var SecMask_$_595 : MaskType;
var SecMask_$_592 : MaskType;
var SecMask_$_589 : MaskType;
var SecMask_$_586 : MaskType;
var SecMask_$_583 : MaskType;
var SecMask_$_580 : MaskType;
var SecMask_$_577 : MaskType;
var SecMask_$_574 : MaskType;
var SecMask_$_571 : MaskType;
var SecMask_$_568 : MaskType;
var SecMask_$_565 : MaskType;
var SecMask_$_562 : MaskType;
var SecMask_$_559 : MaskType;
var SecMask_$_556 : MaskType;
var SecMask_$_553 : MaskType;
var SecMask_$_550 : MaskType;
var SecMask_$_547 : MaskType;
var SecMask_$_544 : MaskType;
var SecMask_$_541 : MaskType;
var SecMask_$_538 : MaskType;
var SecMask_$_535 : MaskType;
var SecMask_$_208 : MaskType;
var SecMask_$_210 : MaskType;
var SecMask_$_211 : MaskType;
var SecMask_$_213 : MaskType;
var SecMask_$_214 : MaskType;
var SecMask_$_216 : MaskType;
var SecMask_$_374 : MaskType;
var SecMask_$_532 : MaskType;
var SecMask_$_375 : MaskType;
var SecMask_$_377 : MaskType;
var SecMask_$_531 : MaskType;
var SecMask_$_378 : MaskType;
var SecMask_$_380 : MaskType;
var SecMask_$_381 : MaskType;
var SecMask_$_383 : MaskType;
var SecMask_$_384 : MaskType;
var SecMask_$_386 : MaskType;
var SecMask_$_530 : MaskType;
var SecMask_$_387 : MaskType;
var SecMask_$_389 : MaskType;
var SecMask_$_529 : MaskType;
var SecMask_$_390 : MaskType;
var SecMask_$_392 : MaskType;
var SecMask_$_393 : MaskType;
var SecMask_$_395 : MaskType;
var SecMask_$_396 : MaskType;
var SecMask_$_398 : MaskType;
var SecMask_$_528 : MaskType;
var SecMask_$_399 : MaskType;
var SecMask_$_401 : MaskType;
var SecMask_$_527 : MaskType;
var SecMask_$_402 : MaskType;
var SecMask_$_404 : MaskType;
var SecMask_$_405 : MaskType;
var SecMask_$_407 : MaskType;
var SecMask_$_408 : MaskType;
var SecMask_$_410 : MaskType;
var SecMask_$_526 : MaskType;
var SecMask_$_411 : MaskType;
var SecMask_$_413 : MaskType;
var SecMask_$_525 : MaskType;
var SecMask_$_414 : MaskType;
var SecMask_$_416 : MaskType;
var SecMask_$_417 : MaskType;
var SecMask_$_419 : MaskType;
var SecMask_$_420 : MaskType;
var SecMask_$_422 : MaskType;
var SecMask_$_524 : MaskType;
var SecMask_$_423 : MaskType;
var SecMask_$_425 : MaskType;
var SecMask_$_523 : MaskType;
var SecMask_$_426 : MaskType;
var SecMask_$_428 : MaskType;
var SecMask_$_429 : MaskType;
var SecMask_$_431 : MaskType;
var SecMask_$_432 : MaskType;
var SecMask_$_434 : MaskType;
var SecMask_$_522 : MaskType;
var SecMask_$_435 : MaskType;
var SecMask_$_437 : MaskType;
var SecMask_$_521 : MaskType;
var SecMask_$_438 : MaskType;
var SecMask_$_440 : MaskType;
var SecMask_$_441 : MaskType;
var SecMask_$_443 : MaskType;
var SecMask_$_444 : MaskType;
var SecMask_$_446 : MaskType;
var SecMask_$_520 : MaskType;
var SecMask_$_447 : MaskType;
var SecMask_$_449 : MaskType;
var SecMask_$_519 : MaskType;
var SecMask_$_450 : MaskType;
var SecMask_$_452 : MaskType;
var SecMask_$_453 : MaskType;
var SecMask_$_455 : MaskType;
var SecMask_$_456 : MaskType;
var SecMask_$_458 : MaskType;
var SecMask_$_518 : MaskType;
var SecMask_$_459 : MaskType;
var SecMask_$_461 : MaskType;
var SecMask_$_517 : MaskType;
var SecMask_$_462 : MaskType;
var SecMask_$_464 : MaskType;
var SecMask_$_465 : MaskType;
var SecMask_$_467 : MaskType;
var SecMask_$_468 : MaskType;
var SecMask_$_470 : MaskType;
var SecMask_$_516 : MaskType;
var SecMask_$_471 : MaskType;
var SecMask_$_473 : MaskType;
var SecMask_$_515 : MaskType;
var SecMask_$_474 : MaskType;
var SecMask_$_476 : MaskType;
var SecMask_$_477 : MaskType;
var SecMask_$_479 : MaskType;
var SecMask_$_480 : MaskType;
var SecMask_$_482 : MaskType;
var SecMask_$_514 : MaskType;
var SecMask_$_483 : MaskType;
var SecMask_$_485 : MaskType;
var SecMask_$_513 : MaskType;
var SecMask_$_486 : MaskType;
var SecMask_$_488 : MaskType;
var SecMask_$_489 : MaskType;
var SecMask_$_491 : MaskType;
var SecMask_$_492 : MaskType;
var SecMask_$_494 : MaskType;
var SecMask_$_512 : MaskType;
var SecMask_$_495 : MaskType;
var SecMask_$_497 : MaskType;
var SecMask_$_511 : MaskType;
var SecMask_$_498 : MaskType;
var SecMask_$_500 : MaskType;
var SecMask_$_501 : MaskType;
var SecMask_$_503 : MaskType;
var SecMask_$_504 : MaskType;
var SecMask_$_506 : MaskType;
var SecMask_$_510 : MaskType;
var SecMask_$_507 : MaskType;
var SecMask_$_509 : MaskType;
var SecMask_$_508 : MaskType;
var SecMask_$_505 : MaskType;
var SecMask_$_502 : MaskType;
var SecMask_$_499 : MaskType;
var SecMask_$_496 : MaskType;
var SecMask_$_493 : MaskType;
var SecMask_$_490 : MaskType;
var SecMask_$_487 : MaskType;
var SecMask_$_484 : MaskType;
var SecMask_$_481 : MaskType;
var SecMask_$_478 : MaskType;
var SecMask_$_475 : MaskType;
var SecMask_$_472 : MaskType;
var SecMask_$_469 : MaskType;
var SecMask_$_466 : MaskType;
var SecMask_$_463 : MaskType;
var SecMask_$_460 : MaskType;
var SecMask_$_457 : MaskType;
var SecMask_$_454 : MaskType;
var SecMask_$_451 : MaskType;
var SecMask_$_448 : MaskType;
var SecMask_$_445 : MaskType;
var SecMask_$_442 : MaskType;
var SecMask_$_439 : MaskType;
var SecMask_$_436 : MaskType;
var SecMask_$_433 : MaskType;
var SecMask_$_430 : MaskType;
var SecMask_$_427 : MaskType;
var SecMask_$_424 : MaskType;
var SecMask_$_421 : MaskType;
var SecMask_$_418 : MaskType;
var SecMask_$_415 : MaskType;
var SecMask_$_412 : MaskType;
var SecMask_$_409 : MaskType;
var SecMask_$_406 : MaskType;
var SecMask_$_403 : MaskType;
var SecMask_$_400 : MaskType;
var SecMask_$_397 : MaskType;
var SecMask_$_394 : MaskType;
var SecMask_$_391 : MaskType;
var SecMask_$_388 : MaskType;
var SecMask_$_385 : MaskType;
var SecMask_$_382 : MaskType;
var SecMask_$_379 : MaskType;
var SecMask_$_376 : MaskType;
var SecMask_$_217 : MaskType;
var SecMask_$_219 : MaskType;
var SecMask_$_373 : MaskType;
var SecMask_$_220 : MaskType;
var SecMask_$_222 : MaskType;
var SecMask_$_223 : MaskType;
var SecMask_$_225 : MaskType;
var SecMask_$_226 : MaskType;
var SecMask_$_228 : MaskType;
var SecMask_$_372 : MaskType;
var SecMask_$_229 : MaskType;
var SecMask_$_231 : MaskType;
var SecMask_$_371 : MaskType;
var SecMask_$_232 : MaskType;
var SecMask_$_234 : MaskType;
var SecMask_$_235 : MaskType;
var SecMask_$_237 : MaskType;
var SecMask_$_238 : MaskType;
var SecMask_$_240 : MaskType;
var SecMask_$_370 : MaskType;
var SecMask_$_241 : MaskType;
var SecMask_$_243 : MaskType;
var SecMask_$_369 : MaskType;
var SecMask_$_244 : MaskType;
var SecMask_$_246 : MaskType;
var SecMask_$_247 : MaskType;
var SecMask_$_249 : MaskType;
var SecMask_$_250 : MaskType;
var SecMask_$_252 : MaskType;
var SecMask_$_368 : MaskType;
var SecMask_$_253 : MaskType;
var SecMask_$_255 : MaskType;
var SecMask_$_367 : MaskType;
var SecMask_$_256 : MaskType;
var SecMask_$_258 : MaskType;
var SecMask_$_259 : MaskType;
var SecMask_$_261 : MaskType;
var SecMask_$_262 : MaskType;
var SecMask_$_264 : MaskType;
var SecMask_$_366 : MaskType;
var SecMask_$_265 : MaskType;
var SecMask_$_267 : MaskType;
var SecMask_$_365 : MaskType;
var SecMask_$_268 : MaskType;
var SecMask_$_270 : MaskType;
var SecMask_$_271 : MaskType;
var SecMask_$_273 : MaskType;
var SecMask_$_274 : MaskType;
var SecMask_$_276 : MaskType;
var SecMask_$_364 : MaskType;
var SecMask_$_277 : MaskType;
var SecMask_$_279 : MaskType;
var SecMask_$_363 : MaskType;
var SecMask_$_280 : MaskType;
var SecMask_$_282 : MaskType;
var SecMask_$_283 : MaskType;
var SecMask_$_285 : MaskType;
var SecMask_$_286 : MaskType;
var SecMask_$_288 : MaskType;
var SecMask_$_362 : MaskType;
var SecMask_$_289 : MaskType;
var SecMask_$_291 : MaskType;
var SecMask_$_361 : MaskType;
var SecMask_$_292 : MaskType;
var SecMask_$_294 : MaskType;
var SecMask_$_295 : MaskType;
var SecMask_$_297 : MaskType;
var SecMask_$_298 : MaskType;
var SecMask_$_300 : MaskType;
var SecMask_$_360 : MaskType;
var SecMask_$_301 : MaskType;
var SecMask_$_303 : MaskType;
var SecMask_$_359 : MaskType;
var SecMask_$_304 : MaskType;
var SecMask_$_306 : MaskType;
var SecMask_$_307 : MaskType;
var SecMask_$_309 : MaskType;
var SecMask_$_310 : MaskType;
var SecMask_$_312 : MaskType;
var SecMask_$_358 : MaskType;
var SecMask_$_313 : MaskType;
var SecMask_$_315 : MaskType;
var SecMask_$_357 : MaskType;
var SecMask_$_316 : MaskType;
var SecMask_$_318 : MaskType;
var SecMask_$_319 : MaskType;
var SecMask_$_321 : MaskType;
var SecMask_$_322 : MaskType;
var SecMask_$_324 : MaskType;
var SecMask_$_356 : MaskType;
var SecMask_$_325 : MaskType;
var SecMask_$_327 : MaskType;
var SecMask_$_355 : MaskType;
var SecMask_$_328 : MaskType;
var SecMask_$_330 : MaskType;
var SecMask_$_331 : MaskType;
var SecMask_$_333 : MaskType;
var SecMask_$_334 : MaskType;
var SecMask_$_336 : MaskType;
var SecMask_$_354 : MaskType;
var SecMask_$_337 : MaskType;
var SecMask_$_339 : MaskType;
var SecMask_$_353 : MaskType;
var SecMask_$_340 : MaskType;
var SecMask_$_342 : MaskType;
var SecMask_$_343 : MaskType;
var SecMask_$_345 : MaskType;
var SecMask_$_346 : MaskType;
var SecMask_$_348 : MaskType;
var SecMask_$_352 : MaskType;
var SecMask_$_349 : MaskType;
var SecMask_$_351 : MaskType;
var SecMask_$_350 : MaskType;
var SecMask_$_347 : MaskType;
var SecMask_$_344 : MaskType;
var SecMask_$_341 : MaskType;
var SecMask_$_338 : MaskType;
var SecMask_$_335 : MaskType;
var SecMask_$_332 : MaskType;
var SecMask_$_329 : MaskType;
var SecMask_$_326 : MaskType;
var SecMask_$_323 : MaskType;
var SecMask_$_320 : MaskType;
var SecMask_$_317 : MaskType;
var SecMask_$_314 : MaskType;
var SecMask_$_311 : MaskType;
var SecMask_$_308 : MaskType;
var SecMask_$_305 : MaskType;
var SecMask_$_302 : MaskType;
var SecMask_$_299 : MaskType;
var SecMask_$_296 : MaskType;
var SecMask_$_293 : MaskType;
var SecMask_$_290 : MaskType;
var SecMask_$_287 : MaskType;
var SecMask_$_284 : MaskType;
var SecMask_$_281 : MaskType;
var SecMask_$_278 : MaskType;
var SecMask_$_275 : MaskType;
var SecMask_$_272 : MaskType;
var SecMask_$_269 : MaskType;
var SecMask_$_266 : MaskType;
var SecMask_$_263 : MaskType;
var SecMask_$_260 : MaskType;
var SecMask_$_257 : MaskType;
var SecMask_$_254 : MaskType;
var SecMask_$_251 : MaskType;
var SecMask_$_248 : MaskType;
var SecMask_$_245 : MaskType;
var SecMask_$_242 : MaskType;
var SecMask_$_239 : MaskType;
var SecMask_$_236 : MaskType;
var SecMask_$_233 : MaskType;
var SecMask_$_230 : MaskType;
var SecMask_$_227 : MaskType;
var SecMask_$_224 : MaskType;
var SecMask_$_221 : MaskType;
var SecMask_$_218 : MaskType;
var SecMask_$_215 : MaskType;
var SecMask_$_212 : MaskType;
var SecMask_$_209 : MaskType;
var cond#_609_$_0 : bool;
var Heap_$_34 : HeapType;
var Mask_$_153 : MaskType;
var SecMask_$_187 : MaskType;
var predRec#_610_$_1 : ref;
var predVer#_611_$_1 : int;
var predFlag#_612_$_0 : bool;
var cond#_620_$_0 : bool;
var Heap_$_36 : HeapType;
var Mask_$_157 : MaskType;
var cond#_621_$_1 : bool;
var predRec#_622_$_2 : ref;
var predVer#_623_$_2 : int;
var predFlag#_624_$_1 : bool;
var SecMask_$_199 : MaskType;
var predRec#_632_$_1 : ref;
var predVer#_633_$_1 : int;
var predFlag#_634_$_0 : bool;
var foldK#_645 : int;
var exhaleMask#_647_$_0 : MaskType;
var SecMask_$_200 : MaskType;
var exhaleMask#_647_$_1 : MaskType;
var SecMask_$_201 : MaskType;
var exhaleMask#_647_$_2 : MaskType;
var SecMask_$_202 : MaskType;
var SecMask_$_204 : MaskType;
var exhaleMask#_647_$_4 : MaskType;
var exhaleMask#_647_$_6 : MaskType;
var SecMask_$_206 : MaskType;
var exhaleHeap#_646_$_0 : HeapType;
var Mask_$_158 : MaskType;
var predVer#_643_$_0 : int;
var exhaleMask#_647_$_5 : MaskType;
var SecMask_$_205 : MaskType;
var exhaleMask#_647_$_3 : MaskType;
var SecMask_$_203 : MaskType;
var cond#_621_$_0 : bool;
var Heap_$_35 : HeapType;
var Mask_$_155 : MaskType;
var SecMask_$_193 : MaskType;
var predRec#_622_$_1 : ref;
var predVer#_623_$_1 : int;
var predFlag#_624_$_0 : bool;
var foldK#_635 : int;
var exhaleMask#_637_$_0 : MaskType;
var SecMask_$_194 : MaskType;
var exhaleMask#_637_$_1 : MaskType;
var SecMask_$_195 : MaskType;
var exhaleMask#_637_$_2 : MaskType;
var SecMask_$_196 : MaskType;
var SecMask_$_198 : MaskType;
var exhaleMask#_637_$_4 : MaskType;
var exhaleHeap#_636_$_0 : HeapType;
var Mask_$_156 : MaskType;
var predRec#_632_$_0 : ref;
var predVer#_633_$_0 : int;
var exhaleMask#_637_$_3 : MaskType;
var SecMask_$_197 : MaskType;
var foldK#_625 : int;
var exhaleMask#_627_$_0 : MaskType;
var SecMask_$_188 : MaskType;
var exhaleMask#_627_$_1 : MaskType;
var SecMask_$_189 : MaskType;
var exhaleMask#_627_$_2 : MaskType;
var SecMask_$_190 : MaskType;
var SecMask_$_192 : MaskType;
var exhaleMask#_627_$_4 : MaskType;
var exhaleHeap#_626_$_0 : HeapType;
var Mask_$_154 : MaskType;
var predRec#_622_$_0 : ref;
var predVer#_623_$_0 : int;
var exhaleMask#_627_$_3 : MaskType;
var SecMask_$_191 : MaskType;
var foldK#_613 : int;
var exhaleMask#_615_$_0 : MaskType;
var SecMask_$_182 : MaskType;
var exhaleMask#_615_$_1 : MaskType;
var SecMask_$_183 : MaskType;
var exhaleMask#_615_$_2 : MaskType;
var SecMask_$_184 : MaskType;
var SecMask_$_186 : MaskType;
var exhaleMask#_615_$_4 : MaskType;
var exhaleHeap#_614_$_0 : HeapType;
var Mask_$_152 : MaskType;
var predRec#_610_$_0 : ref;
var predVer#_611_$_0 : int;
var exhaleMask#_615_$_3 : MaskType;
var SecMask_$_185 : MaskType;
var exhaleMask#_602_$_5 : MaskType;
var SecMask_$_180 : MaskType;
var exhaleMask#_602_$_3 : MaskType;
var SecMask_$_178 : MaskType;
var exhaleMask#_557_$_0 : MaskType;
var exhaleMask#_557_$_1 : MaskType;
var exhaleMask#_557_$_2 : MaskType;
var exhaleMask#_557_$_3 : MaskType;
var exhaleMask#_557_$_4 : MaskType;
var exhaleMask#_557_$_5 : MaskType;
var exhaleMask#_557_$_9 : MaskType;
var exhaleMask#_557_$_13 : MaskType;
var exhaleMask#_557_$_17 : MaskType;
var exhaleMask#_557_$_21 : MaskType;
var exhaleHeap#_556_$_0 : HeapType;
var held#_550_$_0 : int;
var Heap_$_31 : HeapType;
var cond#_573_$_0 : bool;
var sh#14_$_0 : ref;
var exhaleMask#_581_$_0 : MaskType;
var exhaleMask#_581_$_1 : MaskType;
var exhaleMask#_581_$_2 : MaskType;
var exhaleMask#_581_$_3 : MaskType;
var exhaleMask#_581_$_4 : MaskType;
var exhaleMask#_581_$_5 : MaskType;
var exhaleMask#_581_$_9 : MaskType;
var exhaleMask#_581_$_13 : MaskType;
var exhaleMask#_581_$_17 : MaskType;
var exhaleMask#_581_$_21 : MaskType;
var exhaleHeap#_580_$_0 : HeapType;
var held#_574_$_0 : int;
var Heap_$_32 : HeapType;
var exhaleMask#_581_$_18 : MaskType;
var exhaleMask#_581_$_19 : MaskType;
var exhaleMask#_581_$_20 : MaskType;
var exhaleMask#_581_$_14 : MaskType;
var exhaleMask#_581_$_15 : MaskType;
var exhaleMask#_581_$_16 : MaskType;
var exhaleMask#_581_$_10 : MaskType;
var exhaleMask#_581_$_11 : MaskType;
var exhaleMask#_581_$_12 : MaskType;
var exhaleMask#_581_$_6 : MaskType;
var exhaleMask#_581_$_7 : MaskType;
var exhaleMask#_581_$_8 : MaskType;
var exhaleMask#_557_$_18 : MaskType;
var exhaleMask#_557_$_19 : MaskType;
var exhaleMask#_557_$_20 : MaskType;
var exhaleMask#_557_$_14 : MaskType;
var exhaleMask#_557_$_15 : MaskType;
var exhaleMask#_557_$_16 : MaskType;
var exhaleMask#_557_$_10 : MaskType;
var exhaleMask#_557_$_11 : MaskType;
var exhaleMask#_557_$_12 : MaskType;
var exhaleMask#_557_$_6 : MaskType;
var exhaleMask#_557_$_7 : MaskType;
var exhaleMask#_557_$_8 : MaskType;
var cond#_502_$_0 : bool;
var Heap_$_28 : HeapType;
var Mask_$_148 : MaskType;
var exhaleMask#_533_$_0 : MaskType;
var exhaleMask#_533_$_1 : MaskType;
var exhaleMask#_533_$_2 : MaskType;
var exhaleMask#_533_$_3 : MaskType;
var exhaleMask#_533_$_4 : MaskType;
var exhaleMask#_533_$_5 : MaskType;
var exhaleMask#_533_$_9 : MaskType;
var exhaleMask#_533_$_13 : MaskType;
var exhaleMask#_533_$_17 : MaskType;
var exhaleMask#_533_$_21 : MaskType;
var exhaleHeap#_532_$_0 : HeapType;
var held#_526_$_0 : int;
var Heap_$_29 : HeapType;
var exhaleMask#_533_$_18 : MaskType;
var exhaleMask#_533_$_19 : MaskType;
var exhaleMask#_533_$_20 : MaskType;
var exhaleMask#_533_$_14 : MaskType;
var exhaleMask#_533_$_15 : MaskType;
var exhaleMask#_533_$_16 : MaskType;
var exhaleMask#_533_$_10 : MaskType;
var exhaleMask#_533_$_11 : MaskType;
var exhaleMask#_533_$_12 : MaskType;
var exhaleMask#_533_$_6 : MaskType;
var exhaleMask#_533_$_7 : MaskType;
var exhaleMask#_533_$_8 : MaskType;
var sh#11_$_0 : ref;
var exhaleMask#_510_$_0 : MaskType;
var exhaleMask#_510_$_1 : MaskType;
var exhaleMask#_510_$_2 : MaskType;
var exhaleMask#_510_$_3 : MaskType;
var exhaleMask#_510_$_4 : MaskType;
var exhaleMask#_510_$_5 : MaskType;
var exhaleMask#_510_$_9 : MaskType;
var exhaleMask#_510_$_13 : MaskType;
var exhaleMask#_510_$_17 : MaskType;
var exhaleMask#_510_$_21 : MaskType;
var exhaleHeap#_509_$_0 : HeapType;
var held#_503_$_0 : int;
var Heap_$_27 : HeapType;
var exhaleMask#_510_$_18 : MaskType;
var exhaleMask#_510_$_19 : MaskType;
var exhaleMask#_510_$_20 : MaskType;
var exhaleMask#_510_$_14 : MaskType;
var exhaleMask#_510_$_15 : MaskType;
var exhaleMask#_510_$_16 : MaskType;
var exhaleMask#_510_$_10 : MaskType;
var exhaleMask#_510_$_11 : MaskType;
var exhaleMask#_510_$_12 : MaskType;
var exhaleMask#_510_$_6 : MaskType;
var exhaleMask#_510_$_7 : MaskType;
var exhaleMask#_510_$_8 : MaskType;
var exhaleMask#_485_$_18 : MaskType;
var exhaleMask#_485_$_19 : MaskType;
var exhaleMask#_485_$_20 : MaskType;
var exhaleMask#_485_$_14 : MaskType;
var exhaleMask#_485_$_15 : MaskType;
var exhaleMask#_485_$_16 : MaskType;
var exhaleMask#_485_$_10 : MaskType;
var exhaleMask#_485_$_11 : MaskType;
var exhaleMask#_485_$_12 : MaskType;
var exhaleMask#_485_$_6 : MaskType;
var exhaleMask#_485_$_7 : MaskType;
var exhaleMask#_485_$_8 : MaskType;
var Heap_$_22 : HeapType;
var Heap_$_20 : HeapType;
var lastSeenMu#_469_$_0 : Mu;
var lastSeenHeld#_468_$_1 : int;
var lastAcquire#_467_$_0 : int;
var Heap_$_17 : HeapType;
var sh#8_$_0 : ref;
var Mask_$_103 : MaskType;
var Mask_$_104 : MaskType;
var Mask_$_105 : MaskType;
var Mask_$_106 : MaskType;
var Mask_$_107 : MaskType;
var Mask_$_108 : MaskType;
var Mask_$_112 : MaskType;
var Mask_$_116 : MaskType;
var Mask_$_120 : MaskType;
var Mask_$_124 : MaskType;
var cond#_471_$_0 : bool;
var lastSeenMu#_474_$_0 : Mu;
var lastSeenHeld#_473_$_1 : int;
var lastAcquire#_472_$_0 : int;
var Heap_$_18 : HeapType;
var sh#9_$_0 : ref;
var Mask_$_125 : MaskType;
var Mask_$_126 : MaskType;
var Mask_$_127 : MaskType;
var Mask_$_128 : MaskType;
var Mask_$_129 : MaskType;
var Mask_$_130 : MaskType;
var Mask_$_134 : MaskType;
var Mask_$_138 : MaskType;
var Mask_$_142 : MaskType;
var Mask_$_146 : MaskType;
var Mask_$_143 : MaskType;
var Mask_$_144 : MaskType;
var Mask_$_145 : MaskType;
var Mask_$_139 : MaskType;
var Mask_$_140 : MaskType;
var Mask_$_141 : MaskType;
var Mask_$_135 : MaskType;
var Mask_$_136 : MaskType;
var Mask_$_137 : MaskType;
var Mask_$_131 : MaskType;
var Mask_$_132 : MaskType;
var Mask_$_133 : MaskType;
var Mask_$_121 : MaskType;
var Mask_$_122 : MaskType;
var Mask_$_123 : MaskType;
var Mask_$_117 : MaskType;
var Mask_$_118 : MaskType;
var Mask_$_119 : MaskType;
var Mask_$_113 : MaskType;
var Mask_$_114 : MaskType;
var Mask_$_115 : MaskType;
var Mask_$_109 : MaskType;
var Mask_$_110 : MaskType;
var Mask_$_111 : MaskType;
var Mask_$_99 : MaskType;
var Mask_$_100 : MaskType;
var Mask_$_101 : MaskType;
var Mask_$_95 : MaskType;
var Mask_$_96 : MaskType;
var Mask_$_97 : MaskType;
var Mask_$_91 : MaskType;
var Mask_$_92 : MaskType;
var Mask_$_93 : MaskType;
var Mask_$_87 : MaskType;
var Mask_$_88 : MaskType;
var Mask_$_89 : MaskType;
var cond#_453_$_0 : bool;
var Heap_$_13 : HeapType;
var Mask_$_57 : MaskType;
var lastSeenMu#_460_$_0 : Mu;
var lastSeenHeld#_459_$_1 : int;
var lastAcquire#_458_$_0 : int;
var Heap_$_14 : HeapType;
var sh#6_$_0 : ref;
var Mask_$_58 : MaskType;
var Mask_$_59 : MaskType;
var Mask_$_60 : MaskType;
var Mask_$_61 : MaskType;
var Mask_$_62 : MaskType;
var Mask_$_63 : MaskType;
var Mask_$_67 : MaskType;
var Mask_$_71 : MaskType;
var Mask_$_75 : MaskType;
var Mask_$_79 : MaskType;
var Mask_$_76 : MaskType;
var Mask_$_77 : MaskType;
var Mask_$_78 : MaskType;
var Mask_$_72 : MaskType;
var Mask_$_73 : MaskType;
var Mask_$_74 : MaskType;
var Mask_$_68 : MaskType;
var Mask_$_69 : MaskType;
var Mask_$_70 : MaskType;
var Mask_$_64 : MaskType;
var Mask_$_65 : MaskType;
var Mask_$_66 : MaskType;
var lastSeenMu#_456_$_0 : Mu;
var lastSeenHeld#_455_$_1 : int;
var lastAcquire#_454_$_0 : int;
var Heap_$_12 : HeapType;
var sh#5_$_0 : ref;
var Mask_$_35 : MaskType;
var Mask_$_36 : MaskType;
var Mask_$_37 : MaskType;
var Mask_$_38 : MaskType;
var Mask_$_39 : MaskType;
var Mask_$_40 : MaskType;
var Mask_$_44 : MaskType;
var Mask_$_48 : MaskType;
var Mask_$_52 : MaskType;
var Mask_$_56 : MaskType;
var Mask_$_53 : MaskType;
var Mask_$_54 : MaskType;
var Mask_$_55 : MaskType;
var Mask_$_49 : MaskType;
var Mask_$_50 : MaskType;
var Mask_$_51 : MaskType;
var Mask_$_45 : MaskType;
var Mask_$_46 : MaskType;
var Mask_$_47 : MaskType;
var Mask_$_41 : MaskType;
var Mask_$_42 : MaskType;
var Mask_$_43 : MaskType;
var unfoldK#_409 : int;
var Mask_$_22 : MaskType;
var SecMask_$_119 : MaskType;
var Heap_$_8 : HeapType;
var Mask_$_23 : MaskType;
var Mask_$_24 : MaskType;
var Mask_$_25 : MaskType;
var Mask_$_27 : MaskType;
var SecMask_$_139 : MaskType;
var predRec#_421_$_1 : ref;
var predFlag#_423_$_0 : bool;
var predVer#_422_$_1 : int;
var cond#_430_$_0 : bool;
var unfoldK#_431 : int;
var Mask_$_28 : MaskType;
var SecMask_$_153 : MaskType;
var Heap_$_10 : HeapType;
var Mask_$_29 : MaskType;
var Mask_$_30 : MaskType;
var Mask_$_31 : MaskType;
var SecMask_$_173 : MaskType;
var Mask_$_33 : MaskType;
var predRec#_443_$_1 : ref;
var predFlag#_445_$_0 : bool;
var predVer#_444_$_1 : int;
var Mask_$_32 : MaskType;
var predRec#_443_$_0 : ref;
var predVer#_444_$_0 : int;
var SecMask_$_167 : MaskType;
var SecMask_$_168 : MaskType;
var SecMask_$_169 : MaskType;
var SecMask_$_170 : MaskType;
var SecMask_$_172 : MaskType;
var SecMask_$_171 : MaskType;
var SecMask_$_154 : MaskType;
var SecMask_$_156 : MaskType;
var SecMask_$_157 : MaskType;
var SecMask_$_159 : MaskType;
var SecMask_$_160 : MaskType;
var SecMask_$_162 : MaskType;
var SecMask_$_166 : MaskType;
var SecMask_$_163 : MaskType;
var SecMask_$_165 : MaskType;
var SecMask_$_164 : MaskType;
var SecMask_$_161 : MaskType;
var SecMask_$_158 : MaskType;
var SecMask_$_155 : MaskType;
var oldVers#_441_$_0 : int;
var Heap_$_9 : HeapType;
var newVers#_442_$_0 : int;
var SecMask_$_140 : MaskType;
var SecMask_$_142 : MaskType;
var SecMask_$_143 : MaskType;
var SecMask_$_145 : MaskType;
var SecMask_$_146 : MaskType;
var SecMask_$_148 : MaskType;
var SecMask_$_152 : MaskType;
var SecMask_$_149 : MaskType;
var SecMask_$_151 : MaskType;
var SecMask_$_150 : MaskType;
var SecMask_$_147 : MaskType;
var SecMask_$_144 : MaskType;
var SecMask_$_141 : MaskType;
var Mask_$_26 : MaskType;
var predRec#_421_$_0 : ref;
var predVer#_422_$_0 : int;
var SecMask_$_133 : MaskType;
var SecMask_$_134 : MaskType;
var SecMask_$_135 : MaskType;
var SecMask_$_136 : MaskType;
var SecMask_$_138 : MaskType;
var SecMask_$_137 : MaskType;
var SecMask_$_120 : MaskType;
var SecMask_$_122 : MaskType;
var SecMask_$_123 : MaskType;
var SecMask_$_125 : MaskType;
var SecMask_$_126 : MaskType;
var SecMask_$_128 : MaskType;
var SecMask_$_132 : MaskType;
var SecMask_$_129 : MaskType;
var SecMask_$_131 : MaskType;
var SecMask_$_130 : MaskType;
var SecMask_$_127 : MaskType;
var SecMask_$_124 : MaskType;
var SecMask_$_121 : MaskType;
var oldVers#_419_$_0 : int;
var Heap_$_7 : HeapType;
var newVers#_420_$_0 : int;
var SecMask_$_106 : MaskType;
var SecMask_$_108 : MaskType;
var SecMask_$_109 : MaskType;
var SecMask_$_111 : MaskType;
var SecMask_$_112 : MaskType;
var SecMask_$_114 : MaskType;
var SecMask_$_118 : MaskType;
var SecMask_$_115 : MaskType;
var SecMask_$_117 : MaskType;
var SecMask_$_116 : MaskType;
var SecMask_$_113 : MaskType;
var SecMask_$_110 : MaskType;
var SecMask_$_107 : MaskType;
var unfoldK#_365 : int;
var Mask_$_9 : MaskType;
var SecMask_$_50 : MaskType;
var Heap_$_3 : HeapType;
var Mask_$_10 : MaskType;
var Mask_$_11 : MaskType;
var Mask_$_12 : MaskType;
var Mask_$_14 : MaskType;
var SecMask_$_70 : MaskType;
var predRec#_377_$_1 : ref;
var predFlag#_379_$_0 : bool;
var predVer#_378_$_1 : int;
var cond#_386_$_0 : bool;
var unfoldK#_387 : int;
var Mask_$_15 : MaskType;
var SecMask_$_84 : MaskType;
var Heap_$_5 : HeapType;
var Mask_$_16 : MaskType;
var Mask_$_17 : MaskType;
var Mask_$_18 : MaskType;
var SecMask_$_104 : MaskType;
var Mask_$_20 : MaskType;
var predRec#_399_$_1 : ref;
var predFlag#_401_$_0 : bool;
var predVer#_400_$_1 : int;
var Mask_$_19 : MaskType;
var predRec#_399_$_0 : ref;
var predVer#_400_$_0 : int;
var SecMask_$_98 : MaskType;
var SecMask_$_99 : MaskType;
var SecMask_$_100 : MaskType;
var SecMask_$_101 : MaskType;
var SecMask_$_103 : MaskType;
var SecMask_$_102 : MaskType;
var SecMask_$_85 : MaskType;
var SecMask_$_87 : MaskType;
var SecMask_$_88 : MaskType;
var SecMask_$_90 : MaskType;
var SecMask_$_91 : MaskType;
var SecMask_$_93 : MaskType;
var SecMask_$_97 : MaskType;
var SecMask_$_94 : MaskType;
var SecMask_$_96 : MaskType;
var SecMask_$_95 : MaskType;
var SecMask_$_92 : MaskType;
var SecMask_$_89 : MaskType;
var SecMask_$_86 : MaskType;
var oldVers#_397_$_0 : int;
var Heap_$_4 : HeapType;
var newVers#_398_$_0 : int;
var SecMask_$_71 : MaskType;
var SecMask_$_73 : MaskType;
var SecMask_$_74 : MaskType;
var SecMask_$_76 : MaskType;
var SecMask_$_77 : MaskType;
var SecMask_$_79 : MaskType;
var SecMask_$_83 : MaskType;
var SecMask_$_80 : MaskType;
var SecMask_$_82 : MaskType;
var SecMask_$_81 : MaskType;
var SecMask_$_78 : MaskType;
var SecMask_$_75 : MaskType;
var SecMask_$_72 : MaskType;
var Mask_$_13 : MaskType;
var predRec#_377_$_0 : ref;
var predVer#_378_$_0 : int;
var SecMask_$_64 : MaskType;
var SecMask_$_65 : MaskType;
var SecMask_$_66 : MaskType;
var SecMask_$_67 : MaskType;
var SecMask_$_69 : MaskType;
var SecMask_$_68 : MaskType;
var SecMask_$_51 : MaskType;
var SecMask_$_53 : MaskType;
var SecMask_$_54 : MaskType;
var SecMask_$_56 : MaskType;
var SecMask_$_57 : MaskType;
var SecMask_$_59 : MaskType;
var SecMask_$_63 : MaskType;
var SecMask_$_60 : MaskType;
var SecMask_$_62 : MaskType;
var SecMask_$_61 : MaskType;
var SecMask_$_58 : MaskType;
var SecMask_$_55 : MaskType;
var SecMask_$_52 : MaskType;
var oldVers#_375_$_0 : int;
var Heap_$_2 : HeapType;
var newVers#_376_$_0 : int;
var SecMask_$_37 : MaskType;
var SecMask_$_39 : MaskType;
var SecMask_$_40 : MaskType;
var SecMask_$_42 : MaskType;
var SecMask_$_43 : MaskType;
var SecMask_$_45 : MaskType;
var SecMask_$_49 : MaskType;
var SecMask_$_46 : MaskType;
var SecMask_$_48 : MaskType;
var SecMask_$_47 : MaskType;
var SecMask_$_44 : MaskType;
var SecMask_$_41 : MaskType;
var SecMask_$_38 : MaskType;
var Mask_$_7 : MaskType;
var predRec#_355_$_0 : ref;
var predVer#_356_$_0 : int;
var SecMask_$_31 : MaskType;
var SecMask_$_32 : MaskType;
var SecMask_$_33 : MaskType;
var SecMask_$_35 : MaskType;
var SecMask_$_34 : MaskType;
var Mask_$_5 : MaskType;
var predRec#_346_$_0 : ref;
var predVer#_347_$_0 : int;
var SecMask_$_25 : MaskType;
var SecMask_$_26 : MaskType;
var SecMask_$_27 : MaskType;
var SecMask_$_29 : MaskType;
var SecMask_$_28 : MaskType;
var oldVers#_344_$_0 : int;
var Heap_$_0 : HeapType;
var newVers#_345_$_0 : int;
var SecMask_$_7 : MaskType;
var SecMask_$_9 : MaskType;
var SecMask_$_10 : MaskType;
var SecMask_$_12 : MaskType;
var SecMask_$_13 : MaskType;
var SecMask_$_15 : MaskType;
var SecMask_$_19 : MaskType;
var SecMask_$_23 : MaskType;
var SecMask_$_20 : MaskType;
var SecMask_$_22 : MaskType;
var SecMask_$_21 : MaskType;
var SecMask_$_16 : MaskType;
var SecMask_$_18 : MaskType;
var SecMask_$_17 : MaskType;
var SecMask_$_14 : MaskType;
var SecMask_$_11 : MaskType;
var SecMask_$_8 : MaskType;
var SecMask_$_5 : MaskType;
var SecMask_$_3 : MaskType;
var predRec#_320 : ref;
var predFlag#_322 : bool;
var predVer#_321 : int;
var oldVers#_344 : int;
var newVers#_345 : int;
var cond#_364 : bool;
var oldVers#_375 : int;
var newVers#_376 : int;
var oldVers#_397 : int;
var newVers#_398 : int;
var cond#_408 : bool;
var oldVers#_419 : int;
var newVers#_420 : int;
var oldVers#_441 : int;
var newVers#_442 : int;
var cond#_452 : bool;
var lastSeenMu#_456 : Mu;
var lastSeenHeld#_455 : int;
var lastAcquire#_454 : int;
var sh#5 : ref;
var lastSeenMu#_460 : Mu;
var lastSeenHeld#_459 : int;
var lastAcquire#_458 : int;
var sh#6 : ref;
var lastSeenMu#_464 : Mu;
var lastSeenHeld#_463 : int;
var lastAcquire#_462 : int;
var sh#7 : ref;
var cond#_466 : bool;
var lastSeenMu#_469 : Mu;
var lastSeenHeld#_468 : int;
var lastAcquire#_467 : int;
var sh#8 : ref;
var lastSeenMu#_474 : Mu;
var lastSeenHeld#_473 : int;
var lastAcquire#_472 : int;
var sh#9 : ref;
var cond#_476 : bool;
var cond#_477 : bool;
var preReleaseHeap#_480 : HeapType;
var preReleaseMask#_481 : MaskType;
var preReleaseSecMask#_482 : MaskType;
var preReleaseCredits#_483 : CreditsType;
var sh#10 : ref;
var exhaleMask#_485 : MaskType;
var exhaleHeap#_484 : HeapType;
var held#_478 : int;
var cond#_501 : bool;
var preReleaseHeap#_505 : HeapType;
var preReleaseMask#_506 : MaskType;
var preReleaseSecMask#_507 : MaskType;
var preReleaseCredits#_508 : CreditsType;
var sh#11 : ref;
var exhaleMask#_510 : MaskType;
var exhaleHeap#_509 : HeapType;
var held#_503 : int;
var preReleaseHeap#_528 : HeapType;
var preReleaseMask#_529 : MaskType;
var preReleaseSecMask#_530 : MaskType;
var preReleaseCredits#_531 : CreditsType;
var sh#12 : ref;
var exhaleMask#_533 : MaskType;
var exhaleHeap#_532 : HeapType;
var held#_526 : int;
var cond#_549 : bool;
var preReleaseHeap#_552 : HeapType;
var preReleaseMask#_553 : MaskType;
var preReleaseSecMask#_554 : MaskType;
var preReleaseCredits#_555 : CreditsType;
var sh#13 : ref;
var exhaleMask#_557 : MaskType;
var exhaleHeap#_556 : HeapType;
var held#_550 : int;
var preReleaseHeap#_576 : HeapType;
var preReleaseMask#_577 : MaskType;
var preReleaseSecMask#_578 : MaskType;
var preReleaseCredits#_579 : CreditsType;
var sh#14 : ref;
var exhaleMask#_581 : MaskType;
var exhaleHeap#_580 : HeapType;
var held#_574 : int;
var exhaleMask#_602 : MaskType;
var exhaleHeap#_601 : HeapType;
var predRec#_597 : ref;
var predVer#_598 : int;
var predFlag#_599 : bool;
var cond#_608 : bool;
var exhaleMask#_615 : MaskType;
var exhaleHeap#_614 : HeapType;
var exhaleMask#_627 : MaskType;
var exhaleHeap#_626 : HeapType;
var exhaleMask#_637 : MaskType;
var exhaleHeap#_636 : HeapType;
var exhaleMask#_647 : MaskType;
var exhaleHeap#_646 : HeapType;
var exhaleMask#_654 : MaskType;
var exhaleHeap#_653 : HeapType;
var lastSeenHeld#_455_$_0 : int;
var lastSeenHeld#_459_$_0 : int;
var lastSeenHeld#_463_$_0 : int;
var lastSeenHeld#_468_$_0 : int;
var lastSeenHeld#_473_$_0 : int;
procedure Node.delete (this : ref) returns (newList#0 : ref)
{
	var methodK#_170 : int;
	var unfoldK#_333 : int;
	var predRec#_346 : ref;
	var predFlag#_348 : bool;
	var predVer#_347 : int;
	var predRec#_355 : ref;
	var predFlag#_357 : bool;
	var predVer#_356 : int;
	var unfoldK#_365 : int;
	var predRec#_377 : ref;
	var predFlag#_379 : bool;
	var predVer#_378 : int;
	var cond#_386 : bool;
	var unfoldK#_387 : int;
	var predRec#_399 : ref;
	var predFlag#_401 : bool;
	var predVer#_400 : int;
	var unfoldK#_409 : int;
	var predRec#_421 : ref;
	var predFlag#_423 : bool;
	var predVer#_422 : int;
	var cond#_430 : bool;
	var unfoldK#_431 : int;
	var predRec#_443 : ref;
	var predFlag#_445 : bool;
	var predVer#_444 : int;
	var cond#_453 : bool;
	var cond#_471 : bool;
	var oldPrev#2 : ref;
	var oldNext#4 : ref;
	var cond#_502 : bool;
	var cond#_573 : bool;
	var foldK#_600 : int;
	var cond#_609 : bool;
	var foldK#_613 : int;
	var predRec#_610 : ref;
	var predVer#_611 : int;
	var predFlag#_612 : bool;
	var cond#_620 : bool;
	var cond#_621 : bool;
	var foldK#_625 : int;
	var predRec#_622 : ref;
	var predVer#_623 : int;
	var predFlag#_624 : bool;
	var foldK#_635 : int;
	var predRec#_632 : ref;
	var predVer#_633 : int;
	var predFlag#_634 : bool;
	var foldK#_645 : int;
	var predRec#_642 : ref;
	var predVer#_643 : int;
	var predFlag#_644 : bool;
	var Mask_$_0 : MaskType;
	var predVer#_321_$_0 : int;
	var SecMask_$_0 : MaskType;
	var SecMask_$_1 : MaskType;
	var SecMask_$_2 : MaskType;
	var SecMask_$_3 : MaskType;
	var SecMask_$_4 : MaskType;
	var SecMask_$_5 : MaskType;
	var SecMask_$_6 : MaskType;
	var Mask_$_1 : MaskType;
	var SecMask_$_7 : MaskType;
	var SecMask_$_8 : MaskType;
	var SecMask_$_9 : MaskType;
	var SecMask_$_10 : MaskType;
	var SecMask_$_11 : MaskType;
	var SecMask_$_12 : MaskType;
	var SecMask_$_13 : MaskType;
	var SecMask_$_14 : MaskType;
	var SecMask_$_15 : MaskType;
	var SecMask_$_16 : MaskType;
	var SecMask_$_17 : MaskType;
	var SecMask_$_18 : MaskType;
	var SecMask_$_19 : MaskType;
	var SecMask_$_20 : MaskType;
	var SecMask_$_21 : MaskType;
	var SecMask_$_22 : MaskType;
	var SecMask_$_23 : MaskType;
	var SecMask_$_24 : MaskType;
	var oldVers#_344_$_0 : int;
	var newVers#_345_$_0 : int;
	var Heap_$_0 : HeapType;
	var Heap_$_1 : HeapType;
	var Mask_$_2 : MaskType;
	var Mask_$_3 : MaskType;
	var Mask_$_4 : MaskType;
	var Mask_$_5 : MaskType;
	var predRec#_346_$_0 : ref;
	var predVer#_347_$_0 : int;
	var SecMask_$_25 : MaskType;
	var SecMask_$_26 : MaskType;
	var SecMask_$_27 : MaskType;
	var SecMask_$_28 : MaskType;
	var SecMask_$_29 : MaskType;
	var Mask_$_6 : MaskType;
	var SecMask_$_30 : MaskType;
	var predRec#_346_$_1 : ref;
	var predFlag#_348_$_0 : bool;
	var predVer#_347_$_1 : int;
	var Mask_$_7 : MaskType;
	var predRec#_355_$_0 : ref;
	var predVer#_356_$_0 : int;
	var SecMask_$_31 : MaskType;
	var SecMask_$_32 : MaskType;
	var SecMask_$_33 : MaskType;
	var SecMask_$_34 : MaskType;
	var SecMask_$_35 : MaskType;
	var SecMask_$_36 : MaskType;
	var Mask_$_8 : MaskType;
	var predRec#_355_$_1 : ref;
	var predFlag#_357_$_0 : bool;
	var predVer#_356_$_1 : int;
	var cond#_364_$_0 : bool;
	var Mask_$_9 : MaskType;
	var SecMask_$_37 : MaskType;
	var SecMask_$_38 : MaskType;
	var SecMask_$_39 : MaskType;
	var SecMask_$_40 : MaskType;
	var SecMask_$_41 : MaskType;
	var SecMask_$_42 : MaskType;
	var SecMask_$_43 : MaskType;
	var SecMask_$_44 : MaskType;
	var SecMask_$_45 : MaskType;
	var SecMask_$_46 : MaskType;
	var SecMask_$_47 : MaskType;
	var SecMask_$_48 : MaskType;
	var SecMask_$_49 : MaskType;
	var SecMask_$_50 : MaskType;
	var oldVers#_375_$_0 : int;
	var newVers#_376_$_0 : int;
	var Heap_$_2 : HeapType;
	var Heap_$_3 : HeapType;
	var Mask_$_10 : MaskType;
	var Mask_$_11 : MaskType;
	var Mask_$_12 : MaskType;
	var Mask_$_13 : MaskType;
	var predRec#_377_$_0 : ref;
	var predVer#_378_$_0 : int;
	var SecMask_$_51 : MaskType;
	var SecMask_$_52 : MaskType;
	var SecMask_$_53 : MaskType;
	var SecMask_$_54 : MaskType;
	var SecMask_$_55 : MaskType;
	var SecMask_$_56 : MaskType;
	var SecMask_$_57 : MaskType;
	var SecMask_$_58 : MaskType;
	var SecMask_$_59 : MaskType;
	var SecMask_$_60 : MaskType;
	var SecMask_$_61 : MaskType;
	var SecMask_$_62 : MaskType;
	var SecMask_$_63 : MaskType;
	var SecMask_$_64 : MaskType;
	var SecMask_$_65 : MaskType;
	var SecMask_$_66 : MaskType;
	var SecMask_$_67 : MaskType;
	var SecMask_$_68 : MaskType;
	var SecMask_$_69 : MaskType;
	var Mask_$_14 : MaskType;
	var SecMask_$_70 : MaskType;
	var predRec#_377_$_1 : ref;
	var predFlag#_379_$_0 : bool;
	var predVer#_378_$_1 : int;
	var cond#_386_$_0 : bool;
	var Mask_$_15 : MaskType;
	var SecMask_$_71 : MaskType;
	var SecMask_$_72 : MaskType;
	var SecMask_$_73 : MaskType;
	var SecMask_$_74 : MaskType;
	var SecMask_$_75 : MaskType;
	var SecMask_$_76 : MaskType;
	var SecMask_$_77 : MaskType;
	var SecMask_$_78 : MaskType;
	var SecMask_$_79 : MaskType;
	var SecMask_$_80 : MaskType;
	var SecMask_$_81 : MaskType;
	var SecMask_$_82 : MaskType;
	var SecMask_$_83 : MaskType;
	var SecMask_$_84 : MaskType;
	var oldVers#_397_$_0 : int;
	var newVers#_398_$_0 : int;
	var Heap_$_4 : HeapType;
	var Heap_$_5 : HeapType;
	var Mask_$_16 : MaskType;
	var Mask_$_17 : MaskType;
	var Mask_$_18 : MaskType;
	var Mask_$_19 : MaskType;
	var predRec#_399_$_0 : ref;
	var predVer#_400_$_0 : int;
	var SecMask_$_85 : MaskType;
	var SecMask_$_86 : MaskType;
	var SecMask_$_87 : MaskType;
	var SecMask_$_88 : MaskType;
	var SecMask_$_89 : MaskType;
	var SecMask_$_90 : MaskType;
	var SecMask_$_91 : MaskType;
	var SecMask_$_92 : MaskType;
	var SecMask_$_93 : MaskType;
	var SecMask_$_94 : MaskType;
	var SecMask_$_95 : MaskType;
	var SecMask_$_96 : MaskType;
	var SecMask_$_97 : MaskType;
	var SecMask_$_98 : MaskType;
	var SecMask_$_99 : MaskType;
	var SecMask_$_100 : MaskType;
	var SecMask_$_101 : MaskType;
	var SecMask_$_102 : MaskType;
	var SecMask_$_103 : MaskType;
	var SecMask_$_104 : MaskType;
	var Mask_$_20 : MaskType;
	var predRec#_399_$_1 : ref;
	var predFlag#_401_$_0 : bool;
	var predVer#_400_$_1 : int;
	var SecMask_$_105 : MaskType;
	var Mask_$_21 : MaskType;
	var Heap_$_6 : HeapType;
	var predRec#_377_$_2 : ref;
	var predFlag#_379_$_1 : bool;
	var predVer#_378_$_2 : int;
	var cond#_386_$_1 : bool;
	var predRec#_399_$_2 : ref;
	var predFlag#_401_$_1 : bool;
	var predVer#_400_$_2 : int;
	var cond#_408_$_0 : bool;
	var Mask_$_22 : MaskType;
	var SecMask_$_106 : MaskType;
	var SecMask_$_107 : MaskType;
	var SecMask_$_108 : MaskType;
	var SecMask_$_109 : MaskType;
	var SecMask_$_110 : MaskType;
	var SecMask_$_111 : MaskType;
	var SecMask_$_112 : MaskType;
	var SecMask_$_113 : MaskType;
	var SecMask_$_114 : MaskType;
	var SecMask_$_115 : MaskType;
	var SecMask_$_116 : MaskType;
	var SecMask_$_117 : MaskType;
	var SecMask_$_118 : MaskType;
	var SecMask_$_119 : MaskType;
	var oldVers#_419_$_0 : int;
	var newVers#_420_$_0 : int;
	var Heap_$_7 : HeapType;
	var Heap_$_8 : HeapType;
	var Mask_$_23 : MaskType;
	var Mask_$_24 : MaskType;
	var Mask_$_25 : MaskType;
	var Mask_$_26 : MaskType;
	var predRec#_421_$_0 : ref;
	var predVer#_422_$_0 : int;
	var SecMask_$_120 : MaskType;
	var SecMask_$_121 : MaskType;
	var SecMask_$_122 : MaskType;
	var SecMask_$_123 : MaskType;
	var SecMask_$_124 : MaskType;
	var SecMask_$_125 : MaskType;
	var SecMask_$_126 : MaskType;
	var SecMask_$_127 : MaskType;
	var SecMask_$_128 : MaskType;
	var SecMask_$_129 : MaskType;
	var SecMask_$_130 : MaskType;
	var SecMask_$_131 : MaskType;
	var SecMask_$_132 : MaskType;
	var SecMask_$_133 : MaskType;
	var SecMask_$_134 : MaskType;
	var SecMask_$_135 : MaskType;
	var SecMask_$_136 : MaskType;
	var SecMask_$_137 : MaskType;
	var SecMask_$_138 : MaskType;
	var Mask_$_27 : MaskType;
	var SecMask_$_139 : MaskType;
	var predRec#_421_$_1 : ref;
	var predFlag#_423_$_0 : bool;
	var predVer#_422_$_1 : int;
	var cond#_430_$_0 : bool;
	var Mask_$_28 : MaskType;
	var SecMask_$_140 : MaskType;
	var SecMask_$_141 : MaskType;
	var SecMask_$_142 : MaskType;
	var SecMask_$_143 : MaskType;
	var SecMask_$_144 : MaskType;
	var SecMask_$_145 : MaskType;
	var SecMask_$_146 : MaskType;
	var SecMask_$_147 : MaskType;
	var SecMask_$_148 : MaskType;
	var SecMask_$_149 : MaskType;
	var SecMask_$_150 : MaskType;
	var SecMask_$_151 : MaskType;
	var SecMask_$_152 : MaskType;
	var SecMask_$_153 : MaskType;
	var oldVers#_441_$_0 : int;
	var newVers#_442_$_0 : int;
	var Heap_$_9 : HeapType;
	var Heap_$_10 : HeapType;
	var Mask_$_29 : MaskType;
	var Mask_$_30 : MaskType;
	var Mask_$_31 : MaskType;
	var Mask_$_32 : MaskType;
	var predRec#_443_$_0 : ref;
	var predVer#_444_$_0 : int;
	var SecMask_$_154 : MaskType;
	var SecMask_$_155 : MaskType;
	var SecMask_$_156 : MaskType;
	var SecMask_$_157 : MaskType;
	var SecMask_$_158 : MaskType;
	var SecMask_$_159 : MaskType;
	var SecMask_$_160 : MaskType;
	var SecMask_$_161 : MaskType;
	var SecMask_$_162 : MaskType;
	var SecMask_$_163 : MaskType;
	var SecMask_$_164 : MaskType;
	var SecMask_$_165 : MaskType;
	var SecMask_$_166 : MaskType;
	var SecMask_$_167 : MaskType;
	var SecMask_$_168 : MaskType;
	var SecMask_$_169 : MaskType;
	var SecMask_$_170 : MaskType;
	var SecMask_$_171 : MaskType;
	var SecMask_$_172 : MaskType;
	var SecMask_$_173 : MaskType;
	var Mask_$_33 : MaskType;
	var predRec#_443_$_1 : ref;
	var predFlag#_445_$_0 : bool;
	var predVer#_444_$_1 : int;
	var SecMask_$_174 : MaskType;
	var Heap_$_11 : HeapType;
	var Mask_$_34 : MaskType;
	var predRec#_421_$_2 : ref;
	var predFlag#_423_$_1 : bool;
	var predVer#_422_$_2 : int;
	var cond#_430_$_1 : bool;
	var predRec#_443_$_2 : ref;
	var predFlag#_445_$_1 : bool;
	var predVer#_444_$_2 : int;
	var cond#_452_$_0 : bool;
	var cond#_453_$_0 : bool;
	var lastSeenMu#_456_$_0 : Mu;
	var lastSeenHeld#_455_$_1 : int;
	var lastAcquire#_454_$_0 : int;
	var Heap_$_12 : HeapType;
	var sh#5_$_0 : ref;
	var Mask_$_35 : MaskType;
	var Mask_$_36 : MaskType;
	var Mask_$_37 : MaskType;
	var Mask_$_38 : MaskType;
	var Mask_$_39 : MaskType;
	var Mask_$_40 : MaskType;
	var Mask_$_41 : MaskType;
	var Mask_$_42 : MaskType;
	var Mask_$_43 : MaskType;
	var Mask_$_44 : MaskType;
	var Mask_$_45 : MaskType;
	var Mask_$_46 : MaskType;
	var Mask_$_47 : MaskType;
	var Mask_$_48 : MaskType;
	var Mask_$_49 : MaskType;
	var Mask_$_50 : MaskType;
	var Mask_$_51 : MaskType;
	var Mask_$_52 : MaskType;
	var Mask_$_53 : MaskType;
	var Mask_$_54 : MaskType;
	var Mask_$_55 : MaskType;
	var Mask_$_56 : MaskType;
	var Heap_$_13 : HeapType;
	var Mask_$_57 : MaskType;
	var lastSeenMu#_460_$_0 : Mu;
	var lastSeenHeld#_459_$_1 : int;
	var lastAcquire#_458_$_0 : int;
	var Heap_$_14 : HeapType;
	var sh#6_$_0 : ref;
	var Mask_$_58 : MaskType;
	var Mask_$_59 : MaskType;
	var Mask_$_60 : MaskType;
	var Mask_$_61 : MaskType;
	var Mask_$_62 : MaskType;
	var Mask_$_63 : MaskType;
	var Mask_$_64 : MaskType;
	var Mask_$_65 : MaskType;
	var Mask_$_66 : MaskType;
	var Mask_$_67 : MaskType;
	var Mask_$_68 : MaskType;
	var Mask_$_69 : MaskType;
	var Mask_$_70 : MaskType;
	var Mask_$_71 : MaskType;
	var Mask_$_72 : MaskType;
	var Mask_$_73 : MaskType;
	var Mask_$_74 : MaskType;
	var Mask_$_75 : MaskType;
	var Mask_$_76 : MaskType;
	var Mask_$_77 : MaskType;
	var Mask_$_78 : MaskType;
	var Mask_$_79 : MaskType;
	var Mask_$_80 : MaskType;
	var Heap_$_15 : HeapType;
	var cond#_453_$_1 : bool;
	var lastSeenMu#_464_$_0 : Mu;
	var lastSeenHeld#_463_$_1 : int;
	var lastAcquire#_462_$_0 : int;
	var Heap_$_16 : HeapType;
	var Mask_$_81 : MaskType;
	var Mask_$_82 : MaskType;
	var Mask_$_83 : MaskType;
	var Mask_$_84 : MaskType;
	var Mask_$_85 : MaskType;
	var Mask_$_86 : MaskType;
	var Mask_$_87 : MaskType;
	var Mask_$_88 : MaskType;
	var Mask_$_89 : MaskType;
	var Mask_$_90 : MaskType;
	var Mask_$_91 : MaskType;
	var Mask_$_92 : MaskType;
	var Mask_$_93 : MaskType;
	var Mask_$_94 : MaskType;
	var Mask_$_95 : MaskType;
	var Mask_$_96 : MaskType;
	var Mask_$_97 : MaskType;
	var Mask_$_98 : MaskType;
	var Mask_$_99 : MaskType;
	var Mask_$_100 : MaskType;
	var Mask_$_101 : MaskType;
	var Mask_$_102 : MaskType;
	var cond#_466_$_0 : bool;
	var lastSeenMu#_469_$_0 : Mu;
	var lastSeenHeld#_468_$_1 : int;
	var lastAcquire#_467_$_0 : int;
	var Heap_$_17 : HeapType;
	var sh#8_$_0 : ref;
	var Mask_$_103 : MaskType;
	var Mask_$_104 : MaskType;
	var Mask_$_105 : MaskType;
	var Mask_$_106 : MaskType;
	var Mask_$_107 : MaskType;
	var Mask_$_108 : MaskType;
	var Mask_$_109 : MaskType;
	var Mask_$_110 : MaskType;
	var Mask_$_111 : MaskType;
	var Mask_$_112 : MaskType;
	var Mask_$_113 : MaskType;
	var Mask_$_114 : MaskType;
	var Mask_$_115 : MaskType;
	var Mask_$_116 : MaskType;
	var Mask_$_117 : MaskType;
	var Mask_$_118 : MaskType;
	var Mask_$_119 : MaskType;
	var Mask_$_120 : MaskType;
	var Mask_$_121 : MaskType;
	var Mask_$_122 : MaskType;
	var Mask_$_123 : MaskType;
	var Mask_$_124 : MaskType;
	var cond#_471_$_0 : bool;
	var lastSeenMu#_474_$_0 : Mu;
	var lastSeenHeld#_473_$_1 : int;
	var lastAcquire#_472_$_0 : int;
	var Heap_$_18 : HeapType;
	var sh#9_$_0 : ref;
	var Mask_$_125 : MaskType;
	var Mask_$_126 : MaskType;
	var Mask_$_127 : MaskType;
	var Mask_$_128 : MaskType;
	var Mask_$_129 : MaskType;
	var Mask_$_130 : MaskType;
	var Mask_$_131 : MaskType;
	var Mask_$_132 : MaskType;
	var Mask_$_133 : MaskType;
	var Mask_$_134 : MaskType;
	var Mask_$_135 : MaskType;
	var Mask_$_136 : MaskType;
	var Mask_$_137 : MaskType;
	var Mask_$_138 : MaskType;
	var Mask_$_139 : MaskType;
	var Mask_$_140 : MaskType;
	var Mask_$_141 : MaskType;
	var Mask_$_142 : MaskType;
	var Mask_$_143 : MaskType;
	var Mask_$_144 : MaskType;
	var Mask_$_145 : MaskType;
	var Mask_$_146 : MaskType;
	var Mask_$_147 : MaskType;
	var Heap_$_19 : HeapType;
	var cond#_471_$_1 : bool;
	var oldPrev#2_$_0 : ref;
	var oldNext#4_$_0 : ref;
	var cond#_476_$_0 : bool;
	var Heap_$_20 : HeapType;
	var Heap_$_21 : HeapType;
	var cond#_477_$_0 : bool;
	var Heap_$_22 : HeapType;
	var Heap_$_23 : HeapType;
	var Heap_$_24 : HeapType;
	var Heap_$_25 : HeapType;
	var exhaleHeap#_484_$_0 : HeapType;
	var exhaleMask#_485_$_0 : MaskType;
	var exhaleMask#_485_$_1 : MaskType;
	var exhaleMask#_485_$_2 : MaskType;
	var exhaleMask#_485_$_3 : MaskType;
	var exhaleMask#_485_$_4 : MaskType;
	var exhaleMask#_485_$_5 : MaskType;
	var exhaleMask#_485_$_6 : MaskType;
	var exhaleMask#_485_$_7 : MaskType;
	var exhaleMask#_485_$_8 : MaskType;
	var exhaleMask#_485_$_9 : MaskType;
	var exhaleMask#_485_$_10 : MaskType;
	var exhaleMask#_485_$_11 : MaskType;
	var exhaleMask#_485_$_12 : MaskType;
	var exhaleMask#_485_$_13 : MaskType;
	var exhaleMask#_485_$_14 : MaskType;
	var exhaleMask#_485_$_15 : MaskType;
	var exhaleMask#_485_$_16 : MaskType;
	var exhaleMask#_485_$_17 : MaskType;
	var exhaleMask#_485_$_18 : MaskType;
	var exhaleMask#_485_$_19 : MaskType;
	var exhaleMask#_485_$_20 : MaskType;
	var exhaleMask#_485_$_21 : MaskType;
	var held#_478_$_0 : int;
	var Heap_$_26 : HeapType;
	var cond#_501_$_0 : bool;
	var cond#_502_$_0 : bool;
	var sh#11_$_0 : ref;
	var exhaleHeap#_509_$_0 : HeapType;
	var exhaleMask#_510_$_0 : MaskType;
	var exhaleMask#_510_$_1 : MaskType;
	var exhaleMask#_510_$_2 : MaskType;
	var exhaleMask#_510_$_3 : MaskType;
	var exhaleMask#_510_$_4 : MaskType;
	var exhaleMask#_510_$_5 : MaskType;
	var exhaleMask#_510_$_6 : MaskType;
	var exhaleMask#_510_$_7 : MaskType;
	var exhaleMask#_510_$_8 : MaskType;
	var exhaleMask#_510_$_9 : MaskType;
	var exhaleMask#_510_$_10 : MaskType;
	var exhaleMask#_510_$_11 : MaskType;
	var exhaleMask#_510_$_12 : MaskType;
	var exhaleMask#_510_$_13 : MaskType;
	var exhaleMask#_510_$_14 : MaskType;
	var exhaleMask#_510_$_15 : MaskType;
	var exhaleMask#_510_$_16 : MaskType;
	var exhaleMask#_510_$_17 : MaskType;
	var exhaleMask#_510_$_18 : MaskType;
	var exhaleMask#_510_$_19 : MaskType;
	var exhaleMask#_510_$_20 : MaskType;
	var exhaleMask#_510_$_21 : MaskType;
	var held#_503_$_0 : int;
	var Heap_$_27 : HeapType;
	var Heap_$_28 : HeapType;
	var Mask_$_148 : MaskType;
	var exhaleHeap#_532_$_0 : HeapType;
	var exhaleMask#_533_$_0 : MaskType;
	var exhaleMask#_533_$_1 : MaskType;
	var exhaleMask#_533_$_2 : MaskType;
	var exhaleMask#_533_$_3 : MaskType;
	var exhaleMask#_533_$_4 : MaskType;
	var exhaleMask#_533_$_5 : MaskType;
	var exhaleMask#_533_$_6 : MaskType;
	var exhaleMask#_533_$_7 : MaskType;
	var exhaleMask#_533_$_8 : MaskType;
	var exhaleMask#_533_$_9 : MaskType;
	var exhaleMask#_533_$_10 : MaskType;
	var exhaleMask#_533_$_11 : MaskType;
	var exhaleMask#_533_$_12 : MaskType;
	var exhaleMask#_533_$_13 : MaskType;
	var exhaleMask#_533_$_14 : MaskType;
	var exhaleMask#_533_$_15 : MaskType;
	var exhaleMask#_533_$_16 : MaskType;
	var exhaleMask#_533_$_17 : MaskType;
	var exhaleMask#_533_$_18 : MaskType;
	var exhaleMask#_533_$_19 : MaskType;
	var exhaleMask#_533_$_20 : MaskType;
	var exhaleMask#_533_$_21 : MaskType;
	var held#_526_$_0 : int;
	var Heap_$_29 : HeapType;
	var Mask_$_149 : MaskType;
	var Heap_$_30 : HeapType;
	var cond#_502_$_1 : bool;
	var cond#_549_$_0 : bool;
	var exhaleHeap#_556_$_0 : HeapType;
	var exhaleMask#_557_$_0 : MaskType;
	var exhaleMask#_557_$_1 : MaskType;
	var exhaleMask#_557_$_2 : MaskType;
	var exhaleMask#_557_$_3 : MaskType;
	var exhaleMask#_557_$_4 : MaskType;
	var exhaleMask#_557_$_5 : MaskType;
	var exhaleMask#_557_$_6 : MaskType;
	var exhaleMask#_557_$_7 : MaskType;
	var exhaleMask#_557_$_8 : MaskType;
	var exhaleMask#_557_$_9 : MaskType;
	var exhaleMask#_557_$_10 : MaskType;
	var exhaleMask#_557_$_11 : MaskType;
	var exhaleMask#_557_$_12 : MaskType;
	var exhaleMask#_557_$_13 : MaskType;
	var exhaleMask#_557_$_14 : MaskType;
	var exhaleMask#_557_$_15 : MaskType;
	var exhaleMask#_557_$_16 : MaskType;
	var exhaleMask#_557_$_17 : MaskType;
	var exhaleMask#_557_$_18 : MaskType;
	var exhaleMask#_557_$_19 : MaskType;
	var exhaleMask#_557_$_20 : MaskType;
	var exhaleMask#_557_$_21 : MaskType;
	var held#_550_$_0 : int;
	var Heap_$_31 : HeapType;
	var cond#_573_$_0 : bool;
	var sh#14_$_0 : ref;
	var exhaleHeap#_580_$_0 : HeapType;
	var exhaleMask#_581_$_0 : MaskType;
	var exhaleMask#_581_$_1 : MaskType;
	var exhaleMask#_581_$_2 : MaskType;
	var exhaleMask#_581_$_3 : MaskType;
	var exhaleMask#_581_$_4 : MaskType;
	var exhaleMask#_581_$_5 : MaskType;
	var exhaleMask#_581_$_6 : MaskType;
	var exhaleMask#_581_$_7 : MaskType;
	var exhaleMask#_581_$_8 : MaskType;
	var exhaleMask#_581_$_9 : MaskType;
	var exhaleMask#_581_$_10 : MaskType;
	var exhaleMask#_581_$_11 : MaskType;
	var exhaleMask#_581_$_12 : MaskType;
	var exhaleMask#_581_$_13 : MaskType;
	var exhaleMask#_581_$_14 : MaskType;
	var exhaleMask#_581_$_15 : MaskType;
	var exhaleMask#_581_$_16 : MaskType;
	var exhaleMask#_581_$_17 : MaskType;
	var exhaleMask#_581_$_18 : MaskType;
	var exhaleMask#_581_$_19 : MaskType;
	var exhaleMask#_581_$_20 : MaskType;
	var exhaleMask#_581_$_21 : MaskType;
	var held#_574_$_0 : int;
	var Heap_$_32 : HeapType;
	var Mask_$_150 : MaskType;
	var Heap_$_33 : HeapType;
	var cond#_573_$_1 : bool;
	var exhaleHeap#_601_$_0 : HeapType;
	var exhaleMask#_602_$_0 : MaskType;
	var SecMask_$_175 : MaskType;
	var exhaleMask#_602_$_1 : MaskType;
	var SecMask_$_176 : MaskType;
	var exhaleMask#_602_$_2 : MaskType;
	var SecMask_$_177 : MaskType;
	var exhaleMask#_602_$_3 : MaskType;
	var SecMask_$_178 : MaskType;
	var SecMask_$_179 : MaskType;
	var exhaleMask#_602_$_4 : MaskType;
	var exhaleMask#_602_$_5 : MaskType;
	var SecMask_$_180 : MaskType;
	var exhaleMask#_602_$_6 : MaskType;
	var SecMask_$_181 : MaskType;
	var Mask_$_151 : MaskType;
	var predVer#_598_$_0 : int;
	var cond#_608_$_0 : bool;
	var cond#_609_$_0 : bool;
	var exhaleHeap#_614_$_0 : HeapType;
	var exhaleMask#_615_$_0 : MaskType;
	var SecMask_$_182 : MaskType;
	var exhaleMask#_615_$_1 : MaskType;
	var SecMask_$_183 : MaskType;
	var exhaleMask#_615_$_2 : MaskType;
	var SecMask_$_184 : MaskType;
	var exhaleMask#_615_$_3 : MaskType;
	var SecMask_$_185 : MaskType;
	var SecMask_$_186 : MaskType;
	var exhaleMask#_615_$_4 : MaskType;
	var Mask_$_152 : MaskType;
	var predRec#_610_$_0 : ref;
	var predVer#_611_$_0 : int;
	var Heap_$_34 : HeapType;
	var Mask_$_153 : MaskType;
	var SecMask_$_187 : MaskType;
	var predRec#_610_$_1 : ref;
	var predVer#_611_$_1 : int;
	var predFlag#_612_$_0 : bool;
	var cond#_620_$_0 : bool;
	var cond#_621_$_0 : bool;
	var exhaleHeap#_626_$_0 : HeapType;
	var exhaleMask#_627_$_0 : MaskType;
	var SecMask_$_188 : MaskType;
	var exhaleMask#_627_$_1 : MaskType;
	var SecMask_$_189 : MaskType;
	var exhaleMask#_627_$_2 : MaskType;
	var SecMask_$_190 : MaskType;
	var exhaleMask#_627_$_3 : MaskType;
	var SecMask_$_191 : MaskType;
	var SecMask_$_192 : MaskType;
	var exhaleMask#_627_$_4 : MaskType;
	var Mask_$_154 : MaskType;
	var predRec#_622_$_0 : ref;
	var predVer#_623_$_0 : int;
	var Heap_$_35 : HeapType;
	var Mask_$_155 : MaskType;
	var SecMask_$_193 : MaskType;
	var predRec#_622_$_1 : ref;
	var predVer#_623_$_1 : int;
	var predFlag#_624_$_0 : bool;
	var exhaleHeap#_636_$_0 : HeapType;
	var exhaleMask#_637_$_0 : MaskType;
	var SecMask_$_194 : MaskType;
	var exhaleMask#_637_$_1 : MaskType;
	var SecMask_$_195 : MaskType;
	var exhaleMask#_637_$_2 : MaskType;
	var SecMask_$_196 : MaskType;
	var exhaleMask#_637_$_3 : MaskType;
	var SecMask_$_197 : MaskType;
	var SecMask_$_198 : MaskType;
	var exhaleMask#_637_$_4 : MaskType;
	var Mask_$_156 : MaskType;
	var predRec#_632_$_0 : ref;
	var predVer#_633_$_0 : int;
	var Heap_$_36 : HeapType;
	var Mask_$_157 : MaskType;
	var cond#_621_$_1 : bool;
	var predRec#_622_$_2 : ref;
	var predVer#_623_$_2 : int;
	var predFlag#_624_$_1 : bool;
	var SecMask_$_199 : MaskType;
	var predRec#_632_$_1 : ref;
	var predVer#_633_$_1 : int;
	var predFlag#_634_$_0 : bool;
	var exhaleHeap#_646_$_0 : HeapType;
	var exhaleMask#_647_$_0 : MaskType;
	var SecMask_$_200 : MaskType;
	var exhaleMask#_647_$_1 : MaskType;
	var SecMask_$_201 : MaskType;
	var exhaleMask#_647_$_2 : MaskType;
	var SecMask_$_202 : MaskType;
	var exhaleMask#_647_$_3 : MaskType;
	var SecMask_$_203 : MaskType;
	var SecMask_$_204 : MaskType;
	var exhaleMask#_647_$_4 : MaskType;
	var exhaleMask#_647_$_5 : MaskType;
	var SecMask_$_205 : MaskType;
	var exhaleMask#_647_$_6 : MaskType;
	var SecMask_$_206 : MaskType;
	var Mask_$_158 : MaskType;
	var predVer#_643_$_0 : int;
	var cond#_621_$_2 : bool;
	var Heap_$_37 : HeapType;
	var Mask_$_159 : MaskType;
	var cond#_609_$_1 : bool;
	var predRec#_610_$_2 : ref;
	var predVer#_611_$_2 : int;
	var predFlag#_612_$_1 : bool;
	var cond#_620_$_1 : bool;
	var predRec#_622_$_3 : ref;
	var predVer#_623_$_3 : int;
	var predFlag#_624_$_2 : bool;
	var SecMask_$_207 : MaskType;
	var predRec#_632_$_2 : ref;
	var predVer#_633_$_2 : int;
	var predFlag#_634_$_1 : bool;
	var predRec#_642_$_0 : ref;
	var predVer#_643_$_1 : int;
	var predFlag#_644_$_0 : bool;
	var exhaleHeap#_653_$_0 : HeapType;
	var exhaleMask#_654_$_0 : MaskType;
	var SecMask_$_208 : MaskType;
	var SecMask_$_209 : MaskType;
	var SecMask_$_210 : MaskType;
	var SecMask_$_211 : MaskType;
	var SecMask_$_212 : MaskType;
	var SecMask_$_213 : MaskType;
	var SecMask_$_214 : MaskType;
	var SecMask_$_215 : MaskType;
	var SecMask_$_216 : MaskType;
	var SecMask_$_217 : MaskType;
	var SecMask_$_218 : MaskType;
	var SecMask_$_219 : MaskType;
	var SecMask_$_220 : MaskType;
	var SecMask_$_221 : MaskType;
	var SecMask_$_222 : MaskType;
	var SecMask_$_223 : MaskType;
	var SecMask_$_224 : MaskType;
	var SecMask_$_225 : MaskType;
	var SecMask_$_226 : MaskType;
	var SecMask_$_227 : MaskType;
	var SecMask_$_228 : MaskType;
	var SecMask_$_229 : MaskType;
	var SecMask_$_230 : MaskType;
	var SecMask_$_231 : MaskType;
	var SecMask_$_232 : MaskType;
	var SecMask_$_233 : MaskType;
	var SecMask_$_234 : MaskType;
	var SecMask_$_235 : MaskType;
	var SecMask_$_236 : MaskType;
	var SecMask_$_237 : MaskType;
	var SecMask_$_238 : MaskType;
	var SecMask_$_239 : MaskType;
	var SecMask_$_240 : MaskType;
	var SecMask_$_241 : MaskType;
	var SecMask_$_242 : MaskType;
	var SecMask_$_243 : MaskType;
	var SecMask_$_244 : MaskType;
	var SecMask_$_245 : MaskType;
	var SecMask_$_246 : MaskType;
	var SecMask_$_247 : MaskType;
	var SecMask_$_248 : MaskType;
	var SecMask_$_249 : MaskType;
	var SecMask_$_250 : MaskType;
	var SecMask_$_251 : MaskType;
	var SecMask_$_252 : MaskType;
	var SecMask_$_253 : MaskType;
	var SecMask_$_254 : MaskType;
	var SecMask_$_255 : MaskType;
	var SecMask_$_256 : MaskType;
	var SecMask_$_257 : MaskType;
	var SecMask_$_258 : MaskType;
	var SecMask_$_259 : MaskType;
	var SecMask_$_260 : MaskType;
	var SecMask_$_261 : MaskType;
	var SecMask_$_262 : MaskType;
	var SecMask_$_263 : MaskType;
	var SecMask_$_264 : MaskType;
	var SecMask_$_265 : MaskType;
	var SecMask_$_266 : MaskType;
	var SecMask_$_267 : MaskType;
	var SecMask_$_268 : MaskType;
	var SecMask_$_269 : MaskType;
	var SecMask_$_270 : MaskType;
	var SecMask_$_271 : MaskType;
	var SecMask_$_272 : MaskType;
	var SecMask_$_273 : MaskType;
	var SecMask_$_274 : MaskType;
	var SecMask_$_275 : MaskType;
	var SecMask_$_276 : MaskType;
	var SecMask_$_277 : MaskType;
	var SecMask_$_278 : MaskType;
	var SecMask_$_279 : MaskType;
	var SecMask_$_280 : MaskType;
	var SecMask_$_281 : MaskType;
	var SecMask_$_282 : MaskType;
	var SecMask_$_283 : MaskType;
	var SecMask_$_284 : MaskType;
	var SecMask_$_285 : MaskType;
	var SecMask_$_286 : MaskType;
	var SecMask_$_287 : MaskType;
	var SecMask_$_288 : MaskType;
	var SecMask_$_289 : MaskType;
	var SecMask_$_290 : MaskType;
	var SecMask_$_291 : MaskType;
	var SecMask_$_292 : MaskType;
	var SecMask_$_293 : MaskType;
	var SecMask_$_294 : MaskType;
	var SecMask_$_295 : MaskType;
	var SecMask_$_296 : MaskType;
	var SecMask_$_297 : MaskType;
	var SecMask_$_298 : MaskType;
	var SecMask_$_299 : MaskType;
	var SecMask_$_300 : MaskType;
	var SecMask_$_301 : MaskType;
	var SecMask_$_302 : MaskType;
	var SecMask_$_303 : MaskType;
	var SecMask_$_304 : MaskType;
	var SecMask_$_305 : MaskType;
	var SecMask_$_306 : MaskType;
	var SecMask_$_307 : MaskType;
	var SecMask_$_308 : MaskType;
	var SecMask_$_309 : MaskType;
	var SecMask_$_310 : MaskType;
	var SecMask_$_311 : MaskType;
	var SecMask_$_312 : MaskType;
	var SecMask_$_313 : MaskType;
	var SecMask_$_314 : MaskType;
	var SecMask_$_315 : MaskType;
	var SecMask_$_316 : MaskType;
	var SecMask_$_317 : MaskType;
	var SecMask_$_318 : MaskType;
	var SecMask_$_319 : MaskType;
	var SecMask_$_320 : MaskType;
	var SecMask_$_321 : MaskType;
	var SecMask_$_322 : MaskType;
	var SecMask_$_323 : MaskType;
	var SecMask_$_324 : MaskType;
	var SecMask_$_325 : MaskType;
	var SecMask_$_326 : MaskType;
	var SecMask_$_327 : MaskType;
	var SecMask_$_328 : MaskType;
	var SecMask_$_329 : MaskType;
	var SecMask_$_330 : MaskType;
	var SecMask_$_331 : MaskType;
	var SecMask_$_332 : MaskType;
	var SecMask_$_333 : MaskType;
	var SecMask_$_334 : MaskType;
	var SecMask_$_335 : MaskType;
	var SecMask_$_336 : MaskType;
	var SecMask_$_337 : MaskType;
	var SecMask_$_338 : MaskType;
	var SecMask_$_339 : MaskType;
	var SecMask_$_340 : MaskType;
	var SecMask_$_341 : MaskType;
	var SecMask_$_342 : MaskType;
	var SecMask_$_343 : MaskType;
	var SecMask_$_344 : MaskType;
	var SecMask_$_345 : MaskType;
	var SecMask_$_346 : MaskType;
	var SecMask_$_347 : MaskType;
	var SecMask_$_348 : MaskType;
	var SecMask_$_349 : MaskType;
	var SecMask_$_350 : MaskType;
	var SecMask_$_351 : MaskType;
	var SecMask_$_352 : MaskType;
	var SecMask_$_353 : MaskType;
	var SecMask_$_354 : MaskType;
	var SecMask_$_355 : MaskType;
	var SecMask_$_356 : MaskType;
	var SecMask_$_357 : MaskType;
	var SecMask_$_358 : MaskType;
	var SecMask_$_359 : MaskType;
	var SecMask_$_360 : MaskType;
	var SecMask_$_361 : MaskType;
	var SecMask_$_362 : MaskType;
	var SecMask_$_363 : MaskType;
	var SecMask_$_364 : MaskType;
	var SecMask_$_365 : MaskType;
	var SecMask_$_366 : MaskType;
	var SecMask_$_367 : MaskType;
	var SecMask_$_368 : MaskType;
	var SecMask_$_369 : MaskType;
	var SecMask_$_370 : MaskType;
	var SecMask_$_371 : MaskType;
	var SecMask_$_372 : MaskType;
	var SecMask_$_373 : MaskType;
	var SecMask_$_374 : MaskType;
	var SecMask_$_375 : MaskType;
	var SecMask_$_376 : MaskType;
	var SecMask_$_377 : MaskType;
	var SecMask_$_378 : MaskType;
	var SecMask_$_379 : MaskType;
	var SecMask_$_380 : MaskType;
	var SecMask_$_381 : MaskType;
	var SecMask_$_382 : MaskType;
	var SecMask_$_383 : MaskType;
	var SecMask_$_384 : MaskType;
	var SecMask_$_385 : MaskType;
	var SecMask_$_386 : MaskType;
	var SecMask_$_387 : MaskType;
	var SecMask_$_388 : MaskType;
	var SecMask_$_389 : MaskType;
	var SecMask_$_390 : MaskType;
	var SecMask_$_391 : MaskType;
	var SecMask_$_392 : MaskType;
	var SecMask_$_393 : MaskType;
	var SecMask_$_394 : MaskType;
	var SecMask_$_395 : MaskType;
	var SecMask_$_396 : MaskType;
	var SecMask_$_397 : MaskType;
	var SecMask_$_398 : MaskType;
	var SecMask_$_399 : MaskType;
	var SecMask_$_400 : MaskType;
	var SecMask_$_401 : MaskType;
	var SecMask_$_402 : MaskType;
	var SecMask_$_403 : MaskType;
	var SecMask_$_404 : MaskType;
	var SecMask_$_405 : MaskType;
	var SecMask_$_406 : MaskType;
	var SecMask_$_407 : MaskType;
	var SecMask_$_408 : MaskType;
	var SecMask_$_409 : MaskType;
	var SecMask_$_410 : MaskType;
	var SecMask_$_411 : MaskType;
	var SecMask_$_412 : MaskType;
	var SecMask_$_413 : MaskType;
	var SecMask_$_414 : MaskType;
	var SecMask_$_415 : MaskType;
	var SecMask_$_416 : MaskType;
	var SecMask_$_417 : MaskType;
	var SecMask_$_418 : MaskType;
	var SecMask_$_419 : MaskType;
	var SecMask_$_420 : MaskType;
	var SecMask_$_421 : MaskType;
	var SecMask_$_422 : MaskType;
	var SecMask_$_423 : MaskType;
	var SecMask_$_424 : MaskType;
	var SecMask_$_425 : MaskType;
	var SecMask_$_426 : MaskType;
	var SecMask_$_427 : MaskType;
	var SecMask_$_428 : MaskType;
	var SecMask_$_429 : MaskType;
	var SecMask_$_430 : MaskType;
	var SecMask_$_431 : MaskType;
	var SecMask_$_432 : MaskType;
	var SecMask_$_433 : MaskType;
	var SecMask_$_434 : MaskType;
	var SecMask_$_435 : MaskType;
	var SecMask_$_436 : MaskType;
	var SecMask_$_437 : MaskType;
	var SecMask_$_438 : MaskType;
	var SecMask_$_439 : MaskType;
	var SecMask_$_440 : MaskType;
	var SecMask_$_441 : MaskType;
	var SecMask_$_442 : MaskType;
	var SecMask_$_443 : MaskType;
	var SecMask_$_444 : MaskType;
	var SecMask_$_445 : MaskType;
	var SecMask_$_446 : MaskType;
	var SecMask_$_447 : MaskType;
	var SecMask_$_448 : MaskType;
	var SecMask_$_449 : MaskType;
	var SecMask_$_450 : MaskType;
	var SecMask_$_451 : MaskType;
	var SecMask_$_452 : MaskType;
	var SecMask_$_453 : MaskType;
	var SecMask_$_454 : MaskType;
	var SecMask_$_455 : MaskType;
	var SecMask_$_456 : MaskType;
	var SecMask_$_457 : MaskType;
	var SecMask_$_458 : MaskType;
	var SecMask_$_459 : MaskType;
	var SecMask_$_460 : MaskType;
	var SecMask_$_461 : MaskType;
	var SecMask_$_462 : MaskType;
	var SecMask_$_463 : MaskType;
	var SecMask_$_464 : MaskType;
	var SecMask_$_465 : MaskType;
	var SecMask_$_466 : MaskType;
	var SecMask_$_467 : MaskType;
	var SecMask_$_468 : MaskType;
	var SecMask_$_469 : MaskType;
	var SecMask_$_470 : MaskType;
	var SecMask_$_471 : MaskType;
	var SecMask_$_472 : MaskType;
	var SecMask_$_473 : MaskType;
	var SecMask_$_474 : MaskType;
	var SecMask_$_475 : MaskType;
	var SecMask_$_476 : MaskType;
	var SecMask_$_477 : MaskType;
	var SecMask_$_478 : MaskType;
	var SecMask_$_479 : MaskType;
	var SecMask_$_480 : MaskType;
	var SecMask_$_481 : MaskType;
	var SecMask_$_482 : MaskType;
	var SecMask_$_483 : MaskType;
	var SecMask_$_484 : MaskType;
	var SecMask_$_485 : MaskType;
	var SecMask_$_486 : MaskType;
	var SecMask_$_487 : MaskType;
	var SecMask_$_488 : MaskType;
	var SecMask_$_489 : MaskType;
	var SecMask_$_490 : MaskType;
	var SecMask_$_491 : MaskType;
	var SecMask_$_492 : MaskType;
	var SecMask_$_493 : MaskType;
	var SecMask_$_494 : MaskType;
	var SecMask_$_495 : MaskType;
	var SecMask_$_496 : MaskType;
	var SecMask_$_497 : MaskType;
	var SecMask_$_498 : MaskType;
	var SecMask_$_499 : MaskType;
	var SecMask_$_500 : MaskType;
	var SecMask_$_501 : MaskType;
	var SecMask_$_502 : MaskType;
	var SecMask_$_503 : MaskType;
	var SecMask_$_504 : MaskType;
	var SecMask_$_505 : MaskType;
	var SecMask_$_506 : MaskType;
	var SecMask_$_507 : MaskType;
	var SecMask_$_508 : MaskType;
	var SecMask_$_509 : MaskType;
	var SecMask_$_510 : MaskType;
	var SecMask_$_511 : MaskType;
	var SecMask_$_512 : MaskType;
	var SecMask_$_513 : MaskType;
	var SecMask_$_514 : MaskType;
	var SecMask_$_515 : MaskType;
	var SecMask_$_516 : MaskType;
	var SecMask_$_517 : MaskType;
	var SecMask_$_518 : MaskType;
	var SecMask_$_519 : MaskType;
	var SecMask_$_520 : MaskType;
	var SecMask_$_521 : MaskType;
	var SecMask_$_522 : MaskType;
	var SecMask_$_523 : MaskType;
	var SecMask_$_524 : MaskType;
	var SecMask_$_525 : MaskType;
	var SecMask_$_526 : MaskType;
	var SecMask_$_527 : MaskType;
	var SecMask_$_528 : MaskType;
	var SecMask_$_529 : MaskType;
	var SecMask_$_530 : MaskType;
	var SecMask_$_531 : MaskType;
	var SecMask_$_532 : MaskType;
	var SecMask_$_533 : MaskType;
	var exhaleMask#_654_$_1 : MaskType;
	var SecMask_$_534 : MaskType;
	var SecMask_$_535 : MaskType;
	var SecMask_$_536 : MaskType;
	var SecMask_$_537 : MaskType;
	var SecMask_$_538 : MaskType;
	var SecMask_$_539 : MaskType;
	var SecMask_$_540 : MaskType;
	var SecMask_$_541 : MaskType;
	var SecMask_$_542 : MaskType;
	var SecMask_$_543 : MaskType;
	var SecMask_$_544 : MaskType;
	var SecMask_$_545 : MaskType;
	var SecMask_$_546 : MaskType;
	var SecMask_$_547 : MaskType;
	var SecMask_$_548 : MaskType;
	var SecMask_$_549 : MaskType;
	var SecMask_$_550 : MaskType;
	var SecMask_$_551 : MaskType;
	var SecMask_$_552 : MaskType;
	var SecMask_$_553 : MaskType;
	var SecMask_$_554 : MaskType;
	var SecMask_$_555 : MaskType;
	var SecMask_$_556 : MaskType;
	var SecMask_$_557 : MaskType;
	var SecMask_$_558 : MaskType;
	var SecMask_$_559 : MaskType;
	var SecMask_$_560 : MaskType;
	var SecMask_$_561 : MaskType;
	var SecMask_$_562 : MaskType;
	var SecMask_$_563 : MaskType;
	var SecMask_$_564 : MaskType;
	var SecMask_$_565 : MaskType;
	var SecMask_$_566 : MaskType;
	var SecMask_$_567 : MaskType;
	var SecMask_$_568 : MaskType;
	var SecMask_$_569 : MaskType;
	var SecMask_$_570 : MaskType;
	var SecMask_$_571 : MaskType;
	var SecMask_$_572 : MaskType;
	var SecMask_$_573 : MaskType;
	var SecMask_$_574 : MaskType;
	var SecMask_$_575 : MaskType;
	var SecMask_$_576 : MaskType;
	var SecMask_$_577 : MaskType;
	var SecMask_$_578 : MaskType;
	var SecMask_$_579 : MaskType;
	var SecMask_$_580 : MaskType;
	var SecMask_$_581 : MaskType;
	var SecMask_$_582 : MaskType;
	var SecMask_$_583 : MaskType;
	var SecMask_$_584 : MaskType;
	var SecMask_$_585 : MaskType;
	var SecMask_$_586 : MaskType;
	var SecMask_$_587 : MaskType;
	var SecMask_$_588 : MaskType;
	var SecMask_$_589 : MaskType;
	var SecMask_$_590 : MaskType;
	var SecMask_$_591 : MaskType;
	var SecMask_$_592 : MaskType;
	var SecMask_$_593 : MaskType;
	var SecMask_$_594 : MaskType;
	var SecMask_$_595 : MaskType;
	var SecMask_$_596 : MaskType;
	var SecMask_$_597 : MaskType;
	var SecMask_$_598 : MaskType;
	var SecMask_$_599 : MaskType;
	var SecMask_$_600 : MaskType;
	var SecMask_$_601 : MaskType;
	var SecMask_$_602 : MaskType;
	var SecMask_$_603 : MaskType;
	var SecMask_$_604 : MaskType;
	var SecMask_$_605 : MaskType;
	var SecMask_$_606 : MaskType;
	var SecMask_$_607 : MaskType;
	var SecMask_$_608 : MaskType;
	var SecMask_$_609 : MaskType;
	var SecMask_$_610 : MaskType;
	var SecMask_$_611 : MaskType;
	var SecMask_$_612 : MaskType;
	var SecMask_$_613 : MaskType;
	var SecMask_$_614 : MaskType;
	var SecMask_$_615 : MaskType;
	var SecMask_$_616 : MaskType;
	var SecMask_$_617 : MaskType;
	var SecMask_$_618 : MaskType;
	var SecMask_$_619 : MaskType;
	var SecMask_$_620 : MaskType;
	var SecMask_$_621 : MaskType;
	var SecMask_$_622 : MaskType;
	var SecMask_$_623 : MaskType;
	var SecMask_$_624 : MaskType;
	var SecMask_$_625 : MaskType;
	var SecMask_$_626 : MaskType;
	var SecMask_$_627 : MaskType;
	var SecMask_$_628 : MaskType;
	var SecMask_$_629 : MaskType;
	var SecMask_$_630 : MaskType;
	var SecMask_$_631 : MaskType;
	var SecMask_$_632 : MaskType;
	var SecMask_$_633 : MaskType;
	var SecMask_$_634 : MaskType;
	var SecMask_$_635 : MaskType;
	var SecMask_$_636 : MaskType;
	var SecMask_$_637 : MaskType;
	var SecMask_$_638 : MaskType;
	var SecMask_$_639 : MaskType;
	var SecMask_$_640 : MaskType;
	var SecMask_$_641 : MaskType;
	var SecMask_$_642 : MaskType;
	var SecMask_$_643 : MaskType;
	var SecMask_$_644 : MaskType;
	var SecMask_$_645 : MaskType;
	var SecMask_$_646 : MaskType;
	var SecMask_$_647 : MaskType;
	var SecMask_$_648 : MaskType;
	var SecMask_$_649 : MaskType;
	var SecMask_$_650 : MaskType;
	var SecMask_$_651 : MaskType;
	var SecMask_$_652 : MaskType;
	var SecMask_$_653 : MaskType;
	var SecMask_$_654 : MaskType;
	var SecMask_$_655 : MaskType;
	var SecMask_$_656 : MaskType;
	var SecMask_$_657 : MaskType;
	var SecMask_$_658 : MaskType;
	var SecMask_$_659 : MaskType;
	var SecMask_$_660 : MaskType;
	var SecMask_$_661 : MaskType;
	var SecMask_$_662 : MaskType;
	var SecMask_$_663 : MaskType;
	var SecMask_$_664 : MaskType;
	var SecMask_$_665 : MaskType;
	var SecMask_$_666 : MaskType;
	var SecMask_$_667 : MaskType;
	var SecMask_$_668 : MaskType;
	var SecMask_$_669 : MaskType;
	var SecMask_$_670 : MaskType;
	var SecMask_$_671 : MaskType;
	var SecMask_$_672 : MaskType;
	var SecMask_$_673 : MaskType;
	var SecMask_$_674 : MaskType;
	var SecMask_$_675 : MaskType;
	var SecMask_$_676 : MaskType;
	var SecMask_$_677 : MaskType;
	var SecMask_$_678 : MaskType;
	var SecMask_$_679 : MaskType;
	var SecMask_$_680 : MaskType;
	var SecMask_$_681 : MaskType;
	var SecMask_$_682 : MaskType;
	var SecMask_$_683 : MaskType;
	var SecMask_$_684 : MaskType;
	var SecMask_$_685 : MaskType;
	var SecMask_$_686 : MaskType;
	var SecMask_$_687 : MaskType;
	var SecMask_$_688 : MaskType;
	var SecMask_$_689 : MaskType;
	var SecMask_$_690 : MaskType;
	var SecMask_$_691 : MaskType;
	var SecMask_$_692 : MaskType;
	var SecMask_$_693 : MaskType;
	var SecMask_$_694 : MaskType;
	var SecMask_$_695 : MaskType;
	var SecMask_$_696 : MaskType;
	var SecMask_$_697 : MaskType;
	var SecMask_$_698 : MaskType;
	var SecMask_$_699 : MaskType;
	var SecMask_$_700 : MaskType;
	var SecMask_$_701 : MaskType;
	var SecMask_$_702 : MaskType;
	var SecMask_$_703 : MaskType;
	var SecMask_$_704 : MaskType;
	var SecMask_$_705 : MaskType;
	var SecMask_$_706 : MaskType;
	var SecMask_$_707 : MaskType;
	var SecMask_$_708 : MaskType;
	var SecMask_$_709 : MaskType;
	var SecMask_$_710 : MaskType;
	var SecMask_$_711 : MaskType;
	var SecMask_$_712 : MaskType;
	var SecMask_$_713 : MaskType;
	var SecMask_$_714 : MaskType;
	var SecMask_$_715 : MaskType;
	var SecMask_$_716 : MaskType;
	var SecMask_$_717 : MaskType;
	var SecMask_$_718 : MaskType;
	var SecMask_$_719 : MaskType;
	var SecMask_$_720 : MaskType;
	var SecMask_$_721 : MaskType;
	var SecMask_$_722 : MaskType;
	var SecMask_$_723 : MaskType;
	var SecMask_$_724 : MaskType;
	var SecMask_$_725 : MaskType;
	var SecMask_$_726 : MaskType;
	var SecMask_$_727 : MaskType;
	var SecMask_$_728 : MaskType;
	var SecMask_$_729 : MaskType;
	var SecMask_$_730 : MaskType;
	var SecMask_$_731 : MaskType;
	var SecMask_$_732 : MaskType;
	var SecMask_$_733 : MaskType;
	var SecMask_$_734 : MaskType;
	var SecMask_$_735 : MaskType;
	var SecMask_$_736 : MaskType;
	var SecMask_$_737 : MaskType;
	var SecMask_$_738 : MaskType;
	var SecMask_$_739 : MaskType;
	var SecMask_$_740 : MaskType;
	var SecMask_$_741 : MaskType;
	var SecMask_$_742 : MaskType;
	var SecMask_$_743 : MaskType;
	var SecMask_$_744 : MaskType;
	var SecMask_$_745 : MaskType;
	var SecMask_$_746 : MaskType;
	var SecMask_$_747 : MaskType;
	var SecMask_$_748 : MaskType;
	var SecMask_$_749 : MaskType;
	var SecMask_$_750 : MaskType;
	var SecMask_$_751 : MaskType;
	var SecMask_$_752 : MaskType;
	var SecMask_$_753 : MaskType;
	var SecMask_$_754 : MaskType;
	var SecMask_$_755 : MaskType;
	var SecMask_$_756 : MaskType;
	var SecMask_$_757 : MaskType;
	var SecMask_$_758 : MaskType;
	var SecMask_$_759 : MaskType;
	var SecMask_$_760 : MaskType;
	var SecMask_$_761 : MaskType;
	var SecMask_$_762 : MaskType;
	var SecMask_$_763 : MaskType;
	var SecMask_$_764 : MaskType;
	var SecMask_$_765 : MaskType;
	var SecMask_$_766 : MaskType;
	var SecMask_$_767 : MaskType;
	var SecMask_$_768 : MaskType;
	var SecMask_$_769 : MaskType;
	var SecMask_$_770 : MaskType;
	var SecMask_$_771 : MaskType;
	var SecMask_$_772 : MaskType;
	var SecMask_$_773 : MaskType;
	var SecMask_$_774 : MaskType;
	var SecMask_$_775 : MaskType;
	var SecMask_$_776 : MaskType;
	var SecMask_$_777 : MaskType;
	var SecMask_$_778 : MaskType;
	var SecMask_$_779 : MaskType;
	var SecMask_$_780 : MaskType;
	var SecMask_$_781 : MaskType;
	var SecMask_$_782 : MaskType;
	var SecMask_$_783 : MaskType;
	var SecMask_$_784 : MaskType;
	var SecMask_$_785 : MaskType;
	var SecMask_$_786 : MaskType;
	var SecMask_$_787 : MaskType;
	var SecMask_$_788 : MaskType;
	var SecMask_$_789 : MaskType;
	var SecMask_$_790 : MaskType;
	var SecMask_$_791 : MaskType;
	var SecMask_$_792 : MaskType;
	var SecMask_$_793 : MaskType;
	var SecMask_$_794 : MaskType;
	var SecMask_$_795 : MaskType;
	var SecMask_$_796 : MaskType;
	var SecMask_$_797 : MaskType;
	var SecMask_$_798 : MaskType;
	var SecMask_$_799 : MaskType;
	var SecMask_$_800 : MaskType;
	var SecMask_$_801 : MaskType;
	var SecMask_$_802 : MaskType;
	var SecMask_$_803 : MaskType;
	var SecMask_$_804 : MaskType;
	var SecMask_$_805 : MaskType;
	var SecMask_$_806 : MaskType;
	var SecMask_$_807 : MaskType;
	var SecMask_$_808 : MaskType;
	var SecMask_$_809 : MaskType;
	var SecMask_$_810 : MaskType;
	var SecMask_$_811 : MaskType;
	var SecMask_$_812 : MaskType;
	var SecMask_$_813 : MaskType;
	var SecMask_$_814 : MaskType;
	var SecMask_$_815 : MaskType;
	var SecMask_$_816 : MaskType;
	var SecMask_$_817 : MaskType;
	var SecMask_$_818 : MaskType;
	var SecMask_$_819 : MaskType;
	var SecMask_$_820 : MaskType;
	var SecMask_$_821 : MaskType;
	var SecMask_$_822 : MaskType;
	var SecMask_$_823 : MaskType;
	var SecMask_$_824 : MaskType;
	var SecMask_$_825 : MaskType;
	var SecMask_$_826 : MaskType;
	var SecMask_$_827 : MaskType;
	var SecMask_$_828 : MaskType;
	var SecMask_$_829 : MaskType;
	var SecMask_$_830 : MaskType;
	var SecMask_$_831 : MaskType;
	var SecMask_$_832 : MaskType;
	var SecMask_$_833 : MaskType;
	var SecMask_$_834 : MaskType;
	var SecMask_$_835 : MaskType;
	var SecMask_$_836 : MaskType;
	var SecMask_$_837 : MaskType;
	var SecMask_$_838 : MaskType;
	var SecMask_$_839 : MaskType;
	var SecMask_$_840 : MaskType;
	var SecMask_$_841 : MaskType;
	var SecMask_$_842 : MaskType;
	var SecMask_$_843 : MaskType;
	var SecMask_$_844 : MaskType;
	var SecMask_$_845 : MaskType;
	var SecMask_$_846 : MaskType;
	var SecMask_$_847 : MaskType;
	var SecMask_$_848 : MaskType;
	var SecMask_$_849 : MaskType;
	var SecMask_$_850 : MaskType;
	var SecMask_$_851 : MaskType;
	var SecMask_$_852 : MaskType;
	var SecMask_$_853 : MaskType;
	var SecMask_$_854 : MaskType;
	var SecMask_$_855 : MaskType;
	var SecMask_$_856 : MaskType;
	var SecMask_$_857 : MaskType;
	var SecMask_$_858 : MaskType;
	var SecMask_$_859 : MaskType;
	var SecMask_$_860 : MaskType;
	var exhaleMask#_654_$_2 : MaskType;
	var $_$_condition : bool;
	var $_$_condition_$0 : bool;
	var $_$_condition_$1 : bool;
	var $_$_condition_$3 : bool;
	var $_$_condition_$4 : bool;
	var $_$_condition_$5 : bool;
	var $_$_condition_$6 : bool;
	var $_$_condition_$8 : bool;
	var $_$_condition_$9 : bool;
	var $_$_condition_$10 : bool;
	var $_$_condition_$11 : bool;
	var $_$_condition_$12 : bool;
	var $_$_condition_$13 : bool;
	var $_$_condition_$15 : bool;
	var $_$_condition_$17 : bool;
	var $_$_condition_$18 : bool;
	var $_$_condition_$19 : bool;
	var $_$_condition_$20 : bool;
	var $_$_condition_$22 : bool;
	var $_$_condition_$23 : bool;
	var $_$_condition_$24 : bool;
	var $_$_condition_$25 : bool;
	var $_$_condition_$26 : bool;
	var $_$_condition_$27 : bool;
	var $_$_condition_$28 : bool;
	var $_$_condition_$29 : bool;
	var $_$_condition_$30 : bool;
	var $_$_condition_$31 : bool;
	var $_$_condition_$32 : bool;
	var $_$_condition_$34 : bool;
	var $_$_condition_$35 : bool;
	var $_$_condition_$36 : bool;
	var $_$_condition_$37 : bool;
	var $_$_condition_$38 : bool;
	var $_$_condition_$39 : bool;
	var $_$_condition_$40 : bool;
	var $_$_condition_$41 : bool;
	var $_$_condition_$42 : bool;
	var $_$_condition_$43 : bool;
	var $_$_condition_$44 : bool;
	var $_$_condition_$45 : bool;
	var $_$_condition_$46 : bool;
	var $_$_condition_$47 : bool;
	var $_$_condition_$49 : bool;
	var $_$_condition_$50 : bool;
	var $_$_condition_$51 : bool;
	var $_$_condition_$52 : bool;
	var $_$_condition_$53 : bool;
	var $_$_condition_$55 : bool;
	var $_$_condition_$56 : bool;
	var $_$_condition_$57 : bool;
	var $_$_condition_$58 : bool;
	var $_$_condition_$60 : bool;
	var $_$_condition_$61 : bool;
	var $_$_condition_$62 : bool;
	var $_$_condition_$63 : bool;
	var $_$_condition_$64 : bool;
	var $_$_condition_$65 : bool;
	var $_$_condition_$66 : bool;
	var $_$_condition_$67 : bool;
	var $_$_condition_$68 : bool;
	var $_$_condition_$69 : bool;
	var $_$_condition_$70 : bool;
	var $_$_condition_$71 : bool;
	var $_$_condition_$72 : bool;
	var $_$_condition_$73 : bool;
	var $_$_condition_$74 : bool;
	var $_$_condition_$76 : bool;
	var $_$_condition_$77 : bool;
	var $_$_condition_$78 : bool;
	var $_$_condition_$79 : bool;
	var $_$_condition_$80 : bool;
	var $_$_condition_$81 : bool;
	var $_$_condition_$82 : bool;
	var $_$_condition_$83 : bool;
	var $_$_condition_$84 : bool;
	var $_$_condition_$85 : bool;
	var $_$_condition_$86 : bool;
	var $_$_condition_$87 : bool;
	var $_$_condition_$88 : bool;
	var $_$_condition_$89 : bool;
	var $_$_condition_$91 : bool;
	var $_$_condition_$92 : bool;
	var $_$_condition_$93 : bool;
	var $_$_condition_$94 : bool;
	var $_$_condition_$95 : bool;
	var $_$_condition_$97 : bool;
	var $_$_condition_$98 : bool;
	var $_$_condition_$99 : bool;
	var $_$_condition_$100 : bool;
	var $_$_condition_$102 : bool;
	var $_$_condition_$103 : bool;
	var $_$_condition_$104 : bool;
	var $_$_condition_$105 : bool;
	var $_$_condition_$106 : bool;
	var $_$_condition_$107 : bool;
	var $_$_condition_$108 : bool;
	var $_$_condition_$109 : bool;
	var $_$_condition_$110 : bool;
	var $_$_condition_$111 : bool;
	var $_$_condition_$113 : bool;
	var $_$_condition_$115 : bool;
	var $_$_condition_$117 : bool;
	var $_$_condition_$119 : bool;
	var $_$_condition_$121 : bool;
	var $_$_condition_$123 : bool;
	var $_$_condition_$125 : bool;
	var $_$_condition_$126 : bool;
	var $_$_condition_$128 : bool;
	var $_$_condition_$130 : bool;
	var $_$_condition_$132 : bool;
	var $_$_condition_$134 : bool;
	var $_$_condition_$136 : bool;
	var $_$_condition_$138 : bool;
	var $_$_condition_$140 : bool;
	var $_$_condition_$141 : bool;
	var $_$_condition_$143 : bool;
	var $_$_condition_$145 : bool;
	var $_$_condition_$147 : bool;
	var $_$_condition_$149 : bool;
	var $_$_condition_$151 : bool;
	var $_$_condition_$153 : bool;
	var $_$_condition_$155 : bool;
	var $_$_condition_$156 : bool;
	var $_$_condition_$157 : bool;
	var $_$_condition_$159 : bool;
	var $_$_condition_$161 : bool;
	var $_$_condition_$163 : bool;
	var $_$_condition_$165 : bool;
	var $_$_condition_$167 : bool;
	var $_$_condition_$169 : bool;
	var $_$_condition_$171 : bool;
	var $_$_condition_$172 : bool;
	var $_$_condition_$173 : bool;
	var $_$_condition_$175 : bool;
	var $_$_condition_$177 : bool;
	var $_$_condition_$179 : bool;
	var $_$_condition_$181 : bool;
	var $_$_condition_$183 : bool;
	var $_$_condition_$185 : bool;
	var $_$_condition_$187 : bool;
	var $_$_condition_$188 : bool;
	var $_$_condition_$189 : bool;
	var $_$_condition_$190 : bool;
	var $_$_condition_$192 : bool;
	var $_$_condition_$194 : bool;
	var $_$_condition_$196 : bool;
	var $_$_condition_$197 : bool;
	var $_$_condition_$199 : bool;
	var $_$_condition_$201 : bool;
	var $_$_condition_$203 : bool;
	var $_$_condition_$204 : bool;
	var $_$_condition_$205 : bool;
	var $_$_condition_$206 : bool;
	var $_$_condition_$208 : bool;
	var $_$_condition_$210 : bool;
	var $_$_condition_$212 : bool;
	var $_$_condition_$213 : bool;
	var $_$_condition_$215 : bool;
	var $_$_condition_$217 : bool;
	var $_$_condition_$219 : bool;
	var $_$_condition_$220 : bool;
	var $_$_condition_$222 : bool;
	var $_$_condition_$224 : bool;
	var $_$_condition_$226 : bool;
	var $_$_condition_$227 : bool;
	var $_$_condition_$229 : bool;
	var $_$_condition_$231 : bool;
	var $_$_condition_$233 : bool;
	var $_$_condition_$234 : bool;
	var $_$_condition_$235 : bool;
	var $_$_condition_$237 : bool;
	var $_$_condition_$239 : bool;
	var $_$_condition_$241 : bool;
	var $_$_condition_$242 : bool;
	var $_$_condition_$244 : bool;
	var $_$_condition_$246 : bool;
	var $_$_condition_$248 : bool;
	var $_$_condition_$249 : bool;
	var $_$_condition_$250 : bool;
	var $_$_condition_$252 : bool;
	var $_$_condition_$254 : bool;
	var $_$_condition_$256 : bool;
	var $_$_condition_$257 : bool;
	var $_$_condition_$259 : bool;
	var $_$_condition_$261 : bool;
	var $_$_condition_$263 : bool;
	var $_$_condition_$264 : bool;
	var $_$_condition_$266 : bool;
	var $_$_condition_$267 : bool;
	var $_$_condition_$268 : bool;
	var $_$_condition_$270 : bool;
	var $_$_condition_$271 : bool;
	var $_$_condition_$272 : bool;
	var $_$_condition_$273 : bool;
	var $_$_condition_$274 : bool;
	var $_$_condition_$275 : bool;
	var $_$_condition_$276 : bool;
	var $_$_condition_$277 : bool;
	var $_$_condition_$278 : bool;
	var $_$_condition_$279 : bool;
	var $_$_condition_$280 : bool;
	var $_$_condition_$281 : bool;
	var $_$_condition_$282 : bool;
	var $_$_condition_$283 : bool;
	var $_$_condition_$284 : bool;
	var $_$_condition_$285 : bool;
	var $_$_condition_$287 : bool;
	var $_$_condition_$288 : bool;
	var $_$_condition_$289 : bool;
	var $_$_condition_$291 : bool;
	var $_$_condition_$292 : bool;
	var $_$_condition_$293 : bool;
	var $_$_condition_$294 : bool;
	var $_$_condition_$295 : bool;
	var $_$_condition_$296 : bool;
	var $_$_condition_$299 : bool;
	var $_$_condition_$301 : bool;
	var $_$_condition_$302 : bool;
	var $_$_condition_$303 : bool;
	var $_$_condition_$304 : bool;
	var $_$_condition_$305 : bool;
	var $_$_condition_$306 : bool;
	var $_$_condition_$307 : bool;
	var $_$_condition_$309 : bool;
	var $_$_condition_$310 : bool;
	var $_$_condition_$311 : bool;
	var $_$_condition_$313 : bool;
	var $_$_condition_$315 : bool;
	var $_$_condition_$318 : bool;
	var $_$_condition_$319 : bool;
	var $_$_condition_$320 : bool;
	var $_$_condition_$321 : bool;
	var $_$_condition_$322 : bool;
	var $_$_condition_$323 : bool;
	var $_$_condition_$324 : bool;
	var $_$_condition_$325 : bool;
	var $_$_condition_$326 : bool;
	var $_$_condition_$328 : bool;
	var $_$_condition_$330 : bool;
	var $_$_condition_$333 : bool;
	var $_$_condition_$334 : bool;
	var $_$_condition_$335 : bool;
	var $_$_condition_$336 : bool;
	var $_$_condition_$337 : bool;
	var $_$_condition_$338 : bool;
	var $_$_condition_$339 : bool;
	var $_$_condition_$340 : bool;
	var $_$_condition_$341 : bool;
	var $_$_condition_$343 : bool;
	var $_$_condition_$345 : bool;
	var $_$_condition_$348 : bool;
	var $_$_condition_$349 : bool;
	var $_$_condition_$350 : bool;
	var $_$_condition_$351 : bool;
	var $_$_condition_$352 : bool;
	var $_$_condition_$353 : bool;
	var $_$_condition_$354 : bool;
	var $_$_condition_$355 : bool;
	var $_$_condition_$356 : bool;
	var $_$_condition_$358 : bool;
	var $_$_condition_$360 : bool;
	var $_$_condition_$363 : bool;
	var $_$_condition_$364 : bool;
	var $_$_condition_$365 : bool;
	var $_$_condition_$366 : bool;
	var $_$_condition_$367 : bool;
	var $_$_condition_$368 : bool;
	var $_$_condition_$369 : bool;
	var $_$_condition_$370 : bool;
	var $_$_condition_$371 : bool;
	var $_$_condition_$373 : bool;
	var $_$_condition_$375 : bool;
	var $_$_condition_$378 : bool;
	var $_$_condition_$379 : bool;
	var $_$_condition_$380 : bool;
	var $_$_condition_$381 : bool;
	var $_$_condition_$382 : bool;
	var $_$_condition_$383 : bool;
	var $_$_condition_$384 : bool;
	var $_$_condition_$385 : bool;
	var $_$_condition_$386 : bool;
	var $_$_condition_$388 : bool;
	var $_$_condition_$390 : bool;
	var $_$_condition_$393 : bool;
	var $_$_condition_$394 : bool;
	var $_$_condition_$395 : bool;
	var $_$_condition_$396 : bool;
	var $_$_condition_$397 : bool;
	var $_$_condition_$398 : bool;
	var $_$_condition_$399 : bool;
	var $_$_condition_$400 : bool;
	var $_$_condition_$401 : bool;
	var $_$_condition_$403 : bool;
	var $_$_condition_$405 : bool;
	var $_$_condition_$408 : bool;
	var $_$_condition_$409 : bool;
	var $_$_condition_$410 : bool;
	var $_$_condition_$411 : bool;
	var $_$_condition_$412 : bool;
	var $_$_condition_$413 : bool;
	var $_$_condition_$414 : bool;
	var $_$_condition_$415 : bool;
	var $_$_condition_$416 : bool;
	var $_$_condition_$418 : bool;
	var $_$_condition_$420 : bool;
	var $_$_condition_$423 : bool;
	var $_$_condition_$424 : bool;
	var $_$_condition_$425 : bool;
	var $_$_condition_$426 : bool;
	var $_$_condition_$427 : bool;
	var $_$_condition_$428 : bool;
	var $_$_condition_$429 : bool;
	var $_$_condition_$430 : bool;
	var $_$_condition_$431 : bool;
	var $_$_condition_$433 : bool;
	var $_$_condition_$435 : bool;
	var $_$_condition_$438 : bool;
	var $_$_condition_$439 : bool;
	var $_$_condition_$440 : bool;
	var $_$_condition_$441 : bool;
	var $_$_condition_$442 : bool;
	var $_$_condition_$443 : bool;
	var $_$_condition_$444 : bool;
	var $_$_condition_$445 : bool;
	var $_$_condition_$446 : bool;
	var $_$_condition_$448 : bool;
	var $_$_condition_$450 : bool;
	var $_$_condition_$453 : bool;
	var $_$_condition_$454 : bool;
	var $_$_condition_$455 : bool;
	var $_$_condition_$456 : bool;
	var $_$_condition_$457 : bool;
	var $_$_condition_$458 : bool;
	var $_$_condition_$459 : bool;
	var $_$_condition_$460 : bool;
	var $_$_condition_$461 : bool;
	var $_$_condition_$463 : bool;
	var $_$_condition_$465 : bool;
	var $_$_condition_$468 : bool;
	var $_$_condition_$469 : bool;
	var $_$_condition_$470 : bool;
	var $_$_condition_$471 : bool;
	var $_$_condition_$472 : bool;
	var $_$_condition_$474 : bool;
	var $_$_condition_$475 : bool;
	var $_$_condition_$477 : bool;
	var $_$_condition_$478 : bool;
	var $_$_condition_$479 : bool;
	var $_$_condition_$481 : bool;
	var $_$_condition_$484 : bool;
	var $_$_condition_$485 : bool;
	var $_$_condition_$486 : bool;
	var $_$_condition_$487 : bool;
	var $_$_condition_$488 : bool;
	var $_$_condition_$489 : bool;
	var $_$_condition_$490 : bool;
	var $_$_condition_$491 : bool;
	var $_$_condition_$492 : bool;
	var $_$_condition_$494 : bool;
	var $_$_condition_$497 : bool;
	var $_$_condition_$498 : bool;
	var $_$_condition_$499 : bool;
	var $_$_condition_$500 : bool;
	var $_$_condition_$501 : bool;
	var $_$_condition_$502 : bool;
	var $_$_condition_$503 : bool;
	var $_$_condition_$504 : bool;
	var $_$_condition_$505 : bool;
	var $_$_condition_$507 : bool;
	var $_$_condition_$510 : bool;
	var $_$_condition_$511 : bool;
	var $_$_condition_$512 : bool;
	var $_$_condition_$513 : bool;
	var $_$_condition_$514 : bool;
	var $_$_condition_$515 : bool;
	var $_$_condition_$516 : bool;
	var $_$_condition_$517 : bool;
	var $_$_condition_$518 : bool;
	var $_$_condition_$520 : bool;
	var $_$_condition_$523 : bool;
	var $_$_condition_$524 : bool;
	var $_$_condition_$525 : bool;
	var $_$_condition_$526 : bool;
	var $_$_condition_$527 : bool;
	var $_$_condition_$528 : bool;
	var $_$_condition_$529 : bool;
	var $_$_condition_$530 : bool;
	var $_$_condition_$531 : bool;
	var $_$_condition_$533 : bool;
	var $_$_condition_$536 : bool;
	var $_$_condition_$537 : bool;
	var $_$_condition_$538 : bool;
	var $_$_condition_$539 : bool;
	var $_$_condition_$540 : bool;
	var $_$_condition_$541 : bool;
	var $_$_condition_$542 : bool;
	var $_$_condition_$543 : bool;
	var $_$_condition_$544 : bool;
	var $_$_condition_$546 : bool;
	var $_$_condition_$549 : bool;
	var $_$_condition_$550 : bool;
	var $_$_condition_$551 : bool;
	var $_$_condition_$552 : bool;
	var $_$_condition_$553 : bool;
	var $_$_condition_$554 : bool;
	var $_$_condition_$555 : bool;
	var $_$_condition_$556 : bool;
	var $_$_condition_$557 : bool;
	var $_$_condition_$559 : bool;
	var $_$_condition_$562 : bool;
	var $_$_condition_$563 : bool;
	var $_$_condition_$564 : bool;
	var $_$_condition_$565 : bool;
	var $_$_condition_$566 : bool;
	var $_$_condition_$567 : bool;
	var $_$_condition_$568 : bool;
	var $_$_condition_$569 : bool;
	var $_$_condition_$570 : bool;
	var $_$_condition_$572 : bool;
	var $_$_condition_$575 : bool;
	var $_$_condition_$576 : bool;
	var $_$_condition_$577 : bool;
	var $_$_condition_$578 : bool;
	var $_$_condition_$579 : bool;
	var $_$_condition_$580 : bool;
	var $_$_condition_$581 : bool;
	var $_$_condition_$582 : bool;
	var $_$_condition_$583 : bool;
	var $_$_condition_$585 : bool;
	var $_$_condition_$588 : bool;
	var $_$_condition_$589 : bool;
	var $_$_condition_$590 : bool;
	var $_$_condition_$591 : bool;
	var $_$_condition_$592 : bool;
	var $_$_condition_$593 : bool;
	var $_$_condition_$594 : bool;
	var $_$_condition_$595 : bool;
	var $_$_condition_$596 : bool;
	var $_$_condition_$598 : bool;
	var $_$_condition_$601 : bool;
	var $_$_condition_$602 : bool;
	var $_$_condition_$603 : bool;
	var $_$_condition_$604 : bool;
	var $_$_condition_$605 : bool;
	var $_$_condition_$606 : bool;
	var $_$_condition_$607 : bool;
	var $_$_condition_$608 : bool;
	var $_$_condition_$609 : bool;
	var $_$_condition_$611 : bool;
	var $_$_condition_$614 : bool;
	var $_$_condition_$615 : bool;
	var $_$_condition_$616 : bool;
	var $_$_condition_$617 : bool;
	var $_$_condition_$618 : bool;
	var $_$_condition_$620 : bool;
	var $_$_condition_$621 : bool;
	var $_$_condition_$622 : bool;
	var $_$_condition_$623 : bool;
	var $_$_condition_$624 : bool;
	var $_$_condition_$625 : bool;
	var $_$_condition_$628 : bool;
	var $_$_condition_$630 : bool;
	var $_$_condition_$631 : bool;
	var $_$_condition_$632 : bool;
	var $_$_condition_$633 : bool;
	var $_$_condition_$634 : bool;
	var $_$_condition_$635 : bool;
	var $_$_condition_$636 : bool;
	var $_$_condition_$638 : bool;
	var $_$_condition_$639 : bool;
	var $_$_condition_$640 : bool;
	var $_$_condition_$642 : bool;
	var $_$_condition_$644 : bool;
	var $_$_condition_$647 : bool;
	var $_$_condition_$648 : bool;
	var $_$_condition_$649 : bool;
	var $_$_condition_$650 : bool;
	var $_$_condition_$651 : bool;
	var $_$_condition_$652 : bool;
	var $_$_condition_$653 : bool;
	var $_$_condition_$654 : bool;
	var $_$_condition_$655 : bool;
	var $_$_condition_$657 : bool;
	var $_$_condition_$659 : bool;
	var $_$_condition_$662 : bool;
	var $_$_condition_$663 : bool;
	var $_$_condition_$664 : bool;
	var $_$_condition_$665 : bool;
	var $_$_condition_$666 : bool;
	var $_$_condition_$667 : bool;
	var $_$_condition_$668 : bool;
	var $_$_condition_$669 : bool;
	var $_$_condition_$670 : bool;
	var $_$_condition_$672 : bool;
	var $_$_condition_$674 : bool;
	var $_$_condition_$677 : bool;
	var $_$_condition_$678 : bool;
	var $_$_condition_$679 : bool;
	var $_$_condition_$680 : bool;
	var $_$_condition_$681 : bool;
	var $_$_condition_$682 : bool;
	var $_$_condition_$683 : bool;
	var $_$_condition_$684 : bool;
	var $_$_condition_$685 : bool;
	var $_$_condition_$687 : bool;
	var $_$_condition_$689 : bool;
	var $_$_condition_$692 : bool;
	var $_$_condition_$693 : bool;
	var $_$_condition_$694 : bool;
	var $_$_condition_$695 : bool;
	var $_$_condition_$696 : bool;
	var $_$_condition_$697 : bool;
	var $_$_condition_$698 : bool;
	var $_$_condition_$699 : bool;
	var $_$_condition_$700 : bool;
	var $_$_condition_$702 : bool;
	var $_$_condition_$704 : bool;
	var $_$_condition_$707 : bool;
	var $_$_condition_$708 : bool;
	var $_$_condition_$709 : bool;
	var $_$_condition_$710 : bool;
	var $_$_condition_$711 : bool;
	var $_$_condition_$712 : bool;
	var $_$_condition_$713 : bool;
	var $_$_condition_$714 : bool;
	var $_$_condition_$715 : bool;
	var $_$_condition_$717 : bool;
	var $_$_condition_$719 : bool;
	var $_$_condition_$722 : bool;
	var $_$_condition_$723 : bool;
	var $_$_condition_$724 : bool;
	var $_$_condition_$725 : bool;
	var $_$_condition_$726 : bool;
	var $_$_condition_$727 : bool;
	var $_$_condition_$728 : bool;
	var $_$_condition_$729 : bool;
	var $_$_condition_$730 : bool;
	var $_$_condition_$732 : bool;
	var $_$_condition_$734 : bool;
	var $_$_condition_$737 : bool;
	var $_$_condition_$738 : bool;
	var $_$_condition_$739 : bool;
	var $_$_condition_$740 : bool;
	var $_$_condition_$741 : bool;
	var $_$_condition_$742 : bool;
	var $_$_condition_$743 : bool;
	var $_$_condition_$744 : bool;
	var $_$_condition_$745 : bool;
	var $_$_condition_$747 : bool;
	var $_$_condition_$749 : bool;
	var $_$_condition_$752 : bool;
	var $_$_condition_$753 : bool;
	var $_$_condition_$754 : bool;
	var $_$_condition_$755 : bool;
	var $_$_condition_$756 : bool;
	var $_$_condition_$757 : bool;
	var $_$_condition_$758 : bool;
	var $_$_condition_$759 : bool;
	var $_$_condition_$760 : bool;
	var $_$_condition_$762 : bool;
	var $_$_condition_$764 : bool;
	var $_$_condition_$767 : bool;
	var $_$_condition_$768 : bool;
	var $_$_condition_$769 : bool;
	var $_$_condition_$770 : bool;
	var $_$_condition_$771 : bool;
	var $_$_condition_$772 : bool;
	var $_$_condition_$773 : bool;
	var $_$_condition_$774 : bool;
	var $_$_condition_$775 : bool;
	var $_$_condition_$777 : bool;
	var $_$_condition_$779 : bool;
	var $_$_condition_$782 : bool;
	var $_$_condition_$783 : bool;
	var $_$_condition_$784 : bool;
	var $_$_condition_$785 : bool;
	var $_$_condition_$786 : bool;
	var $_$_condition_$787 : bool;
	var $_$_condition_$788 : bool;
	var $_$_condition_$789 : bool;
	var $_$_condition_$790 : bool;
	var $_$_condition_$792 : bool;
	var $_$_condition_$794 : bool;
	var $_$_condition_$797 : bool;
	var $_$_condition_$798 : bool;
	var $_$_condition_$799 : bool;
	var $_$_condition_$800 : bool;
	var $_$_condition_$801 : bool;
	var $_$_condition_$803 : bool;
	var $_$_condition_$804 : bool;
	var $_$_condition_$806 : bool;
	var $_$_condition_$807 : bool;
	var $_$_condition_$808 : bool;
	var $_$_condition_$810 : bool;
	var $_$_condition_$813 : bool;
	var $_$_condition_$814 : bool;
	var $_$_condition_$815 : bool;
	var $_$_condition_$816 : bool;
	var $_$_condition_$817 : bool;
	var $_$_condition_$818 : bool;
	var $_$_condition_$819 : bool;
	var $_$_condition_$820 : bool;
	var $_$_condition_$821 : bool;
	var $_$_condition_$823 : bool;
	var $_$_condition_$826 : bool;
	var $_$_condition_$827 : bool;
	var $_$_condition_$828 : bool;
	var $_$_condition_$829 : bool;
	var $_$_condition_$830 : bool;
	var $_$_condition_$831 : bool;
	var $_$_condition_$832 : bool;
	var $_$_condition_$833 : bool;
	var $_$_condition_$834 : bool;
	var $_$_condition_$836 : bool;
	var $_$_condition_$839 : bool;
	var $_$_condition_$840 : bool;
	var $_$_condition_$841 : bool;
	var $_$_condition_$842 : bool;
	var $_$_condition_$843 : bool;
	var $_$_condition_$844 : bool;
	var $_$_condition_$845 : bool;
	var $_$_condition_$846 : bool;
	var $_$_condition_$847 : bool;
	var $_$_condition_$849 : bool;
	var $_$_condition_$852 : bool;
	var $_$_condition_$853 : bool;
	var $_$_condition_$854 : bool;
	var $_$_condition_$855 : bool;
	var $_$_condition_$856 : bool;
	var $_$_condition_$857 : bool;
	var $_$_condition_$858 : bool;
	var $_$_condition_$859 : bool;
	var $_$_condition_$860 : bool;
	var $_$_condition_$862 : bool;
	var $_$_condition_$865 : bool;
	var $_$_condition_$866 : bool;
	var $_$_condition_$867 : bool;
	var $_$_condition_$868 : bool;
	var $_$_condition_$869 : bool;
	var $_$_condition_$870 : bool;
	var $_$_condition_$871 : bool;
	var $_$_condition_$872 : bool;
	var $_$_condition_$873 : bool;
	var $_$_condition_$875 : bool;
	var $_$_condition_$878 : bool;
	var $_$_condition_$879 : bool;
	var $_$_condition_$880 : bool;
	var $_$_condition_$881 : bool;
	var $_$_condition_$882 : bool;
	var $_$_condition_$883 : bool;
	var $_$_condition_$884 : bool;
	var $_$_condition_$885 : bool;
	var $_$_condition_$886 : bool;
	var $_$_condition_$888 : bool;
	var $_$_condition_$891 : bool;
	var $_$_condition_$892 : bool;
	var $_$_condition_$893 : bool;
	var $_$_condition_$894 : bool;
	var $_$_condition_$895 : bool;
	var $_$_condition_$896 : bool;
	var $_$_condition_$897 : bool;
	var $_$_condition_$898 : bool;
	var $_$_condition_$899 : bool;
	var $_$_condition_$901 : bool;
	var $_$_condition_$904 : bool;
	var $_$_condition_$905 : bool;
	var $_$_condition_$906 : bool;
	var $_$_condition_$907 : bool;
	var $_$_condition_$908 : bool;
	var $_$_condition_$909 : bool;
	var $_$_condition_$910 : bool;
	var $_$_condition_$911 : bool;
	var $_$_condition_$912 : bool;
	var $_$_condition_$914 : bool;
	var $_$_condition_$917 : bool;
	var $_$_condition_$918 : bool;
	var $_$_condition_$919 : bool;
	var $_$_condition_$920 : bool;
	var $_$_condition_$921 : bool;
	var $_$_condition_$922 : bool;
	var $_$_condition_$923 : bool;
	var $_$_condition_$924 : bool;
	var $_$_condition_$925 : bool;
	var $_$_condition_$927 : bool;
	var $_$_condition_$930 : bool;
	var $_$_condition_$931 : bool;
	var $_$_condition_$932 : bool;
	var $_$_condition_$933 : bool;
	var $_$_condition_$934 : bool;
	var $_$_condition_$935 : bool;
	var $_$_condition_$936 : bool;
	var $_$_condition_$937 : bool;
	var $_$_condition_$938 : bool;
	var $_$_condition_$940 : bool;
	var $_$_condition_$943 : bool;
	var $_$_condition_$944 : bool;
	var $_$_condition_$945 : bool;
	var $_$_condition_$946 : bool;
	var $_$_condition_$947 : bool;
$start:
	assume Permission$denominator > 0;
	assume (Permission$Zero[perm$R] == 0) && (Permission$Zero[perm$N] == 0);
	assume (Permission$Full[perm$R] == Permission$FullFraction) && (Permission$Full[perm$N] == 0);
	assume ((((forall  o_$25 : ref, f_$16 : Field (Boolean) , pc_$0 : PermissionComponent :: ( ZeroMask[o_$25,f_$16][pc_$0] == 0 ))) && ((forall  o_$26 : ref, f_$17 : Field (Integer) , pc_$1 : PermissionComponent :: ( ZeroMask[o_$26,f_$17][pc_$1] == 0 )))) && ((forall  o_$27 : ref, f_$18 : Field (ref) , pc_$2 : PermissionComponent :: ( ZeroMask[o_$27,f_$18][pc_$2] == 0 )))) && ((forall  o_$28 : ref, f_$19 : Field (Mu) , pc_$3 : PermissionComponent :: ( ZeroMask[o_$28,f_$19][pc_$3] == 0 )));
	assume IsGoodMask(ZeroMask);
	assume NonPredicateField(joinable);
	assume NonPredicateField(forkK);
	assume (forall  n : Integer :: {Fractions(n)} ( Fractions(n) == (n * Permission$denominator) ));
	assume (forall  x : Integer, y : Integer :: ( ((0 <= x) && (x <= y)) ==> (Fractions(x) <= Fractions(y)) ));
	assume Permission$FullFraction == Fractions(100);
	assume (0 < channelK) && ((1000 * channelK) < Fractions(1));
	assume (0 < monitorK) && ((1000 * monitorK) < Fractions(1));
	assume (0 < predicateK) && ((1000 * predicateK) < Fractions(1));
	assume (predicateK == channelK) && (channelK == monitorK);
	assume IsGoodState(emptyPartialHeap);
	assume NonPredicateField(mu);
	assume (forall  m : Mu, n_$0 : Mu :: {MuBelow(m,n_$0),MuBelow(n_$0,m)} ( !(MuBelow(m,n_$0) && MuBelow(n_$0,m)) ));
	assume (forall  m_$0 : Mu, n_$1 : Mu, o_$0 : Mu :: {MuBelow(m_$0,n_$1),MuBelow(n_$1,o_$0)} ( (MuBelow(m_$0,n_$1) && MuBelow(n_$1,o_$0)) ==> MuBelow(m_$0,o_$0) ));
	assume (forall  m_$1 : Mu, n_$2 : Mu :: ( MuBelow(m_$1,n_$2) ==> (!(n_$2 == $LockBottom)) ));
	assume NonPredicateField(held);
	assume NonPredicateField(rdheld);
	assume (forall  eh : HeapType, h_$0 : HeapType, m_$3 : MaskType, sm_$0 : MaskType :: {IsGoodExhaleState(eh,h_$0,m_$3,sm_$0)} ( IsGoodExhaleState(eh,h_$0,m_$3,sm_$0) <==> ((((((((((((forall  o_$6_$0 : ref, f_$1_$0 : Field (Boolean)  :: {eh[o_$6_$0,f_$1_$0]} ( CanRead(m_$3,sm_$0,o_$6_$0,f_$1_$0) ==> (eh[o_$6_$0,f_$1_$0] == h_$0[o_$6_$0,f_$1_$0]) ))) && ((forall  o_$6_$1 : ref, f_$1_$1 : Field (Integer)  :: {eh[o_$6_$1,f_$1_$1]} ( CanRead(m_$3,sm_$0,o_$6_$1,f_$1_$1) ==> (eh[o_$6_$1,f_$1_$1] == h_$0[o_$6_$1,f_$1_$1]) )))) && ((forall  o_$6_$2 : ref, f_$1_$2 : Field (ref)  :: {eh[o_$6_$2,f_$1_$2]} ( CanRead(m_$3,sm_$0,o_$6_$2,f_$1_$2) ==> (eh[o_$6_$2,f_$1_$2] == h_$0[o_$6_$2,f_$1_$2]) )))) && ((forall  o_$6_$3 : ref, f_$1_$3 : Field (Mu)  :: {eh[o_$6_$3,f_$1_$3]} ( CanRead(m_$3,sm_$0,o_$6_$3,f_$1_$3) ==> (eh[o_$6_$3,f_$1_$3] == h_$0[o_$6_$3,f_$1_$3]) )))) && ((forall  o_$7 : ref :: {eh[o_$7,held]} ( (0 < eh[o_$7,held]) <==> (0 < h_$0[o_$7,held]) )))) && ((forall  o_$8 : ref :: {eh[o_$8,rdheld]} ( eh[o_$8,rdheld] <==> h_$0[o_$8,rdheld] )))) && ((forall  o_$9 : ref :: {h_$0[o_$9,held]} ( (0 < h_$0[o_$9,held]) ==> (eh[o_$9,mu] == h_$0[o_$9,mu]) )))) && ((forall  o_$10 : ref :: {h_$0[o_$10,rdheld]} ( h_$0[o_$10,rdheld] ==> (eh[o_$10,mu] == h_$0[o_$10,mu]) )))) && ((forall  o_$11 : ref :: {h_$0[o_$11,forkK]} {eh[o_$11,forkK]} ( h_$0[o_$11,forkK] == eh[o_$11,forkK] )))) && ((forall  o_$12 : ref :: {h_$0[o_$12,held]} {eh[o_$12,held]} ( h_$0[o_$12,held] == eh[o_$12,held] )))) && ((forall  o_$13 : ref, f_$2 : Field (Integer)  :: {eh[o_$13,f_$2],PredicateField(f_$2)} ( PredicateField(f_$2) ==> (h_$0[o_$13,f_$2] <= eh[o_$13,f_$2]) )))) ));
	assume ((((forall  m_$4_$0 : MaskType, sm_$1_$0 : MaskType, obj_$2 : ref, f_$3_$0 : Field (Boolean)  :: {CanRead(m_$4_$0,sm_$1_$0,obj_$2,f_$3_$0)} {:expand  false}( CanRead(m_$4_$0,sm_$1_$0,obj_$2,f_$3_$0) <==> ((((0 < m_$4_$0[obj_$2,f_$3_$0][perm$R]) || (0 < m_$4_$0[obj_$2,f_$3_$0][perm$N])) || (0 < sm_$1_$0[obj_$2,f_$3_$0][perm$R])) || (0 < sm_$1_$0[obj_$2,f_$3_$0][perm$N])) ))) && ((forall  m_$4_$1 : MaskType, sm_$1_$1 : MaskType, obj_$3 : ref, f_$3_$1 : Field (Integer)  :: {CanRead(m_$4_$1,sm_$1_$1,obj_$3,f_$3_$1)} {:expand  false}( CanRead(m_$4_$1,sm_$1_$1,obj_$3,f_$3_$1) <==> ((((0 < m_$4_$1[obj_$3,f_$3_$1][perm$R]) || (0 < m_$4_$1[obj_$3,f_$3_$1][perm$N])) || (0 < sm_$1_$1[obj_$3,f_$3_$1][perm$R])) || (0 < sm_$1_$1[obj_$3,f_$3_$1][perm$N])) )))) && ((forall  m_$4_$2 : MaskType, sm_$1_$2 : MaskType, obj_$4 : ref, f_$3_$2 : Field (ref)  :: {CanRead(m_$4_$2,sm_$1_$2,obj_$4,f_$3_$2)} {:expand  false}( CanRead(m_$4_$2,sm_$1_$2,obj_$4,f_$3_$2) <==> ((((0 < m_$4_$2[obj_$4,f_$3_$2][perm$R]) || (0 < m_$4_$2[obj_$4,f_$3_$2][perm$N])) || (0 < sm_$1_$2[obj_$4,f_$3_$2][perm$R])) || (0 < sm_$1_$2[obj_$4,f_$3_$2][perm$N])) )))) && ((forall  m_$4_$3 : MaskType, sm_$1_$3 : MaskType, obj_$5 : ref, f_$3_$3 : Field (Mu)  :: {CanRead(m_$4_$3,sm_$1_$3,obj_$5,f_$3_$3)} {:expand  false}( CanRead(m_$4_$3,sm_$1_$3,obj_$5,f_$3_$3) <==> ((((0 < m_$4_$3[obj_$5,f_$3_$3][perm$R]) || (0 < m_$4_$3[obj_$5,f_$3_$3][perm$N])) || (0 < sm_$1_$3[obj_$5,f_$3_$3][perm$R])) || (0 < sm_$1_$3[obj_$5,f_$3_$3][perm$N])) )));
	assume ((((forall  m_$6_$0 : MaskType, obj_$1_$0 : ref, f_$5_$0 : Field (Boolean)  :: {CanWrite(m_$6_$0,obj_$1_$0,f_$5_$0)} {:expand  false}( CanWrite(m_$6_$0,obj_$1_$0,f_$5_$0) <==> ((m_$6_$0[obj_$1_$0,f_$5_$0][perm$R] == Permission$FullFraction) && (m_$6_$0[obj_$1_$0,f_$5_$0][perm$N] == 0)) ))) && ((forall  m_$6_$1 : MaskType, obj_$1_$1 : ref, f_$5_$1 : Field (Integer)  :: {CanWrite(m_$6_$1,obj_$1_$1,f_$5_$1)} {:expand  false}( CanWrite(m_$6_$1,obj_$1_$1,f_$5_$1) <==> ((m_$6_$1[obj_$1_$1,f_$5_$1][perm$R] == Permission$FullFraction) && (m_$6_$1[obj_$1_$1,f_$5_$1][perm$N] == 0)) )))) && ((forall  m_$6_$2 : MaskType, obj_$1_$2 : ref, f_$5_$2 : Field (ref)  :: {CanWrite(m_$6_$2,obj_$1_$2,f_$5_$2)} {:expand  false}( CanWrite(m_$6_$2,obj_$1_$2,f_$5_$2) <==> ((m_$6_$2[obj_$1_$2,f_$5_$2][perm$R] == Permission$FullFraction) && (m_$6_$2[obj_$1_$2,f_$5_$2][perm$N] == 0)) )))) && ((forall  m_$6_$3 : MaskType, obj_$1_$3 : ref, f_$5_$3 : Field (Mu)  :: {CanWrite(m_$6_$3,obj_$1_$3,f_$5_$3)} {:expand  false}( CanWrite(m_$6_$3,obj_$1_$3,f_$5_$3) <==> ((m_$6_$3[obj_$1_$3,f_$5_$3][perm$R] == Permission$FullFraction) && (m_$6_$3[obj_$1_$3,f_$5_$3][perm$N] == 0)) )));
	assume (forall  m_$7 : MaskType :: {IsGoodMask(m_$7)} {:expand  true}( IsGoodMask(m_$7) <==> (((((forall  o_$14_$0 : ref, f_$6_$0 : Field (Boolean)  :: ( ((0 <= m_$7[o_$14_$0,f_$6_$0][perm$R]) && (NonPredicateField(f_$6_$0) ==> ((m_$7[o_$14_$0,f_$6_$0][perm$R] <= Permission$FullFraction) && ((0 < m_$7[o_$14_$0,f_$6_$0][perm$N]) ==> (m_$7[o_$14_$0,f_$6_$0][perm$R] < Permission$FullFraction))))) && ((m_$7[o_$14_$0,f_$6_$0][perm$N] < 0) ==> (0 < m_$7[o_$14_$0,f_$6_$0][perm$R])) ))) && ((forall  o_$14_$1 : ref, f_$6_$1 : Field (Integer)  :: ( ((0 <= m_$7[o_$14_$1,f_$6_$1][perm$R]) && (NonPredicateField(f_$6_$1) ==> ((m_$7[o_$14_$1,f_$6_$1][perm$R] <= Permission$FullFraction) && ((0 < m_$7[o_$14_$1,f_$6_$1][perm$N]) ==> (m_$7[o_$14_$1,f_$6_$1][perm$R] < Permission$FullFraction))))) && ((m_$7[o_$14_$1,f_$6_$1][perm$N] < 0) ==> (0 < m_$7[o_$14_$1,f_$6_$1][perm$R])) )))) && ((forall  o_$14_$2 : ref, f_$6_$2 : Field (ref)  :: ( ((0 <= m_$7[o_$14_$2,f_$6_$2][perm$R]) && (NonPredicateField(f_$6_$2) ==> ((m_$7[o_$14_$2,f_$6_$2][perm$R] <= Permission$FullFraction) && ((0 < m_$7[o_$14_$2,f_$6_$2][perm$N]) ==> (m_$7[o_$14_$2,f_$6_$2][perm$R] < Permission$FullFraction))))) && ((m_$7[o_$14_$2,f_$6_$2][perm$N] < 0) ==> (0 < m_$7[o_$14_$2,f_$6_$2][perm$R])) )))) && ((forall  o_$14_$3 : ref, f_$6_$3 : Field (Mu)  :: ( ((0 <= m_$7[o_$14_$3,f_$6_$3][perm$R]) && (NonPredicateField(f_$6_$3) ==> ((m_$7[o_$14_$3,f_$6_$3][perm$R] <= Permission$FullFraction) && ((0 < m_$7[o_$14_$3,f_$6_$3][perm$N]) ==> (m_$7[o_$14_$3,f_$6_$3][perm$R] < Permission$FullFraction))))) && ((m_$7[o_$14_$3,f_$6_$3][perm$N] < 0) ==> (0 < m_$7[o_$14_$3,f_$6_$3][perm$R])) )))) ));
	assume (forall  h_$1 : HeapType, m_$8 : MaskType, sm_$2 : MaskType, o_$15 : ref, q : ref :: {wf(h_$1,m_$8,sm_$2),h_$1[o_$15,mu],h_$1[q,mu]} ( (((wf(h_$1,m_$8,sm_$2) && (!(o_$15 == q))) && ((0 < h_$1[o_$15,held]) || h_$1[o_$15,rdheld])) && ((0 < h_$1[q,held]) || h_$1[q,rdheld])) ==> (!(h_$1[o_$15,mu] == h_$1[q,mu])) ));
	assume ((((((((((((((((forall  m_$9_$0 : MaskType, o_$16_$0 : ref, f_$7_$0 : Field (Boolean) , howMuch_$3 : Integer, q_$0_$0 : ref, g_$4 : Field (Boolean)  :: {DecPerm(m_$9_$0,o_$16_$0,f_$7_$0,howMuch_$3)[q_$0_$0,g_$4][perm$R]} ( DecPerm(m_$9_$0,o_$16_$0,f_$7_$0,howMuch_$3)[q_$0_$0,g_$4][perm$R] == ite((o_$16_$0 == q_$0_$0) && (f_$7_$0 == g_$4),m_$9_$0[q_$0_$0,g_$4][perm$R] - howMuch_$3,m_$9_$0[q_$0_$0,g_$4][perm$R]) ))) && ((forall  m_$9_$1 : MaskType, o_$16_$1 : ref, f_$7_$1 : Field (Integer) , howMuch_$4 : Integer, q_$0_$1 : ref, g_$5 : Field (Boolean)  :: {DecPerm(m_$9_$1,o_$16_$1,f_$7_$1,howMuch_$4)[q_$0_$1,g_$5][perm$R]} ( DecPerm(m_$9_$1,o_$16_$1,f_$7_$1,howMuch_$4)[q_$0_$1,g_$5][perm$R] == ite((o_$16_$1 == q_$0_$1) && false,m_$9_$1[q_$0_$1,g_$5][perm$R] - howMuch_$4,m_$9_$1[q_$0_$1,g_$5][perm$R]) )))) && ((forall  m_$9_$2 : MaskType, o_$16_$2 : ref, f_$7_$2 : Field (ref) , howMuch_$5 : Integer, q_$0_$2 : ref, g_$6 : Field (Boolean)  :: {DecPerm(m_$9_$2,o_$16_$2,f_$7_$2,howMuch_$5)[q_$0_$2,g_$6][perm$R]} ( DecPerm(m_$9_$2,o_$16_$2,f_$7_$2,howMuch_$5)[q_$0_$2,g_$6][perm$R] == ite((o_$16_$2 == q_$0_$2) && false,m_$9_$2[q_$0_$2,g_$6][perm$R] - howMuch_$5,m_$9_$2[q_$0_$2,g_$6][perm$R]) )))) && ((forall  m_$9_$3 : MaskType, o_$16_$3 : ref, f_$7_$3 : Field (Mu) , howMuch_$6 : Integer, q_$0_$3 : ref, g_$7 : Field (Boolean)  :: {DecPerm(m_$9_$3,o_$16_$3,f_$7_$3,howMuch_$6)[q_$0_$3,g_$7][perm$R]} ( DecPerm(m_$9_$3,o_$16_$3,f_$7_$3,howMuch_$6)[q_$0_$3,g_$7][perm$R] == ite((o_$16_$3 == q_$0_$3) && false,m_$9_$3[q_$0_$3,g_$7][perm$R] - howMuch_$6,m_$9_$3[q_$0_$3,g_$7][perm$R]) )))) && ((forall  m_$9_$4 : MaskType, o_$16_$4 : ref, f_$7_$4 : Field (Boolean) , howMuch_$7 : Integer, q_$0_$4 : ref, g_$8 : Field (Integer)  :: {DecPerm(m_$9_$4,o_$16_$4,f_$7_$4,howMuch_$7)[q_$0_$4,g_$8][perm$R]} ( DecPerm(m_$9_$4,o_$16_$4,f_$7_$4,howMuch_$7)[q_$0_$4,g_$8][perm$R] == ite((o_$16_$4 == q_$0_$4) && false,m_$9_$4[q_$0_$4,g_$8][perm$R] - howMuch_$7,m_$9_$4[q_$0_$4,g_$8][perm$R]) )))) && ((forall  m_$9_$5 : MaskType, o_$16_$5 : ref, f_$7_$5 : Field (Integer) , howMuch_$8 : Integer, q_$0_$5 : ref, g_$9 : Field (Integer)  :: {DecPerm(m_$9_$5,o_$16_$5,f_$7_$5,howMuch_$8)[q_$0_$5,g_$9][perm$R]} ( DecPerm(m_$9_$5,o_$16_$5,f_$7_$5,howMuch_$8)[q_$0_$5,g_$9][perm$R] == ite((o_$16_$5 == q_$0_$5) && (f_$7_$5 == g_$9),m_$9_$5[q_$0_$5,g_$9][perm$R] - howMuch_$8,m_$9_$5[q_$0_$5,g_$9][perm$R]) )))) && ((forall  m_$9_$6 : MaskType, o_$16_$6 : ref, f_$7_$6 : Field (ref) , howMuch_$9 : Integer, q_$0_$6 : ref, g_$10 : Field (Integer)  :: {DecPerm(m_$9_$6,o_$16_$6,f_$7_$6,howMuch_$9)[q_$0_$6,g_$10][perm$R]} ( DecPerm(m_$9_$6,o_$16_$6,f_$7_$6,howMuch_$9)[q_$0_$6,g_$10][perm$R] == ite((o_$16_$6 == q_$0_$6) && false,m_$9_$6[q_$0_$6,g_$10][perm$R] - howMuch_$9,m_$9_$6[q_$0_$6,g_$10][perm$R]) )))) && ((forall  m_$9_$7 : MaskType, o_$16_$7 : ref, f_$7_$7 : Field (Mu) , howMuch_$10 : Integer, q_$0_$7 : ref, g_$11 : Field (Integer)  :: {DecPerm(m_$9_$7,o_$16_$7,f_$7_$7,howMuch_$10)[q_$0_$7,g_$11][perm$R]} ( DecPerm(m_$9_$7,o_$16_$7,f_$7_$7,howMuch_$10)[q_$0_$7,g_$11][perm$R] == ite((o_$16_$7 == q_$0_$7) && false,m_$9_$7[q_$0_$7,g_$11][perm$R] - howMuch_$10,m_$9_$7[q_$0_$7,g_$11][perm$R]) )))) && ((forall  m_$9_$8 : MaskType, o_$16_$8 : ref, f_$7_$8 : Field (Boolean) , howMuch_$11 : Integer, q_$0_$8 : ref, g_$12 : Field (ref)  :: {DecPerm(m_$9_$8,o_$16_$8,f_$7_$8,howMuch_$11)[q_$0_$8,g_$12][perm$R]} ( DecPerm(m_$9_$8,o_$16_$8,f_$7_$8,howMuch_$11)[q_$0_$8,g_$12][perm$R] == ite((o_$16_$8 == q_$0_$8) && false,m_$9_$8[q_$0_$8,g_$12][perm$R] - howMuch_$11,m_$9_$8[q_$0_$8,g_$12][perm$R]) )))) && ((forall  m_$9_$9 : MaskType, o_$16_$9 : ref, f_$7_$9 : Field (Integer) , howMuch_$12 : Integer, q_$0_$9 : ref, g_$13 : Field (ref)  :: {DecPerm(m_$9_$9,o_$16_$9,f_$7_$9,howMuch_$12)[q_$0_$9,g_$13][perm$R]} ( DecPerm(m_$9_$9,o_$16_$9,f_$7_$9,howMuch_$12)[q_$0_$9,g_$13][perm$R] == ite((o_$16_$9 == q_$0_$9) && false,m_$9_$9[q_$0_$9,g_$13][perm$R] - howMuch_$12,m_$9_$9[q_$0_$9,g_$13][perm$R]) )))) && ((forall  m_$9_$10 : MaskType, o_$16_$10 : ref, f_$7_$10 : Field (ref) , howMuch_$13 : Integer, q_$0_$10 : ref, g_$14 : Field (ref)  :: {DecPerm(m_$9_$10,o_$16_$10,f_$7_$10,howMuch_$13)[q_$0_$10,g_$14][perm$R]} ( DecPerm(m_$9_$10,o_$16_$10,f_$7_$10,howMuch_$13)[q_$0_$10,g_$14][perm$R] == ite((o_$16_$10 == q_$0_$10) && (f_$7_$10 == g_$14),m_$9_$10[q_$0_$10,g_$14][perm$R] - howMuch_$13,m_$9_$10[q_$0_$10,g_$14][perm$R]) )))) && ((forall  m_$9_$11 : MaskType, o_$16_$11 : ref, f_$7_$11 : Field (Mu) , howMuch_$14 : Integer, q_$0_$11 : ref, g_$15 : Field (ref)  :: {DecPerm(m_$9_$11,o_$16_$11,f_$7_$11,howMuch_$14)[q_$0_$11,g_$15][perm$R]} ( DecPerm(m_$9_$11,o_$16_$11,f_$7_$11,howMuch_$14)[q_$0_$11,g_$15][perm$R] == ite((o_$16_$11 == q_$0_$11) && false,m_$9_$11[q_$0_$11,g_$15][perm$R] - howMuch_$14,m_$9_$11[q_$0_$11,g_$15][perm$R]) )))) && ((forall  m_$9_$12 : MaskType, o_$16_$12 : ref, f_$7_$12 : Field (Boolean) , howMuch_$15 : Integer, q_$0_$12 : ref, g_$16 : Field (Mu)  :: {DecPerm(m_$9_$12,o_$16_$12,f_$7_$12,howMuch_$15)[q_$0_$12,g_$16][perm$R]} ( DecPerm(m_$9_$12,o_$16_$12,f_$7_$12,howMuch_$15)[q_$0_$12,g_$16][perm$R] == ite((o_$16_$12 == q_$0_$12) && false,m_$9_$12[q_$0_$12,g_$16][perm$R] - howMuch_$15,m_$9_$12[q_$0_$12,g_$16][perm$R]) )))) && ((forall  m_$9_$13 : MaskType, o_$16_$13 : ref, f_$7_$13 : Field (Integer) , howMuch_$16 : Integer, q_$0_$13 : ref, g_$17 : Field (Mu)  :: {DecPerm(m_$9_$13,o_$16_$13,f_$7_$13,howMuch_$16)[q_$0_$13,g_$17][perm$R]} ( DecPerm(m_$9_$13,o_$16_$13,f_$7_$13,howMuch_$16)[q_$0_$13,g_$17][perm$R] == ite((o_$16_$13 == q_$0_$13) && false,m_$9_$13[q_$0_$13,g_$17][perm$R] - howMuch_$16,m_$9_$13[q_$0_$13,g_$17][perm$R]) )))) && ((forall  m_$9_$14 : MaskType, o_$16_$14 : ref, f_$7_$14 : Field (ref) , howMuch_$17 : Integer, q_$0_$14 : ref, g_$18 : Field (Mu)  :: {DecPerm(m_$9_$14,o_$16_$14,f_$7_$14,howMuch_$17)[q_$0_$14,g_$18][perm$R]} ( DecPerm(m_$9_$14,o_$16_$14,f_$7_$14,howMuch_$17)[q_$0_$14,g_$18][perm$R] == ite((o_$16_$14 == q_$0_$14) && false,m_$9_$14[q_$0_$14,g_$18][perm$R] - howMuch_$17,m_$9_$14[q_$0_$14,g_$18][perm$R]) )))) && ((forall  m_$9_$15 : MaskType, o_$16_$15 : ref, f_$7_$15 : Field (Mu) , howMuch_$18 : Integer, q_$0_$15 : ref, g_$19 : Field (Mu)  :: {DecPerm(m_$9_$15,o_$16_$15,f_$7_$15,howMuch_$18)[q_$0_$15,g_$19][perm$R]} ( DecPerm(m_$9_$15,o_$16_$15,f_$7_$15,howMuch_$18)[q_$0_$15,g_$19][perm$R] == ite((o_$16_$15 == q_$0_$15) && (f_$7_$15 == g_$19),m_$9_$15[q_$0_$15,g_$19][perm$R] - howMuch_$18,m_$9_$15[q_$0_$15,g_$19][perm$R]) )));
	assume ((((((((((((((((forall  m_$11_$0 : MaskType, o_$18_$0 : ref, f_$9_$0 : Field (Boolean) , howMuch_$1_$0 : Integer, q_$2_$0 : ref, g_$1_$0 : Field (Boolean)  :: {IncPerm(m_$11_$0,o_$18_$0,f_$9_$0,howMuch_$1_$0)[q_$2_$0,g_$1_$0][perm$R]} ( IncPerm(m_$11_$0,o_$18_$0,f_$9_$0,howMuch_$1_$0)[q_$2_$0,g_$1_$0][perm$R] == ite((o_$18_$0 == q_$2_$0) && (f_$9_$0 == g_$1_$0),m_$11_$0[q_$2_$0,g_$1_$0][perm$R] + howMuch_$1_$0,m_$11_$0[q_$2_$0,g_$1_$0][perm$R]) ))) && ((forall  m_$11_$1 : MaskType, o_$18_$1 : ref, f_$9_$1 : Field (Integer) , howMuch_$1_$1 : Integer, q_$2_$1 : ref, g_$1_$1 : Field (Boolean)  :: {IncPerm(m_$11_$1,o_$18_$1,f_$9_$1,howMuch_$1_$1)[q_$2_$1,g_$1_$1][perm$R]} ( IncPerm(m_$11_$1,o_$18_$1,f_$9_$1,howMuch_$1_$1)[q_$2_$1,g_$1_$1][perm$R] == ite((o_$18_$1 == q_$2_$1) && false,m_$11_$1[q_$2_$1,g_$1_$1][perm$R] + howMuch_$1_$1,m_$11_$1[q_$2_$1,g_$1_$1][perm$R]) )))) && ((forall  m_$11_$2 : MaskType, o_$18_$2 : ref, f_$9_$2 : Field (ref) , howMuch_$1_$2 : Integer, q_$2_$2 : ref, g_$1_$2 : Field (Boolean)  :: {IncPerm(m_$11_$2,o_$18_$2,f_$9_$2,howMuch_$1_$2)[q_$2_$2,g_$1_$2][perm$R]} ( IncPerm(m_$11_$2,o_$18_$2,f_$9_$2,howMuch_$1_$2)[q_$2_$2,g_$1_$2][perm$R] == ite((o_$18_$2 == q_$2_$2) && false,m_$11_$2[q_$2_$2,g_$1_$2][perm$R] + howMuch_$1_$2,m_$11_$2[q_$2_$2,g_$1_$2][perm$R]) )))) && ((forall  m_$11_$3 : MaskType, o_$18_$3 : ref, f_$9_$3 : Field (Mu) , howMuch_$1_$3 : Integer, q_$2_$3 : ref, g_$1_$3 : Field (Boolean)  :: {IncPerm(m_$11_$3,o_$18_$3,f_$9_$3,howMuch_$1_$3)[q_$2_$3,g_$1_$3][perm$R]} ( IncPerm(m_$11_$3,o_$18_$3,f_$9_$3,howMuch_$1_$3)[q_$2_$3,g_$1_$3][perm$R] == ite((o_$18_$3 == q_$2_$3) && false,m_$11_$3[q_$2_$3,g_$1_$3][perm$R] + howMuch_$1_$3,m_$11_$3[q_$2_$3,g_$1_$3][perm$R]) )))) && ((forall  m_$11_$4 : MaskType, o_$18_$4 : ref, f_$9_$4 : Field (Boolean) , howMuch_$1_$4 : Integer, q_$2_$4 : ref, g_$1_$4 : Field (Integer)  :: {IncPerm(m_$11_$4,o_$18_$4,f_$9_$4,howMuch_$1_$4)[q_$2_$4,g_$1_$4][perm$R]} ( IncPerm(m_$11_$4,o_$18_$4,f_$9_$4,howMuch_$1_$4)[q_$2_$4,g_$1_$4][perm$R] == ite((o_$18_$4 == q_$2_$4) && false,m_$11_$4[q_$2_$4,g_$1_$4][perm$R] + howMuch_$1_$4,m_$11_$4[q_$2_$4,g_$1_$4][perm$R]) )))) && ((forall  m_$11_$5 : MaskType, o_$18_$5 : ref, f_$9_$5 : Field (Integer) , howMuch_$1_$5 : Integer, q_$2_$5 : ref, g_$1_$5 : Field (Integer)  :: {IncPerm(m_$11_$5,o_$18_$5,f_$9_$5,howMuch_$1_$5)[q_$2_$5,g_$1_$5][perm$R]} ( IncPerm(m_$11_$5,o_$18_$5,f_$9_$5,howMuch_$1_$5)[q_$2_$5,g_$1_$5][perm$R] == ite((o_$18_$5 == q_$2_$5) && (f_$9_$5 == g_$1_$5),m_$11_$5[q_$2_$5,g_$1_$5][perm$R] + howMuch_$1_$5,m_$11_$5[q_$2_$5,g_$1_$5][perm$R]) )))) && ((forall  m_$11_$6 : MaskType, o_$18_$6 : ref, f_$9_$6 : Field (ref) , howMuch_$1_$6 : Integer, q_$2_$6 : ref, g_$1_$6 : Field (Integer)  :: {IncPerm(m_$11_$6,o_$18_$6,f_$9_$6,howMuch_$1_$6)[q_$2_$6,g_$1_$6][perm$R]} ( IncPerm(m_$11_$6,o_$18_$6,f_$9_$6,howMuch_$1_$6)[q_$2_$6,g_$1_$6][perm$R] == ite((o_$18_$6 == q_$2_$6) && false,m_$11_$6[q_$2_$6,g_$1_$6][perm$R] + howMuch_$1_$6,m_$11_$6[q_$2_$6,g_$1_$6][perm$R]) )))) && ((forall  m_$11_$7 : MaskType, o_$18_$7 : ref, f_$9_$7 : Field (Mu) , howMuch_$1_$7 : Integer, q_$2_$7 : ref, g_$1_$7 : Field (Integer)  :: {IncPerm(m_$11_$7,o_$18_$7,f_$9_$7,howMuch_$1_$7)[q_$2_$7,g_$1_$7][perm$R]} ( IncPerm(m_$11_$7,o_$18_$7,f_$9_$7,howMuch_$1_$7)[q_$2_$7,g_$1_$7][perm$R] == ite((o_$18_$7 == q_$2_$7) && false,m_$11_$7[q_$2_$7,g_$1_$7][perm$R] + howMuch_$1_$7,m_$11_$7[q_$2_$7,g_$1_$7][perm$R]) )))) && ((forall  m_$11_$8 : MaskType, o_$18_$8 : ref, f_$9_$8 : Field (Boolean) , howMuch_$1_$8 : Integer, q_$2_$8 : ref, g_$1_$8 : Field (ref)  :: {IncPerm(m_$11_$8,o_$18_$8,f_$9_$8,howMuch_$1_$8)[q_$2_$8,g_$1_$8][perm$R]} ( IncPerm(m_$11_$8,o_$18_$8,f_$9_$8,howMuch_$1_$8)[q_$2_$8,g_$1_$8][perm$R] == ite((o_$18_$8 == q_$2_$8) && false,m_$11_$8[q_$2_$8,g_$1_$8][perm$R] + howMuch_$1_$8,m_$11_$8[q_$2_$8,g_$1_$8][perm$R]) )))) && ((forall  m_$11_$9 : MaskType, o_$18_$9 : ref, f_$9_$9 : Field (Integer) , howMuch_$1_$9 : Integer, q_$2_$9 : ref, g_$1_$9 : Field (ref)  :: {IncPerm(m_$11_$9,o_$18_$9,f_$9_$9,howMuch_$1_$9)[q_$2_$9,g_$1_$9][perm$R]} ( IncPerm(m_$11_$9,o_$18_$9,f_$9_$9,howMuch_$1_$9)[q_$2_$9,g_$1_$9][perm$R] == ite((o_$18_$9 == q_$2_$9) && false,m_$11_$9[q_$2_$9,g_$1_$9][perm$R] + howMuch_$1_$9,m_$11_$9[q_$2_$9,g_$1_$9][perm$R]) )))) && ((forall  m_$11_$10 : MaskType, o_$18_$10 : ref, f_$9_$10 : Field (ref) , howMuch_$1_$10 : Integer, q_$2_$10 : ref, g_$1_$10 : Field (ref)  :: {IncPerm(m_$11_$10,o_$18_$10,f_$9_$10,howMuch_$1_$10)[q_$2_$10,g_$1_$10][perm$R]} ( IncPerm(m_$11_$10,o_$18_$10,f_$9_$10,howMuch_$1_$10)[q_$2_$10,g_$1_$10][perm$R] == ite((o_$18_$10 == q_$2_$10) && (f_$9_$10 == g_$1_$10),m_$11_$10[q_$2_$10,g_$1_$10][perm$R] + howMuch_$1_$10,m_$11_$10[q_$2_$10,g_$1_$10][perm$R]) )))) && ((forall  m_$11_$11 : MaskType, o_$18_$11 : ref, f_$9_$11 : Field (Mu) , howMuch_$1_$11 : Integer, q_$2_$11 : ref, g_$1_$11 : Field (ref)  :: {IncPerm(m_$11_$11,o_$18_$11,f_$9_$11,howMuch_$1_$11)[q_$2_$11,g_$1_$11][perm$R]} ( IncPerm(m_$11_$11,o_$18_$11,f_$9_$11,howMuch_$1_$11)[q_$2_$11,g_$1_$11][perm$R] == ite((o_$18_$11 == q_$2_$11) && false,m_$11_$11[q_$2_$11,g_$1_$11][perm$R] + howMuch_$1_$11,m_$11_$11[q_$2_$11,g_$1_$11][perm$R]) )))) && ((forall  m_$11_$12 : MaskType, o_$18_$12 : ref, f_$9_$12 : Field (Boolean) , howMuch_$1_$12 : Integer, q_$2_$12 : ref, g_$1_$12 : Field (Mu)  :: {IncPerm(m_$11_$12,o_$18_$12,f_$9_$12,howMuch_$1_$12)[q_$2_$12,g_$1_$12][perm$R]} ( IncPerm(m_$11_$12,o_$18_$12,f_$9_$12,howMuch_$1_$12)[q_$2_$12,g_$1_$12][perm$R] == ite((o_$18_$12 == q_$2_$12) && false,m_$11_$12[q_$2_$12,g_$1_$12][perm$R] + howMuch_$1_$12,m_$11_$12[q_$2_$12,g_$1_$12][perm$R]) )))) && ((forall  m_$11_$13 : MaskType, o_$18_$13 : ref, f_$9_$13 : Field (Integer) , howMuch_$1_$13 : Integer, q_$2_$13 : ref, g_$1_$13 : Field (Mu)  :: {IncPerm(m_$11_$13,o_$18_$13,f_$9_$13,howMuch_$1_$13)[q_$2_$13,g_$1_$13][perm$R]} ( IncPerm(m_$11_$13,o_$18_$13,f_$9_$13,howMuch_$1_$13)[q_$2_$13,g_$1_$13][perm$R] == ite((o_$18_$13 == q_$2_$13) && false,m_$11_$13[q_$2_$13,g_$1_$13][perm$R] + howMuch_$1_$13,m_$11_$13[q_$2_$13,g_$1_$13][perm$R]) )))) && ((forall  m_$11_$14 : MaskType, o_$18_$14 : ref, f_$9_$14 : Field (ref) , howMuch_$1_$14 : Integer, q_$2_$14 : ref, g_$1_$14 : Field (Mu)  :: {IncPerm(m_$11_$14,o_$18_$14,f_$9_$14,howMuch_$1_$14)[q_$2_$14,g_$1_$14][perm$R]} ( IncPerm(m_$11_$14,o_$18_$14,f_$9_$14,howMuch_$1_$14)[q_$2_$14,g_$1_$14][perm$R] == ite((o_$18_$14 == q_$2_$14) && false,m_$11_$14[q_$2_$14,g_$1_$14][perm$R] + howMuch_$1_$14,m_$11_$14[q_$2_$14,g_$1_$14][perm$R]) )))) && ((forall  m_$11_$15 : MaskType, o_$18_$15 : ref, f_$9_$15 : Field (Mu) , howMuch_$1_$15 : Integer, q_$2_$15 : ref, g_$1_$15 : Field (Mu)  :: {IncPerm(m_$11_$15,o_$18_$15,f_$9_$15,howMuch_$1_$15)[q_$2_$15,g_$1_$15][perm$R]} ( IncPerm(m_$11_$15,o_$18_$15,f_$9_$15,howMuch_$1_$15)[q_$2_$15,g_$1_$15][perm$R] == ite((o_$18_$15 == q_$2_$15) && (f_$9_$15 == g_$1_$15),m_$11_$15[q_$2_$15,g_$1_$15][perm$R] + howMuch_$1_$15,m_$11_$15[q_$2_$15,g_$1_$15][perm$R]) )));
	assume (forall  o_$22 : ref :: ( ZeroCredits[o_$22] == 0 ));
	assume ((((forall  f_$13_$0 : Field (Boolean)  :: ( NonPredicateField(f_$13_$0) ==> (!PredicateField(f_$13_$0)) ))) && ((forall  f_$13_$1 : Field (Integer)  :: ( NonPredicateField(f_$13_$1) ==> (!PredicateField(f_$13_$1)) )))) && ((forall  f_$13_$2 : Field (ref)  :: ( NonPredicateField(f_$13_$2) ==> (!PredicateField(f_$13_$2)) )))) && ((forall  f_$13_$3 : Field (Mu)  :: ( NonPredicateField(f_$13_$3) ==> (!PredicateField(f_$13_$3)) )));
	assume ((((forall  f_$14_$0 : Field (Boolean)  :: ( PredicateField(f_$14_$0) ==> (!NonPredicateField(f_$14_$0)) ))) && ((forall  f_$14_$1 : Field (Integer)  :: ( PredicateField(f_$14_$1) ==> (!NonPredicateField(f_$14_$1)) )))) && ((forall  f_$14_$2 : Field (ref)  :: ( PredicateField(f_$14_$2) ==> (!NonPredicateField(f_$14_$2)) )))) && ((forall  f_$14_$3 : Field (Mu)  :: ( PredicateField(f_$14_$3) ==> (!NonPredicateField(f_$14_$3)) )));
	assume ((((((((((((((((forall  con_$1 : Boolean, a_$0_$0 : Boolean, b_$0_$0 : Boolean :: {ite(con_$1,a_$0_$0,b_$0_$0)} ( con_$1 ==> (ite(con_$1,a_$0_$0,b_$0_$0) == a_$0_$0) ))) && ((forall  con_$2 : Boolean, a_$0_$1 : Integer, b_$0_$1 : Integer :: {ite(con_$2,a_$0_$1,b_$0_$1)} ( con_$2 ==> (ite(con_$2,a_$0_$1,b_$0_$1) == a_$0_$1) )))) && ((forall  con_$3 : Boolean, a_$0_$2 : [PermissionComponent]Integer, b_$0_$2 : [PermissionComponent]Integer :: {ite(con_$3,a_$0_$2,b_$0_$2)} ( con_$3 ==> (ite(con_$3,a_$0_$2,b_$0_$2) == a_$0_$2) )))) && ((forall  con_$4 : Boolean, a_$0_$3 : PermissionComponent, b_$0_$3 : PermissionComponent :: {ite(con_$4,a_$0_$3,b_$0_$3)} ( con_$4 ==> (ite(con_$4,a_$0_$3,b_$0_$3) == a_$0_$3) )))) && ((forall  con_$5 : Boolean, a_$0_$4 : MaskType, b_$0_$4 : MaskType :: {ite(con_$5,a_$0_$4,b_$0_$4)} ( con_$5 ==> (ite(con_$5,a_$0_$4,b_$0_$4) == a_$0_$4) )))) && ((forall  con_$6 : Boolean, a_$0_$5 : ref, b_$0_$5 : ref :: {ite(con_$6,a_$0_$5,b_$0_$5)} ( con_$6 ==> (ite(con_$6,a_$0_$5,b_$0_$5) == a_$0_$5) )))) && ((forall  con_$7 : Boolean, a_$0_$6 : Field (Integer) , b_$0_$6 : Field (Integer)  :: {ite(con_$7,a_$0_$6,b_$0_$6)} ( con_$7 ==> (ite(con_$7,a_$0_$6,b_$0_$6) == a_$0_$6) )))) && ((forall  con_$8 : Boolean, a_$0_$7 : PartialHeapType, b_$0_$7 : PartialHeapType :: {ite(con_$8,a_$0_$7,b_$0_$7)} ( con_$8 ==> (ite(con_$8,a_$0_$7,b_$0_$7) == a_$0_$7) )))) && ((forall  con_$9 : Boolean, a_$0_$8 : Field (Mu) , b_$0_$8 : Field (Mu)  :: {ite(con_$9,a_$0_$8,b_$0_$8)} ( con_$9 ==> (ite(con_$9,a_$0_$8,b_$0_$8) == a_$0_$8) )))) && ((forall  con_$10 : Boolean, a_$0_$9 : Mu, b_$0_$9 : Mu :: {ite(con_$10,a_$0_$9,b_$0_$9)} ( con_$10 ==> (ite(con_$10,a_$0_$9,b_$0_$9) == a_$0_$9) )))) && ((forall  con_$11 : Boolean, a_$0_$10 : Field (Boolean) , b_$0_$10 : Field (Boolean)  :: {ite(con_$11,a_$0_$10,b_$0_$10)} ( con_$11 ==> (ite(con_$11,a_$0_$10,b_$0_$10) == a_$0_$10) )))) && ((forall  con_$12 : Boolean, a_$0_$11 : HeapType, b_$0_$11 : HeapType :: {ite(con_$12,a_$0_$11,b_$0_$11)} ( con_$12 ==> (ite(con_$12,a_$0_$11,b_$0_$11) == a_$0_$11) )))) && ((forall  con_$13 : Boolean, a_$0_$12 : CreditsType, b_$0_$12 : CreditsType :: {ite(con_$13,a_$0_$12,b_$0_$12)} ( con_$13 ==> (ite(con_$13,a_$0_$12,b_$0_$12) == a_$0_$12) )))) && ((forall  con_$14 : Boolean, a_$0_$13 : Field (ref) , b_$0_$13 : Field (ref)  :: {ite(con_$14,a_$0_$13,b_$0_$13)} ( con_$14 ==> (ite(con_$14,a_$0_$13,b_$0_$13) == a_$0_$13) )))) && ((forall  con_$15 : Boolean, a_$0_$14 : TypeName, b_$0_$14 : TypeName :: {ite(con_$15,a_$0_$14,b_$0_$14)} ( con_$15 ==> (ite(con_$15,a_$0_$14,b_$0_$14) == a_$0_$14) )))) && ((forall  con_$16 : Boolean, a_$0_$15 : ModuleName, b_$0_$15 : ModuleName :: {ite(con_$16,a_$0_$15,b_$0_$15)} ( con_$16 ==> (ite(con_$16,a_$0_$15,b_$0_$15) == a_$0_$15) )));
	assume ((((((((((((((((forall  con_$0_$0 : Boolean, a_$1_$0 : Boolean, b_$1_$0 : Boolean :: {ite(con_$0_$0,a_$1_$0,b_$1_$0)} ( (!con_$0_$0) ==> (ite(con_$0_$0,a_$1_$0,b_$1_$0) == b_$1_$0) ))) && ((forall  con_$0_$1 : Boolean, a_$1_$1 : Integer, b_$1_$1 : Integer :: {ite(con_$0_$1,a_$1_$1,b_$1_$1)} ( (!con_$0_$1) ==> (ite(con_$0_$1,a_$1_$1,b_$1_$1) == b_$1_$1) )))) && ((forall  con_$0_$2 : Boolean, a_$1_$2 : [PermissionComponent]Integer, b_$1_$2 : [PermissionComponent]Integer :: {ite(con_$0_$2,a_$1_$2,b_$1_$2)} ( (!con_$0_$2) ==> (ite(con_$0_$2,a_$1_$2,b_$1_$2) == b_$1_$2) )))) && ((forall  con_$0_$3 : Boolean, a_$1_$3 : PermissionComponent, b_$1_$3 : PermissionComponent :: {ite(con_$0_$3,a_$1_$3,b_$1_$3)} ( (!con_$0_$3) ==> (ite(con_$0_$3,a_$1_$3,b_$1_$3) == b_$1_$3) )))) && ((forall  con_$0_$4 : Boolean, a_$1_$4 : MaskType, b_$1_$4 : MaskType :: {ite(con_$0_$4,a_$1_$4,b_$1_$4)} ( (!con_$0_$4) ==> (ite(con_$0_$4,a_$1_$4,b_$1_$4) == b_$1_$4) )))) && ((forall  con_$0_$5 : Boolean, a_$1_$5 : ref, b_$1_$5 : ref :: {ite(con_$0_$5,a_$1_$5,b_$1_$5)} ( (!con_$0_$5) ==> (ite(con_$0_$5,a_$1_$5,b_$1_$5) == b_$1_$5) )))) && ((forall  con_$0_$6 : Boolean, a_$1_$6 : Field (Integer) , b_$1_$6 : Field (Integer)  :: {ite(con_$0_$6,a_$1_$6,b_$1_$6)} ( (!con_$0_$6) ==> (ite(con_$0_$6,a_$1_$6,b_$1_$6) == b_$1_$6) )))) && ((forall  con_$0_$7 : Boolean, a_$1_$7 : PartialHeapType, b_$1_$7 : PartialHeapType :: {ite(con_$0_$7,a_$1_$7,b_$1_$7)} ( (!con_$0_$7) ==> (ite(con_$0_$7,a_$1_$7,b_$1_$7) == b_$1_$7) )))) && ((forall  con_$0_$8 : Boolean, a_$1_$8 : Field (Mu) , b_$1_$8 : Field (Mu)  :: {ite(con_$0_$8,a_$1_$8,b_$1_$8)} ( (!con_$0_$8) ==> (ite(con_$0_$8,a_$1_$8,b_$1_$8) == b_$1_$8) )))) && ((forall  con_$0_$9 : Boolean, a_$1_$9 : Mu, b_$1_$9 : Mu :: {ite(con_$0_$9,a_$1_$9,b_$1_$9)} ( (!con_$0_$9) ==> (ite(con_$0_$9,a_$1_$9,b_$1_$9) == b_$1_$9) )))) && ((forall  con_$0_$10 : Boolean, a_$1_$10 : Field (Boolean) , b_$1_$10 : Field (Boolean)  :: {ite(con_$0_$10,a_$1_$10,b_$1_$10)} ( (!con_$0_$10) ==> (ite(con_$0_$10,a_$1_$10,b_$1_$10) == b_$1_$10) )))) && ((forall  con_$0_$11 : Boolean, a_$1_$11 : HeapType, b_$1_$11 : HeapType :: {ite(con_$0_$11,a_$1_$11,b_$1_$11)} ( (!con_$0_$11) ==> (ite(con_$0_$11,a_$1_$11,b_$1_$11) == b_$1_$11) )))) && ((forall  con_$0_$12 : Boolean, a_$1_$12 : CreditsType, b_$1_$12 : CreditsType :: {ite(con_$0_$12,a_$1_$12,b_$1_$12)} ( (!con_$0_$12) ==> (ite(con_$0_$12,a_$1_$12,b_$1_$12) == b_$1_$12) )))) && ((forall  con_$0_$13 : Boolean, a_$1_$13 : Field (ref) , b_$1_$13 : Field (ref)  :: {ite(con_$0_$13,a_$1_$13,b_$1_$13)} ( (!con_$0_$13) ==> (ite(con_$0_$13,a_$1_$13,b_$1_$13) == b_$1_$13) )))) && ((forall  con_$0_$14 : Boolean, a_$1_$14 : TypeName, b_$1_$14 : TypeName :: {ite(con_$0_$14,a_$1_$14,b_$1_$14)} ( (!con_$0_$14) ==> (ite(con_$0_$14,a_$1_$14,b_$1_$14) == b_$1_$14) )))) && ((forall  con_$0_$15 : Boolean, a_$1_$15 : ModuleName, b_$1_$15 : ModuleName :: {ite(con_$0_$15,a_$1_$15,b_$1_$15)} ( (!con_$0_$15) ==> (ite(con_$0_$15,a_$1_$15,b_$1_$15) == b_$1_$15) )));
	assume (forall  x_$0 : Integer, y_$0 : Integer :: {x_$0 mod y_$0} {x_$0 div y_$0} ( (x_$0 mod y_$0) == (x_$0 - ((x_$0 div y_$0) * y_$0)) ));
	assume (forall  x_$1 : Integer, y_$1 : Integer :: {x_$1 mod y_$1} ( (0 < y_$1) ==> ((0 <= (x_$1 mod y_$1)) && ((x_$1 mod y_$1) < y_$1)) ));
	assume (forall  x_$2 : Integer, y_$2 : Integer :: {x_$2 mod y_$2} ( (y_$2 < 0) ==> ((y_$2 < (x_$2 mod y_$2)) && ((x_$2 mod y_$2) <= 0)) ));
	assume (forall  a_$2 : Integer, b_$2 : Integer, d : Integer :: {a_$2 mod d,b_$2 mod d} ( (((2 <= d) && ((a_$2 mod d) == (b_$2 mod d))) && (a_$2 < b_$2)) ==> ((a_$2 + d) <= b_$2) ));
	assume NonPredicateField(Node.next);
	assume NonPredicateField(Node.prev);
	assume PredicateField(Node.inv);
	assume PredicateField(Node.invLeft);
	assume PredicateField(Node.invRight);
	goto PreconditionGeneratedEntry;
$exit:
	assume false;
PreconditionGeneratedEntry:
	assume IsGoodMask(Mask);
	assume IsGoodMask(SecMask);
	assume (this == null) || (dtype(this) == Node#t);
	assume (newList#0 == null) || (dtype(newList#0) == Node#t);
	assume (oldPrev#2 == null) || (dtype(oldPrev#2) == Node#t);
	assume (oldNext#4 == null) || (dtype(oldNext#4) == Node#t);
	assume !(this == null);
	assume wf(Heap,Mask,SecMask);
	goto anon0;
anon0:
	assume (0 < methodK#_170) && ((1000 * methodK#_170) < Fractions(1));
	assume CurrentModule == module#default;
	assume CanAssumeFunctionDefs;
	assume !(this == null);
	assume wf(Heap,ZeroMask,ZeroMask);
	assume Fractions(100) > 0;
	assume Mask_$_0 == ZeroMask[this,Node.inv := ZeroMask[this,Node.inv][perm$R := ZeroMask[this,Node.inv][perm$R] + Fractions(100)]];
	assume IsGoodMask(Mask_$_0);
	assume IsGoodState(heapFragment(Heap[this,Node.inv]));
	assume wf(Heap,Mask_$_0,ZeroMask);
	assume wf(Heap,Mask_$_0,ZeroMask);
	assume #Node.inv#trigger(this);
	assume predVer#_321_$_0 == Heap[this,Node.inv];
	if ($_$_condition) { goto anon1489_Then; } else { goto anon1489_Else; }
anon1489_Then:
	assume $_$_condition;
	assume $_$_condition <==> false;
	assume false;
	goto $exit;
anon1489_Else:
	assume !$_$_condition;
	assume $_$_condition <==> false;
	assume !false;
	assume !(this == null);
	assume wf(Heap,Mask_$_0,ZeroMask);
	assume (Heap[this,Node.prev] == null) || (dtype(Heap[this,Node.prev]) == Node#t);
	assume 1 > 0;
	assume SecMask_$_0 == ZeroMask[this,Node.prev := ZeroMask[this,Node.prev][perm$N := ZeroMask[this,Node.prev][perm$N] + 1]];
	assume wf(Heap,SecMask_$_0,SecMask_$_0);
	assume IsGoodMask(Mask_$_0);
	assume IsGoodState(heapFragment(Heap[this,Node.prev]));
	assume wf(Heap,Mask_$_0,SecMask_$_0);
	assume wf(Heap,Mask_$_0,SecMask_$_0);
	assume !(this == null);
	assume wf(Heap,Mask_$_0,SecMask_$_0);
	assume (Heap[this,Node.next] == null) || (dtype(Heap[this,Node.next]) == Node#t);
	assume 1 > 0;
	assume SecMask_$_1 == SecMask_$_0[this,Node.next := SecMask_$_0[this,Node.next][perm$N := SecMask_$_0[this,Node.next][perm$N] + 1]];
	assume wf(Heap,SecMask_$_1,SecMask_$_1);
	assume IsGoodMask(Mask_$_0);
	assume IsGoodState(heapFragment(Heap[this,Node.next]));
	assume wf(Heap,Mask_$_0,SecMask_$_1);
	assume wf(Heap,Mask_$_0,SecMask_$_1);
	assume !(this == null);
	assume wf(Heap,Mask_$_0,SecMask_$_1);
	assume true;
	assume 1 > 0;
	assume SecMask_$_2 == SecMask_$_1[this,mu := SecMask_$_1[this,mu][perm$N := SecMask_$_1[this,mu][perm$N] + 1]];
	assume wf(Heap,SecMask_$_2,SecMask_$_2);
	assume IsGoodMask(Mask_$_0);
	assume IsGoodState(heapFragment(Heap[this,mu]));
	assume wf(Heap,Mask_$_0,SecMask_$_2);
	assume wf(Heap,Mask_$_0,SecMask_$_2);
	if ($_$_condition_$0) { goto anon1499_Then; } else { goto anon1499_Else; }
anon1499_Then:
	assume $_$_condition_$0;
	assume $_$_condition_$0 <==> (!(Heap[this,Node.prev] == null));
	assume !(Heap[this,Node.prev] == null);
	assume !(Heap[this,Node.prev] == null);
	assume wf(Heap,Mask_$_0,SecMask_$_2);
	assume Fractions(100) > 0;
	assume SecMask_$_3 == SecMask_$_2[Heap[this,Node.prev],Node.invLeft := SecMask_$_2[Heap[this,Node.prev],Node.invLeft][perm$R := SecMask_$_2[Heap[this,Node.prev],Node.invLeft][perm$R] + Fractions(100)]];
	assume IsGoodMask(Mask_$_0);
	assume IsGoodState(heapFragment(Heap[Heap[this,Node.prev],Node.invLeft]));
	assume wf(Heap,Mask_$_0,SecMask_$_3);
	assume wf(Heap,Mask_$_0,SecMask_$_3);
	assume SecMask_$_4 == SecMask_$_3;
	goto $branchMerge_0;
anon1499_Else:
	assume !$_$_condition_$0;
	assume $_$_condition_$0 <==> (!(Heap[this,Node.prev] == null));
	assume Heap[this,Node.prev] == null;
	assume SecMask_$_4 == SecMask_$_2;
	goto $branchMerge_0;
anon1500_Then:
	assume $_$_condition_$1;
	assume $_$_condition_$1 <==> (!(Heap[this,Node.next] == null));
	assume !(Heap[this,Node.next] == null);
	assume !(Heap[this,Node.next] == null);
	assume wf(Heap,Mask_$_0,SecMask_$_4);
	assume Fractions(100) > 0;
	assume SecMask_$_5 == SecMask_$_4[Heap[this,Node.next],Node.invRight := SecMask_$_4[Heap[this,Node.next],Node.invRight][perm$R := SecMask_$_4[Heap[this,Node.next],Node.invRight][perm$R] + Fractions(100)]];
	assume IsGoodMask(Mask_$_0);
	assume IsGoodState(heapFragment(Heap[Heap[this,Node.next],Node.invRight]));
	assume wf(Heap,Mask_$_0,SecMask_$_5);
	assume wf(Heap,Mask_$_0,SecMask_$_5);
	assume SecMask_$_6 == SecMask_$_5;
	goto anon24;
anon1500_Else:
	assume !$_$_condition_$1;
	assume $_$_condition_$1 <==> (!(Heap[this,Node.next] == null));
	assume Heap[this,Node.next] == null;
	assume SecMask_$_6 == SecMask_$_4;
	goto anon24;
anon24:
	assume ite(!(Heap[this,Node.prev] == null),ite(!(Heap[Heap[this,Node.prev],Node.prev] == null),(forall  o#_330 : ref :: ( (((0 < Heap[o#_330,held]) || Heap[o#_330,rdheld]) || (ZeroCredits[o#_330] < 0)) ==> MuBelow(Heap[o#_330,mu],Heap[Heap[Heap[this,Node.prev],Node.prev],mu]) )),(forall  o#_331 : ref :: ( (((0 < Heap[o#_331,held]) || Heap[o#_331,rdheld]) || (ZeroCredits[o#_331] < 0)) ==> MuBelow(Heap[o#_331,mu],Heap[Heap[this,Node.prev],mu]) ))),(forall  o#_332 : ref :: ( (((0 < Heap[o#_332,held]) || Heap[o#_332,rdheld]) || (ZeroCredits[o#_332] < 0)) ==> MuBelow(Heap[o#_332,mu],Heap[this,mu]) )));
	assume IsGoodMask(Mask_$_0);
	assume wf(Heap,Mask_$_0,SecMask_$_6);
	assume Heap == Heap;
	assume Mask_$_0 == Mask;
	assume SecMask_$_6 == SecMask;
	assume ZeroCredits == Credits;
	assert { :msg "  30.5: SMOKE-TEST-1. (Precondition of method delete is equivalent to false.)" } !(1 == 1);
	assume #Node.inv#trigger(this);
	assume ((0 < unfoldK#_333) && (unfoldK#_333 < Fractions(1))) && ((1000 * unfoldK#_333) < methodK#_170);
	assert { :msg "  44.9: The target of the fold statement might be null." } !(this == null);
	assert { :msg "  44.9: unfold might fail because the predicate Node.inv does not hold. The permission at <undefined position> might not be positive." } Fractions(100) > 0;
	assert { :msg "  44.9: unfold might fail because the predicate Node.inv does not hold. Insufficient fraction at <undefined position> for Node.inv." } (Fractions(100) <= Mask_$_0[this,Node.inv][perm$R]) && ((Fractions(100) == Mask_$_0[this,Node.inv][perm$R]) ==> (0 <= Mask_$_0[this,Node.inv][perm$N]));
	assume Mask_$_1 == Mask_$_0[this,Node.inv := Mask_$_0[this,Node.inv][perm$R := Mask_$_0[this,Node.inv][perm$R] - Fractions(100)]];
	if ($_$_condition_$3) { goto anon1501_Then; } else { goto anon1501_Else; }
anon1501_Then:
	assume $_$_condition_$3;
	assume $_$_condition_$3 <==> (false || ((((predVer#_321_$_0 == Heap[this,Node.inv]) && (this == this)) && true) && true));
	assume false || ((((predVer#_321_$_0 == Heap[this,Node.inv]) && (this == this)) && true) && true);
	if ($_$_condition_$4) { goto anon1502_Then; } else { goto anon1502_Else; }
anon1501_Else:
	assume !$_$_condition_$3;
	assume $_$_condition_$3 <==> (false || ((((predVer#_321_$_0 == Heap[this,Node.inv]) && (this == this)) && true) && true));
	assume !(false || ((((predVer#_321_$_0 == Heap[this,Node.inv]) && (this == this)) && true) && true));
	assume SecMask_$_24 == SecMask_$_6;
	goto $branchMerge_1;
anon1502_Then:
	assume $_$_condition_$4;
	assume $_$_condition_$4 <==> (!(Heap[this,Node.prev] == null));
	assume !(Heap[this,Node.prev] == null);
	assume MuBelow(Heap[Heap[this,Node.prev],mu],Heap[this,mu]);
	goto $branchMerge_2;
anon1502_Else:
	assume !$_$_condition_$4;
	assume $_$_condition_$4 <==> (!(Heap[this,Node.prev] == null));
	assume Heap[this,Node.prev] == null;
	goto $branchMerge_2;
anon1511_Then:
	assume $_$_condition_$5;
	assume $_$_condition_$5 <==> (!CanRead(Mask_$_1,SecMask_$_24,this,Node.inv));
	assume !CanRead(Mask_$_1,SecMask_$_24,this,Node.inv);
	assume oldVers#_344_$_0 == Heap[this,Node.inv];
	assume Heap_$_0 == Heap[this,Node.inv := newVers#_345_$_0];
	assume oldVers#_344_$_0 < Heap_$_0[this,Node.inv];
	assume Heap_$_1 == Heap_$_0;
	goto anon46;
anon1511_Else:
	assume !$_$_condition_$5;
	assume $_$_condition_$5 <==> (!CanRead(Mask_$_1,SecMask_$_24,this,Node.inv));
	assume CanRead(Mask_$_1,SecMask_$_24,this,Node.inv);
	assume Heap_$_1 == Heap;
	goto anon46;
anon1503_Then:
	assume $_$_condition_$6;
	assume $_$_condition_$6 <==> (!(Heap[this,Node.next] == null));
	assume !(Heap[this,Node.next] == null);
	assume MuBelow(Heap[this,mu],Heap[Heap[this,Node.next],mu]);
	goto anon29;
anon1503_Else:
	assume !$_$_condition_$6;
	assume $_$_condition_$6 <==> (!(Heap[this,Node.next] == null));
	assume Heap[this,Node.next] == null;
	goto anon29;
anon29:
	assume SecMask_$_7 == SecMask_$_6[this,Node.prev := SecMask_$_6[this,Node.prev][perm$N := SecMask_$_6[this,Node.prev][perm$N] - 1]];
	assume wf(Heap,Mask_$_1,SecMask_$_7);
	if ($_$_condition_$8) { goto anon1504_Then; } else { goto anon1504_Else; }
anon1504_Then:
	assume $_$_condition_$8;
	assume SecMask_$_7[this,Node.prev][perm$N] < 0;
	assume SecMask_$_8 == SecMask_$_7[this,Node.prev := SecMask_$_7[this,Node.prev][perm$N := 0]];
	assume SecMask_$_9 == SecMask_$_8;
	goto anon31;
anon1504_Else:
	assume !$_$_condition_$8;
	assume 0 <= SecMask_$_7[this,Node.prev][perm$N];
	assume SecMask_$_9 == SecMask_$_7;
	goto anon31;
anon31:
	assume wf(Heap,SecMask_$_9,SecMask_$_9);
	assume wf(Heap,Mask_$_1,SecMask_$_9);
	assume SecMask_$_10 == SecMask_$_9[this,Node.next := SecMask_$_9[this,Node.next][perm$N := SecMask_$_9[this,Node.next][perm$N] - 1]];
	assume wf(Heap,Mask_$_1,SecMask_$_10);
	if ($_$_condition_$9) { goto anon1505_Then; } else { goto anon1505_Else; }
anon1505_Then:
	assume $_$_condition_$9;
	assume SecMask_$_10[this,Node.next][perm$N] < 0;
	assume SecMask_$_11 == SecMask_$_10[this,Node.next := SecMask_$_10[this,Node.next][perm$N := 0]];
	assume SecMask_$_12 == SecMask_$_11;
	goto anon33;
anon1505_Else:
	assume !$_$_condition_$9;
	assume 0 <= SecMask_$_10[this,Node.next][perm$N];
	assume SecMask_$_12 == SecMask_$_10;
	goto anon33;
anon33:
	assume wf(Heap,SecMask_$_12,SecMask_$_12);
	assume wf(Heap,Mask_$_1,SecMask_$_12);
	assume SecMask_$_13 == SecMask_$_12[this,mu := SecMask_$_12[this,mu][perm$N := SecMask_$_12[this,mu][perm$N] - 1]];
	assume wf(Heap,Mask_$_1,SecMask_$_13);
	if ($_$_condition_$10) { goto anon1506_Then; } else { goto anon1506_Else; }
anon1506_Then:
	assume $_$_condition_$10;
	assume SecMask_$_13[this,mu][perm$N] < 0;
	assume SecMask_$_14 == SecMask_$_13[this,mu := SecMask_$_13[this,mu][perm$N := 0]];
	assume SecMask_$_15 == SecMask_$_14;
	goto anon35;
anon1506_Else:
	assume !$_$_condition_$10;
	assume 0 <= SecMask_$_13[this,mu][perm$N];
	assume SecMask_$_15 == SecMask_$_13;
	goto anon35;
anon35:
	assume wf(Heap,SecMask_$_15,SecMask_$_15);
	assume wf(Heap,Mask_$_1,SecMask_$_15);
	if ($_$_condition_$11) { goto anon1507_Then; } else { goto anon1507_Else; }
anon1507_Then:
	assume $_$_condition_$11;
	assume $_$_condition_$11 <==> (!(Heap[this,Node.prev] == null));
	assume !(Heap[this,Node.prev] == null);
	assume SecMask_$_16 == SecMask_$_15[Heap[this,Node.prev],Node.invLeft := SecMask_$_15[Heap[this,Node.prev],Node.invLeft][perm$R := SecMask_$_15[Heap[this,Node.prev],Node.invLeft][perm$R] - Fractions(100)]];
	if ($_$_condition_$12) { goto anon1508_Then; } else { goto anon1508_Else; }
anon1507_Else:
	assume !$_$_condition_$11;
	assume $_$_condition_$11 <==> (!(Heap[this,Node.prev] == null));
	assume Heap[this,Node.prev] == null;
	assume SecMask_$_19 == SecMask_$_15;
	goto $branchMerge_3;
anon1508_Then:
	assume $_$_condition_$12;
	assume SecMask_$_16[Heap[this,Node.prev],Node.invLeft][perm$R] < 0;
	assume SecMask_$_17 == SecMask_$_16[Heap[this,Node.prev],Node.invLeft := SecMask_$_16[Heap[this,Node.prev],Node.invLeft][perm$R := 0]];
	assume SecMask_$_18 == SecMask_$_17;
	goto anon38;
anon1508_Else:
	assume !$_$_condition_$12;
	assume 0 <= SecMask_$_16[Heap[this,Node.prev],Node.invLeft][perm$R];
	assume SecMask_$_18 == SecMask_$_16;
	goto anon38;
anon1509_Then:
	assume $_$_condition_$13;
	assume $_$_condition_$13 <==> (!(Heap[this,Node.next] == null));
	assume !(Heap[this,Node.next] == null);
	assume SecMask_$_20 == SecMask_$_19[Heap[this,Node.next],Node.invRight := SecMask_$_19[Heap[this,Node.next],Node.invRight][perm$R := SecMask_$_19[Heap[this,Node.next],Node.invRight][perm$R] - Fractions(100)]];
	if ($_$_condition_$15) { goto anon1510_Then; } else { goto anon1510_Else; }
anon1509_Else:
	assume !$_$_condition_$13;
	assume $_$_condition_$13 <==> (!(Heap[this,Node.next] == null));
	assume Heap[this,Node.next] == null;
	assume SecMask_$_23 == SecMask_$_19;
	goto anon43;
anon38:
	assume wf(Heap,SecMask_$_18,SecMask_$_18);
	assume wf(Heap,Mask_$_1,SecMask_$_18);
	assume SecMask_$_19 == SecMask_$_18;
	goto $branchMerge_3;
anon1510_Then:
	assume $_$_condition_$15;
	assume SecMask_$_20[Heap[this,Node.next],Node.invRight][perm$R] < 0;
	assume SecMask_$_21 == SecMask_$_20[Heap[this,Node.next],Node.invRight := SecMask_$_20[Heap[this,Node.next],Node.invRight][perm$R := 0]];
	assume SecMask_$_22 == SecMask_$_21;
	goto anon42;
anon1510_Else:
	assume !$_$_condition_$15;
	assume 0 <= SecMask_$_20[Heap[this,Node.next],Node.invRight][perm$R];
	assume SecMask_$_22 == SecMask_$_20;
	goto anon42;
anon43:
	assume wf(Heap,SecMask_$_23,SecMask_$_23);
	assume SecMask_$_24 == SecMask_$_23;
	goto $branchMerge_1;
anon42:
	assume wf(Heap,SecMask_$_22,SecMask_$_22);
	assume wf(Heap,Mask_$_1,SecMask_$_22);
	assume SecMask_$_23 == SecMask_$_22;
	goto anon43;
anon46:
	assume IsGoodMask(Mask_$_1);
	assume wf(Heap_$_1,Mask_$_1,SecMask_$_24);
	assume IsGoodMask(Mask_$_1);
	assume wf(Heap_$_1,Mask_$_1,SecMask_$_24);
	assume !(this == null);
	assume wf(Heap_$_1,Mask_$_1,SecMask_$_24);
	assume (Heap_$_1[this,Node.prev] == null) || (dtype(Heap_$_1[this,Node.prev]) == Node#t);
	assume 1 > 0;
	assume Mask_$_2 == Mask_$_1[this,Node.prev := Mask_$_1[this,Node.prev][perm$N := Mask_$_1[this,Node.prev][perm$N] + 1]];
	assume wf(Heap_$_1,Mask_$_2,SecMask_$_24);
	assume IsGoodMask(Mask_$_2);
	assume IsGoodState(heapFragment(Heap_$_1[this,Node.prev]));
	assume wf(Heap_$_1,Mask_$_2,SecMask_$_24);
	assume wf(Heap_$_1,Mask_$_2,SecMask_$_24);
	assume !(this == null);
	assume wf(Heap_$_1,Mask_$_2,SecMask_$_24);
	assume (Heap_$_1[this,Node.next] == null) || (dtype(Heap_$_1[this,Node.next]) == Node#t);
	assume 1 > 0;
	assume Mask_$_3 == Mask_$_2[this,Node.next := Mask_$_2[this,Node.next][perm$N := Mask_$_2[this,Node.next][perm$N] + 1]];
	assume wf(Heap_$_1,Mask_$_3,SecMask_$_24);
	assume IsGoodMask(Mask_$_3);
	assume IsGoodState(heapFragment(Heap_$_1[this,Node.next]));
	assume wf(Heap_$_1,Mask_$_3,SecMask_$_24);
	assume wf(Heap_$_1,Mask_$_3,SecMask_$_24);
	assume !(this == null);
	assume wf(Heap_$_1,Mask_$_3,SecMask_$_24);
	assume true;
	assume 1 > 0;
	assume Mask_$_4 == Mask_$_3[this,mu := Mask_$_3[this,mu][perm$N := Mask_$_3[this,mu][perm$N] + 1]];
	assume wf(Heap_$_1,Mask_$_4,SecMask_$_24);
	assume IsGoodMask(Mask_$_4);
	assume IsGoodState(heapFragment(Heap_$_1[this,mu]));
	assume wf(Heap_$_1,Mask_$_4,SecMask_$_24);
	assume wf(Heap_$_1,Mask_$_4,SecMask_$_24);
	if ($_$_condition_$17) { goto anon1512_Then; } else { goto anon1512_Else; }
anon1512_Then:
	assume $_$_condition_$17;
	assume $_$_condition_$17 <==> (!(Heap_$_1[this,Node.prev] == null));
	assume !(Heap_$_1[this,Node.prev] == null);
	assume !(Heap_$_1[this,Node.prev] == null);
	assume wf(Heap_$_1,Mask_$_4,SecMask_$_24);
	assume Fractions(100) > 0;
	assume Mask_$_5 == Mask_$_4[Heap_$_1[this,Node.prev],Node.invLeft := Mask_$_4[Heap_$_1[this,Node.prev],Node.invLeft][perm$R := Mask_$_4[Heap_$_1[this,Node.prev],Node.invLeft][perm$R] + Fractions(100)]];
	assume IsGoodMask(Mask_$_5);
	assume IsGoodState(heapFragment(Heap_$_1[Heap_$_1[this,Node.prev],Node.invLeft]));
	assume wf(Heap_$_1,Mask_$_5,SecMask_$_24);
	assume wf(Heap_$_1,Mask_$_5,SecMask_$_24);
	assume predRec#_346_$_0 == Heap_$_1[this,Node.prev];
	assume #Node.invLeft#trigger(Heap_$_1[this,Node.prev]);
	assume predVer#_347_$_0 == Heap_$_1[Heap_$_1[this,Node.prev],Node.invLeft];
	if ($_$_condition_$18) { goto anon1513_Then; } else { goto anon1513_Else; }
anon1512_Else:
	assume !$_$_condition_$17;
	assume $_$_condition_$17 <==> (!(Heap_$_1[this,Node.prev] == null));
	assume Heap_$_1[this,Node.prev] == null;
	assume Mask_$_6 == Mask_$_4;
	assume SecMask_$_30 == SecMask_$_24;
	assume predRec#_346_$_1 == predRec#_346;
	assume predFlag#_348_$_0 <==> predFlag#_348;
	assume predVer#_347_$_1 == predVer#_347;
	goto $branchMerge_4;
anon1513_Then:
	assume $_$_condition_$18;
	assume $_$_condition_$18 <==> false;
	assume false;
	goto $exit;
anon1513_Else:
	assume !$_$_condition_$18;
	assume $_$_condition_$18 <==> false;
	assume !false;
	assume !(predRec#_346_$_0 == null);
	assume wf(Heap_$_1,Mask_$_5,SecMask_$_24);
	assume (Heap_$_1[predRec#_346_$_0,Node.prev] == null) || (dtype(Heap_$_1[predRec#_346_$_0,Node.prev]) == Node#t);
	assume 1 > 0;
	assume SecMask_$_25 == SecMask_$_24[predRec#_346_$_0,Node.prev := SecMask_$_24[predRec#_346_$_0,Node.prev][perm$N := SecMask_$_24[predRec#_346_$_0,Node.prev][perm$N] + 1]];
	assume wf(Heap_$_1,SecMask_$_25,SecMask_$_25);
	assume IsGoodMask(Mask_$_5);
	assume IsGoodState(heapFragment(Heap_$_1[predRec#_346_$_0,Node.prev]));
	assume wf(Heap_$_1,Mask_$_5,SecMask_$_25);
	assume wf(Heap_$_1,Mask_$_5,SecMask_$_25);
	assume !(predRec#_346_$_0 == null);
	assume wf(Heap_$_1,Mask_$_5,SecMask_$_25);
	assume (Heap_$_1[predRec#_346_$_0,Node.next] == null) || (dtype(Heap_$_1[predRec#_346_$_0,Node.next]) == Node#t);
	assume 1 > 0;
	assume SecMask_$_26 == SecMask_$_25[predRec#_346_$_0,Node.next := SecMask_$_25[predRec#_346_$_0,Node.next][perm$N := SecMask_$_25[predRec#_346_$_0,Node.next][perm$N] + 1]];
	assume wf(Heap_$_1,SecMask_$_26,SecMask_$_26);
	assume IsGoodMask(Mask_$_5);
	assume IsGoodState(heapFragment(Heap_$_1[predRec#_346_$_0,Node.next]));
	assume wf(Heap_$_1,Mask_$_5,SecMask_$_26);
	assume wf(Heap_$_1,Mask_$_5,SecMask_$_26);
	assume !(predRec#_346_$_0 == null);
	assume wf(Heap_$_1,Mask_$_5,SecMask_$_26);
	assume true;
	assume 1 > 0;
	assume SecMask_$_27 == SecMask_$_26[predRec#_346_$_0,mu := SecMask_$_26[predRec#_346_$_0,mu][perm$N := SecMask_$_26[predRec#_346_$_0,mu][perm$N] + 1]];
	assume wf(Heap_$_1,SecMask_$_27,SecMask_$_27);
	assume IsGoodMask(Mask_$_5);
	assume IsGoodState(heapFragment(Heap_$_1[predRec#_346_$_0,mu]));
	assume wf(Heap_$_1,Mask_$_5,SecMask_$_27);
	assume wf(Heap_$_1,Mask_$_5,SecMask_$_27);
	if ($_$_condition_$20) { goto anon1520_Then; } else { goto anon1520_Else; }
anon1521_Then:
	assume $_$_condition_$19;
	assume $_$_condition_$19 <==> (!(Heap_$_1[this,Node.next] == null));
	assume !(Heap_$_1[this,Node.next] == null);
	assume !(Heap_$_1[this,Node.next] == null);
	assume wf(Heap_$_1,Mask_$_6,SecMask_$_30);
	assume Fractions(100) > 0;
	assume Mask_$_7 == Mask_$_6[Heap_$_1[this,Node.next],Node.invRight := Mask_$_6[Heap_$_1[this,Node.next],Node.invRight][perm$R := Mask_$_6[Heap_$_1[this,Node.next],Node.invRight][perm$R] + Fractions(100)]];
	assume IsGoodMask(Mask_$_7);
	assume IsGoodState(heapFragment(Heap_$_1[Heap_$_1[this,Node.next],Node.invRight]));
	assume wf(Heap_$_1,Mask_$_7,SecMask_$_30);
	assume wf(Heap_$_1,Mask_$_7,SecMask_$_30);
	assume predRec#_355_$_0 == Heap_$_1[this,Node.next];
	assume #Node.invRight#trigger(Heap_$_1[this,Node.next]);
	assume predVer#_356_$_0 == Heap_$_1[Heap_$_1[this,Node.next],Node.invRight];
	if ($_$_condition_$22) { goto anon1522_Then; } else { goto anon1522_Else; }
anon1521_Else:
	assume !$_$_condition_$19;
	assume $_$_condition_$19 <==> (!(Heap_$_1[this,Node.next] == null));
	assume Heap_$_1[this,Node.next] == null;
	assume SecMask_$_36 == SecMask_$_30;
	assume Mask_$_8 == Mask_$_6;
	assume predRec#_355_$_1 == predRec#_355;
	assume predFlag#_357_$_0 <==> predFlag#_357;
	assume predVer#_356_$_1 == predVer#_356;
	goto anon82;
anon1520_Then:
	assume $_$_condition_$20;
	assume $_$_condition_$20 <==> (!(Heap_$_1[predRec#_346_$_0,Node.prev] == null));
	assume !(Heap_$_1[predRec#_346_$_0,Node.prev] == null);
	assume !(Heap_$_1[predRec#_346_$_0,Node.prev] == null);
	assume wf(Heap_$_1,Mask_$_5,SecMask_$_27);
	assume Fractions(100) > 0;
	assume SecMask_$_28 == SecMask_$_27[Heap_$_1[predRec#_346_$_0,Node.prev],Node.invLeft := SecMask_$_27[Heap_$_1[predRec#_346_$_0,Node.prev],Node.invLeft][perm$R := SecMask_$_27[Heap_$_1[predRec#_346_$_0,Node.prev],Node.invLeft][perm$R] + Fractions(100)]];
	assume IsGoodMask(Mask_$_5);
	assume IsGoodState(heapFragment(Heap_$_1[Heap_$_1[predRec#_346_$_0,Node.prev],Node.invLeft]));
	assume wf(Heap_$_1,Mask_$_5,SecMask_$_28);
	assume wf(Heap_$_1,Mask_$_5,SecMask_$_28);
	assume SecMask_$_29 == SecMask_$_28;
	goto anon63;
anon1520_Else:
	assume !$_$_condition_$20;
	assume $_$_condition_$20 <==> (!(Heap_$_1[predRec#_346_$_0,Node.prev] == null));
	assume Heap_$_1[predRec#_346_$_0,Node.prev] == null;
	assume SecMask_$_29 == SecMask_$_27;
	goto anon63;
anon63:
	assume MuBelow(Heap_$_1[Heap_$_1[this,Node.prev],mu],Heap_$_1[this,mu]);
	assume Mask_$_6 == Mask_$_5;
	assume SecMask_$_30 == SecMask_$_29;
	assume predRec#_346_$_1 == predRec#_346_$_0;
	assume predFlag#_348_$_0 <==> true;
	assume predVer#_347_$_1 == predVer#_347_$_0;
	goto $branchMerge_4;
anon1522_Then:
	assume $_$_condition_$22;
	assume $_$_condition_$22 <==> false;
	assume false;
	goto $exit;
anon1522_Else:
	assume !$_$_condition_$22;
	assume $_$_condition_$22 <==> false;
	assume !false;
	assume !(predRec#_355_$_0 == null);
	assume wf(Heap_$_1,Mask_$_7,SecMask_$_30);
	assume (Heap_$_1[predRec#_355_$_0,Node.prev] == null) || (dtype(Heap_$_1[predRec#_355_$_0,Node.prev]) == Node#t);
	assume 1 > 0;
	assume SecMask_$_31 == SecMask_$_30[predRec#_355_$_0,Node.prev := SecMask_$_30[predRec#_355_$_0,Node.prev][perm$N := SecMask_$_30[predRec#_355_$_0,Node.prev][perm$N] + 1]];
	assume wf(Heap_$_1,SecMask_$_31,SecMask_$_31);
	assume IsGoodMask(Mask_$_7);
	assume IsGoodState(heapFragment(Heap_$_1[predRec#_355_$_0,Node.prev]));
	assume wf(Heap_$_1,Mask_$_7,SecMask_$_31);
	assume wf(Heap_$_1,Mask_$_7,SecMask_$_31);
	assume !(predRec#_355_$_0 == null);
	assume wf(Heap_$_1,Mask_$_7,SecMask_$_31);
	assume (Heap_$_1[predRec#_355_$_0,Node.next] == null) || (dtype(Heap_$_1[predRec#_355_$_0,Node.next]) == Node#t);
	assume 1 > 0;
	assume SecMask_$_32 == SecMask_$_31[predRec#_355_$_0,Node.next := SecMask_$_31[predRec#_355_$_0,Node.next][perm$N := SecMask_$_31[predRec#_355_$_0,Node.next][perm$N] + 1]];
	assume wf(Heap_$_1,SecMask_$_32,SecMask_$_32);
	assume IsGoodMask(Mask_$_7);
	assume IsGoodState(heapFragment(Heap_$_1[predRec#_355_$_0,Node.next]));
	assume wf(Heap_$_1,Mask_$_7,SecMask_$_32);
	assume wf(Heap_$_1,Mask_$_7,SecMask_$_32);
	assume !(predRec#_355_$_0 == null);
	assume wf(Heap_$_1,Mask_$_7,SecMask_$_32);
	assume true;
	assume 1 > 0;
	assume SecMask_$_33 == SecMask_$_32[predRec#_355_$_0,mu := SecMask_$_32[predRec#_355_$_0,mu][perm$N := SecMask_$_32[predRec#_355_$_0,mu][perm$N] + 1]];
	assume wf(Heap_$_1,SecMask_$_33,SecMask_$_33);
	assume IsGoodMask(Mask_$_7);
	assume IsGoodState(heapFragment(Heap_$_1[predRec#_355_$_0,mu]));
	assume wf(Heap_$_1,Mask_$_7,SecMask_$_33);
	assume wf(Heap_$_1,Mask_$_7,SecMask_$_33);
	if ($_$_condition_$23) { goto anon1529_Then; } else { goto anon1529_Else; }
anon82:
	assume IsGoodMask(Mask_$_8);
	assume wf(Heap_$_1,Mask_$_8,SecMask_$_36);
	assert { :msg "  44.9: SMOKE-TEST-2. (The statements after the unfold statement are unreachable.)" } !(1 == 1);
	assume cond#_364_$_0 <==> (!(Heap_$_1[this,Node.prev] == null));
	assert { :msg "  45.13: Receiver might be null." } true ==> (!(this == null));
	assert { :msg "  45.13: Location might not be readable." } true ==> CanRead(Mask_$_8,SecMask_$_36,this,Node.prev);
	if ($_$_condition_$24) { goto anon1530_Then; } else { goto anon1530_Else; }
anon1529_Then:
	assume $_$_condition_$23;
	assume $_$_condition_$23 <==> (!(Heap_$_1[predRec#_355_$_0,Node.next] == null));
	assume !(Heap_$_1[predRec#_355_$_0,Node.next] == null);
	assume !(Heap_$_1[predRec#_355_$_0,Node.next] == null);
	assume wf(Heap_$_1,Mask_$_7,SecMask_$_33);
	assume Fractions(100) > 0;
	assume SecMask_$_34 == SecMask_$_33[Heap_$_1[predRec#_355_$_0,Node.next],Node.invRight := SecMask_$_33[Heap_$_1[predRec#_355_$_0,Node.next],Node.invRight][perm$R := SecMask_$_33[Heap_$_1[predRec#_355_$_0,Node.next],Node.invRight][perm$R] + Fractions(100)]];
	assume IsGoodMask(Mask_$_7);
	assume IsGoodState(heapFragment(Heap_$_1[Heap_$_1[predRec#_355_$_0,Node.next],Node.invRight]));
	assume wf(Heap_$_1,Mask_$_7,SecMask_$_34);
	assume wf(Heap_$_1,Mask_$_7,SecMask_$_34);
	assume SecMask_$_35 == SecMask_$_34;
	goto anon81;
anon1529_Else:
	assume !$_$_condition_$23;
	assume $_$_condition_$23 <==> (!(Heap_$_1[predRec#_355_$_0,Node.next] == null));
	assume Heap_$_1[predRec#_355_$_0,Node.next] == null;
	assume SecMask_$_35 == SecMask_$_33;
	goto anon81;
anon81:
	assume MuBelow(Heap_$_1[this,mu],Heap_$_1[Heap_$_1[this,Node.next],mu]);
	assume SecMask_$_36 == SecMask_$_35;
	assume Mask_$_8 == Mask_$_7;
	assume predRec#_355_$_1 == predRec#_355_$_0;
	assume predFlag#_357_$_0 <==> true;
	assume predVer#_356_$_1 == predVer#_356_$_0;
	goto anon82;
anon1530_Then:
	assume $_$_condition_$24;
	assume $_$_condition_$24 <==> cond#_364_$_0;
	assume cond#_364_$_0;
	assert { :msg "  45.9: SMOKE-TEST-3. (The begging of the if-branch is unreachable.)" } !(1 == 1);
	assume #Node.invLeft#trigger(Heap_$_1[this,Node.prev]);
	assume ((0 < unfoldK#_365) && (unfoldK#_365 < Fractions(1))) && ((1000 * unfoldK#_365) < methodK#_170);
	assert { :msg "  46.20: Receiver might be null." } true ==> (!(this == null));
	assert { :msg "  46.20: Location might not be readable." } true ==> CanRead(Mask_$_8,SecMask_$_36,this,Node.prev);
	assert { :msg "  46.13: The target of the fold statement might be null." } !(Heap_$_1[this,Node.prev] == null);
	assert { :msg "  46.13: unfold might fail because the predicate Node.invLeft does not hold. The permission at <undefined position> might not be positive." } Fractions(100) > 0;
	assert { :msg "  46.13: unfold might fail because the predicate Node.invLeft does not hold. Insufficient fraction at <undefined position> for Node.invLeft." } (Fractions(100) <= Mask_$_8[Heap_$_1[this,Node.prev],Node.invLeft][perm$R]) && ((Fractions(100) == Mask_$_8[Heap_$_1[this,Node.prev],Node.invLeft][perm$R]) ==> (0 <= Mask_$_8[Heap_$_1[this,Node.prev],Node.invLeft][perm$N]));
	assume Mask_$_9 == Mask_$_8[Heap_$_1[this,Node.prev],Node.invLeft := Mask_$_8[Heap_$_1[this,Node.prev],Node.invLeft][perm$R := Mask_$_8[Heap_$_1[this,Node.prev],Node.invLeft][perm$R] - Fractions(100)]];
	if ($_$_condition_$25) { goto anon1531_Then; } else { goto anon1531_Else; }
anon1530_Else:
	assume !$_$_condition_$24;
	assume $_$_condition_$24 <==> cond#_364_$_0;
	assume !cond#_364_$_0;
	assume SecMask_$_105 == SecMask_$_36;
	assume Mask_$_21 == Mask_$_8;
	assume Heap_$_6 == Heap_$_1;
	assume predRec#_377_$_2 == predRec#_377;
	assume predFlag#_379_$_1 <==> predFlag#_379;
	assume predVer#_378_$_2 == predVer#_378;
	assume cond#_386_$_1 <==> cond#_386;
	assume predRec#_399_$_2 == predRec#_399;
	assume predFlag#_401_$_1 <==> predFlag#_401;
	assume predVer#_400_$_2 == predVer#_400;
	goto anon159;
anon1531_Then:
	assume $_$_condition_$25;
	assume $_$_condition_$25 <==> (false || ((((predVer#_347_$_1 == Heap_$_1[Heap_$_1[this,Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_1[this,Node.prev])) && true) && predFlag#_348_$_0));
	assume false || ((((predVer#_347_$_1 == Heap_$_1[Heap_$_1[this,Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_1[this,Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$26) { goto anon1532_Then; } else { goto anon1532_Else; }
anon1531_Else:
	assume !$_$_condition_$25;
	assume $_$_condition_$25 <==> (false || ((((predVer#_347_$_1 == Heap_$_1[Heap_$_1[this,Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_1[this,Node.prev])) && true) && predFlag#_348_$_0));
	assume !(false || ((((predVer#_347_$_1 == Heap_$_1[Heap_$_1[this,Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_1[this,Node.prev])) && true) && predFlag#_348_$_0));
	assume SecMask_$_50 == SecMask_$_36;
	goto $branchMerge_5;
anon159:
	assume cond#_408_$_0 <==> (!(Heap_$_6[this,Node.next] == null));
	assert { :msg "  49.13: Receiver might be null." } true ==> (!(this == null));
	assert { :msg "  49.13: Location might not be readable." } true ==> CanRead(Mask_$_21,SecMask_$_105,this,Node.next);
	if ($_$_condition_$66) { goto anon1568_Then; } else { goto anon1568_Else; }
anon1532_Then:
	assume $_$_condition_$26;
	assume $_$_condition_$26 <==> (!(Heap_$_1[Heap_$_1[this,Node.prev],Node.prev] == null));
	assume !(Heap_$_1[Heap_$_1[this,Node.prev],Node.prev] == null);
	assume MuBelow(Heap_$_1[Heap_$_1[Heap_$_1[this,Node.prev],Node.prev],mu],Heap_$_1[Heap_$_1[this,Node.prev],mu]);
	goto anon86;
anon1532_Else:
	assume !$_$_condition_$26;
	assume $_$_condition_$26 <==> (!(Heap_$_1[Heap_$_1[this,Node.prev],Node.prev] == null));
	assume Heap_$_1[Heap_$_1[this,Node.prev],Node.prev] == null;
	goto anon86;
anon1538_Then:
	assume $_$_condition_$27;
	assume $_$_condition_$27 <==> (!CanRead(Mask_$_9,SecMask_$_50,Heap_$_1[this,Node.prev],Node.invLeft));
	assume !CanRead(Mask_$_9,SecMask_$_50,Heap_$_1[this,Node.prev],Node.invLeft);
	assume oldVers#_375_$_0 == Heap_$_1[Heap_$_1[this,Node.prev],Node.invLeft];
	assume Heap_$_2 == Heap_$_1[Heap_$_1[this,Node.prev],Node.invLeft := newVers#_376_$_0];
	assume oldVers#_375_$_0 < Heap_$_2[Heap_$_2[this,Node.prev],Node.invLeft];
	assume Heap_$_3 == Heap_$_2;
	goto anon99;
anon1538_Else:
	assume !$_$_condition_$27;
	assume $_$_condition_$27 <==> (!CanRead(Mask_$_9,SecMask_$_50,Heap_$_1[this,Node.prev],Node.invLeft));
	assume CanRead(Mask_$_9,SecMask_$_50,Heap_$_1[this,Node.prev],Node.invLeft);
	assume Heap_$_3 == Heap_$_1;
	goto anon99;
anon86:
	assume SecMask_$_37 == SecMask_$_36[Heap_$_1[this,Node.prev],Node.prev := SecMask_$_36[Heap_$_1[this,Node.prev],Node.prev][perm$N := SecMask_$_36[Heap_$_1[this,Node.prev],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_1,Mask_$_9,SecMask_$_37);
	if ($_$_condition_$28) { goto anon1533_Then; } else { goto anon1533_Else; }
anon1533_Then:
	assume $_$_condition_$28;
	assume SecMask_$_37[Heap_$_1[this,Node.prev],Node.prev][perm$N] < 0;
	assume SecMask_$_38 == SecMask_$_37[Heap_$_1[this,Node.prev],Node.prev := SecMask_$_37[Heap_$_1[this,Node.prev],Node.prev][perm$N := 0]];
	assume SecMask_$_39 == SecMask_$_38;
	goto anon88;
anon1533_Else:
	assume !$_$_condition_$28;
	assume 0 <= SecMask_$_37[Heap_$_1[this,Node.prev],Node.prev][perm$N];
	assume SecMask_$_39 == SecMask_$_37;
	goto anon88;
anon88:
	assume wf(Heap_$_1,SecMask_$_39,SecMask_$_39);
	assume wf(Heap_$_1,Mask_$_9,SecMask_$_39);
	assume SecMask_$_40 == SecMask_$_39[Heap_$_1[this,Node.prev],Node.next := SecMask_$_39[Heap_$_1[this,Node.prev],Node.next][perm$N := SecMask_$_39[Heap_$_1[this,Node.prev],Node.next][perm$N] - 1]];
	assume wf(Heap_$_1,Mask_$_9,SecMask_$_40);
	if ($_$_condition_$29) { goto anon1534_Then; } else { goto anon1534_Else; }
anon1534_Then:
	assume $_$_condition_$29;
	assume SecMask_$_40[Heap_$_1[this,Node.prev],Node.next][perm$N] < 0;
	assume SecMask_$_41 == SecMask_$_40[Heap_$_1[this,Node.prev],Node.next := SecMask_$_40[Heap_$_1[this,Node.prev],Node.next][perm$N := 0]];
	assume SecMask_$_42 == SecMask_$_41;
	goto anon90;
anon1534_Else:
	assume !$_$_condition_$29;
	assume 0 <= SecMask_$_40[Heap_$_1[this,Node.prev],Node.next][perm$N];
	assume SecMask_$_42 == SecMask_$_40;
	goto anon90;
anon90:
	assume wf(Heap_$_1,SecMask_$_42,SecMask_$_42);
	assume wf(Heap_$_1,Mask_$_9,SecMask_$_42);
	assume SecMask_$_43 == SecMask_$_42[Heap_$_1[this,Node.prev],mu := SecMask_$_42[Heap_$_1[this,Node.prev],mu][perm$N := SecMask_$_42[Heap_$_1[this,Node.prev],mu][perm$N] - 1]];
	assume wf(Heap_$_1,Mask_$_9,SecMask_$_43);
	if ($_$_condition_$30) { goto anon1535_Then; } else { goto anon1535_Else; }
anon1535_Then:
	assume $_$_condition_$30;
	assume SecMask_$_43[Heap_$_1[this,Node.prev],mu][perm$N] < 0;
	assume SecMask_$_44 == SecMask_$_43[Heap_$_1[this,Node.prev],mu := SecMask_$_43[Heap_$_1[this,Node.prev],mu][perm$N := 0]];
	assume SecMask_$_45 == SecMask_$_44;
	goto anon92;
anon1535_Else:
	assume !$_$_condition_$30;
	assume 0 <= SecMask_$_43[Heap_$_1[this,Node.prev],mu][perm$N];
	assume SecMask_$_45 == SecMask_$_43;
	goto anon92;
anon92:
	assume wf(Heap_$_1,SecMask_$_45,SecMask_$_45);
	assume wf(Heap_$_1,Mask_$_9,SecMask_$_45);
	if ($_$_condition_$31) { goto anon1536_Then; } else { goto anon1536_Else; }
anon1536_Then:
	assume $_$_condition_$31;
	assume $_$_condition_$31 <==> (!(Heap_$_1[Heap_$_1[this,Node.prev],Node.prev] == null));
	assume !(Heap_$_1[Heap_$_1[this,Node.prev],Node.prev] == null);
	assume SecMask_$_46 == SecMask_$_45[Heap_$_1[Heap_$_1[this,Node.prev],Node.prev],Node.invLeft := SecMask_$_45[Heap_$_1[Heap_$_1[this,Node.prev],Node.prev],Node.invLeft][perm$R := SecMask_$_45[Heap_$_1[Heap_$_1[this,Node.prev],Node.prev],Node.invLeft][perm$R] - Fractions(100)]];
	if ($_$_condition_$32) { goto anon1537_Then; } else { goto anon1537_Else; }
anon1536_Else:
	assume !$_$_condition_$31;
	assume $_$_condition_$31 <==> (!(Heap_$_1[Heap_$_1[this,Node.prev],Node.prev] == null));
	assume Heap_$_1[Heap_$_1[this,Node.prev],Node.prev] == null;
	assume SecMask_$_49 == SecMask_$_45;
	goto anon96;
anon1537_Then:
	assume $_$_condition_$32;
	assume SecMask_$_46[Heap_$_1[Heap_$_1[this,Node.prev],Node.prev],Node.invLeft][perm$R] < 0;
	assume SecMask_$_47 == SecMask_$_46[Heap_$_1[Heap_$_1[this,Node.prev],Node.prev],Node.invLeft := SecMask_$_46[Heap_$_1[Heap_$_1[this,Node.prev],Node.prev],Node.invLeft][perm$R := 0]];
	assume SecMask_$_48 == SecMask_$_47;
	goto anon95;
anon1537_Else:
	assume !$_$_condition_$32;
	assume 0 <= SecMask_$_46[Heap_$_1[Heap_$_1[this,Node.prev],Node.prev],Node.invLeft][perm$R];
	assume SecMask_$_48 == SecMask_$_46;
	goto anon95;
anon96:
	assume wf(Heap_$_1,SecMask_$_49,SecMask_$_49);
	assume SecMask_$_50 == SecMask_$_49;
	goto $branchMerge_5;
anon95:
	assume wf(Heap_$_1,SecMask_$_48,SecMask_$_48);
	assume wf(Heap_$_1,Mask_$_9,SecMask_$_48);
	assume SecMask_$_49 == SecMask_$_48;
	goto anon96;
anon99:
	assume IsGoodMask(Mask_$_9);
	assume wf(Heap_$_3,Mask_$_9,SecMask_$_50);
	assume IsGoodMask(Mask_$_9);
	assume wf(Heap_$_3,Mask_$_9,SecMask_$_50);
	assume !(Heap_$_3[this,Node.prev] == null);
	assume wf(Heap_$_3,Mask_$_9,SecMask_$_50);
	assume (Heap_$_3[Heap_$_3[this,Node.prev],Node.prev] == null) || (dtype(Heap_$_3[Heap_$_3[this,Node.prev],Node.prev]) == Node#t);
	assume 1 > 0;
	assume Mask_$_10 == Mask_$_9[Heap_$_3[this,Node.prev],Node.prev := Mask_$_9[Heap_$_3[this,Node.prev],Node.prev][perm$N := Mask_$_9[Heap_$_3[this,Node.prev],Node.prev][perm$N] + 1]];
	assume wf(Heap_$_3,Mask_$_10,SecMask_$_50);
	assume IsGoodMask(Mask_$_10);
	assume IsGoodState(heapFragment(Heap_$_3[Heap_$_3[this,Node.prev],Node.prev]));
	assume wf(Heap_$_3,Mask_$_10,SecMask_$_50);
	assume wf(Heap_$_3,Mask_$_10,SecMask_$_50);
	assume !(Heap_$_3[this,Node.prev] == null);
	assume wf(Heap_$_3,Mask_$_10,SecMask_$_50);
	assume (Heap_$_3[Heap_$_3[this,Node.prev],Node.next] == null) || (dtype(Heap_$_3[Heap_$_3[this,Node.prev],Node.next]) == Node#t);
	assume 1 > 0;
	assume Mask_$_11 == Mask_$_10[Heap_$_3[this,Node.prev],Node.next := Mask_$_10[Heap_$_3[this,Node.prev],Node.next][perm$N := Mask_$_10[Heap_$_3[this,Node.prev],Node.next][perm$N] + 1]];
	assume wf(Heap_$_3,Mask_$_11,SecMask_$_50);
	assume IsGoodMask(Mask_$_11);
	assume IsGoodState(heapFragment(Heap_$_3[Heap_$_3[this,Node.prev],Node.next]));
	assume wf(Heap_$_3,Mask_$_11,SecMask_$_50);
	assume wf(Heap_$_3,Mask_$_11,SecMask_$_50);
	assume !(Heap_$_3[this,Node.prev] == null);
	assume wf(Heap_$_3,Mask_$_11,SecMask_$_50);
	assume true;
	assume 1 > 0;
	assume Mask_$_12 == Mask_$_11[Heap_$_3[this,Node.prev],mu := Mask_$_11[Heap_$_3[this,Node.prev],mu][perm$N := Mask_$_11[Heap_$_3[this,Node.prev],mu][perm$N] + 1]];
	assume wf(Heap_$_3,Mask_$_12,SecMask_$_50);
	assume IsGoodMask(Mask_$_12);
	assume IsGoodState(heapFragment(Heap_$_3[Heap_$_3[this,Node.prev],mu]));
	assume wf(Heap_$_3,Mask_$_12,SecMask_$_50);
	assume wf(Heap_$_3,Mask_$_12,SecMask_$_50);
	if ($_$_condition_$34) { goto anon1539_Then; } else { goto anon1539_Else; }
anon1539_Then:
	assume $_$_condition_$34;
	assume $_$_condition_$34 <==> (!(Heap_$_3[Heap_$_3[this,Node.prev],Node.prev] == null));
	assume !(Heap_$_3[Heap_$_3[this,Node.prev],Node.prev] == null);
	assume !(Heap_$_3[Heap_$_3[this,Node.prev],Node.prev] == null);
	assume wf(Heap_$_3,Mask_$_12,SecMask_$_50);
	assume Fractions(100) > 0;
	assume Mask_$_13 == Mask_$_12[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.invLeft := Mask_$_12[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.invLeft][perm$R := Mask_$_12[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.invLeft][perm$R] + Fractions(100)]];
	assume IsGoodMask(Mask_$_13);
	assume IsGoodState(heapFragment(Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.invLeft]));
	assume wf(Heap_$_3,Mask_$_13,SecMask_$_50);
	assume wf(Heap_$_3,Mask_$_13,SecMask_$_50);
	assume predRec#_377_$_0 == Heap_$_3[Heap_$_3[this,Node.prev],Node.prev];
	assume #Node.invLeft#trigger(Heap_$_3[Heap_$_3[this,Node.prev],Node.prev]);
	assume predVer#_378_$_0 == Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.invLeft];
	if ($_$_condition_$35) { goto anon1540_Then; } else { goto anon1540_Else; }
anon1539_Else:
	assume !$_$_condition_$34;
	assume $_$_condition_$34 <==> (!(Heap_$_3[Heap_$_3[this,Node.prev],Node.prev] == null));
	assume Heap_$_3[Heap_$_3[this,Node.prev],Node.prev] == null;
	assume Mask_$_14 == Mask_$_12;
	assume SecMask_$_70 == SecMask_$_50;
	assume predRec#_377_$_1 == predRec#_377;
	assume predFlag#_379_$_0 <==> predFlag#_379;
	assume predVer#_378_$_1 == predVer#_378;
	goto anon117;
anon1540_Then:
	assume $_$_condition_$35;
	assume $_$_condition_$35 <==> (false || ((((predVer#_347_$_1 == Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_3[Heap_$_3[this,Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume false || ((((predVer#_347_$_1 == Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_3[Heap_$_3[this,Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$36) { goto anon1541_Then; } else { goto anon1541_Else; }
anon1540_Else:
	assume !$_$_condition_$35;
	assume $_$_condition_$35 <==> (false || ((((predVer#_347_$_1 == Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_3[Heap_$_3[this,Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume !(false || ((((predVer#_347_$_1 == Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_3[Heap_$_3[this,Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume SecMask_$_64 == SecMask_$_50;
	goto anon114;
anon117:
	assume IsGoodMask(Mask_$_14);
	assume wf(Heap_$_3,Mask_$_14,SecMask_$_70);
	assert { :msg "  46.13: SMOKE-TEST-4. (The statements after the unfold statement are unreachable.)" } !(1 == 1);
	assume cond#_386_$_0 <==> (!(Heap_$_3[Heap_$_3[this,Node.prev],Node.prev] == null));
	assert { :msg "  47.16: Receiver might be null." } true ==> (!(this == null));
	assert { :msg "  47.16: Location might not be readable." } true ==> CanRead(Mask_$_14,SecMask_$_70,this,Node.prev);
	assert { :msg "  47.16: Receiver might be null." } true ==> (!(Heap_$_3[this,Node.prev] == null));
	assert { :msg "  47.16: Location might not be readable." } true ==> CanRead(Mask_$_14,SecMask_$_70,Heap_$_3[this,Node.prev],Node.prev);
	if ($_$_condition_$43) { goto anon1548_Then; } else { goto anon1548_Else; }
anon1541_Then:
	assume $_$_condition_$36;
	assume $_$_condition_$36 <==> (!(Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev] == null);
	assume MuBelow(Heap_$_3[Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev],mu],Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],mu]);
	goto anon103;
anon1541_Else:
	assume !$_$_condition_$36;
	assume $_$_condition_$36 <==> (!(Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev] == null;
	goto anon103;
anon114:
	assume !(predRec#_377_$_0 == null);
	assume wf(Heap_$_3,Mask_$_13,SecMask_$_64);
	assume (Heap_$_3[predRec#_377_$_0,Node.prev] == null) || (dtype(Heap_$_3[predRec#_377_$_0,Node.prev]) == Node#t);
	assume 1 > 0;
	assume SecMask_$_65 == SecMask_$_64[predRec#_377_$_0,Node.prev := SecMask_$_64[predRec#_377_$_0,Node.prev][perm$N := SecMask_$_64[predRec#_377_$_0,Node.prev][perm$N] + 1]];
	assume wf(Heap_$_3,SecMask_$_65,SecMask_$_65);
	assume IsGoodMask(Mask_$_13);
	assume IsGoodState(heapFragment(Heap_$_3[predRec#_377_$_0,Node.prev]));
	assume wf(Heap_$_3,Mask_$_13,SecMask_$_65);
	assume wf(Heap_$_3,Mask_$_13,SecMask_$_65);
	assume !(predRec#_377_$_0 == null);
	assume wf(Heap_$_3,Mask_$_13,SecMask_$_65);
	assume (Heap_$_3[predRec#_377_$_0,Node.next] == null) || (dtype(Heap_$_3[predRec#_377_$_0,Node.next]) == Node#t);
	assume 1 > 0;
	assume SecMask_$_66 == SecMask_$_65[predRec#_377_$_0,Node.next := SecMask_$_65[predRec#_377_$_0,Node.next][perm$N := SecMask_$_65[predRec#_377_$_0,Node.next][perm$N] + 1]];
	assume wf(Heap_$_3,SecMask_$_66,SecMask_$_66);
	assume IsGoodMask(Mask_$_13);
	assume IsGoodState(heapFragment(Heap_$_3[predRec#_377_$_0,Node.next]));
	assume wf(Heap_$_3,Mask_$_13,SecMask_$_66);
	assume wf(Heap_$_3,Mask_$_13,SecMask_$_66);
	assume !(predRec#_377_$_0 == null);
	assume wf(Heap_$_3,Mask_$_13,SecMask_$_66);
	assume true;
	assume 1 > 0;
	assume SecMask_$_67 == SecMask_$_66[predRec#_377_$_0,mu := SecMask_$_66[predRec#_377_$_0,mu][perm$N := SecMask_$_66[predRec#_377_$_0,mu][perm$N] + 1]];
	assume wf(Heap_$_3,SecMask_$_67,SecMask_$_67);
	assume IsGoodMask(Mask_$_13);
	assume IsGoodState(heapFragment(Heap_$_3[predRec#_377_$_0,mu]));
	assume wf(Heap_$_3,Mask_$_13,SecMask_$_67);
	assume wf(Heap_$_3,Mask_$_13,SecMask_$_67);
	if ($_$_condition_$42) { goto anon1547_Then; } else { goto anon1547_Else; }
anon103:
	assume SecMask_$_51 == SecMask_$_50[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev := SecMask_$_50[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev][perm$N := SecMask_$_50[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_3,Mask_$_13,SecMask_$_51);
	if ($_$_condition_$37) { goto anon1542_Then; } else { goto anon1542_Else; }
anon1542_Then:
	assume $_$_condition_$37;
	assume SecMask_$_51[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev][perm$N] < 0;
	assume SecMask_$_52 == SecMask_$_51[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev := SecMask_$_51[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev][perm$N := 0]];
	assume SecMask_$_53 == SecMask_$_52;
	goto anon105;
anon1542_Else:
	assume !$_$_condition_$37;
	assume 0 <= SecMask_$_51[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev][perm$N];
	assume SecMask_$_53 == SecMask_$_51;
	goto anon105;
anon105:
	assume wf(Heap_$_3,SecMask_$_53,SecMask_$_53);
	assume wf(Heap_$_3,Mask_$_13,SecMask_$_53);
	assume SecMask_$_54 == SecMask_$_53[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.next := SecMask_$_53[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.next][perm$N := SecMask_$_53[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.next][perm$N] - 1]];
	assume wf(Heap_$_3,Mask_$_13,SecMask_$_54);
	if ($_$_condition_$38) { goto anon1543_Then; } else { goto anon1543_Else; }
anon1543_Then:
	assume $_$_condition_$38;
	assume SecMask_$_54[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.next][perm$N] < 0;
	assume SecMask_$_55 == SecMask_$_54[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.next := SecMask_$_54[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.next][perm$N := 0]];
	assume SecMask_$_56 == SecMask_$_55;
	goto anon107;
anon1543_Else:
	assume !$_$_condition_$38;
	assume 0 <= SecMask_$_54[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.next][perm$N];
	assume SecMask_$_56 == SecMask_$_54;
	goto anon107;
anon107:
	assume wf(Heap_$_3,SecMask_$_56,SecMask_$_56);
	assume wf(Heap_$_3,Mask_$_13,SecMask_$_56);
	assume SecMask_$_57 == SecMask_$_56[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],mu := SecMask_$_56[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],mu][perm$N := SecMask_$_56[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],mu][perm$N] - 1]];
	assume wf(Heap_$_3,Mask_$_13,SecMask_$_57);
	if ($_$_condition_$39) { goto anon1544_Then; } else { goto anon1544_Else; }
anon1544_Then:
	assume $_$_condition_$39;
	assume SecMask_$_57[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],mu][perm$N] < 0;
	assume SecMask_$_58 == SecMask_$_57[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],mu := SecMask_$_57[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],mu][perm$N := 0]];
	assume SecMask_$_59 == SecMask_$_58;
	goto anon109;
anon1544_Else:
	assume !$_$_condition_$39;
	assume 0 <= SecMask_$_57[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],mu][perm$N];
	assume SecMask_$_59 == SecMask_$_57;
	goto anon109;
anon109:
	assume wf(Heap_$_3,SecMask_$_59,SecMask_$_59);
	assume wf(Heap_$_3,Mask_$_13,SecMask_$_59);
	if ($_$_condition_$40) { goto anon1545_Then; } else { goto anon1545_Else; }
anon1545_Then:
	assume $_$_condition_$40;
	assume $_$_condition_$40 <==> (!(Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev] == null);
	assume SecMask_$_60 == SecMask_$_59[Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_59[Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := SecMask_$_59[Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] - Fractions(100)]];
	if ($_$_condition_$41) { goto anon1546_Then; } else { goto anon1546_Else; }
anon1545_Else:
	assume !$_$_condition_$40;
	assume $_$_condition_$40 <==> (!(Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev] == null;
	assume SecMask_$_63 == SecMask_$_59;
	goto anon113;
anon1546_Then:
	assume $_$_condition_$41;
	assume SecMask_$_60[Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] < 0;
	assume SecMask_$_61 == SecMask_$_60[Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_60[Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := 0]];
	assume SecMask_$_62 == SecMask_$_61;
	goto anon112;
anon1546_Else:
	assume !$_$_condition_$41;
	assume 0 <= SecMask_$_60[Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R];
	assume SecMask_$_62 == SecMask_$_60;
	goto anon112;
anon113:
	assume wf(Heap_$_3,SecMask_$_63,SecMask_$_63);
	assume SecMask_$_64 == SecMask_$_63;
	goto anon114;
anon112:
	assume wf(Heap_$_3,SecMask_$_62,SecMask_$_62);
	assume wf(Heap_$_3,Mask_$_13,SecMask_$_62);
	assume SecMask_$_63 == SecMask_$_62;
	goto anon113;
anon1547_Then:
	assume $_$_condition_$42;
	assume $_$_condition_$42 <==> (!(Heap_$_3[predRec#_377_$_0,Node.prev] == null));
	assume !(Heap_$_3[predRec#_377_$_0,Node.prev] == null);
	assume !(Heap_$_3[predRec#_377_$_0,Node.prev] == null);
	assume wf(Heap_$_3,Mask_$_13,SecMask_$_67);
	assume Fractions(100) > 0;
	assume SecMask_$_68 == SecMask_$_67[Heap_$_3[predRec#_377_$_0,Node.prev],Node.invLeft := SecMask_$_67[Heap_$_3[predRec#_377_$_0,Node.prev],Node.invLeft][perm$R := SecMask_$_67[Heap_$_3[predRec#_377_$_0,Node.prev],Node.invLeft][perm$R] + Fractions(100)]];
	assume IsGoodMask(Mask_$_13);
	assume IsGoodState(heapFragment(Heap_$_3[Heap_$_3[predRec#_377_$_0,Node.prev],Node.invLeft]));
	assume wf(Heap_$_3,Mask_$_13,SecMask_$_68);
	assume wf(Heap_$_3,Mask_$_13,SecMask_$_68);
	assume SecMask_$_69 == SecMask_$_68;
	goto anon116;
anon1547_Else:
	assume !$_$_condition_$42;
	assume $_$_condition_$42 <==> (!(Heap_$_3[predRec#_377_$_0,Node.prev] == null));
	assume Heap_$_3[predRec#_377_$_0,Node.prev] == null;
	assume SecMask_$_69 == SecMask_$_67;
	goto anon116;
anon116:
	assume MuBelow(Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],mu],Heap_$_3[Heap_$_3[this,Node.prev],mu]);
	assume Mask_$_14 == Mask_$_13;
	assume SecMask_$_70 == SecMask_$_69;
	assume predRec#_377_$_1 == predRec#_377_$_0;
	assume predFlag#_379_$_0 <==> true;
	assume predVer#_378_$_1 == predVer#_378_$_0;
	goto anon117;
anon1548_Then:
	assume $_$_condition_$43;
	assume $_$_condition_$43 <==> cond#_386_$_0;
	assume cond#_386_$_0;
	assert { :msg "  47.13: SMOKE-TEST-5. (The begging of the if-branch is unreachable.)" } !(1 == 1);
	assume #Node.invLeft#trigger(Heap_$_3[Heap_$_3[this,Node.prev],Node.prev]);
	assume ((0 < unfoldK#_387) && (unfoldK#_387 < Fractions(1))) && ((1000 * unfoldK#_387) < methodK#_170);
	assert { :msg "  47.44: Receiver might be null." } true ==> (!(this == null));
	assert { :msg "  47.44: Location might not be readable." } true ==> CanRead(Mask_$_14,SecMask_$_70,this,Node.prev);
	assert { :msg "  47.44: Receiver might be null." } true ==> (!(Heap_$_3[this,Node.prev] == null));
	assert { :msg "  47.44: Location might not be readable." } true ==> CanRead(Mask_$_14,SecMask_$_70,Heap_$_3[this,Node.prev],Node.prev);
	assert { :msg "  47.37: The target of the fold statement might be null." } !(Heap_$_3[Heap_$_3[this,Node.prev],Node.prev] == null);
	assert { :msg "  47.37: unfold might fail because the predicate Node.invLeft does not hold. The permission at <undefined position> might not be positive." } Fractions(100) > 0;
	assert { :msg "  47.37: unfold might fail because the predicate Node.invLeft does not hold. Insufficient fraction at <undefined position> for Node.invLeft." } (Fractions(100) <= Mask_$_14[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.invLeft][perm$R]) && ((Fractions(100) == Mask_$_14[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.invLeft][perm$R]) ==> (0 <= Mask_$_14[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.invLeft][perm$N]));
	assume Mask_$_15 == Mask_$_14[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.invLeft := Mask_$_14[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.invLeft][perm$R := Mask_$_14[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.invLeft][perm$R] - Fractions(100)]];
	if ($_$_condition_$44) { goto anon1549_Then; } else { goto anon1549_Else; }
anon1548_Else:
	assume !$_$_condition_$43;
	assume $_$_condition_$43 <==> cond#_386_$_0;
	assume !cond#_386_$_0;
	assume SecMask_$_105 == SecMask_$_70;
	assume Mask_$_21 == Mask_$_14;
	assume Heap_$_6 == Heap_$_3;
	assume predRec#_377_$_2 == predRec#_377_$_1;
	assume predFlag#_379_$_1 <==> predFlag#_379_$_0;
	assume predVer#_378_$_2 == predVer#_378_$_1;
	assume cond#_386_$_1 <==> cond#_386_$_0;
	assume predRec#_399_$_2 == predRec#_399;
	assume predFlag#_401_$_1 <==> predFlag#_401;
	assume predVer#_400_$_2 == predVer#_400;
	goto anon159;
anon1549_Then:
	assume $_$_condition_$44;
	assume $_$_condition_$44 <==> ((false || (((((predVer#_378_$_1 == Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_1 == Heap_$_3[Heap_$_3[this,Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_0)) || ((((predVer#_347_$_1 == Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_3[Heap_$_3[this,Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume (false || (((((predVer#_378_$_1 == Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_1 == Heap_$_3[Heap_$_3[this,Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_0)) || ((((predVer#_347_$_1 == Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_3[Heap_$_3[this,Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$45) { goto anon1550_Then; } else { goto anon1550_Else; }
anon1549_Else:
	assume !$_$_condition_$44;
	assume $_$_condition_$44 <==> ((false || (((((predVer#_378_$_1 == Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_1 == Heap_$_3[Heap_$_3[this,Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_0)) || ((((predVer#_347_$_1 == Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_3[Heap_$_3[this,Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume !((false || (((((predVer#_378_$_1 == Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_1 == Heap_$_3[Heap_$_3[this,Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_0)) || ((((predVer#_347_$_1 == Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_3[Heap_$_3[this,Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume SecMask_$_84 == SecMask_$_70;
	goto $branchMerge_6;
anon1550_Then:
	assume $_$_condition_$45;
	assume $_$_condition_$45 <==> ((((predVer#_347_$_1 == Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_3[Heap_$_3[this,Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume (((predVer#_347_$_1 == Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_3[Heap_$_3[this,Node.prev],Node.prev])) && true) && predFlag#_348_$_0;
	goto $branchMerge_7;
anon1550_Else:
	assume !$_$_condition_$45;
	assume $_$_condition_$45 <==> ((((predVer#_347_$_1 == Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_3[Heap_$_3[this,Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume !((((predVer#_347_$_1 == Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_3[Heap_$_3[this,Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	goto $branchMerge_7;
anon1557_Then:
	assume $_$_condition_$46;
	assume $_$_condition_$46 <==> (!CanRead(Mask_$_15,SecMask_$_84,Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.invLeft));
	assume !CanRead(Mask_$_15,SecMask_$_84,Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.invLeft);
	assume oldVers#_397_$_0 == Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.invLeft];
	assume Heap_$_4 == Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.invLeft := newVers#_398_$_0];
	assume oldVers#_397_$_0 < Heap_$_4[Heap_$_4[Heap_$_4[this,Node.prev],Node.prev],Node.invLeft];
	assume Heap_$_5 == Heap_$_4;
	goto anon137;
anon1557_Else:
	assume !$_$_condition_$46;
	assume $_$_condition_$46 <==> (!CanRead(Mask_$_15,SecMask_$_84,Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.invLeft));
	assume CanRead(Mask_$_15,SecMask_$_84,Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.invLeft);
	assume Heap_$_5 == Heap_$_3;
	goto anon137;
anon1551_Then:
	assume $_$_condition_$47;
	assume $_$_condition_$47 <==> (!(Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev] == null);
	assume MuBelow(Heap_$_3[Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev],mu],Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],mu]);
	goto anon124;
anon1551_Else:
	assume !$_$_condition_$47;
	assume $_$_condition_$47 <==> (!(Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev] == null;
	goto anon124;
anon124:
	assume SecMask_$_71 == SecMask_$_70[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev := SecMask_$_70[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev][perm$N := SecMask_$_70[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_3,Mask_$_15,SecMask_$_71);
	if ($_$_condition_$49) { goto anon1552_Then; } else { goto anon1552_Else; }
anon1552_Then:
	assume $_$_condition_$49;
	assume SecMask_$_71[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev][perm$N] < 0;
	assume SecMask_$_72 == SecMask_$_71[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev := SecMask_$_71[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev][perm$N := 0]];
	assume SecMask_$_73 == SecMask_$_72;
	goto anon126;
anon1552_Else:
	assume !$_$_condition_$49;
	assume 0 <= SecMask_$_71[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev][perm$N];
	assume SecMask_$_73 == SecMask_$_71;
	goto anon126;
anon126:
	assume wf(Heap_$_3,SecMask_$_73,SecMask_$_73);
	assume wf(Heap_$_3,Mask_$_15,SecMask_$_73);
	assume SecMask_$_74 == SecMask_$_73[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.next := SecMask_$_73[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.next][perm$N := SecMask_$_73[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.next][perm$N] - 1]];
	assume wf(Heap_$_3,Mask_$_15,SecMask_$_74);
	if ($_$_condition_$50) { goto anon1553_Then; } else { goto anon1553_Else; }
anon1553_Then:
	assume $_$_condition_$50;
	assume SecMask_$_74[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.next][perm$N] < 0;
	assume SecMask_$_75 == SecMask_$_74[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.next := SecMask_$_74[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.next][perm$N := 0]];
	assume SecMask_$_76 == SecMask_$_75;
	goto anon128;
anon1553_Else:
	assume !$_$_condition_$50;
	assume 0 <= SecMask_$_74[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.next][perm$N];
	assume SecMask_$_76 == SecMask_$_74;
	goto anon128;
anon128:
	assume wf(Heap_$_3,SecMask_$_76,SecMask_$_76);
	assume wf(Heap_$_3,Mask_$_15,SecMask_$_76);
	assume SecMask_$_77 == SecMask_$_76[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],mu := SecMask_$_76[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],mu][perm$N := SecMask_$_76[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],mu][perm$N] - 1]];
	assume wf(Heap_$_3,Mask_$_15,SecMask_$_77);
	if ($_$_condition_$51) { goto anon1554_Then; } else { goto anon1554_Else; }
anon1554_Then:
	assume $_$_condition_$51;
	assume SecMask_$_77[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],mu][perm$N] < 0;
	assume SecMask_$_78 == SecMask_$_77[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],mu := SecMask_$_77[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],mu][perm$N := 0]];
	assume SecMask_$_79 == SecMask_$_78;
	goto anon130;
anon1554_Else:
	assume !$_$_condition_$51;
	assume 0 <= SecMask_$_77[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],mu][perm$N];
	assume SecMask_$_79 == SecMask_$_77;
	goto anon130;
anon130:
	assume wf(Heap_$_3,SecMask_$_79,SecMask_$_79);
	assume wf(Heap_$_3,Mask_$_15,SecMask_$_79);
	if ($_$_condition_$52) { goto anon1555_Then; } else { goto anon1555_Else; }
anon1555_Then:
	assume $_$_condition_$52;
	assume $_$_condition_$52 <==> (!(Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev] == null);
	assume SecMask_$_80 == SecMask_$_79[Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_79[Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := SecMask_$_79[Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] - Fractions(100)]];
	if ($_$_condition_$53) { goto anon1556_Then; } else { goto anon1556_Else; }
anon1555_Else:
	assume !$_$_condition_$52;
	assume $_$_condition_$52 <==> (!(Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev] == null;
	assume SecMask_$_83 == SecMask_$_79;
	goto anon134;
anon1556_Then:
	assume $_$_condition_$53;
	assume SecMask_$_80[Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] < 0;
	assume SecMask_$_81 == SecMask_$_80[Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_80[Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := 0]];
	assume SecMask_$_82 == SecMask_$_81;
	goto anon133;
anon1556_Else:
	assume !$_$_condition_$53;
	assume 0 <= SecMask_$_80[Heap_$_3[Heap_$_3[Heap_$_3[this,Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R];
	assume SecMask_$_82 == SecMask_$_80;
	goto anon133;
anon134:
	assume wf(Heap_$_3,SecMask_$_83,SecMask_$_83);
	assume SecMask_$_84 == SecMask_$_83;
	goto $branchMerge_6;
anon133:
	assume wf(Heap_$_3,SecMask_$_82,SecMask_$_82);
	assume wf(Heap_$_3,Mask_$_15,SecMask_$_82);
	assume SecMask_$_83 == SecMask_$_82;
	goto anon134;
anon137:
	assume IsGoodMask(Mask_$_15);
	assume wf(Heap_$_5,Mask_$_15,SecMask_$_84);
	assume IsGoodMask(Mask_$_15);
	assume wf(Heap_$_5,Mask_$_15,SecMask_$_84);
	assume !(Heap_$_5[Heap_$_5[this,Node.prev],Node.prev] == null);
	assume wf(Heap_$_5,Mask_$_15,SecMask_$_84);
	assume (Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev] == null) || (dtype(Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev]) == Node#t);
	assume 1 > 0;
	assume Mask_$_16 == Mask_$_15[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev := Mask_$_15[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev][perm$N := Mask_$_15[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev][perm$N] + 1]];
	assume wf(Heap_$_5,Mask_$_16,SecMask_$_84);
	assume IsGoodMask(Mask_$_16);
	assume IsGoodState(heapFragment(Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev]));
	assume wf(Heap_$_5,Mask_$_16,SecMask_$_84);
	assume wf(Heap_$_5,Mask_$_16,SecMask_$_84);
	assume !(Heap_$_5[Heap_$_5[this,Node.prev],Node.prev] == null);
	assume wf(Heap_$_5,Mask_$_16,SecMask_$_84);
	assume (Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.next] == null) || (dtype(Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.next]) == Node#t);
	assume 1 > 0;
	assume Mask_$_17 == Mask_$_16[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.next := Mask_$_16[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.next][perm$N := Mask_$_16[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.next][perm$N] + 1]];
	assume wf(Heap_$_5,Mask_$_17,SecMask_$_84);
	assume IsGoodMask(Mask_$_17);
	assume IsGoodState(heapFragment(Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.next]));
	assume wf(Heap_$_5,Mask_$_17,SecMask_$_84);
	assume wf(Heap_$_5,Mask_$_17,SecMask_$_84);
	assume !(Heap_$_5[Heap_$_5[this,Node.prev],Node.prev] == null);
	assume wf(Heap_$_5,Mask_$_17,SecMask_$_84);
	assume true;
	assume 1 > 0;
	assume Mask_$_18 == Mask_$_17[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],mu := Mask_$_17[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],mu][perm$N := Mask_$_17[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],mu][perm$N] + 1]];
	assume wf(Heap_$_5,Mask_$_18,SecMask_$_84);
	assume IsGoodMask(Mask_$_18);
	assume IsGoodState(heapFragment(Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],mu]));
	assume wf(Heap_$_5,Mask_$_18,SecMask_$_84);
	assume wf(Heap_$_5,Mask_$_18,SecMask_$_84);
	if ($_$_condition_$55) { goto anon1558_Then; } else { goto anon1558_Else; }
anon1558_Then:
	assume $_$_condition_$55;
	assume $_$_condition_$55 <==> (!(Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev] == null);
	assume !(Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev] == null);
	assume wf(Heap_$_5,Mask_$_18,SecMask_$_84);
	assume Fractions(100) > 0;
	assume Mask_$_19 == Mask_$_18[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.invLeft := Mask_$_18[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := Mask_$_18[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] + Fractions(100)]];
	assume IsGoodMask(Mask_$_19);
	assume IsGoodState(heapFragment(Heap_$_5[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.invLeft]));
	assume wf(Heap_$_5,Mask_$_19,SecMask_$_84);
	assume wf(Heap_$_5,Mask_$_19,SecMask_$_84);
	assume predRec#_399_$_0 == Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev];
	assume #Node.invLeft#trigger(Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev]);
	assume predVer#_400_$_0 == Heap_$_5[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.invLeft];
	if ($_$_condition_$56) { goto anon1559_Then; } else { goto anon1559_Else; }
anon1558_Else:
	assume !$_$_condition_$55;
	assume $_$_condition_$55 <==> (!(Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev] == null;
	assume SecMask_$_104 == SecMask_$_84;
	assume Mask_$_20 == Mask_$_18;
	assume predRec#_399_$_1 == predRec#_399;
	assume predFlag#_401_$_0 <==> predFlag#_401;
	assume predVer#_400_$_1 == predVer#_400;
	goto anon158;
anon1559_Then:
	assume $_$_condition_$56;
	assume $_$_condition_$56 <==> ((false || (((((predVer#_378_$_1 == Heap_$_5[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_1 == Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_0)) || ((((predVer#_347_$_1 == Heap_$_5[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume (false || (((((predVer#_378_$_1 == Heap_$_5[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_1 == Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_0)) || ((((predVer#_347_$_1 == Heap_$_5[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$57) { goto anon1560_Then; } else { goto anon1560_Else; }
anon1559_Else:
	assume !$_$_condition_$56;
	assume $_$_condition_$56 <==> ((false || (((((predVer#_378_$_1 == Heap_$_5[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_1 == Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_0)) || ((((predVer#_347_$_1 == Heap_$_5[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume !((false || (((((predVer#_378_$_1 == Heap_$_5[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_1 == Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_0)) || ((((predVer#_347_$_1 == Heap_$_5[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume SecMask_$_98 == SecMask_$_84;
	goto anon155;
anon158:
	assume IsGoodMask(Mask_$_20);
	assume wf(Heap_$_5,Mask_$_20,SecMask_$_104);
	assert { :msg "  47.37: SMOKE-TEST-6. (The statements after the unfold statement are unreachable.)" } !(1 == 1);
	assume SecMask_$_105 == SecMask_$_104;
	assume Mask_$_21 == Mask_$_20;
	assume Heap_$_6 == Heap_$_5;
	assume predRec#_377_$_2 == predRec#_377_$_1;
	assume predFlag#_379_$_1 <==> predFlag#_379_$_0;
	assume predVer#_378_$_2 == predVer#_378_$_1;
	assume cond#_386_$_1 <==> cond#_386_$_0;
	assume predRec#_399_$_2 == predRec#_399_$_1;
	assume predFlag#_401_$_1 <==> predFlag#_401_$_0;
	assume predVer#_400_$_2 == predVer#_400_$_1;
	goto anon159;
anon1560_Then:
	assume $_$_condition_$57;
	assume $_$_condition_$57 <==> ((((predVer#_347_$_1 == Heap_$_5[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume (((predVer#_347_$_1 == Heap_$_5[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0;
	goto $branchMerge_8;
anon1560_Else:
	assume !$_$_condition_$57;
	assume $_$_condition_$57 <==> ((((predVer#_347_$_1 == Heap_$_5[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume !((((predVer#_347_$_1 == Heap_$_5[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	goto $branchMerge_8;
anon155:
	assume !(predRec#_399_$_0 == null);
	assume wf(Heap_$_5,Mask_$_19,SecMask_$_98);
	assume (Heap_$_5[predRec#_399_$_0,Node.prev] == null) || (dtype(Heap_$_5[predRec#_399_$_0,Node.prev]) == Node#t);
	assume 1 > 0;
	assume SecMask_$_99 == SecMask_$_98[predRec#_399_$_0,Node.prev := SecMask_$_98[predRec#_399_$_0,Node.prev][perm$N := SecMask_$_98[predRec#_399_$_0,Node.prev][perm$N] + 1]];
	assume wf(Heap_$_5,SecMask_$_99,SecMask_$_99);
	assume IsGoodMask(Mask_$_19);
	assume IsGoodState(heapFragment(Heap_$_5[predRec#_399_$_0,Node.prev]));
	assume wf(Heap_$_5,Mask_$_19,SecMask_$_99);
	assume wf(Heap_$_5,Mask_$_19,SecMask_$_99);
	assume !(predRec#_399_$_0 == null);
	assume wf(Heap_$_5,Mask_$_19,SecMask_$_99);
	assume (Heap_$_5[predRec#_399_$_0,Node.next] == null) || (dtype(Heap_$_5[predRec#_399_$_0,Node.next]) == Node#t);
	assume 1 > 0;
	assume SecMask_$_100 == SecMask_$_99[predRec#_399_$_0,Node.next := SecMask_$_99[predRec#_399_$_0,Node.next][perm$N := SecMask_$_99[predRec#_399_$_0,Node.next][perm$N] + 1]];
	assume wf(Heap_$_5,SecMask_$_100,SecMask_$_100);
	assume IsGoodMask(Mask_$_19);
	assume IsGoodState(heapFragment(Heap_$_5[predRec#_399_$_0,Node.next]));
	assume wf(Heap_$_5,Mask_$_19,SecMask_$_100);
	assume wf(Heap_$_5,Mask_$_19,SecMask_$_100);
	assume !(predRec#_399_$_0 == null);
	assume wf(Heap_$_5,Mask_$_19,SecMask_$_100);
	assume true;
	assume 1 > 0;
	assume SecMask_$_101 == SecMask_$_100[predRec#_399_$_0,mu := SecMask_$_100[predRec#_399_$_0,mu][perm$N := SecMask_$_100[predRec#_399_$_0,mu][perm$N] + 1]];
	assume wf(Heap_$_5,SecMask_$_101,SecMask_$_101);
	assume IsGoodMask(Mask_$_19);
	assume IsGoodState(heapFragment(Heap_$_5[predRec#_399_$_0,mu]));
	assume wf(Heap_$_5,Mask_$_19,SecMask_$_101);
	assume wf(Heap_$_5,Mask_$_19,SecMask_$_101);
	if ($_$_condition_$65) { goto anon1567_Then; } else { goto anon1567_Else; }
anon1561_Then:
	assume $_$_condition_$58;
	assume $_$_condition_$58 <==> (!(Heap_$_5[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_5[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.prev] == null);
	assume MuBelow(Heap_$_5[Heap_$_5[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.prev],mu],Heap_$_5[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],mu]);
	goto anon144;
anon1561_Else:
	assume !$_$_condition_$58;
	assume $_$_condition_$58 <==> (!(Heap_$_5[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_5[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.prev] == null;
	goto anon144;
anon144:
	assume SecMask_$_85 == SecMask_$_84[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.prev := SecMask_$_84[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.prev][perm$N := SecMask_$_84[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_5,Mask_$_19,SecMask_$_85);
	if ($_$_condition_$60) { goto anon1562_Then; } else { goto anon1562_Else; }
anon1562_Then:
	assume $_$_condition_$60;
	assume SecMask_$_85[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.prev][perm$N] < 0;
	assume SecMask_$_86 == SecMask_$_85[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.prev := SecMask_$_85[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.prev][perm$N := 0]];
	assume SecMask_$_87 == SecMask_$_86;
	goto anon146;
anon1562_Else:
	assume !$_$_condition_$60;
	assume 0 <= SecMask_$_85[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.prev][perm$N];
	assume SecMask_$_87 == SecMask_$_85;
	goto anon146;
anon146:
	assume wf(Heap_$_5,SecMask_$_87,SecMask_$_87);
	assume wf(Heap_$_5,Mask_$_19,SecMask_$_87);
	assume SecMask_$_88 == SecMask_$_87[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.next := SecMask_$_87[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.next][perm$N := SecMask_$_87[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.next][perm$N] - 1]];
	assume wf(Heap_$_5,Mask_$_19,SecMask_$_88);
	if ($_$_condition_$61) { goto anon1563_Then; } else { goto anon1563_Else; }
anon1563_Then:
	assume $_$_condition_$61;
	assume SecMask_$_88[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.next][perm$N] < 0;
	assume SecMask_$_89 == SecMask_$_88[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.next := SecMask_$_88[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.next][perm$N := 0]];
	assume SecMask_$_90 == SecMask_$_89;
	goto anon148;
anon1563_Else:
	assume !$_$_condition_$61;
	assume 0 <= SecMask_$_88[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.next][perm$N];
	assume SecMask_$_90 == SecMask_$_88;
	goto anon148;
anon148:
	assume wf(Heap_$_5,SecMask_$_90,SecMask_$_90);
	assume wf(Heap_$_5,Mask_$_19,SecMask_$_90);
	assume SecMask_$_91 == SecMask_$_90[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],mu := SecMask_$_90[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],mu][perm$N := SecMask_$_90[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],mu][perm$N] - 1]];
	assume wf(Heap_$_5,Mask_$_19,SecMask_$_91);
	if ($_$_condition_$62) { goto anon1564_Then; } else { goto anon1564_Else; }
anon1564_Then:
	assume $_$_condition_$62;
	assume SecMask_$_91[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],mu][perm$N] < 0;
	assume SecMask_$_92 == SecMask_$_91[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],mu := SecMask_$_91[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],mu][perm$N := 0]];
	assume SecMask_$_93 == SecMask_$_92;
	goto anon150;
anon1564_Else:
	assume !$_$_condition_$62;
	assume 0 <= SecMask_$_91[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],mu][perm$N];
	assume SecMask_$_93 == SecMask_$_91;
	goto anon150;
anon150:
	assume wf(Heap_$_5,SecMask_$_93,SecMask_$_93);
	assume wf(Heap_$_5,Mask_$_19,SecMask_$_93);
	if ($_$_condition_$63) { goto anon1565_Then; } else { goto anon1565_Else; }
anon1565_Then:
	assume $_$_condition_$63;
	assume $_$_condition_$63 <==> (!(Heap_$_5[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_5[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.prev] == null);
	assume SecMask_$_94 == SecMask_$_93[Heap_$_5[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_93[Heap_$_5[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := SecMask_$_93[Heap_$_5[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] - Fractions(100)]];
	if ($_$_condition_$64) { goto anon1566_Then; } else { goto anon1566_Else; }
anon1565_Else:
	assume !$_$_condition_$63;
	assume $_$_condition_$63 <==> (!(Heap_$_5[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_5[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.prev] == null;
	assume SecMask_$_97 == SecMask_$_93;
	goto anon154;
anon1566_Then:
	assume $_$_condition_$64;
	assume SecMask_$_94[Heap_$_5[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] < 0;
	assume SecMask_$_95 == SecMask_$_94[Heap_$_5[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_94[Heap_$_5[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := 0]];
	assume SecMask_$_96 == SecMask_$_95;
	goto anon153;
anon1566_Else:
	assume !$_$_condition_$64;
	assume 0 <= SecMask_$_94[Heap_$_5[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R];
	assume SecMask_$_96 == SecMask_$_94;
	goto anon153;
anon154:
	assume wf(Heap_$_5,SecMask_$_97,SecMask_$_97);
	assume SecMask_$_98 == SecMask_$_97;
	goto anon155;
anon153:
	assume wf(Heap_$_5,SecMask_$_96,SecMask_$_96);
	assume wf(Heap_$_5,Mask_$_19,SecMask_$_96);
	assume SecMask_$_97 == SecMask_$_96;
	goto anon154;
anon1567_Then:
	assume $_$_condition_$65;
	assume $_$_condition_$65 <==> (!(Heap_$_5[predRec#_399_$_0,Node.prev] == null));
	assume !(Heap_$_5[predRec#_399_$_0,Node.prev] == null);
	assume !(Heap_$_5[predRec#_399_$_0,Node.prev] == null);
	assume wf(Heap_$_5,Mask_$_19,SecMask_$_101);
	assume Fractions(100) > 0;
	assume SecMask_$_102 == SecMask_$_101[Heap_$_5[predRec#_399_$_0,Node.prev],Node.invLeft := SecMask_$_101[Heap_$_5[predRec#_399_$_0,Node.prev],Node.invLeft][perm$R := SecMask_$_101[Heap_$_5[predRec#_399_$_0,Node.prev],Node.invLeft][perm$R] + Fractions(100)]];
	assume IsGoodMask(Mask_$_19);
	assume IsGoodState(heapFragment(Heap_$_5[Heap_$_5[predRec#_399_$_0,Node.prev],Node.invLeft]));
	assume wf(Heap_$_5,Mask_$_19,SecMask_$_102);
	assume wf(Heap_$_5,Mask_$_19,SecMask_$_102);
	assume SecMask_$_103 == SecMask_$_102;
	goto anon157;
anon1567_Else:
	assume !$_$_condition_$65;
	assume $_$_condition_$65 <==> (!(Heap_$_5[predRec#_399_$_0,Node.prev] == null));
	assume Heap_$_5[predRec#_399_$_0,Node.prev] == null;
	assume SecMask_$_103 == SecMask_$_101;
	goto anon157;
anon157:
	assume MuBelow(Heap_$_5[Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],Node.prev],mu],Heap_$_5[Heap_$_5[Heap_$_5[this,Node.prev],Node.prev],mu]);
	assume SecMask_$_104 == SecMask_$_103;
	assume Mask_$_20 == Mask_$_19;
	assume predRec#_399_$_1 == predRec#_399_$_0;
	assume predFlag#_401_$_0 <==> true;
	assume predVer#_400_$_1 == predVer#_400_$_0;
	goto anon158;
anon1568_Then:
	assume $_$_condition_$66;
	assume $_$_condition_$66 <==> cond#_408_$_0;
	assume cond#_408_$_0;
	assert { :msg "  49.9: SMOKE-TEST-7. (The begging of the if-branch is unreachable.)" } !(1 == 1);
	assume #Node.invRight#trigger(Heap_$_6[this,Node.next]);
	assume ((0 < unfoldK#_409) && (unfoldK#_409 < Fractions(1))) && ((1000 * unfoldK#_409) < methodK#_170);
	assert { :msg "  50.20: Receiver might be null." } true ==> (!(this == null));
	assert { :msg "  50.20: Location might not be readable." } true ==> CanRead(Mask_$_21,SecMask_$_105,this,Node.next);
	assert { :msg "  50.13: The target of the fold statement might be null." } !(Heap_$_6[this,Node.next] == null);
	assert { :msg "  50.13: unfold might fail because the predicate Node.invRight does not hold. The permission at <undefined position> might not be positive." } Fractions(100) > 0;
	assert { :msg "  50.13: unfold might fail because the predicate Node.invRight does not hold. Insufficient fraction at <undefined position> for Node.invRight." } (Fractions(100) <= Mask_$_21[Heap_$_6[this,Node.next],Node.invRight][perm$R]) && ((Fractions(100) == Mask_$_21[Heap_$_6[this,Node.next],Node.invRight][perm$R]) ==> (0 <= Mask_$_21[Heap_$_6[this,Node.next],Node.invRight][perm$N]));
	assume Mask_$_22 == Mask_$_21[Heap_$_6[this,Node.next],Node.invRight := Mask_$_21[Heap_$_6[this,Node.next],Node.invRight][perm$R := Mask_$_21[Heap_$_6[this,Node.next],Node.invRight][perm$R] - Fractions(100)]];
	if ($_$_condition_$67) { goto anon1569_Then; } else { goto anon1569_Else; }
anon1568_Else:
	assume !$_$_condition_$66;
	assume $_$_condition_$66 <==> cond#_408_$_0;
	assume !cond#_408_$_0;
	assume SecMask_$_174 == SecMask_$_105;
	assume Heap_$_11 == Heap_$_6;
	assume Mask_$_34 == Mask_$_21;
	assume predRec#_421_$_2 == predRec#_421;
	assume predFlag#_423_$_1 <==> predFlag#_423;
	assume predVer#_422_$_2 == predVer#_422;
	assume cond#_430_$_1 <==> cond#_430;
	assume predRec#_443_$_2 == predRec#_443;
	assume predFlag#_445_$_1 <==> predFlag#_445;
	assume predVer#_444_$_2 == predVer#_444;
	goto anon236;
anon1569_Then:
	assume $_$_condition_$67;
	assume $_$_condition_$67 <==> (false || ((((predVer#_356_$_1 == Heap_$_6[Heap_$_6[this,Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_6[this,Node.next])) && true) && predFlag#_357_$_0));
	assume false || ((((predVer#_356_$_1 == Heap_$_6[Heap_$_6[this,Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_6[this,Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$68) { goto anon1570_Then; } else { goto anon1570_Else; }
anon1569_Else:
	assume !$_$_condition_$67;
	assume $_$_condition_$67 <==> (false || ((((predVer#_356_$_1 == Heap_$_6[Heap_$_6[this,Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_6[this,Node.next])) && true) && predFlag#_357_$_0));
	assume !(false || ((((predVer#_356_$_1 == Heap_$_6[Heap_$_6[this,Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_6[this,Node.next])) && true) && predFlag#_357_$_0));
	assume SecMask_$_119 == SecMask_$_105;
	goto $branchMerge_9;
anon236:
	assume cond#_452_$_0 <==> (!(Heap_$_11[this,Node.prev] == null));
	assert { :msg "  53.13: Receiver might be null." } true ==> (!(this == null));
	assert { :msg "  53.13: Location might not be readable." } true ==> CanRead(Mask_$_34,SecMask_$_174,this,Node.prev);
	if ($_$_condition_$108) { goto anon1606_Then; } else { goto anon1606_Else; }
anon1570_Then:
	assume $_$_condition_$68;
	assume $_$_condition_$68 <==> (!(Heap_$_6[Heap_$_6[this,Node.next],Node.next] == null));
	assume !(Heap_$_6[Heap_$_6[this,Node.next],Node.next] == null);
	assume MuBelow(Heap_$_6[Heap_$_6[this,Node.next],mu],Heap_$_6[Heap_$_6[Heap_$_6[this,Node.next],Node.next],mu]);
	goto anon163;
anon1570_Else:
	assume !$_$_condition_$68;
	assume $_$_condition_$68 <==> (!(Heap_$_6[Heap_$_6[this,Node.next],Node.next] == null));
	assume Heap_$_6[Heap_$_6[this,Node.next],Node.next] == null;
	goto anon163;
anon1576_Then:
	assume $_$_condition_$69;
	assume $_$_condition_$69 <==> (!CanRead(Mask_$_22,SecMask_$_119,Heap_$_6[this,Node.next],Node.invRight));
	assume !CanRead(Mask_$_22,SecMask_$_119,Heap_$_6[this,Node.next],Node.invRight);
	assume oldVers#_419_$_0 == Heap_$_6[Heap_$_6[this,Node.next],Node.invRight];
	assume Heap_$_7 == Heap_$_6[Heap_$_6[this,Node.next],Node.invRight := newVers#_420_$_0];
	assume oldVers#_419_$_0 < Heap_$_7[Heap_$_7[this,Node.next],Node.invRight];
	assume Heap_$_8 == Heap_$_7;
	goto anon176;
anon1576_Else:
	assume !$_$_condition_$69;
	assume $_$_condition_$69 <==> (!CanRead(Mask_$_22,SecMask_$_119,Heap_$_6[this,Node.next],Node.invRight));
	assume CanRead(Mask_$_22,SecMask_$_119,Heap_$_6[this,Node.next],Node.invRight);
	assume Heap_$_8 == Heap_$_6;
	goto anon176;
anon163:
	assume SecMask_$_106 == SecMask_$_105[Heap_$_6[this,Node.next],Node.prev := SecMask_$_105[Heap_$_6[this,Node.next],Node.prev][perm$N := SecMask_$_105[Heap_$_6[this,Node.next],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_6,Mask_$_22,SecMask_$_106);
	if ($_$_condition_$70) { goto anon1571_Then; } else { goto anon1571_Else; }
anon1571_Then:
	assume $_$_condition_$70;
	assume SecMask_$_106[Heap_$_6[this,Node.next],Node.prev][perm$N] < 0;
	assume SecMask_$_107 == SecMask_$_106[Heap_$_6[this,Node.next],Node.prev := SecMask_$_106[Heap_$_6[this,Node.next],Node.prev][perm$N := 0]];
	assume SecMask_$_108 == SecMask_$_107;
	goto anon165;
anon1571_Else:
	assume !$_$_condition_$70;
	assume 0 <= SecMask_$_106[Heap_$_6[this,Node.next],Node.prev][perm$N];
	assume SecMask_$_108 == SecMask_$_106;
	goto anon165;
anon165:
	assume wf(Heap_$_6,SecMask_$_108,SecMask_$_108);
	assume wf(Heap_$_6,Mask_$_22,SecMask_$_108);
	assume SecMask_$_109 == SecMask_$_108[Heap_$_6[this,Node.next],Node.next := SecMask_$_108[Heap_$_6[this,Node.next],Node.next][perm$N := SecMask_$_108[Heap_$_6[this,Node.next],Node.next][perm$N] - 1]];
	assume wf(Heap_$_6,Mask_$_22,SecMask_$_109);
	if ($_$_condition_$71) { goto anon1572_Then; } else { goto anon1572_Else; }
anon1572_Then:
	assume $_$_condition_$71;
	assume SecMask_$_109[Heap_$_6[this,Node.next],Node.next][perm$N] < 0;
	assume SecMask_$_110 == SecMask_$_109[Heap_$_6[this,Node.next],Node.next := SecMask_$_109[Heap_$_6[this,Node.next],Node.next][perm$N := 0]];
	assume SecMask_$_111 == SecMask_$_110;
	goto anon167;
anon1572_Else:
	assume !$_$_condition_$71;
	assume 0 <= SecMask_$_109[Heap_$_6[this,Node.next],Node.next][perm$N];
	assume SecMask_$_111 == SecMask_$_109;
	goto anon167;
anon167:
	assume wf(Heap_$_6,SecMask_$_111,SecMask_$_111);
	assume wf(Heap_$_6,Mask_$_22,SecMask_$_111);
	assume SecMask_$_112 == SecMask_$_111[Heap_$_6[this,Node.next],mu := SecMask_$_111[Heap_$_6[this,Node.next],mu][perm$N := SecMask_$_111[Heap_$_6[this,Node.next],mu][perm$N] - 1]];
	assume wf(Heap_$_6,Mask_$_22,SecMask_$_112);
	if ($_$_condition_$72) { goto anon1573_Then; } else { goto anon1573_Else; }
anon1573_Then:
	assume $_$_condition_$72;
	assume SecMask_$_112[Heap_$_6[this,Node.next],mu][perm$N] < 0;
	assume SecMask_$_113 == SecMask_$_112[Heap_$_6[this,Node.next],mu := SecMask_$_112[Heap_$_6[this,Node.next],mu][perm$N := 0]];
	assume SecMask_$_114 == SecMask_$_113;
	goto anon169;
anon1573_Else:
	assume !$_$_condition_$72;
	assume 0 <= SecMask_$_112[Heap_$_6[this,Node.next],mu][perm$N];
	assume SecMask_$_114 == SecMask_$_112;
	goto anon169;
anon169:
	assume wf(Heap_$_6,SecMask_$_114,SecMask_$_114);
	assume wf(Heap_$_6,Mask_$_22,SecMask_$_114);
	if ($_$_condition_$73) { goto anon1574_Then; } else { goto anon1574_Else; }
anon1574_Then:
	assume $_$_condition_$73;
	assume $_$_condition_$73 <==> (!(Heap_$_6[Heap_$_6[this,Node.next],Node.next] == null));
	assume !(Heap_$_6[Heap_$_6[this,Node.next],Node.next] == null);
	assume SecMask_$_115 == SecMask_$_114[Heap_$_6[Heap_$_6[this,Node.next],Node.next],Node.invRight := SecMask_$_114[Heap_$_6[Heap_$_6[this,Node.next],Node.next],Node.invRight][perm$R := SecMask_$_114[Heap_$_6[Heap_$_6[this,Node.next],Node.next],Node.invRight][perm$R] - Fractions(100)]];
	if ($_$_condition_$74) { goto anon1575_Then; } else { goto anon1575_Else; }
anon1574_Else:
	assume !$_$_condition_$73;
	assume $_$_condition_$73 <==> (!(Heap_$_6[Heap_$_6[this,Node.next],Node.next] == null));
	assume Heap_$_6[Heap_$_6[this,Node.next],Node.next] == null;
	assume SecMask_$_118 == SecMask_$_114;
	goto anon173;
anon1575_Then:
	assume $_$_condition_$74;
	assume SecMask_$_115[Heap_$_6[Heap_$_6[this,Node.next],Node.next],Node.invRight][perm$R] < 0;
	assume SecMask_$_116 == SecMask_$_115[Heap_$_6[Heap_$_6[this,Node.next],Node.next],Node.invRight := SecMask_$_115[Heap_$_6[Heap_$_6[this,Node.next],Node.next],Node.invRight][perm$R := 0]];
	assume SecMask_$_117 == SecMask_$_116;
	goto anon172;
anon1575_Else:
	assume !$_$_condition_$74;
	assume 0 <= SecMask_$_115[Heap_$_6[Heap_$_6[this,Node.next],Node.next],Node.invRight][perm$R];
	assume SecMask_$_117 == SecMask_$_115;
	goto anon172;
anon173:
	assume wf(Heap_$_6,SecMask_$_118,SecMask_$_118);
	assume SecMask_$_119 == SecMask_$_118;
	goto $branchMerge_9;
anon172:
	assume wf(Heap_$_6,SecMask_$_117,SecMask_$_117);
	assume wf(Heap_$_6,Mask_$_22,SecMask_$_117);
	assume SecMask_$_118 == SecMask_$_117;
	goto anon173;
anon176:
	assume IsGoodMask(Mask_$_22);
	assume wf(Heap_$_8,Mask_$_22,SecMask_$_119);
	assume IsGoodMask(Mask_$_22);
	assume wf(Heap_$_8,Mask_$_22,SecMask_$_119);
	assume !(Heap_$_8[this,Node.next] == null);
	assume wf(Heap_$_8,Mask_$_22,SecMask_$_119);
	assume (Heap_$_8[Heap_$_8[this,Node.next],Node.prev] == null) || (dtype(Heap_$_8[Heap_$_8[this,Node.next],Node.prev]) == Node#t);
	assume 1 > 0;
	assume Mask_$_23 == Mask_$_22[Heap_$_8[this,Node.next],Node.prev := Mask_$_22[Heap_$_8[this,Node.next],Node.prev][perm$N := Mask_$_22[Heap_$_8[this,Node.next],Node.prev][perm$N] + 1]];
	assume wf(Heap_$_8,Mask_$_23,SecMask_$_119);
	assume IsGoodMask(Mask_$_23);
	assume IsGoodState(heapFragment(Heap_$_8[Heap_$_8[this,Node.next],Node.prev]));
	assume wf(Heap_$_8,Mask_$_23,SecMask_$_119);
	assume wf(Heap_$_8,Mask_$_23,SecMask_$_119);
	assume !(Heap_$_8[this,Node.next] == null);
	assume wf(Heap_$_8,Mask_$_23,SecMask_$_119);
	assume (Heap_$_8[Heap_$_8[this,Node.next],Node.next] == null) || (dtype(Heap_$_8[Heap_$_8[this,Node.next],Node.next]) == Node#t);
	assume 1 > 0;
	assume Mask_$_24 == Mask_$_23[Heap_$_8[this,Node.next],Node.next := Mask_$_23[Heap_$_8[this,Node.next],Node.next][perm$N := Mask_$_23[Heap_$_8[this,Node.next],Node.next][perm$N] + 1]];
	assume wf(Heap_$_8,Mask_$_24,SecMask_$_119);
	assume IsGoodMask(Mask_$_24);
	assume IsGoodState(heapFragment(Heap_$_8[Heap_$_8[this,Node.next],Node.next]));
	assume wf(Heap_$_8,Mask_$_24,SecMask_$_119);
	assume wf(Heap_$_8,Mask_$_24,SecMask_$_119);
	assume !(Heap_$_8[this,Node.next] == null);
	assume wf(Heap_$_8,Mask_$_24,SecMask_$_119);
	assume true;
	assume 1 > 0;
	assume Mask_$_25 == Mask_$_24[Heap_$_8[this,Node.next],mu := Mask_$_24[Heap_$_8[this,Node.next],mu][perm$N := Mask_$_24[Heap_$_8[this,Node.next],mu][perm$N] + 1]];
	assume wf(Heap_$_8,Mask_$_25,SecMask_$_119);
	assume IsGoodMask(Mask_$_25);
	assume IsGoodState(heapFragment(Heap_$_8[Heap_$_8[this,Node.next],mu]));
	assume wf(Heap_$_8,Mask_$_25,SecMask_$_119);
	assume wf(Heap_$_8,Mask_$_25,SecMask_$_119);
	if ($_$_condition_$76) { goto anon1577_Then; } else { goto anon1577_Else; }
anon1577_Then:
	assume $_$_condition_$76;
	assume $_$_condition_$76 <==> (!(Heap_$_8[Heap_$_8[this,Node.next],Node.next] == null));
	assume !(Heap_$_8[Heap_$_8[this,Node.next],Node.next] == null);
	assume !(Heap_$_8[Heap_$_8[this,Node.next],Node.next] == null);
	assume wf(Heap_$_8,Mask_$_25,SecMask_$_119);
	assume Fractions(100) > 0;
	assume Mask_$_26 == Mask_$_25[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.invRight := Mask_$_25[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.invRight][perm$R := Mask_$_25[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.invRight][perm$R] + Fractions(100)]];
	assume IsGoodMask(Mask_$_26);
	assume IsGoodState(heapFragment(Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.invRight]));
	assume wf(Heap_$_8,Mask_$_26,SecMask_$_119);
	assume wf(Heap_$_8,Mask_$_26,SecMask_$_119);
	assume predRec#_421_$_0 == Heap_$_8[Heap_$_8[this,Node.next],Node.next];
	assume #Node.invRight#trigger(Heap_$_8[Heap_$_8[this,Node.next],Node.next]);
	assume predVer#_422_$_0 == Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.invRight];
	if ($_$_condition_$77) { goto anon1578_Then; } else { goto anon1578_Else; }
anon1577_Else:
	assume !$_$_condition_$76;
	assume $_$_condition_$76 <==> (!(Heap_$_8[Heap_$_8[this,Node.next],Node.next] == null));
	assume Heap_$_8[Heap_$_8[this,Node.next],Node.next] == null;
	assume Mask_$_27 == Mask_$_25;
	assume SecMask_$_139 == SecMask_$_119;
	assume predRec#_421_$_1 == predRec#_421;
	assume predFlag#_423_$_0 <==> predFlag#_423;
	assume predVer#_422_$_1 == predVer#_422;
	goto anon194;
anon1578_Then:
	assume $_$_condition_$77;
	assume $_$_condition_$77 <==> (false || ((((predVer#_356_$_1 == Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_8[Heap_$_8[this,Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume false || ((((predVer#_356_$_1 == Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_8[Heap_$_8[this,Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$78) { goto anon1579_Then; } else { goto anon1579_Else; }
anon1578_Else:
	assume !$_$_condition_$77;
	assume $_$_condition_$77 <==> (false || ((((predVer#_356_$_1 == Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_8[Heap_$_8[this,Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume !(false || ((((predVer#_356_$_1 == Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_8[Heap_$_8[this,Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume SecMask_$_133 == SecMask_$_119;
	goto anon191;
anon194:
	assume IsGoodMask(Mask_$_27);
	assume wf(Heap_$_8,Mask_$_27,SecMask_$_139);
	assert { :msg "  50.13: SMOKE-TEST-8. (The statements after the unfold statement are unreachable.)" } !(1 == 1);
	assume cond#_430_$_0 <==> (!(Heap_$_8[Heap_$_8[this,Node.next],Node.next] == null));
	assert { :msg "  51.16: Receiver might be null." } true ==> (!(this == null));
	assert { :msg "  51.16: Location might not be readable." } true ==> CanRead(Mask_$_27,SecMask_$_139,this,Node.next);
	assert { :msg "  51.16: Receiver might be null." } true ==> (!(Heap_$_8[this,Node.next] == null));
	assert { :msg "  51.16: Location might not be readable." } true ==> CanRead(Mask_$_27,SecMask_$_139,Heap_$_8[this,Node.next],Node.next);
	if ($_$_condition_$85) { goto anon1586_Then; } else { goto anon1586_Else; }
anon1579_Then:
	assume $_$_condition_$78;
	assume $_$_condition_$78 <==> (!(Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next] == null);
	assume MuBelow(Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],mu],Heap_$_8[Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next],mu]);
	goto anon180;
anon1579_Else:
	assume !$_$_condition_$78;
	assume $_$_condition_$78 <==> (!(Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next] == null));
	assume Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next] == null;
	goto anon180;
anon191:
	assume !(predRec#_421_$_0 == null);
	assume wf(Heap_$_8,Mask_$_26,SecMask_$_133);
	assume (Heap_$_8[predRec#_421_$_0,Node.prev] == null) || (dtype(Heap_$_8[predRec#_421_$_0,Node.prev]) == Node#t);
	assume 1 > 0;
	assume SecMask_$_134 == SecMask_$_133[predRec#_421_$_0,Node.prev := SecMask_$_133[predRec#_421_$_0,Node.prev][perm$N := SecMask_$_133[predRec#_421_$_0,Node.prev][perm$N] + 1]];
	assume wf(Heap_$_8,SecMask_$_134,SecMask_$_134);
	assume IsGoodMask(Mask_$_26);
	assume IsGoodState(heapFragment(Heap_$_8[predRec#_421_$_0,Node.prev]));
	assume wf(Heap_$_8,Mask_$_26,SecMask_$_134);
	assume wf(Heap_$_8,Mask_$_26,SecMask_$_134);
	assume !(predRec#_421_$_0 == null);
	assume wf(Heap_$_8,Mask_$_26,SecMask_$_134);
	assume (Heap_$_8[predRec#_421_$_0,Node.next] == null) || (dtype(Heap_$_8[predRec#_421_$_0,Node.next]) == Node#t);
	assume 1 > 0;
	assume SecMask_$_135 == SecMask_$_134[predRec#_421_$_0,Node.next := SecMask_$_134[predRec#_421_$_0,Node.next][perm$N := SecMask_$_134[predRec#_421_$_0,Node.next][perm$N] + 1]];
	assume wf(Heap_$_8,SecMask_$_135,SecMask_$_135);
	assume IsGoodMask(Mask_$_26);
	assume IsGoodState(heapFragment(Heap_$_8[predRec#_421_$_0,Node.next]));
	assume wf(Heap_$_8,Mask_$_26,SecMask_$_135);
	assume wf(Heap_$_8,Mask_$_26,SecMask_$_135);
	assume !(predRec#_421_$_0 == null);
	assume wf(Heap_$_8,Mask_$_26,SecMask_$_135);
	assume true;
	assume 1 > 0;
	assume SecMask_$_136 == SecMask_$_135[predRec#_421_$_0,mu := SecMask_$_135[predRec#_421_$_0,mu][perm$N := SecMask_$_135[predRec#_421_$_0,mu][perm$N] + 1]];
	assume wf(Heap_$_8,SecMask_$_136,SecMask_$_136);
	assume IsGoodMask(Mask_$_26);
	assume IsGoodState(heapFragment(Heap_$_8[predRec#_421_$_0,mu]));
	assume wf(Heap_$_8,Mask_$_26,SecMask_$_136);
	assume wf(Heap_$_8,Mask_$_26,SecMask_$_136);
	if ($_$_condition_$84) { goto anon1585_Then; } else { goto anon1585_Else; }
anon180:
	assume SecMask_$_120 == SecMask_$_119[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.prev := SecMask_$_119[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.prev][perm$N := SecMask_$_119[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_8,Mask_$_26,SecMask_$_120);
	if ($_$_condition_$79) { goto anon1580_Then; } else { goto anon1580_Else; }
anon1580_Then:
	assume $_$_condition_$79;
	assume SecMask_$_120[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.prev][perm$N] < 0;
	assume SecMask_$_121 == SecMask_$_120[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.prev := SecMask_$_120[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.prev][perm$N := 0]];
	assume SecMask_$_122 == SecMask_$_121;
	goto anon182;
anon1580_Else:
	assume !$_$_condition_$79;
	assume 0 <= SecMask_$_120[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.prev][perm$N];
	assume SecMask_$_122 == SecMask_$_120;
	goto anon182;
anon182:
	assume wf(Heap_$_8,SecMask_$_122,SecMask_$_122);
	assume wf(Heap_$_8,Mask_$_26,SecMask_$_122);
	assume SecMask_$_123 == SecMask_$_122[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next := SecMask_$_122[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next][perm$N := SecMask_$_122[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next][perm$N] - 1]];
	assume wf(Heap_$_8,Mask_$_26,SecMask_$_123);
	if ($_$_condition_$80) { goto anon1581_Then; } else { goto anon1581_Else; }
anon1581_Then:
	assume $_$_condition_$80;
	assume SecMask_$_123[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next][perm$N] < 0;
	assume SecMask_$_124 == SecMask_$_123[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next := SecMask_$_123[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next][perm$N := 0]];
	assume SecMask_$_125 == SecMask_$_124;
	goto anon184;
anon1581_Else:
	assume !$_$_condition_$80;
	assume 0 <= SecMask_$_123[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next][perm$N];
	assume SecMask_$_125 == SecMask_$_123;
	goto anon184;
anon184:
	assume wf(Heap_$_8,SecMask_$_125,SecMask_$_125);
	assume wf(Heap_$_8,Mask_$_26,SecMask_$_125);
	assume SecMask_$_126 == SecMask_$_125[Heap_$_8[Heap_$_8[this,Node.next],Node.next],mu := SecMask_$_125[Heap_$_8[Heap_$_8[this,Node.next],Node.next],mu][perm$N := SecMask_$_125[Heap_$_8[Heap_$_8[this,Node.next],Node.next],mu][perm$N] - 1]];
	assume wf(Heap_$_8,Mask_$_26,SecMask_$_126);
	if ($_$_condition_$81) { goto anon1582_Then; } else { goto anon1582_Else; }
anon1582_Then:
	assume $_$_condition_$81;
	assume SecMask_$_126[Heap_$_8[Heap_$_8[this,Node.next],Node.next],mu][perm$N] < 0;
	assume SecMask_$_127 == SecMask_$_126[Heap_$_8[Heap_$_8[this,Node.next],Node.next],mu := SecMask_$_126[Heap_$_8[Heap_$_8[this,Node.next],Node.next],mu][perm$N := 0]];
	assume SecMask_$_128 == SecMask_$_127;
	goto anon186;
anon1582_Else:
	assume !$_$_condition_$81;
	assume 0 <= SecMask_$_126[Heap_$_8[Heap_$_8[this,Node.next],Node.next],mu][perm$N];
	assume SecMask_$_128 == SecMask_$_126;
	goto anon186;
anon186:
	assume wf(Heap_$_8,SecMask_$_128,SecMask_$_128);
	assume wf(Heap_$_8,Mask_$_26,SecMask_$_128);
	if ($_$_condition_$82) { goto anon1583_Then; } else { goto anon1583_Else; }
anon1583_Then:
	assume $_$_condition_$82;
	assume $_$_condition_$82 <==> (!(Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next] == null);
	assume SecMask_$_129 == SecMask_$_128[Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next],Node.invRight := SecMask_$_128[Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next],Node.invRight][perm$R := SecMask_$_128[Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next],Node.invRight][perm$R] - Fractions(100)]];
	if ($_$_condition_$83) { goto anon1584_Then; } else { goto anon1584_Else; }
anon1583_Else:
	assume !$_$_condition_$82;
	assume $_$_condition_$82 <==> (!(Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next] == null));
	assume Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next] == null;
	assume SecMask_$_132 == SecMask_$_128;
	goto anon190;
anon1584_Then:
	assume $_$_condition_$83;
	assume SecMask_$_129[Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next],Node.invRight][perm$R] < 0;
	assume SecMask_$_130 == SecMask_$_129[Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next],Node.invRight := SecMask_$_129[Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next],Node.invRight][perm$R := 0]];
	assume SecMask_$_131 == SecMask_$_130;
	goto anon189;
anon1584_Else:
	assume !$_$_condition_$83;
	assume 0 <= SecMask_$_129[Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next],Node.invRight][perm$R];
	assume SecMask_$_131 == SecMask_$_129;
	goto anon189;
anon190:
	assume wf(Heap_$_8,SecMask_$_132,SecMask_$_132);
	assume SecMask_$_133 == SecMask_$_132;
	goto anon191;
anon189:
	assume wf(Heap_$_8,SecMask_$_131,SecMask_$_131);
	assume wf(Heap_$_8,Mask_$_26,SecMask_$_131);
	assume SecMask_$_132 == SecMask_$_131;
	goto anon190;
anon1585_Then:
	assume $_$_condition_$84;
	assume $_$_condition_$84 <==> (!(Heap_$_8[predRec#_421_$_0,Node.next] == null));
	assume !(Heap_$_8[predRec#_421_$_0,Node.next] == null);
	assume !(Heap_$_8[predRec#_421_$_0,Node.next] == null);
	assume wf(Heap_$_8,Mask_$_26,SecMask_$_136);
	assume Fractions(100) > 0;
	assume SecMask_$_137 == SecMask_$_136[Heap_$_8[predRec#_421_$_0,Node.next],Node.invRight := SecMask_$_136[Heap_$_8[predRec#_421_$_0,Node.next],Node.invRight][perm$R := SecMask_$_136[Heap_$_8[predRec#_421_$_0,Node.next],Node.invRight][perm$R] + Fractions(100)]];
	assume IsGoodMask(Mask_$_26);
	assume IsGoodState(heapFragment(Heap_$_8[Heap_$_8[predRec#_421_$_0,Node.next],Node.invRight]));
	assume wf(Heap_$_8,Mask_$_26,SecMask_$_137);
	assume wf(Heap_$_8,Mask_$_26,SecMask_$_137);
	assume SecMask_$_138 == SecMask_$_137;
	goto anon193;
anon1585_Else:
	assume !$_$_condition_$84;
	assume $_$_condition_$84 <==> (!(Heap_$_8[predRec#_421_$_0,Node.next] == null));
	assume Heap_$_8[predRec#_421_$_0,Node.next] == null;
	assume SecMask_$_138 == SecMask_$_136;
	goto anon193;
anon193:
	assume MuBelow(Heap_$_8[Heap_$_8[this,Node.next],mu],Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],mu]);
	assume Mask_$_27 == Mask_$_26;
	assume SecMask_$_139 == SecMask_$_138;
	assume predRec#_421_$_1 == predRec#_421_$_0;
	assume predFlag#_423_$_0 <==> true;
	assume predVer#_422_$_1 == predVer#_422_$_0;
	goto anon194;
anon1586_Then:
	assume $_$_condition_$85;
	assume $_$_condition_$85 <==> cond#_430_$_0;
	assume cond#_430_$_0;
	assert { :msg "  51.13: SMOKE-TEST-9. (The begging of the if-branch is unreachable.)" } !(1 == 1);
	assume #Node.invRight#trigger(Heap_$_8[Heap_$_8[this,Node.next],Node.next]);
	assume ((0 < unfoldK#_431) && (unfoldK#_431 < Fractions(1))) && ((1000 * unfoldK#_431) < methodK#_170);
	assert { :msg "  51.44: Receiver might be null." } true ==> (!(this == null));
	assert { :msg "  51.44: Location might not be readable." } true ==> CanRead(Mask_$_27,SecMask_$_139,this,Node.next);
	assert { :msg "  51.44: Receiver might be null." } true ==> (!(Heap_$_8[this,Node.next] == null));
	assert { :msg "  51.44: Location might not be readable." } true ==> CanRead(Mask_$_27,SecMask_$_139,Heap_$_8[this,Node.next],Node.next);
	assert { :msg "  51.37: The target of the fold statement might be null." } !(Heap_$_8[Heap_$_8[this,Node.next],Node.next] == null);
	assert { :msg "  51.37: unfold might fail because the predicate Node.invRight does not hold. The permission at <undefined position> might not be positive." } Fractions(100) > 0;
	assert { :msg "  51.37: unfold might fail because the predicate Node.invRight does not hold. Insufficient fraction at <undefined position> for Node.invRight." } (Fractions(100) <= Mask_$_27[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.invRight][perm$R]) && ((Fractions(100) == Mask_$_27[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.invRight][perm$R]) ==> (0 <= Mask_$_27[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.invRight][perm$N]));
	assume Mask_$_28 == Mask_$_27[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.invRight := Mask_$_27[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.invRight][perm$R := Mask_$_27[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.invRight][perm$R] - Fractions(100)]];
	if ($_$_condition_$86) { goto anon1587_Then; } else { goto anon1587_Else; }
anon1586_Else:
	assume !$_$_condition_$85;
	assume $_$_condition_$85 <==> cond#_430_$_0;
	assume !cond#_430_$_0;
	assume SecMask_$_174 == SecMask_$_139;
	assume Heap_$_11 == Heap_$_8;
	assume Mask_$_34 == Mask_$_27;
	assume predRec#_421_$_2 == predRec#_421_$_1;
	assume predFlag#_423_$_1 <==> predFlag#_423_$_0;
	assume predVer#_422_$_2 == predVer#_422_$_1;
	assume cond#_430_$_1 <==> cond#_430_$_0;
	assume predRec#_443_$_2 == predRec#_443;
	assume predFlag#_445_$_1 <==> predFlag#_445;
	assume predVer#_444_$_2 == predVer#_444;
	goto anon236;
anon1587_Then:
	assume $_$_condition_$86;
	assume $_$_condition_$86 <==> ((false || (((((((predVer#_422_$_1 == Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.invRight]) && (predRec#_421_$_1 == Heap_$_8[Heap_$_8[this,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_0)) || ((((predVer#_356_$_1 == Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_8[Heap_$_8[this,Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume (false || (((((((predVer#_422_$_1 == Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.invRight]) && (predRec#_421_$_1 == Heap_$_8[Heap_$_8[this,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_0)) || ((((predVer#_356_$_1 == Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_8[Heap_$_8[this,Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$87) { goto anon1588_Then; } else { goto anon1588_Else; }
anon1587_Else:
	assume !$_$_condition_$86;
	assume $_$_condition_$86 <==> ((false || (((((((predVer#_422_$_1 == Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.invRight]) && (predRec#_421_$_1 == Heap_$_8[Heap_$_8[this,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_0)) || ((((predVer#_356_$_1 == Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_8[Heap_$_8[this,Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume !((false || (((((((predVer#_422_$_1 == Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.invRight]) && (predRec#_421_$_1 == Heap_$_8[Heap_$_8[this,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_0)) || ((((predVer#_356_$_1 == Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_8[Heap_$_8[this,Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume SecMask_$_153 == SecMask_$_139;
	goto $branchMerge_10;
anon1588_Then:
	assume $_$_condition_$87;
	assume $_$_condition_$87 <==> ((((predVer#_356_$_1 == Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_8[Heap_$_8[this,Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume (((predVer#_356_$_1 == Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_8[Heap_$_8[this,Node.next],Node.next])) && true) && predFlag#_357_$_0;
	goto $branchMerge_11;
anon1588_Else:
	assume !$_$_condition_$87;
	assume $_$_condition_$87 <==> ((((predVer#_356_$_1 == Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_8[Heap_$_8[this,Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume !((((predVer#_356_$_1 == Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_8[Heap_$_8[this,Node.next],Node.next])) && true) && predFlag#_357_$_0);
	goto $branchMerge_11;
anon1595_Then:
	assume $_$_condition_$88;
	assume $_$_condition_$88 <==> (!CanRead(Mask_$_28,SecMask_$_153,Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.invRight));
	assume !CanRead(Mask_$_28,SecMask_$_153,Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.invRight);
	assume oldVers#_441_$_0 == Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.invRight];
	assume Heap_$_9 == Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.invRight := newVers#_442_$_0];
	assume oldVers#_441_$_0 < Heap_$_9[Heap_$_9[Heap_$_9[this,Node.next],Node.next],Node.invRight];
	assume Heap_$_10 == Heap_$_9;
	goto anon214;
anon1595_Else:
	assume !$_$_condition_$88;
	assume $_$_condition_$88 <==> (!CanRead(Mask_$_28,SecMask_$_153,Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.invRight));
	assume CanRead(Mask_$_28,SecMask_$_153,Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.invRight);
	assume Heap_$_10 == Heap_$_8;
	goto anon214;
anon1589_Then:
	assume $_$_condition_$89;
	assume $_$_condition_$89 <==> (!(Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next] == null);
	assume MuBelow(Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],mu],Heap_$_8[Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next],mu]);
	goto anon201;
anon1589_Else:
	assume !$_$_condition_$89;
	assume $_$_condition_$89 <==> (!(Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next] == null));
	assume Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next] == null;
	goto anon201;
anon201:
	assume SecMask_$_140 == SecMask_$_139[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.prev := SecMask_$_139[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.prev][perm$N := SecMask_$_139[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_8,Mask_$_28,SecMask_$_140);
	if ($_$_condition_$91) { goto anon1590_Then; } else { goto anon1590_Else; }
anon1590_Then:
	assume $_$_condition_$91;
	assume SecMask_$_140[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.prev][perm$N] < 0;
	assume SecMask_$_141 == SecMask_$_140[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.prev := SecMask_$_140[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.prev][perm$N := 0]];
	assume SecMask_$_142 == SecMask_$_141;
	goto anon203;
anon1590_Else:
	assume !$_$_condition_$91;
	assume 0 <= SecMask_$_140[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.prev][perm$N];
	assume SecMask_$_142 == SecMask_$_140;
	goto anon203;
anon203:
	assume wf(Heap_$_8,SecMask_$_142,SecMask_$_142);
	assume wf(Heap_$_8,Mask_$_28,SecMask_$_142);
	assume SecMask_$_143 == SecMask_$_142[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next := SecMask_$_142[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next][perm$N := SecMask_$_142[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next][perm$N] - 1]];
	assume wf(Heap_$_8,Mask_$_28,SecMask_$_143);
	if ($_$_condition_$92) { goto anon1591_Then; } else { goto anon1591_Else; }
anon1591_Then:
	assume $_$_condition_$92;
	assume SecMask_$_143[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next][perm$N] < 0;
	assume SecMask_$_144 == SecMask_$_143[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next := SecMask_$_143[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next][perm$N := 0]];
	assume SecMask_$_145 == SecMask_$_144;
	goto anon205;
anon1591_Else:
	assume !$_$_condition_$92;
	assume 0 <= SecMask_$_143[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next][perm$N];
	assume SecMask_$_145 == SecMask_$_143;
	goto anon205;
anon205:
	assume wf(Heap_$_8,SecMask_$_145,SecMask_$_145);
	assume wf(Heap_$_8,Mask_$_28,SecMask_$_145);
	assume SecMask_$_146 == SecMask_$_145[Heap_$_8[Heap_$_8[this,Node.next],Node.next],mu := SecMask_$_145[Heap_$_8[Heap_$_8[this,Node.next],Node.next],mu][perm$N := SecMask_$_145[Heap_$_8[Heap_$_8[this,Node.next],Node.next],mu][perm$N] - 1]];
	assume wf(Heap_$_8,Mask_$_28,SecMask_$_146);
	if ($_$_condition_$93) { goto anon1592_Then; } else { goto anon1592_Else; }
anon1592_Then:
	assume $_$_condition_$93;
	assume SecMask_$_146[Heap_$_8[Heap_$_8[this,Node.next],Node.next],mu][perm$N] < 0;
	assume SecMask_$_147 == SecMask_$_146[Heap_$_8[Heap_$_8[this,Node.next],Node.next],mu := SecMask_$_146[Heap_$_8[Heap_$_8[this,Node.next],Node.next],mu][perm$N := 0]];
	assume SecMask_$_148 == SecMask_$_147;
	goto anon207;
anon1592_Else:
	assume !$_$_condition_$93;
	assume 0 <= SecMask_$_146[Heap_$_8[Heap_$_8[this,Node.next],Node.next],mu][perm$N];
	assume SecMask_$_148 == SecMask_$_146;
	goto anon207;
anon207:
	assume wf(Heap_$_8,SecMask_$_148,SecMask_$_148);
	assume wf(Heap_$_8,Mask_$_28,SecMask_$_148);
	if ($_$_condition_$94) { goto anon1593_Then; } else { goto anon1593_Else; }
anon1593_Then:
	assume $_$_condition_$94;
	assume $_$_condition_$94 <==> (!(Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next] == null);
	assume SecMask_$_149 == SecMask_$_148[Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next],Node.invRight := SecMask_$_148[Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next],Node.invRight][perm$R := SecMask_$_148[Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next],Node.invRight][perm$R] - Fractions(100)]];
	if ($_$_condition_$95) { goto anon1594_Then; } else { goto anon1594_Else; }
anon1593_Else:
	assume !$_$_condition_$94;
	assume $_$_condition_$94 <==> (!(Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next] == null));
	assume Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next] == null;
	assume SecMask_$_152 == SecMask_$_148;
	goto anon211;
anon1594_Then:
	assume $_$_condition_$95;
	assume SecMask_$_149[Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next],Node.invRight][perm$R] < 0;
	assume SecMask_$_150 == SecMask_$_149[Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next],Node.invRight := SecMask_$_149[Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next],Node.invRight][perm$R := 0]];
	assume SecMask_$_151 == SecMask_$_150;
	goto anon210;
anon1594_Else:
	assume !$_$_condition_$95;
	assume 0 <= SecMask_$_149[Heap_$_8[Heap_$_8[Heap_$_8[this,Node.next],Node.next],Node.next],Node.invRight][perm$R];
	assume SecMask_$_151 == SecMask_$_149;
	goto anon210;
anon211:
	assume wf(Heap_$_8,SecMask_$_152,SecMask_$_152);
	assume SecMask_$_153 == SecMask_$_152;
	goto $branchMerge_10;
anon210:
	assume wf(Heap_$_8,SecMask_$_151,SecMask_$_151);
	assume wf(Heap_$_8,Mask_$_28,SecMask_$_151);
	assume SecMask_$_152 == SecMask_$_151;
	goto anon211;
anon214:
	assume IsGoodMask(Mask_$_28);
	assume wf(Heap_$_10,Mask_$_28,SecMask_$_153);
	assume IsGoodMask(Mask_$_28);
	assume wf(Heap_$_10,Mask_$_28,SecMask_$_153);
	assume !(Heap_$_10[Heap_$_10[this,Node.next],Node.next] == null);
	assume wf(Heap_$_10,Mask_$_28,SecMask_$_153);
	assume (Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.prev] == null) || (dtype(Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.prev]) == Node#t);
	assume 1 > 0;
	assume Mask_$_29 == Mask_$_28[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.prev := Mask_$_28[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.prev][perm$N := Mask_$_28[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.prev][perm$N] + 1]];
	assume wf(Heap_$_10,Mask_$_29,SecMask_$_153);
	assume IsGoodMask(Mask_$_29);
	assume IsGoodState(heapFragment(Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.prev]));
	assume wf(Heap_$_10,Mask_$_29,SecMask_$_153);
	assume wf(Heap_$_10,Mask_$_29,SecMask_$_153);
	assume !(Heap_$_10[Heap_$_10[this,Node.next],Node.next] == null);
	assume wf(Heap_$_10,Mask_$_29,SecMask_$_153);
	assume (Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next] == null) || (dtype(Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next]) == Node#t);
	assume 1 > 0;
	assume Mask_$_30 == Mask_$_29[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next := Mask_$_29[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next][perm$N := Mask_$_29[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next][perm$N] + 1]];
	assume wf(Heap_$_10,Mask_$_30,SecMask_$_153);
	assume IsGoodMask(Mask_$_30);
	assume IsGoodState(heapFragment(Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next]));
	assume wf(Heap_$_10,Mask_$_30,SecMask_$_153);
	assume wf(Heap_$_10,Mask_$_30,SecMask_$_153);
	assume !(Heap_$_10[Heap_$_10[this,Node.next],Node.next] == null);
	assume wf(Heap_$_10,Mask_$_30,SecMask_$_153);
	assume true;
	assume 1 > 0;
	assume Mask_$_31 == Mask_$_30[Heap_$_10[Heap_$_10[this,Node.next],Node.next],mu := Mask_$_30[Heap_$_10[Heap_$_10[this,Node.next],Node.next],mu][perm$N := Mask_$_30[Heap_$_10[Heap_$_10[this,Node.next],Node.next],mu][perm$N] + 1]];
	assume wf(Heap_$_10,Mask_$_31,SecMask_$_153);
	assume IsGoodMask(Mask_$_31);
	assume IsGoodState(heapFragment(Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],mu]));
	assume wf(Heap_$_10,Mask_$_31,SecMask_$_153);
	assume wf(Heap_$_10,Mask_$_31,SecMask_$_153);
	if ($_$_condition_$97) { goto anon1596_Then; } else { goto anon1596_Else; }
anon1596_Then:
	assume $_$_condition_$97;
	assume $_$_condition_$97 <==> (!(Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next] == null);
	assume !(Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next] == null);
	assume wf(Heap_$_10,Mask_$_31,SecMask_$_153);
	assume Fractions(100) > 0;
	assume Mask_$_32 == Mask_$_31[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.invRight := Mask_$_31[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.invRight][perm$R := Mask_$_31[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.invRight][perm$R] + Fractions(100)]];
	assume IsGoodMask(Mask_$_32);
	assume IsGoodState(heapFragment(Heap_$_10[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.invRight]));
	assume wf(Heap_$_10,Mask_$_32,SecMask_$_153);
	assume wf(Heap_$_10,Mask_$_32,SecMask_$_153);
	assume predRec#_443_$_0 == Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next];
	assume #Node.invRight#trigger(Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next]);
	assume predVer#_444_$_0 == Heap_$_10[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.invRight];
	if ($_$_condition_$98) { goto anon1597_Then; } else { goto anon1597_Else; }
anon1596_Else:
	assume !$_$_condition_$97;
	assume $_$_condition_$97 <==> (!(Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next] == null));
	assume Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next] == null;
	assume SecMask_$_173 == SecMask_$_153;
	assume Mask_$_33 == Mask_$_31;
	assume predRec#_443_$_1 == predRec#_443;
	assume predFlag#_445_$_0 <==> predFlag#_445;
	assume predVer#_444_$_1 == predVer#_444;
	goto anon235;
anon1597_Then:
	assume $_$_condition_$98;
	assume $_$_condition_$98 <==> ((false || (((((((predVer#_422_$_1 == Heap_$_10[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_1 == Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_0)) || ((((predVer#_356_$_1 == Heap_$_10[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume (false || (((((((predVer#_422_$_1 == Heap_$_10[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_1 == Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_0)) || ((((predVer#_356_$_1 == Heap_$_10[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$99) { goto anon1598_Then; } else { goto anon1598_Else; }
anon1597_Else:
	assume !$_$_condition_$98;
	assume $_$_condition_$98 <==> ((false || (((((((predVer#_422_$_1 == Heap_$_10[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_1 == Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_0)) || ((((predVer#_356_$_1 == Heap_$_10[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume !((false || (((((((predVer#_422_$_1 == Heap_$_10[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_1 == Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_0)) || ((((predVer#_356_$_1 == Heap_$_10[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume SecMask_$_167 == SecMask_$_153;
	goto anon232;
anon235:
	assume IsGoodMask(Mask_$_33);
	assume wf(Heap_$_10,Mask_$_33,SecMask_$_173);
	assert { :msg "  51.37: SMOKE-TEST-10. (The statements after the unfold statement are unreachable.)" } !(1 == 1);
	assume SecMask_$_174 == SecMask_$_173;
	assume Heap_$_11 == Heap_$_10;
	assume Mask_$_34 == Mask_$_33;
	assume predRec#_421_$_2 == predRec#_421_$_1;
	assume predFlag#_423_$_1 <==> predFlag#_423_$_0;
	assume predVer#_422_$_2 == predVer#_422_$_1;
	assume cond#_430_$_1 <==> cond#_430_$_0;
	assume predRec#_443_$_2 == predRec#_443_$_1;
	assume predFlag#_445_$_1 <==> predFlag#_445_$_0;
	assume predVer#_444_$_2 == predVer#_444_$_1;
	goto anon236;
anon1598_Then:
	assume $_$_condition_$99;
	assume $_$_condition_$99 <==> ((((predVer#_356_$_1 == Heap_$_10[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume (((predVer#_356_$_1 == Heap_$_10[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0;
	goto $branchMerge_12;
anon1598_Else:
	assume !$_$_condition_$99;
	assume $_$_condition_$99 <==> ((((predVer#_356_$_1 == Heap_$_10[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume !((((predVer#_356_$_1 == Heap_$_10[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	goto $branchMerge_12;
anon232:
	assume !(predRec#_443_$_0 == null);
	assume wf(Heap_$_10,Mask_$_32,SecMask_$_167);
	assume (Heap_$_10[predRec#_443_$_0,Node.prev] == null) || (dtype(Heap_$_10[predRec#_443_$_0,Node.prev]) == Node#t);
	assume 1 > 0;
	assume SecMask_$_168 == SecMask_$_167[predRec#_443_$_0,Node.prev := SecMask_$_167[predRec#_443_$_0,Node.prev][perm$N := SecMask_$_167[predRec#_443_$_0,Node.prev][perm$N] + 1]];
	assume wf(Heap_$_10,SecMask_$_168,SecMask_$_168);
	assume IsGoodMask(Mask_$_32);
	assume IsGoodState(heapFragment(Heap_$_10[predRec#_443_$_0,Node.prev]));
	assume wf(Heap_$_10,Mask_$_32,SecMask_$_168);
	assume wf(Heap_$_10,Mask_$_32,SecMask_$_168);
	assume !(predRec#_443_$_0 == null);
	assume wf(Heap_$_10,Mask_$_32,SecMask_$_168);
	assume (Heap_$_10[predRec#_443_$_0,Node.next] == null) || (dtype(Heap_$_10[predRec#_443_$_0,Node.next]) == Node#t);
	assume 1 > 0;
	assume SecMask_$_169 == SecMask_$_168[predRec#_443_$_0,Node.next := SecMask_$_168[predRec#_443_$_0,Node.next][perm$N := SecMask_$_168[predRec#_443_$_0,Node.next][perm$N] + 1]];
	assume wf(Heap_$_10,SecMask_$_169,SecMask_$_169);
	assume IsGoodMask(Mask_$_32);
	assume IsGoodState(heapFragment(Heap_$_10[predRec#_443_$_0,Node.next]));
	assume wf(Heap_$_10,Mask_$_32,SecMask_$_169);
	assume wf(Heap_$_10,Mask_$_32,SecMask_$_169);
	assume !(predRec#_443_$_0 == null);
	assume wf(Heap_$_10,Mask_$_32,SecMask_$_169);
	assume true;
	assume 1 > 0;
	assume SecMask_$_170 == SecMask_$_169[predRec#_443_$_0,mu := SecMask_$_169[predRec#_443_$_0,mu][perm$N := SecMask_$_169[predRec#_443_$_0,mu][perm$N] + 1]];
	assume wf(Heap_$_10,SecMask_$_170,SecMask_$_170);
	assume IsGoodMask(Mask_$_32);
	assume IsGoodState(heapFragment(Heap_$_10[predRec#_443_$_0,mu]));
	assume wf(Heap_$_10,Mask_$_32,SecMask_$_170);
	assume wf(Heap_$_10,Mask_$_32,SecMask_$_170);
	if ($_$_condition_$107) { goto anon1605_Then; } else { goto anon1605_Else; }
anon1599_Then:
	assume $_$_condition_$100;
	assume $_$_condition_$100 <==> (!(Heap_$_10[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_10[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.next] == null);
	assume MuBelow(Heap_$_10[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],mu],Heap_$_10[Heap_$_10[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.next],mu]);
	goto anon221;
anon1599_Else:
	assume !$_$_condition_$100;
	assume $_$_condition_$100 <==> (!(Heap_$_10[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.next] == null));
	assume Heap_$_10[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.next] == null;
	goto anon221;
anon221:
	assume SecMask_$_154 == SecMask_$_153[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.prev := SecMask_$_153[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.prev][perm$N := SecMask_$_153[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_10,Mask_$_32,SecMask_$_154);
	if ($_$_condition_$102) { goto anon1600_Then; } else { goto anon1600_Else; }
anon1600_Then:
	assume $_$_condition_$102;
	assume SecMask_$_154[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.prev][perm$N] < 0;
	assume SecMask_$_155 == SecMask_$_154[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.prev := SecMask_$_154[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.prev][perm$N := 0]];
	assume SecMask_$_156 == SecMask_$_155;
	goto anon223;
anon1600_Else:
	assume !$_$_condition_$102;
	assume 0 <= SecMask_$_154[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.prev][perm$N];
	assume SecMask_$_156 == SecMask_$_154;
	goto anon223;
anon223:
	assume wf(Heap_$_10,SecMask_$_156,SecMask_$_156);
	assume wf(Heap_$_10,Mask_$_32,SecMask_$_156);
	assume SecMask_$_157 == SecMask_$_156[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.next := SecMask_$_156[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.next][perm$N := SecMask_$_156[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.next][perm$N] - 1]];
	assume wf(Heap_$_10,Mask_$_32,SecMask_$_157);
	if ($_$_condition_$103) { goto anon1601_Then; } else { goto anon1601_Else; }
anon1601_Then:
	assume $_$_condition_$103;
	assume SecMask_$_157[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.next][perm$N] < 0;
	assume SecMask_$_158 == SecMask_$_157[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.next := SecMask_$_157[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.next][perm$N := 0]];
	assume SecMask_$_159 == SecMask_$_158;
	goto anon225;
anon1601_Else:
	assume !$_$_condition_$103;
	assume 0 <= SecMask_$_157[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.next][perm$N];
	assume SecMask_$_159 == SecMask_$_157;
	goto anon225;
anon225:
	assume wf(Heap_$_10,SecMask_$_159,SecMask_$_159);
	assume wf(Heap_$_10,Mask_$_32,SecMask_$_159);
	assume SecMask_$_160 == SecMask_$_159[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],mu := SecMask_$_159[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],mu][perm$N := SecMask_$_159[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],mu][perm$N] - 1]];
	assume wf(Heap_$_10,Mask_$_32,SecMask_$_160);
	if ($_$_condition_$104) { goto anon1602_Then; } else { goto anon1602_Else; }
anon1602_Then:
	assume $_$_condition_$104;
	assume SecMask_$_160[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],mu][perm$N] < 0;
	assume SecMask_$_161 == SecMask_$_160[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],mu := SecMask_$_160[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],mu][perm$N := 0]];
	assume SecMask_$_162 == SecMask_$_161;
	goto anon227;
anon1602_Else:
	assume !$_$_condition_$104;
	assume 0 <= SecMask_$_160[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],mu][perm$N];
	assume SecMask_$_162 == SecMask_$_160;
	goto anon227;
anon227:
	assume wf(Heap_$_10,SecMask_$_162,SecMask_$_162);
	assume wf(Heap_$_10,Mask_$_32,SecMask_$_162);
	if ($_$_condition_$105) { goto anon1603_Then; } else { goto anon1603_Else; }
anon1603_Then:
	assume $_$_condition_$105;
	assume $_$_condition_$105 <==> (!(Heap_$_10[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_10[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.next] == null);
	assume SecMask_$_163 == SecMask_$_162[Heap_$_10[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.next],Node.invRight := SecMask_$_162[Heap_$_10[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R := SecMask_$_162[Heap_$_10[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R] - Fractions(100)]];
	if ($_$_condition_$106) { goto anon1604_Then; } else { goto anon1604_Else; }
anon1603_Else:
	assume !$_$_condition_$105;
	assume $_$_condition_$105 <==> (!(Heap_$_10[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.next] == null));
	assume Heap_$_10[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.next] == null;
	assume SecMask_$_166 == SecMask_$_162;
	goto anon231;
anon1604_Then:
	assume $_$_condition_$106;
	assume SecMask_$_163[Heap_$_10[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R] < 0;
	assume SecMask_$_164 == SecMask_$_163[Heap_$_10[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.next],Node.invRight := SecMask_$_163[Heap_$_10[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R := 0]];
	assume SecMask_$_165 == SecMask_$_164;
	goto anon230;
anon1604_Else:
	assume !$_$_condition_$106;
	assume 0 <= SecMask_$_163[Heap_$_10[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R];
	assume SecMask_$_165 == SecMask_$_163;
	goto anon230;
anon231:
	assume wf(Heap_$_10,SecMask_$_166,SecMask_$_166);
	assume SecMask_$_167 == SecMask_$_166;
	goto anon232;
anon230:
	assume wf(Heap_$_10,SecMask_$_165,SecMask_$_165);
	assume wf(Heap_$_10,Mask_$_32,SecMask_$_165);
	assume SecMask_$_166 == SecMask_$_165;
	goto anon231;
anon1605_Then:
	assume $_$_condition_$107;
	assume $_$_condition_$107 <==> (!(Heap_$_10[predRec#_443_$_0,Node.next] == null));
	assume !(Heap_$_10[predRec#_443_$_0,Node.next] == null);
	assume !(Heap_$_10[predRec#_443_$_0,Node.next] == null);
	assume wf(Heap_$_10,Mask_$_32,SecMask_$_170);
	assume Fractions(100) > 0;
	assume SecMask_$_171 == SecMask_$_170[Heap_$_10[predRec#_443_$_0,Node.next],Node.invRight := SecMask_$_170[Heap_$_10[predRec#_443_$_0,Node.next],Node.invRight][perm$R := SecMask_$_170[Heap_$_10[predRec#_443_$_0,Node.next],Node.invRight][perm$R] + Fractions(100)]];
	assume IsGoodMask(Mask_$_32);
	assume IsGoodState(heapFragment(Heap_$_10[Heap_$_10[predRec#_443_$_0,Node.next],Node.invRight]));
	assume wf(Heap_$_10,Mask_$_32,SecMask_$_171);
	assume wf(Heap_$_10,Mask_$_32,SecMask_$_171);
	assume SecMask_$_172 == SecMask_$_171;
	goto anon234;
anon1605_Else:
	assume !$_$_condition_$107;
	assume $_$_condition_$107 <==> (!(Heap_$_10[predRec#_443_$_0,Node.next] == null));
	assume Heap_$_10[predRec#_443_$_0,Node.next] == null;
	assume SecMask_$_172 == SecMask_$_170;
	goto anon234;
anon234:
	assume MuBelow(Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],mu],Heap_$_10[Heap_$_10[Heap_$_10[Heap_$_10[this,Node.next],Node.next],Node.next],mu]);
	assume SecMask_$_173 == SecMask_$_172;
	assume Mask_$_33 == Mask_$_32;
	assume predRec#_443_$_1 == predRec#_443_$_0;
	assume predFlag#_445_$_0 <==> true;
	assume predVer#_444_$_1 == predVer#_444_$_0;
	goto anon235;
anon1606_Then:
	assume $_$_condition_$108;
	assume $_$_condition_$108 <==> cond#_452_$_0;
	assume cond#_452_$_0;
	assert { :msg "  53.9: SMOKE-TEST-11. (The begging of the if-branch is unreachable.)" } !(1 == 1);
	assume cond#_453_$_0 <==> (!(Heap_$_11[Heap_$_11[this,Node.prev],Node.prev] == null));
	assert { :msg "  54.17: Receiver might be null." } true ==> (!(this == null));
	assert { :msg "  54.17: Location might not be readable." } true ==> CanRead(Mask_$_34,SecMask_$_174,this,Node.prev);
	assert { :msg "  54.17: Receiver might be null." } true ==> (!(Heap_$_11[this,Node.prev] == null));
	assert { :msg "  54.17: Location might not be readable." } true ==> CanRead(Mask_$_34,SecMask_$_174,Heap_$_11[this,Node.prev],Node.prev);
	if ($_$_condition_$109) { goto anon1607_Then; } else { goto anon1607_Else; }
anon1606_Else:
	assume !$_$_condition_$108;
	assume $_$_condition_$108 <==> cond#_452_$_0;
	assume !cond#_452_$_0;
	assume Mask_$_80 == Mask_$_34;
	assume Heap_$_15 == Heap_$_11;
	assume cond#_453_$_1 <==> cond#_453;
	goto anon272;
anon1607_Then:
	assume $_$_condition_$109;
	assume $_$_condition_$109 <==> cond#_453_$_0;
	assume cond#_453_$_0;
	assert { :msg "  54.13: SMOKE-TEST-12. (The begging of the if-branch is unreachable.)" } !(1 == 1);
	assert { :msg "  54.46: Receiver might be null." } true ==> (!(this == null));
	assert { :msg "  54.46: Location might not be readable." } true ==> CanRead(Mask_$_34,SecMask_$_174,this,Node.prev);
	assert { :msg "  54.46: Receiver might be null." } true ==> (!(Heap_$_11[this,Node.prev] == null));
	assert { :msg "  54.46: Location might not be readable." } true ==> CanRead(Mask_$_34,SecMask_$_174,Heap_$_11[this,Node.prev],Node.prev);
	assert { :msg "  54.38: The target of the acquire statement might be null." } !(Heap_$_11[Heap_$_11[this,Node.prev],Node.prev] == null);
	assert { :msg "  54.38: The mu field of the target of the acquire statement might not be readable." } CanRead(Mask_$_34,SecMask_$_174,Heap_$_11[Heap_$_11[this,Node.prev],Node.prev],mu);
	assert { :msg "  54.38: The mu field of the target of the acquire statement might not be above waitlevel." } (forall  o#_457 : ref :: ( (((0 < Heap_$_11[o#_457,held]) || Heap_$_11[o#_457,rdheld]) || (ZeroCredits[o#_457] < 0)) ==> MuBelow(Heap_$_11[o#_457,mu],Heap_$_11[Heap_$_11[Heap_$_11[this,Node.prev],Node.prev],mu]) ));
	assume !(Heap_$_11[Heap_$_11[Heap_$_11[this,Node.prev],Node.prev],mu] == $LockBottom);
	assume lastSeenMu#_456_$_0 == Heap_$_11[Heap_$_11[Heap_$_11[this,Node.prev],Node.prev],mu];
	assume lastSeenHeld#_455_$_1 == Heap_$_11[Heap_$_11[Heap_$_11[this,Node.prev],Node.prev],held];
	assume (!(0 < Heap_$_11[Heap_$_11[Heap_$_11[this,Node.prev],Node.prev],held])) && (!Heap_$_11[Heap_$_11[Heap_$_11[this,Node.prev],Node.prev],rdheld]);
	assume 0 < lastAcquire#_454_$_0;
	assume Heap_$_12 == Heap_$_11[Heap_$_11[Heap_$_11[this,Node.prev],Node.prev],held := lastAcquire#_454_$_0];
	assume sh#5_$_0 == Heap_$_12[Heap_$_12[this,Node.prev],Node.prev];
	assume !(sh#5_$_0 == null);
	assume wf(Heap_$_12,Mask_$_34,SecMask_$_174);
	assume (Heap_$_12[sh#5_$_0,Node.prev] == null) || (dtype(Heap_$_12[sh#5_$_0,Node.prev]) == Node#t);
	assume ((Fractions(50) - 0) > 0) || (false && ((0 - 1) > 0));
	assume Mask_$_35 == Mask_$_34[sh#5_$_0,Node.prev := Mask_$_34[sh#5_$_0,Node.prev][perm$R := Mask_$_34[sh#5_$_0,Node.prev][perm$R] + (Fractions(50) - 0)]];
	assume Mask_$_36 == Mask_$_35[sh#5_$_0,Node.prev := Mask_$_35[sh#5_$_0,Node.prev][perm$N := Mask_$_35[sh#5_$_0,Node.prev][perm$N] + (0 - 1)]];
	assume wf(Heap_$_12,Mask_$_36,SecMask_$_174);
	assume IsGoodMask(Mask_$_36);
	assume IsGoodState(heapFragment(Heap_$_12[sh#5_$_0,Node.prev]));
	assume wf(Heap_$_12,Mask_$_36,SecMask_$_174);
	assume wf(Heap_$_12,Mask_$_36,SecMask_$_174);
	assume !(sh#5_$_0 == null);
	assume wf(Heap_$_12,Mask_$_36,SecMask_$_174);
	assume (Heap_$_12[sh#5_$_0,Node.next] == null) || (dtype(Heap_$_12[sh#5_$_0,Node.next]) == Node#t);
	assume ((Fractions(50) - 0) > 0) || (false && ((0 - 1) > 0));
	assume Mask_$_37 == Mask_$_36[sh#5_$_0,Node.next := Mask_$_36[sh#5_$_0,Node.next][perm$R := Mask_$_36[sh#5_$_0,Node.next][perm$R] + (Fractions(50) - 0)]];
	assume Mask_$_38 == Mask_$_37[sh#5_$_0,Node.next := Mask_$_37[sh#5_$_0,Node.next][perm$N := Mask_$_37[sh#5_$_0,Node.next][perm$N] + (0 - 1)]];
	assume wf(Heap_$_12,Mask_$_38,SecMask_$_174);
	assume IsGoodMask(Mask_$_38);
	assume IsGoodState(heapFragment(Heap_$_12[sh#5_$_0,Node.next]));
	assume wf(Heap_$_12,Mask_$_38,SecMask_$_174);
	assume wf(Heap_$_12,Mask_$_38,SecMask_$_174);
	assume !(sh#5_$_0 == null);
	assume wf(Heap_$_12,Mask_$_38,SecMask_$_174);
	assume true;
	assume ((Fractions(50) - 0) > 0) || (false && ((0 - 1) > 0));
	assume Mask_$_39 == Mask_$_38[sh#5_$_0,mu := Mask_$_38[sh#5_$_0,mu][perm$R := Mask_$_38[sh#5_$_0,mu][perm$R] + (Fractions(50) - 0)]];
	assume Mask_$_40 == Mask_$_39[sh#5_$_0,mu := Mask_$_39[sh#5_$_0,mu][perm$N := Mask_$_39[sh#5_$_0,mu][perm$N] + (0 - 1)]];
	assume wf(Heap_$_12,Mask_$_40,SecMask_$_174);
	assume IsGoodMask(Mask_$_40);
	assume IsGoodState(heapFragment(Heap_$_12[sh#5_$_0,mu]));
	assume wf(Heap_$_12,Mask_$_40,SecMask_$_174);
	assume wf(Heap_$_12,Mask_$_40,SecMask_$_174);
	if ($_$_condition_$110) { goto anon1608_Then; } else { goto anon1608_Else; }
anon1607_Else:
	assume !$_$_condition_$109;
	assume $_$_condition_$109 <==> cond#_453_$_0;
	assume !cond#_453_$_0;
	assume Heap_$_13 == Heap_$_11;
	assume Mask_$_57 == Mask_$_34;
	goto anon255;
anon272:
	assert { :msg "  57.9: The target of the acquire statement might be null." } !(this == null);
	assert { :msg "  57.9: The mu field of the target of the acquire statement might not be readable." } CanRead(Mask_$_80,SecMask_$_174,this,mu);
	assert { :msg "  57.9: The mu field of the target of the acquire statement might not be above waitlevel." } (forall  o#_465 : ref :: ( (((0 < Heap_$_15[o#_465,held]) || Heap_$_15[o#_465,rdheld]) || (ZeroCredits[o#_465] < 0)) ==> MuBelow(Heap_$_15[o#_465,mu],Heap_$_15[this,mu]) ));
	assume !(Heap_$_15[this,mu] == $LockBottom);
	assume lastSeenMu#_464_$_0 == Heap_$_15[this,mu];
	assume lastSeenHeld#_463_$_1 == Heap_$_15[this,held];
	assume (!(0 < Heap_$_15[this,held])) && (!Heap_$_15[this,rdheld]);
	assume 0 < lastAcquire#_462_$_0;
	assume Heap_$_16 == Heap_$_15[this,held := lastAcquire#_462_$_0];
	assume !(this == null);
	assume wf(Heap_$_16,Mask_$_80,SecMask_$_174);
	assume (Heap_$_16[this,Node.prev] == null) || (dtype(Heap_$_16[this,Node.prev]) == Node#t);
	assume ((Fractions(50) - 0) > 0) || (false && ((0 - 1) > 0));
	assume Mask_$_81 == Mask_$_80[this,Node.prev := Mask_$_80[this,Node.prev][perm$R := Mask_$_80[this,Node.prev][perm$R] + (Fractions(50) - 0)]];
	assume Mask_$_82 == Mask_$_81[this,Node.prev := Mask_$_81[this,Node.prev][perm$N := Mask_$_81[this,Node.prev][perm$N] + (0 - 1)]];
	assume wf(Heap_$_16,Mask_$_82,SecMask_$_174);
	assume IsGoodMask(Mask_$_82);
	assume IsGoodState(heapFragment(Heap_$_16[this,Node.prev]));
	assume wf(Heap_$_16,Mask_$_82,SecMask_$_174);
	assume wf(Heap_$_16,Mask_$_82,SecMask_$_174);
	assume !(this == null);
	assume wf(Heap_$_16,Mask_$_82,SecMask_$_174);
	assume (Heap_$_16[this,Node.next] == null) || (dtype(Heap_$_16[this,Node.next]) == Node#t);
	assume ((Fractions(50) - 0) > 0) || (false && ((0 - 1) > 0));
	assume Mask_$_83 == Mask_$_82[this,Node.next := Mask_$_82[this,Node.next][perm$R := Mask_$_82[this,Node.next][perm$R] + (Fractions(50) - 0)]];
	assume Mask_$_84 == Mask_$_83[this,Node.next := Mask_$_83[this,Node.next][perm$N := Mask_$_83[this,Node.next][perm$N] + (0 - 1)]];
	assume wf(Heap_$_16,Mask_$_84,SecMask_$_174);
	assume IsGoodMask(Mask_$_84);
	assume IsGoodState(heapFragment(Heap_$_16[this,Node.next]));
	assume wf(Heap_$_16,Mask_$_84,SecMask_$_174);
	assume wf(Heap_$_16,Mask_$_84,SecMask_$_174);
	assume !(this == null);
	assume wf(Heap_$_16,Mask_$_84,SecMask_$_174);
	assume true;
	assume ((Fractions(50) - 0) > 0) || (false && ((0 - 1) > 0));
	assume Mask_$_85 == Mask_$_84[this,mu := Mask_$_84[this,mu][perm$R := Mask_$_84[this,mu][perm$R] + (Fractions(50) - 0)]];
	assume Mask_$_86 == Mask_$_85[this,mu := Mask_$_85[this,mu][perm$N := Mask_$_85[this,mu][perm$N] + (0 - 1)]];
	assume wf(Heap_$_16,Mask_$_86,SecMask_$_174);
	assume IsGoodMask(Mask_$_86);
	assume IsGoodState(heapFragment(Heap_$_16[this,mu]));
	assume wf(Heap_$_16,Mask_$_86,SecMask_$_174);
	assume wf(Heap_$_16,Mask_$_86,SecMask_$_174);
	if ($_$_condition_$140) { goto anon1624_Then; } else { goto anon1624_Else; }
anon1608_Then:
	assume $_$_condition_$110;
	assume $_$_condition_$110 <==> (Heap_$_12[sh#5_$_0,Node.next] == null);
	assume Heap_$_12[sh#5_$_0,Node.next] == null;
	assume !(sh#5_$_0 == null);
	assume wf(Heap_$_12,Mask_$_40,SecMask_$_174);
	assume (Heap_$_12[sh#5_$_0,Node.prev] == null) || (dtype(Heap_$_12[sh#5_$_0,Node.prev]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_41 == Mask_$_40[sh#5_$_0,Node.prev := Mask_$_40[sh#5_$_0,Node.prev][perm$R := Mask_$_40[sh#5_$_0,Node.prev][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_41);
	assume IsGoodState(heapFragment(Heap_$_12[sh#5_$_0,Node.prev]));
	assume wf(Heap_$_12,Mask_$_41,SecMask_$_174);
	assume wf(Heap_$_12,Mask_$_41,SecMask_$_174);
	assume !(sh#5_$_0 == null);
	assume wf(Heap_$_12,Mask_$_41,SecMask_$_174);
	assume (Heap_$_12[sh#5_$_0,Node.next] == null) || (dtype(Heap_$_12[sh#5_$_0,Node.next]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_42 == Mask_$_41[sh#5_$_0,Node.next := Mask_$_41[sh#5_$_0,Node.next][perm$R := Mask_$_41[sh#5_$_0,Node.next][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_42);
	assume IsGoodState(heapFragment(Heap_$_12[sh#5_$_0,Node.next]));
	assume wf(Heap_$_12,Mask_$_42,SecMask_$_174);
	assume wf(Heap_$_12,Mask_$_42,SecMask_$_174);
	assume !(sh#5_$_0 == null);
	assume wf(Heap_$_12,Mask_$_42,SecMask_$_174);
	assume true;
	assume Fractions(25) > 0;
	assume Mask_$_43 == Mask_$_42[sh#5_$_0,mu := Mask_$_42[sh#5_$_0,mu][perm$R := Mask_$_42[sh#5_$_0,mu][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_43);
	assume IsGoodState(heapFragment(Heap_$_12[sh#5_$_0,mu]));
	assume wf(Heap_$_12,Mask_$_43,SecMask_$_174);
	assume wf(Heap_$_12,Mask_$_43,SecMask_$_174);
	assume Mask_$_44 == Mask_$_43;
	goto $branchMerge_13;
anon1608_Else:
	assume !$_$_condition_$110;
	assume $_$_condition_$110 <==> (Heap_$_12[sh#5_$_0,Node.next] == null);
	assume !(Heap_$_12[sh#5_$_0,Node.next] == null);
	assume Mask_$_44 == Mask_$_40;
	goto $branchMerge_13;
anon255:
	assert { :msg "  55.21: Receiver might be null." } true ==> (!(this == null));
	assert { :msg "  55.21: Location might not be readable." } true ==> CanRead(Mask_$_57,SecMask_$_174,this,Node.prev);
	assert { :msg "  55.13: The target of the acquire statement might be null." } !(Heap_$_13[this,Node.prev] == null);
	assert { :msg "  55.13: The mu field of the target of the acquire statement might not be readable." } CanRead(Mask_$_57,SecMask_$_174,Heap_$_13[this,Node.prev],mu);
	assert { :msg "  55.13: The mu field of the target of the acquire statement might not be above waitlevel." } (forall  o#_461 : ref :: ( (((0 < Heap_$_13[o#_461,held]) || Heap_$_13[o#_461,rdheld]) || (ZeroCredits[o#_461] < 0)) ==> MuBelow(Heap_$_13[o#_461,mu],Heap_$_13[Heap_$_13[this,Node.prev],mu]) ));
	assume !(Heap_$_13[Heap_$_13[this,Node.prev],mu] == $LockBottom);
	assume lastSeenMu#_460_$_0 == Heap_$_13[Heap_$_13[this,Node.prev],mu];
	assume lastSeenHeld#_459_$_1 == Heap_$_13[Heap_$_13[this,Node.prev],held];
	assume (!(0 < Heap_$_13[Heap_$_13[this,Node.prev],held])) && (!Heap_$_13[Heap_$_13[this,Node.prev],rdheld]);
	assume 0 < lastAcquire#_458_$_0;
	assume Heap_$_14 == Heap_$_13[Heap_$_13[this,Node.prev],held := lastAcquire#_458_$_0];
	assume sh#6_$_0 == Heap_$_14[this,Node.prev];
	assume !(sh#6_$_0 == null);
	assume wf(Heap_$_14,Mask_$_57,SecMask_$_174);
	assume (Heap_$_14[sh#6_$_0,Node.prev] == null) || (dtype(Heap_$_14[sh#6_$_0,Node.prev]) == Node#t);
	assume ((Fractions(50) - 0) > 0) || (false && ((0 - 1) > 0));
	assume Mask_$_58 == Mask_$_57[sh#6_$_0,Node.prev := Mask_$_57[sh#6_$_0,Node.prev][perm$R := Mask_$_57[sh#6_$_0,Node.prev][perm$R] + (Fractions(50) - 0)]];
	assume Mask_$_59 == Mask_$_58[sh#6_$_0,Node.prev := Mask_$_58[sh#6_$_0,Node.prev][perm$N := Mask_$_58[sh#6_$_0,Node.prev][perm$N] + (0 - 1)]];
	assume wf(Heap_$_14,Mask_$_59,SecMask_$_174);
	assume IsGoodMask(Mask_$_59);
	assume IsGoodState(heapFragment(Heap_$_14[sh#6_$_0,Node.prev]));
	assume wf(Heap_$_14,Mask_$_59,SecMask_$_174);
	assume wf(Heap_$_14,Mask_$_59,SecMask_$_174);
	assume !(sh#6_$_0 == null);
	assume wf(Heap_$_14,Mask_$_59,SecMask_$_174);
	assume (Heap_$_14[sh#6_$_0,Node.next] == null) || (dtype(Heap_$_14[sh#6_$_0,Node.next]) == Node#t);
	assume ((Fractions(50) - 0) > 0) || (false && ((0 - 1) > 0));
	assume Mask_$_60 == Mask_$_59[sh#6_$_0,Node.next := Mask_$_59[sh#6_$_0,Node.next][perm$R := Mask_$_59[sh#6_$_0,Node.next][perm$R] + (Fractions(50) - 0)]];
	assume Mask_$_61 == Mask_$_60[sh#6_$_0,Node.next := Mask_$_60[sh#6_$_0,Node.next][perm$N := Mask_$_60[sh#6_$_0,Node.next][perm$N] + (0 - 1)]];
	assume wf(Heap_$_14,Mask_$_61,SecMask_$_174);
	assume IsGoodMask(Mask_$_61);
	assume IsGoodState(heapFragment(Heap_$_14[sh#6_$_0,Node.next]));
	assume wf(Heap_$_14,Mask_$_61,SecMask_$_174);
	assume wf(Heap_$_14,Mask_$_61,SecMask_$_174);
	assume !(sh#6_$_0 == null);
	assume wf(Heap_$_14,Mask_$_61,SecMask_$_174);
	assume true;
	assume ((Fractions(50) - 0) > 0) || (false && ((0 - 1) > 0));
	assume Mask_$_62 == Mask_$_61[sh#6_$_0,mu := Mask_$_61[sh#6_$_0,mu][perm$R := Mask_$_61[sh#6_$_0,mu][perm$R] + (Fractions(50) - 0)]];
	assume Mask_$_63 == Mask_$_62[sh#6_$_0,mu := Mask_$_62[sh#6_$_0,mu][perm$N := Mask_$_62[sh#6_$_0,mu][perm$N] + (0 - 1)]];
	assume wf(Heap_$_14,Mask_$_63,SecMask_$_174);
	assume IsGoodMask(Mask_$_63);
	assume IsGoodState(heapFragment(Heap_$_14[sh#6_$_0,mu]));
	assume wf(Heap_$_14,Mask_$_63,SecMask_$_174);
	assume wf(Heap_$_14,Mask_$_63,SecMask_$_174);
	if ($_$_condition_$125) { goto anon1616_Then; } else { goto anon1616_Else; }
anon1609_Then:
	assume $_$_condition_$111;
	assume $_$_condition_$111 <==> (!(Heap_$_12[sh#5_$_0,Node.next] == null));
	assume !(Heap_$_12[sh#5_$_0,Node.next] == null);
	assume !(Heap_$_12[sh#5_$_0,Node.next] == null);
	assume wf(Heap_$_12,Mask_$_44,SecMask_$_174);
	assume (Heap_$_12[Heap_$_12[sh#5_$_0,Node.next],Node.next] == null) || (dtype(Heap_$_12[Heap_$_12[sh#5_$_0,Node.next],Node.next]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_45 == Mask_$_44[Heap_$_12[sh#5_$_0,Node.next],Node.next := Mask_$_44[Heap_$_12[sh#5_$_0,Node.next],Node.next][perm$R := Mask_$_44[Heap_$_12[sh#5_$_0,Node.next],Node.next][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_45);
	assume IsGoodState(heapFragment(Heap_$_12[Heap_$_12[sh#5_$_0,Node.next],Node.next]));
	assume wf(Heap_$_12,Mask_$_45,SecMask_$_174);
	assume wf(Heap_$_12,Mask_$_45,SecMask_$_174);
	assume !(Heap_$_12[sh#5_$_0,Node.next] == null);
	assume wf(Heap_$_12,Mask_$_45,SecMask_$_174);
	assume (Heap_$_12[Heap_$_12[sh#5_$_0,Node.next],Node.prev] == null) || (dtype(Heap_$_12[Heap_$_12[sh#5_$_0,Node.next],Node.prev]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_46 == Mask_$_45[Heap_$_12[sh#5_$_0,Node.next],Node.prev := Mask_$_45[Heap_$_12[sh#5_$_0,Node.next],Node.prev][perm$R := Mask_$_45[Heap_$_12[sh#5_$_0,Node.next],Node.prev][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_46);
	assume IsGoodState(heapFragment(Heap_$_12[Heap_$_12[sh#5_$_0,Node.next],Node.prev]));
	assume wf(Heap_$_12,Mask_$_46,SecMask_$_174);
	assume wf(Heap_$_12,Mask_$_46,SecMask_$_174);
	assume !(Heap_$_12[sh#5_$_0,Node.next] == null);
	assume wf(Heap_$_12,Mask_$_46,SecMask_$_174);
	assume true;
	assume Fractions(25) > 0;
	assume Mask_$_47 == Mask_$_46[Heap_$_12[sh#5_$_0,Node.next],mu := Mask_$_46[Heap_$_12[sh#5_$_0,Node.next],mu][perm$R := Mask_$_46[Heap_$_12[sh#5_$_0,Node.next],mu][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_47);
	assume IsGoodState(heapFragment(Heap_$_12[Heap_$_12[sh#5_$_0,Node.next],mu]));
	assume wf(Heap_$_12,Mask_$_47,SecMask_$_174);
	assume wf(Heap_$_12,Mask_$_47,SecMask_$_174);
	assume Mask_$_48 == Mask_$_47;
	goto $branchMerge_14;
anon1609_Else:
	assume !$_$_condition_$111;
	assume $_$_condition_$111 <==> (!(Heap_$_12[sh#5_$_0,Node.next] == null));
	assume Heap_$_12[sh#5_$_0,Node.next] == null;
	assume Mask_$_48 == Mask_$_44;
	goto $branchMerge_14;
anon1610_Then:
	assume $_$_condition_$113;
	assume $_$_condition_$113 <==> (Heap_$_12[sh#5_$_0,Node.prev] == null);
	assume Heap_$_12[sh#5_$_0,Node.prev] == null;
	assume !(sh#5_$_0 == null);
	assume wf(Heap_$_12,Mask_$_48,SecMask_$_174);
	assume (Heap_$_12[sh#5_$_0,Node.prev] == null) || (dtype(Heap_$_12[sh#5_$_0,Node.prev]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_49 == Mask_$_48[sh#5_$_0,Node.prev := Mask_$_48[sh#5_$_0,Node.prev][perm$R := Mask_$_48[sh#5_$_0,Node.prev][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_49);
	assume IsGoodState(heapFragment(Heap_$_12[sh#5_$_0,Node.prev]));
	assume wf(Heap_$_12,Mask_$_49,SecMask_$_174);
	assume wf(Heap_$_12,Mask_$_49,SecMask_$_174);
	assume !(sh#5_$_0 == null);
	assume wf(Heap_$_12,Mask_$_49,SecMask_$_174);
	assume (Heap_$_12[sh#5_$_0,Node.next] == null) || (dtype(Heap_$_12[sh#5_$_0,Node.next]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_50 == Mask_$_49[sh#5_$_0,Node.next := Mask_$_49[sh#5_$_0,Node.next][perm$R := Mask_$_49[sh#5_$_0,Node.next][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_50);
	assume IsGoodState(heapFragment(Heap_$_12[sh#5_$_0,Node.next]));
	assume wf(Heap_$_12,Mask_$_50,SecMask_$_174);
	assume wf(Heap_$_12,Mask_$_50,SecMask_$_174);
	assume !(sh#5_$_0 == null);
	assume wf(Heap_$_12,Mask_$_50,SecMask_$_174);
	assume true;
	assume Fractions(25) > 0;
	assume Mask_$_51 == Mask_$_50[sh#5_$_0,mu := Mask_$_50[sh#5_$_0,mu][perm$R := Mask_$_50[sh#5_$_0,mu][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_51);
	assume IsGoodState(heapFragment(Heap_$_12[sh#5_$_0,mu]));
	assume wf(Heap_$_12,Mask_$_51,SecMask_$_174);
	assume wf(Heap_$_12,Mask_$_51,SecMask_$_174);
	assume Mask_$_52 == Mask_$_51;
	goto $branchMerge_15;
anon1610_Else:
	assume !$_$_condition_$113;
	assume $_$_condition_$113 <==> (Heap_$_12[sh#5_$_0,Node.prev] == null);
	assume !(Heap_$_12[sh#5_$_0,Node.prev] == null);
	assume Mask_$_52 == Mask_$_48;
	goto $branchMerge_15;
anon1611_Then:
	assume $_$_condition_$115;
	assume $_$_condition_$115 <==> (!(Heap_$_12[sh#5_$_0,Node.prev] == null));
	assume !(Heap_$_12[sh#5_$_0,Node.prev] == null);
	assume !(Heap_$_12[sh#5_$_0,Node.prev] == null);
	assume wf(Heap_$_12,Mask_$_52,SecMask_$_174);
	assume (Heap_$_12[Heap_$_12[sh#5_$_0,Node.prev],Node.next] == null) || (dtype(Heap_$_12[Heap_$_12[sh#5_$_0,Node.prev],Node.next]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_53 == Mask_$_52[Heap_$_12[sh#5_$_0,Node.prev],Node.next := Mask_$_52[Heap_$_12[sh#5_$_0,Node.prev],Node.next][perm$R := Mask_$_52[Heap_$_12[sh#5_$_0,Node.prev],Node.next][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_53);
	assume IsGoodState(heapFragment(Heap_$_12[Heap_$_12[sh#5_$_0,Node.prev],Node.next]));
	assume wf(Heap_$_12,Mask_$_53,SecMask_$_174);
	assume wf(Heap_$_12,Mask_$_53,SecMask_$_174);
	assume !(Heap_$_12[sh#5_$_0,Node.prev] == null);
	assume wf(Heap_$_12,Mask_$_53,SecMask_$_174);
	assume (Heap_$_12[Heap_$_12[sh#5_$_0,Node.prev],Node.prev] == null) || (dtype(Heap_$_12[Heap_$_12[sh#5_$_0,Node.prev],Node.prev]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_54 == Mask_$_53[Heap_$_12[sh#5_$_0,Node.prev],Node.prev := Mask_$_53[Heap_$_12[sh#5_$_0,Node.prev],Node.prev][perm$R := Mask_$_53[Heap_$_12[sh#5_$_0,Node.prev],Node.prev][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_54);
	assume IsGoodState(heapFragment(Heap_$_12[Heap_$_12[sh#5_$_0,Node.prev],Node.prev]));
	assume wf(Heap_$_12,Mask_$_54,SecMask_$_174);
	assume wf(Heap_$_12,Mask_$_54,SecMask_$_174);
	assume !(Heap_$_12[sh#5_$_0,Node.prev] == null);
	assume wf(Heap_$_12,Mask_$_54,SecMask_$_174);
	assume true;
	assume Fractions(25) > 0;
	assume Mask_$_55 == Mask_$_54[Heap_$_12[sh#5_$_0,Node.prev],mu := Mask_$_54[Heap_$_12[sh#5_$_0,Node.prev],mu][perm$R := Mask_$_54[Heap_$_12[sh#5_$_0,Node.prev],mu][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_55);
	assume IsGoodState(heapFragment(Heap_$_12[Heap_$_12[sh#5_$_0,Node.prev],mu]));
	assume wf(Heap_$_12,Mask_$_55,SecMask_$_174);
	assume wf(Heap_$_12,Mask_$_55,SecMask_$_174);
	assume Mask_$_56 == Mask_$_55;
	goto $branchMerge_16;
anon1611_Else:
	assume !$_$_condition_$115;
	assume $_$_condition_$115 <==> (!(Heap_$_12[sh#5_$_0,Node.prev] == null));
	assume Heap_$_12[sh#5_$_0,Node.prev] == null;
	assume Mask_$_56 == Mask_$_52;
	goto $branchMerge_16;
anon1612_Then:
	assume $_$_condition_$117;
	assume $_$_condition_$117 <==> (!(Heap_$_12[sh#5_$_0,Node.next] == null));
	assume !(Heap_$_12[sh#5_$_0,Node.next] == null);
	assume !(Heap_$_12[Heap_$_12[sh#5_$_0,Node.next],Node.prev] == null);
	assume Heap_$_12[Heap_$_12[sh#5_$_0,Node.next],Node.prev] == sh#5_$_0;
	goto $branchMerge_17;
anon1612_Else:
	assume !$_$_condition_$117;
	assume $_$_condition_$117 <==> (!(Heap_$_12[sh#5_$_0,Node.next] == null));
	assume Heap_$_12[sh#5_$_0,Node.next] == null;
	goto $branchMerge_17;
anon1613_Then:
	assume $_$_condition_$119;
	assume $_$_condition_$119 <==> (!(Heap_$_12[sh#5_$_0,Node.prev] == null));
	assume !(Heap_$_12[sh#5_$_0,Node.prev] == null);
	assume !(Heap_$_12[Heap_$_12[sh#5_$_0,Node.prev],Node.next] == null);
	assume Heap_$_12[Heap_$_12[sh#5_$_0,Node.prev],Node.next] == sh#5_$_0;
	goto $branchMerge_18;
anon1613_Else:
	assume !$_$_condition_$119;
	assume $_$_condition_$119 <==> (!(Heap_$_12[sh#5_$_0,Node.prev] == null));
	assume Heap_$_12[sh#5_$_0,Node.prev] == null;
	goto $branchMerge_18;
anon1614_Then:
	assume $_$_condition_$121;
	assume $_$_condition_$121 <==> (!(Heap_$_12[sh#5_$_0,Node.next] == null));
	assume !(Heap_$_12[sh#5_$_0,Node.next] == null);
	assume MuBelow(Heap_$_12[sh#5_$_0,mu],Heap_$_12[Heap_$_12[sh#5_$_0,Node.next],mu]);
	goto $branchMerge_19;
anon1614_Else:
	assume !$_$_condition_$121;
	assume $_$_condition_$121 <==> (!(Heap_$_12[sh#5_$_0,Node.next] == null));
	assume Heap_$_12[sh#5_$_0,Node.next] == null;
	goto $branchMerge_19;
anon1615_Then:
	assume $_$_condition_$123;
	assume $_$_condition_$123 <==> (!(Heap_$_12[sh#5_$_0,Node.prev] == null));
	assume !(Heap_$_12[sh#5_$_0,Node.prev] == null);
	assume MuBelow(Heap_$_12[Heap_$_12[sh#5_$_0,Node.prev],mu],Heap_$_12[sh#5_$_0,mu]);
	goto anon254;
anon1615_Else:
	assume !$_$_condition_$123;
	assume $_$_condition_$123 <==> (!(Heap_$_12[sh#5_$_0,Node.prev] == null));
	assume Heap_$_12[sh#5_$_0,Node.prev] == null;
	goto anon254;
anon254:
	assume IsGoodMask(Mask_$_56);
	assume wf(Heap_$_12,Mask_$_56,SecMask_$_174);
	assume Acquire$Heap(lastAcquire#_454_$_0) == Heap_$_12;
	assume Acquire$Mask(lastAcquire#_454_$_0) == Mask_$_56;
	assume Acquire$SecMask(lastAcquire#_454_$_0) == SecMask_$_174;
	assume Acquire$Credits(lastAcquire#_454_$_0) == ZeroCredits;
	assert { :msg "  54.38: SMOKE-TEST-13. (The statements after the acquire statement are unreachable.)" } !(1 == 1);
	assume Heap_$_13 == Heap_$_12;
	assume Mask_$_57 == Mask_$_56;
	goto anon255;
anon1616_Then:
	assume $_$_condition_$125;
	assume $_$_condition_$125 <==> (Heap_$_14[sh#6_$_0,Node.next] == null);
	assume Heap_$_14[sh#6_$_0,Node.next] == null;
	assume !(sh#6_$_0 == null);
	assume wf(Heap_$_14,Mask_$_63,SecMask_$_174);
	assume (Heap_$_14[sh#6_$_0,Node.prev] == null) || (dtype(Heap_$_14[sh#6_$_0,Node.prev]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_64 == Mask_$_63[sh#6_$_0,Node.prev := Mask_$_63[sh#6_$_0,Node.prev][perm$R := Mask_$_63[sh#6_$_0,Node.prev][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_64);
	assume IsGoodState(heapFragment(Heap_$_14[sh#6_$_0,Node.prev]));
	assume wf(Heap_$_14,Mask_$_64,SecMask_$_174);
	assume wf(Heap_$_14,Mask_$_64,SecMask_$_174);
	assume !(sh#6_$_0 == null);
	assume wf(Heap_$_14,Mask_$_64,SecMask_$_174);
	assume (Heap_$_14[sh#6_$_0,Node.next] == null) || (dtype(Heap_$_14[sh#6_$_0,Node.next]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_65 == Mask_$_64[sh#6_$_0,Node.next := Mask_$_64[sh#6_$_0,Node.next][perm$R := Mask_$_64[sh#6_$_0,Node.next][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_65);
	assume IsGoodState(heapFragment(Heap_$_14[sh#6_$_0,Node.next]));
	assume wf(Heap_$_14,Mask_$_65,SecMask_$_174);
	assume wf(Heap_$_14,Mask_$_65,SecMask_$_174);
	assume !(sh#6_$_0 == null);
	assume wf(Heap_$_14,Mask_$_65,SecMask_$_174);
	assume true;
	assume Fractions(25) > 0;
	assume Mask_$_66 == Mask_$_65[sh#6_$_0,mu := Mask_$_65[sh#6_$_0,mu][perm$R := Mask_$_65[sh#6_$_0,mu][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_66);
	assume IsGoodState(heapFragment(Heap_$_14[sh#6_$_0,mu]));
	assume wf(Heap_$_14,Mask_$_66,SecMask_$_174);
	assume wf(Heap_$_14,Mask_$_66,SecMask_$_174);
	assume Mask_$_67 == Mask_$_66;
	goto $branchMerge_20;
anon1616_Else:
	assume !$_$_condition_$125;
	assume $_$_condition_$125 <==> (Heap_$_14[sh#6_$_0,Node.next] == null);
	assume !(Heap_$_14[sh#6_$_0,Node.next] == null);
	assume Mask_$_67 == Mask_$_63;
	goto $branchMerge_20;
anon1617_Then:
	assume $_$_condition_$126;
	assume $_$_condition_$126 <==> (!(Heap_$_14[sh#6_$_0,Node.next] == null));
	assume !(Heap_$_14[sh#6_$_0,Node.next] == null);
	assume !(Heap_$_14[sh#6_$_0,Node.next] == null);
	assume wf(Heap_$_14,Mask_$_67,SecMask_$_174);
	assume (Heap_$_14[Heap_$_14[sh#6_$_0,Node.next],Node.next] == null) || (dtype(Heap_$_14[Heap_$_14[sh#6_$_0,Node.next],Node.next]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_68 == Mask_$_67[Heap_$_14[sh#6_$_0,Node.next],Node.next := Mask_$_67[Heap_$_14[sh#6_$_0,Node.next],Node.next][perm$R := Mask_$_67[Heap_$_14[sh#6_$_0,Node.next],Node.next][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_68);
	assume IsGoodState(heapFragment(Heap_$_14[Heap_$_14[sh#6_$_0,Node.next],Node.next]));
	assume wf(Heap_$_14,Mask_$_68,SecMask_$_174);
	assume wf(Heap_$_14,Mask_$_68,SecMask_$_174);
	assume !(Heap_$_14[sh#6_$_0,Node.next] == null);
	assume wf(Heap_$_14,Mask_$_68,SecMask_$_174);
	assume (Heap_$_14[Heap_$_14[sh#6_$_0,Node.next],Node.prev] == null) || (dtype(Heap_$_14[Heap_$_14[sh#6_$_0,Node.next],Node.prev]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_69 == Mask_$_68[Heap_$_14[sh#6_$_0,Node.next],Node.prev := Mask_$_68[Heap_$_14[sh#6_$_0,Node.next],Node.prev][perm$R := Mask_$_68[Heap_$_14[sh#6_$_0,Node.next],Node.prev][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_69);
	assume IsGoodState(heapFragment(Heap_$_14[Heap_$_14[sh#6_$_0,Node.next],Node.prev]));
	assume wf(Heap_$_14,Mask_$_69,SecMask_$_174);
	assume wf(Heap_$_14,Mask_$_69,SecMask_$_174);
	assume !(Heap_$_14[sh#6_$_0,Node.next] == null);
	assume wf(Heap_$_14,Mask_$_69,SecMask_$_174);
	assume true;
	assume Fractions(25) > 0;
	assume Mask_$_70 == Mask_$_69[Heap_$_14[sh#6_$_0,Node.next],mu := Mask_$_69[Heap_$_14[sh#6_$_0,Node.next],mu][perm$R := Mask_$_69[Heap_$_14[sh#6_$_0,Node.next],mu][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_70);
	assume IsGoodState(heapFragment(Heap_$_14[Heap_$_14[sh#6_$_0,Node.next],mu]));
	assume wf(Heap_$_14,Mask_$_70,SecMask_$_174);
	assume wf(Heap_$_14,Mask_$_70,SecMask_$_174);
	assume Mask_$_71 == Mask_$_70;
	goto $branchMerge_21;
anon1617_Else:
	assume !$_$_condition_$126;
	assume $_$_condition_$126 <==> (!(Heap_$_14[sh#6_$_0,Node.next] == null));
	assume Heap_$_14[sh#6_$_0,Node.next] == null;
	assume Mask_$_71 == Mask_$_67;
	goto $branchMerge_21;
anon1618_Then:
	assume $_$_condition_$128;
	assume $_$_condition_$128 <==> (Heap_$_14[sh#6_$_0,Node.prev] == null);
	assume Heap_$_14[sh#6_$_0,Node.prev] == null;
	assume !(sh#6_$_0 == null);
	assume wf(Heap_$_14,Mask_$_71,SecMask_$_174);
	assume (Heap_$_14[sh#6_$_0,Node.prev] == null) || (dtype(Heap_$_14[sh#6_$_0,Node.prev]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_72 == Mask_$_71[sh#6_$_0,Node.prev := Mask_$_71[sh#6_$_0,Node.prev][perm$R := Mask_$_71[sh#6_$_0,Node.prev][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_72);
	assume IsGoodState(heapFragment(Heap_$_14[sh#6_$_0,Node.prev]));
	assume wf(Heap_$_14,Mask_$_72,SecMask_$_174);
	assume wf(Heap_$_14,Mask_$_72,SecMask_$_174);
	assume !(sh#6_$_0 == null);
	assume wf(Heap_$_14,Mask_$_72,SecMask_$_174);
	assume (Heap_$_14[sh#6_$_0,Node.next] == null) || (dtype(Heap_$_14[sh#6_$_0,Node.next]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_73 == Mask_$_72[sh#6_$_0,Node.next := Mask_$_72[sh#6_$_0,Node.next][perm$R := Mask_$_72[sh#6_$_0,Node.next][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_73);
	assume IsGoodState(heapFragment(Heap_$_14[sh#6_$_0,Node.next]));
	assume wf(Heap_$_14,Mask_$_73,SecMask_$_174);
	assume wf(Heap_$_14,Mask_$_73,SecMask_$_174);
	assume !(sh#6_$_0 == null);
	assume wf(Heap_$_14,Mask_$_73,SecMask_$_174);
	assume true;
	assume Fractions(25) > 0;
	assume Mask_$_74 == Mask_$_73[sh#6_$_0,mu := Mask_$_73[sh#6_$_0,mu][perm$R := Mask_$_73[sh#6_$_0,mu][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_74);
	assume IsGoodState(heapFragment(Heap_$_14[sh#6_$_0,mu]));
	assume wf(Heap_$_14,Mask_$_74,SecMask_$_174);
	assume wf(Heap_$_14,Mask_$_74,SecMask_$_174);
	assume Mask_$_75 == Mask_$_74;
	goto $branchMerge_22;
anon1618_Else:
	assume !$_$_condition_$128;
	assume $_$_condition_$128 <==> (Heap_$_14[sh#6_$_0,Node.prev] == null);
	assume !(Heap_$_14[sh#6_$_0,Node.prev] == null);
	assume Mask_$_75 == Mask_$_71;
	goto $branchMerge_22;
anon1619_Then:
	assume $_$_condition_$130;
	assume $_$_condition_$130 <==> (!(Heap_$_14[sh#6_$_0,Node.prev] == null));
	assume !(Heap_$_14[sh#6_$_0,Node.prev] == null);
	assume !(Heap_$_14[sh#6_$_0,Node.prev] == null);
	assume wf(Heap_$_14,Mask_$_75,SecMask_$_174);
	assume (Heap_$_14[Heap_$_14[sh#6_$_0,Node.prev],Node.next] == null) || (dtype(Heap_$_14[Heap_$_14[sh#6_$_0,Node.prev],Node.next]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_76 == Mask_$_75[Heap_$_14[sh#6_$_0,Node.prev],Node.next := Mask_$_75[Heap_$_14[sh#6_$_0,Node.prev],Node.next][perm$R := Mask_$_75[Heap_$_14[sh#6_$_0,Node.prev],Node.next][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_76);
	assume IsGoodState(heapFragment(Heap_$_14[Heap_$_14[sh#6_$_0,Node.prev],Node.next]));
	assume wf(Heap_$_14,Mask_$_76,SecMask_$_174);
	assume wf(Heap_$_14,Mask_$_76,SecMask_$_174);
	assume !(Heap_$_14[sh#6_$_0,Node.prev] == null);
	assume wf(Heap_$_14,Mask_$_76,SecMask_$_174);
	assume (Heap_$_14[Heap_$_14[sh#6_$_0,Node.prev],Node.prev] == null) || (dtype(Heap_$_14[Heap_$_14[sh#6_$_0,Node.prev],Node.prev]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_77 == Mask_$_76[Heap_$_14[sh#6_$_0,Node.prev],Node.prev := Mask_$_76[Heap_$_14[sh#6_$_0,Node.prev],Node.prev][perm$R := Mask_$_76[Heap_$_14[sh#6_$_0,Node.prev],Node.prev][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_77);
	assume IsGoodState(heapFragment(Heap_$_14[Heap_$_14[sh#6_$_0,Node.prev],Node.prev]));
	assume wf(Heap_$_14,Mask_$_77,SecMask_$_174);
	assume wf(Heap_$_14,Mask_$_77,SecMask_$_174);
	assume !(Heap_$_14[sh#6_$_0,Node.prev] == null);
	assume wf(Heap_$_14,Mask_$_77,SecMask_$_174);
	assume true;
	assume Fractions(25) > 0;
	assume Mask_$_78 == Mask_$_77[Heap_$_14[sh#6_$_0,Node.prev],mu := Mask_$_77[Heap_$_14[sh#6_$_0,Node.prev],mu][perm$R := Mask_$_77[Heap_$_14[sh#6_$_0,Node.prev],mu][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_78);
	assume IsGoodState(heapFragment(Heap_$_14[Heap_$_14[sh#6_$_0,Node.prev],mu]));
	assume wf(Heap_$_14,Mask_$_78,SecMask_$_174);
	assume wf(Heap_$_14,Mask_$_78,SecMask_$_174);
	assume Mask_$_79 == Mask_$_78;
	goto $branchMerge_23;
anon1619_Else:
	assume !$_$_condition_$130;
	assume $_$_condition_$130 <==> (!(Heap_$_14[sh#6_$_0,Node.prev] == null));
	assume Heap_$_14[sh#6_$_0,Node.prev] == null;
	assume Mask_$_79 == Mask_$_75;
	goto $branchMerge_23;
anon1620_Then:
	assume $_$_condition_$132;
	assume $_$_condition_$132 <==> (!(Heap_$_14[sh#6_$_0,Node.next] == null));
	assume !(Heap_$_14[sh#6_$_0,Node.next] == null);
	assume !(Heap_$_14[Heap_$_14[sh#6_$_0,Node.next],Node.prev] == null);
	assume Heap_$_14[Heap_$_14[sh#6_$_0,Node.next],Node.prev] == sh#6_$_0;
	goto $branchMerge_24;
anon1620_Else:
	assume !$_$_condition_$132;
	assume $_$_condition_$132 <==> (!(Heap_$_14[sh#6_$_0,Node.next] == null));
	assume Heap_$_14[sh#6_$_0,Node.next] == null;
	goto $branchMerge_24;
anon1621_Then:
	assume $_$_condition_$134;
	assume $_$_condition_$134 <==> (!(Heap_$_14[sh#6_$_0,Node.prev] == null));
	assume !(Heap_$_14[sh#6_$_0,Node.prev] == null);
	assume !(Heap_$_14[Heap_$_14[sh#6_$_0,Node.prev],Node.next] == null);
	assume Heap_$_14[Heap_$_14[sh#6_$_0,Node.prev],Node.next] == sh#6_$_0;
	goto $branchMerge_25;
anon1621_Else:
	assume !$_$_condition_$134;
	assume $_$_condition_$134 <==> (!(Heap_$_14[sh#6_$_0,Node.prev] == null));
	assume Heap_$_14[sh#6_$_0,Node.prev] == null;
	goto $branchMerge_25;
anon1622_Then:
	assume $_$_condition_$136;
	assume $_$_condition_$136 <==> (!(Heap_$_14[sh#6_$_0,Node.next] == null));
	assume !(Heap_$_14[sh#6_$_0,Node.next] == null);
	assume MuBelow(Heap_$_14[sh#6_$_0,mu],Heap_$_14[Heap_$_14[sh#6_$_0,Node.next],mu]);
	goto $branchMerge_26;
anon1622_Else:
	assume !$_$_condition_$136;
	assume $_$_condition_$136 <==> (!(Heap_$_14[sh#6_$_0,Node.next] == null));
	assume Heap_$_14[sh#6_$_0,Node.next] == null;
	goto $branchMerge_26;
anon1623_Then:
	assume $_$_condition_$138;
	assume $_$_condition_$138 <==> (!(Heap_$_14[sh#6_$_0,Node.prev] == null));
	assume !(Heap_$_14[sh#6_$_0,Node.prev] == null);
	assume MuBelow(Heap_$_14[Heap_$_14[sh#6_$_0,Node.prev],mu],Heap_$_14[sh#6_$_0,mu]);
	goto anon271;
anon1623_Else:
	assume !$_$_condition_$138;
	assume $_$_condition_$138 <==> (!(Heap_$_14[sh#6_$_0,Node.prev] == null));
	assume Heap_$_14[sh#6_$_0,Node.prev] == null;
	goto anon271;
anon271:
	assume IsGoodMask(Mask_$_79);
	assume wf(Heap_$_14,Mask_$_79,SecMask_$_174);
	assume Acquire$Heap(lastAcquire#_458_$_0) == Heap_$_14;
	assume Acquire$Mask(lastAcquire#_458_$_0) == Mask_$_79;
	assume Acquire$SecMask(lastAcquire#_458_$_0) == SecMask_$_174;
	assume Acquire$Credits(lastAcquire#_458_$_0) == ZeroCredits;
	assert { :msg "  55.13: SMOKE-TEST-14. (The statements after the acquire statement are unreachable.)" } !(1 == 1);
	assume Mask_$_80 == Mask_$_79;
	assume Heap_$_15 == Heap_$_14;
	assume cond#_453_$_1 <==> cond#_453_$_0;
	goto anon272;
anon1624_Then:
	assume $_$_condition_$140;
	assume $_$_condition_$140 <==> (Heap_$_16[this,Node.next] == null);
	assume Heap_$_16[this,Node.next] == null;
	assume !(this == null);
	assume wf(Heap_$_16,Mask_$_86,SecMask_$_174);
	assume (Heap_$_16[this,Node.prev] == null) || (dtype(Heap_$_16[this,Node.prev]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_87 == Mask_$_86[this,Node.prev := Mask_$_86[this,Node.prev][perm$R := Mask_$_86[this,Node.prev][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_87);
	assume IsGoodState(heapFragment(Heap_$_16[this,Node.prev]));
	assume wf(Heap_$_16,Mask_$_87,SecMask_$_174);
	assume wf(Heap_$_16,Mask_$_87,SecMask_$_174);
	assume !(this == null);
	assume wf(Heap_$_16,Mask_$_87,SecMask_$_174);
	assume (Heap_$_16[this,Node.next] == null) || (dtype(Heap_$_16[this,Node.next]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_88 == Mask_$_87[this,Node.next := Mask_$_87[this,Node.next][perm$R := Mask_$_87[this,Node.next][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_88);
	assume IsGoodState(heapFragment(Heap_$_16[this,Node.next]));
	assume wf(Heap_$_16,Mask_$_88,SecMask_$_174);
	assume wf(Heap_$_16,Mask_$_88,SecMask_$_174);
	assume !(this == null);
	assume wf(Heap_$_16,Mask_$_88,SecMask_$_174);
	assume true;
	assume Fractions(25) > 0;
	assume Mask_$_89 == Mask_$_88[this,mu := Mask_$_88[this,mu][perm$R := Mask_$_88[this,mu][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_89);
	assume IsGoodState(heapFragment(Heap_$_16[this,mu]));
	assume wf(Heap_$_16,Mask_$_89,SecMask_$_174);
	assume wf(Heap_$_16,Mask_$_89,SecMask_$_174);
	assume Mask_$_90 == Mask_$_89;
	goto $branchMerge_27;
anon1624_Else:
	assume !$_$_condition_$140;
	assume $_$_condition_$140 <==> (Heap_$_16[this,Node.next] == null);
	assume !(Heap_$_16[this,Node.next] == null);
	assume Mask_$_90 == Mask_$_86;
	goto $branchMerge_27;
anon1625_Then:
	assume $_$_condition_$141;
	assume $_$_condition_$141 <==> (!(Heap_$_16[this,Node.next] == null));
	assume !(Heap_$_16[this,Node.next] == null);
	assume !(Heap_$_16[this,Node.next] == null);
	assume wf(Heap_$_16,Mask_$_90,SecMask_$_174);
	assume (Heap_$_16[Heap_$_16[this,Node.next],Node.next] == null) || (dtype(Heap_$_16[Heap_$_16[this,Node.next],Node.next]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_91 == Mask_$_90[Heap_$_16[this,Node.next],Node.next := Mask_$_90[Heap_$_16[this,Node.next],Node.next][perm$R := Mask_$_90[Heap_$_16[this,Node.next],Node.next][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_91);
	assume IsGoodState(heapFragment(Heap_$_16[Heap_$_16[this,Node.next],Node.next]));
	assume wf(Heap_$_16,Mask_$_91,SecMask_$_174);
	assume wf(Heap_$_16,Mask_$_91,SecMask_$_174);
	assume !(Heap_$_16[this,Node.next] == null);
	assume wf(Heap_$_16,Mask_$_91,SecMask_$_174);
	assume (Heap_$_16[Heap_$_16[this,Node.next],Node.prev] == null) || (dtype(Heap_$_16[Heap_$_16[this,Node.next],Node.prev]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_92 == Mask_$_91[Heap_$_16[this,Node.next],Node.prev := Mask_$_91[Heap_$_16[this,Node.next],Node.prev][perm$R := Mask_$_91[Heap_$_16[this,Node.next],Node.prev][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_92);
	assume IsGoodState(heapFragment(Heap_$_16[Heap_$_16[this,Node.next],Node.prev]));
	assume wf(Heap_$_16,Mask_$_92,SecMask_$_174);
	assume wf(Heap_$_16,Mask_$_92,SecMask_$_174);
	assume !(Heap_$_16[this,Node.next] == null);
	assume wf(Heap_$_16,Mask_$_92,SecMask_$_174);
	assume true;
	assume Fractions(25) > 0;
	assume Mask_$_93 == Mask_$_92[Heap_$_16[this,Node.next],mu := Mask_$_92[Heap_$_16[this,Node.next],mu][perm$R := Mask_$_92[Heap_$_16[this,Node.next],mu][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_93);
	assume IsGoodState(heapFragment(Heap_$_16[Heap_$_16[this,Node.next],mu]));
	assume wf(Heap_$_16,Mask_$_93,SecMask_$_174);
	assume wf(Heap_$_16,Mask_$_93,SecMask_$_174);
	assume Mask_$_94 == Mask_$_93;
	goto $branchMerge_28;
anon1625_Else:
	assume !$_$_condition_$141;
	assume $_$_condition_$141 <==> (!(Heap_$_16[this,Node.next] == null));
	assume Heap_$_16[this,Node.next] == null;
	assume Mask_$_94 == Mask_$_90;
	goto $branchMerge_28;
anon1626_Then:
	assume $_$_condition_$143;
	assume $_$_condition_$143 <==> (Heap_$_16[this,Node.prev] == null);
	assume Heap_$_16[this,Node.prev] == null;
	assume !(this == null);
	assume wf(Heap_$_16,Mask_$_94,SecMask_$_174);
	assume (Heap_$_16[this,Node.prev] == null) || (dtype(Heap_$_16[this,Node.prev]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_95 == Mask_$_94[this,Node.prev := Mask_$_94[this,Node.prev][perm$R := Mask_$_94[this,Node.prev][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_95);
	assume IsGoodState(heapFragment(Heap_$_16[this,Node.prev]));
	assume wf(Heap_$_16,Mask_$_95,SecMask_$_174);
	assume wf(Heap_$_16,Mask_$_95,SecMask_$_174);
	assume !(this == null);
	assume wf(Heap_$_16,Mask_$_95,SecMask_$_174);
	assume (Heap_$_16[this,Node.next] == null) || (dtype(Heap_$_16[this,Node.next]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_96 == Mask_$_95[this,Node.next := Mask_$_95[this,Node.next][perm$R := Mask_$_95[this,Node.next][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_96);
	assume IsGoodState(heapFragment(Heap_$_16[this,Node.next]));
	assume wf(Heap_$_16,Mask_$_96,SecMask_$_174);
	assume wf(Heap_$_16,Mask_$_96,SecMask_$_174);
	assume !(this == null);
	assume wf(Heap_$_16,Mask_$_96,SecMask_$_174);
	assume true;
	assume Fractions(25) > 0;
	assume Mask_$_97 == Mask_$_96[this,mu := Mask_$_96[this,mu][perm$R := Mask_$_96[this,mu][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_97);
	assume IsGoodState(heapFragment(Heap_$_16[this,mu]));
	assume wf(Heap_$_16,Mask_$_97,SecMask_$_174);
	assume wf(Heap_$_16,Mask_$_97,SecMask_$_174);
	assume Mask_$_98 == Mask_$_97;
	goto $branchMerge_29;
anon1626_Else:
	assume !$_$_condition_$143;
	assume $_$_condition_$143 <==> (Heap_$_16[this,Node.prev] == null);
	assume !(Heap_$_16[this,Node.prev] == null);
	assume Mask_$_98 == Mask_$_94;
	goto $branchMerge_29;
anon1627_Then:
	assume $_$_condition_$145;
	assume $_$_condition_$145 <==> (!(Heap_$_16[this,Node.prev] == null));
	assume !(Heap_$_16[this,Node.prev] == null);
	assume !(Heap_$_16[this,Node.prev] == null);
	assume wf(Heap_$_16,Mask_$_98,SecMask_$_174);
	assume (Heap_$_16[Heap_$_16[this,Node.prev],Node.next] == null) || (dtype(Heap_$_16[Heap_$_16[this,Node.prev],Node.next]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_99 == Mask_$_98[Heap_$_16[this,Node.prev],Node.next := Mask_$_98[Heap_$_16[this,Node.prev],Node.next][perm$R := Mask_$_98[Heap_$_16[this,Node.prev],Node.next][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_99);
	assume IsGoodState(heapFragment(Heap_$_16[Heap_$_16[this,Node.prev],Node.next]));
	assume wf(Heap_$_16,Mask_$_99,SecMask_$_174);
	assume wf(Heap_$_16,Mask_$_99,SecMask_$_174);
	assume !(Heap_$_16[this,Node.prev] == null);
	assume wf(Heap_$_16,Mask_$_99,SecMask_$_174);
	assume (Heap_$_16[Heap_$_16[this,Node.prev],Node.prev] == null) || (dtype(Heap_$_16[Heap_$_16[this,Node.prev],Node.prev]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_100 == Mask_$_99[Heap_$_16[this,Node.prev],Node.prev := Mask_$_99[Heap_$_16[this,Node.prev],Node.prev][perm$R := Mask_$_99[Heap_$_16[this,Node.prev],Node.prev][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_100);
	assume IsGoodState(heapFragment(Heap_$_16[Heap_$_16[this,Node.prev],Node.prev]));
	assume wf(Heap_$_16,Mask_$_100,SecMask_$_174);
	assume wf(Heap_$_16,Mask_$_100,SecMask_$_174);
	assume !(Heap_$_16[this,Node.prev] == null);
	assume wf(Heap_$_16,Mask_$_100,SecMask_$_174);
	assume true;
	assume Fractions(25) > 0;
	assume Mask_$_101 == Mask_$_100[Heap_$_16[this,Node.prev],mu := Mask_$_100[Heap_$_16[this,Node.prev],mu][perm$R := Mask_$_100[Heap_$_16[this,Node.prev],mu][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_101);
	assume IsGoodState(heapFragment(Heap_$_16[Heap_$_16[this,Node.prev],mu]));
	assume wf(Heap_$_16,Mask_$_101,SecMask_$_174);
	assume wf(Heap_$_16,Mask_$_101,SecMask_$_174);
	assume Mask_$_102 == Mask_$_101;
	goto $branchMerge_30;
anon1627_Else:
	assume !$_$_condition_$145;
	assume $_$_condition_$145 <==> (!(Heap_$_16[this,Node.prev] == null));
	assume Heap_$_16[this,Node.prev] == null;
	assume Mask_$_102 == Mask_$_98;
	goto $branchMerge_30;
anon1628_Then:
	assume $_$_condition_$147;
	assume $_$_condition_$147 <==> (!(Heap_$_16[this,Node.next] == null));
	assume !(Heap_$_16[this,Node.next] == null);
	assume !(Heap_$_16[Heap_$_16[this,Node.next],Node.prev] == null);
	assume Heap_$_16[Heap_$_16[this,Node.next],Node.prev] == this;
	goto $branchMerge_31;
anon1628_Else:
	assume !$_$_condition_$147;
	assume $_$_condition_$147 <==> (!(Heap_$_16[this,Node.next] == null));
	assume Heap_$_16[this,Node.next] == null;
	goto $branchMerge_31;
anon1629_Then:
	assume $_$_condition_$149;
	assume $_$_condition_$149 <==> (!(Heap_$_16[this,Node.prev] == null));
	assume !(Heap_$_16[this,Node.prev] == null);
	assume !(Heap_$_16[Heap_$_16[this,Node.prev],Node.next] == null);
	assume Heap_$_16[Heap_$_16[this,Node.prev],Node.next] == this;
	goto $branchMerge_32;
anon1629_Else:
	assume !$_$_condition_$149;
	assume $_$_condition_$149 <==> (!(Heap_$_16[this,Node.prev] == null));
	assume Heap_$_16[this,Node.prev] == null;
	goto $branchMerge_32;
anon1630_Then:
	assume $_$_condition_$151;
	assume $_$_condition_$151 <==> (!(Heap_$_16[this,Node.next] == null));
	assume !(Heap_$_16[this,Node.next] == null);
	assume MuBelow(Heap_$_16[this,mu],Heap_$_16[Heap_$_16[this,Node.next],mu]);
	goto $branchMerge_33;
anon1630_Else:
	assume !$_$_condition_$151;
	assume $_$_condition_$151 <==> (!(Heap_$_16[this,Node.next] == null));
	assume Heap_$_16[this,Node.next] == null;
	goto $branchMerge_33;
anon1631_Then:
	assume $_$_condition_$153;
	assume $_$_condition_$153 <==> (!(Heap_$_16[this,Node.prev] == null));
	assume !(Heap_$_16[this,Node.prev] == null);
	assume MuBelow(Heap_$_16[Heap_$_16[this,Node.prev],mu],Heap_$_16[this,mu]);
	goto anon288;
anon1631_Else:
	assume !$_$_condition_$153;
	assume $_$_condition_$153 <==> (!(Heap_$_16[this,Node.prev] == null));
	assume Heap_$_16[this,Node.prev] == null;
	goto anon288;
anon288:
	assume IsGoodMask(Mask_$_102);
	assume wf(Heap_$_16,Mask_$_102,SecMask_$_174);
	assume Acquire$Heap(lastAcquire#_462_$_0) == Heap_$_16;
	assume Acquire$Mask(lastAcquire#_462_$_0) == Mask_$_102;
	assume Acquire$SecMask(lastAcquire#_462_$_0) == SecMask_$_174;
	assume Acquire$Credits(lastAcquire#_462_$_0) == ZeroCredits;
	assert { :msg "  57.9: SMOKE-TEST-15. (The statements after the acquire statement are unreachable.)" } !(1 == 1);
	assume cond#_466_$_0 <==> (!(Heap_$_16[this,Node.next] == null));
	assert { :msg "  58.13: Receiver might be null." } true ==> (!(this == null));
	assert { :msg "  58.13: Location might not be readable." } true ==> CanRead(Mask_$_102,SecMask_$_174,this,Node.next);
	if ($_$_condition_$155) { goto anon1632_Then; } else { goto anon1632_Else; }
anon1632_Then:
	assume $_$_condition_$155;
	assume $_$_condition_$155 <==> cond#_466_$_0;
	assume cond#_466_$_0;
	assert { :msg "  58.9: SMOKE-TEST-16. (The begging of the if-branch is unreachable.)" } !(1 == 1);
	assert { :msg "  59.21: Receiver might be null." } true ==> (!(this == null));
	assert { :msg "  59.21: Location might not be readable." } true ==> CanRead(Mask_$_102,SecMask_$_174,this,Node.next);
	assert { :msg "  59.13: The target of the acquire statement might be null." } !(Heap_$_16[this,Node.next] == null);
	assert { :msg "  59.13: The mu field of the target of the acquire statement might not be readable." } CanRead(Mask_$_102,SecMask_$_174,Heap_$_16[this,Node.next],mu);
	assert { :msg "  59.13: The mu field of the target of the acquire statement might not be above waitlevel." } (forall  o#_470 : ref :: ( (((0 < Heap_$_16[o#_470,held]) || Heap_$_16[o#_470,rdheld]) || (ZeroCredits[o#_470] < 0)) ==> MuBelow(Heap_$_16[o#_470,mu],Heap_$_16[Heap_$_16[this,Node.next],mu]) ));
	assume !(Heap_$_16[Heap_$_16[this,Node.next],mu] == $LockBottom);
	assume lastSeenMu#_469_$_0 == Heap_$_16[Heap_$_16[this,Node.next],mu];
	assume lastSeenHeld#_468_$_1 == Heap_$_16[Heap_$_16[this,Node.next],held];
	assume (!(0 < Heap_$_16[Heap_$_16[this,Node.next],held])) && (!Heap_$_16[Heap_$_16[this,Node.next],rdheld]);
	assume 0 < lastAcquire#_467_$_0;
	assume Heap_$_17 == Heap_$_16[Heap_$_16[this,Node.next],held := lastAcquire#_467_$_0];
	assume sh#8_$_0 == Heap_$_17[this,Node.next];
	assume !(sh#8_$_0 == null);
	assume wf(Heap_$_17,Mask_$_102,SecMask_$_174);
	assume (Heap_$_17[sh#8_$_0,Node.prev] == null) || (dtype(Heap_$_17[sh#8_$_0,Node.prev]) == Node#t);
	assume ((Fractions(50) - 0) > 0) || (false && ((0 - 1) > 0));
	assume Mask_$_103 == Mask_$_102[sh#8_$_0,Node.prev := Mask_$_102[sh#8_$_0,Node.prev][perm$R := Mask_$_102[sh#8_$_0,Node.prev][perm$R] + (Fractions(50) - 0)]];
	assume Mask_$_104 == Mask_$_103[sh#8_$_0,Node.prev := Mask_$_103[sh#8_$_0,Node.prev][perm$N := Mask_$_103[sh#8_$_0,Node.prev][perm$N] + (0 - 1)]];
	assume wf(Heap_$_17,Mask_$_104,SecMask_$_174);
	assume IsGoodMask(Mask_$_104);
	assume IsGoodState(heapFragment(Heap_$_17[sh#8_$_0,Node.prev]));
	assume wf(Heap_$_17,Mask_$_104,SecMask_$_174);
	assume wf(Heap_$_17,Mask_$_104,SecMask_$_174);
	assume !(sh#8_$_0 == null);
	assume wf(Heap_$_17,Mask_$_104,SecMask_$_174);
	assume (Heap_$_17[sh#8_$_0,Node.next] == null) || (dtype(Heap_$_17[sh#8_$_0,Node.next]) == Node#t);
	assume ((Fractions(50) - 0) > 0) || (false && ((0 - 1) > 0));
	assume Mask_$_105 == Mask_$_104[sh#8_$_0,Node.next := Mask_$_104[sh#8_$_0,Node.next][perm$R := Mask_$_104[sh#8_$_0,Node.next][perm$R] + (Fractions(50) - 0)]];
	assume Mask_$_106 == Mask_$_105[sh#8_$_0,Node.next := Mask_$_105[sh#8_$_0,Node.next][perm$N := Mask_$_105[sh#8_$_0,Node.next][perm$N] + (0 - 1)]];
	assume wf(Heap_$_17,Mask_$_106,SecMask_$_174);
	assume IsGoodMask(Mask_$_106);
	assume IsGoodState(heapFragment(Heap_$_17[sh#8_$_0,Node.next]));
	assume wf(Heap_$_17,Mask_$_106,SecMask_$_174);
	assume wf(Heap_$_17,Mask_$_106,SecMask_$_174);
	assume !(sh#8_$_0 == null);
	assume wf(Heap_$_17,Mask_$_106,SecMask_$_174);
	assume true;
	assume ((Fractions(50) - 0) > 0) || (false && ((0 - 1) > 0));
	assume Mask_$_107 == Mask_$_106[sh#8_$_0,mu := Mask_$_106[sh#8_$_0,mu][perm$R := Mask_$_106[sh#8_$_0,mu][perm$R] + (Fractions(50) - 0)]];
	assume Mask_$_108 == Mask_$_107[sh#8_$_0,mu := Mask_$_107[sh#8_$_0,mu][perm$N := Mask_$_107[sh#8_$_0,mu][perm$N] + (0 - 1)]];
	assume wf(Heap_$_17,Mask_$_108,SecMask_$_174);
	assume IsGoodMask(Mask_$_108);
	assume IsGoodState(heapFragment(Heap_$_17[sh#8_$_0,mu]));
	assume wf(Heap_$_17,Mask_$_108,SecMask_$_174);
	assume wf(Heap_$_17,Mask_$_108,SecMask_$_174);
	if ($_$_condition_$156) { goto anon1633_Then; } else { goto anon1633_Else; }
anon1632_Else:
	assume !$_$_condition_$155;
	assume $_$_condition_$155 <==> cond#_466_$_0;
	assume !cond#_466_$_0;
	assume Mask_$_147 == Mask_$_102;
	assume Heap_$_19 == Heap_$_16;
	assume cond#_471_$_1 <==> cond#_471;
	goto anon323;
anon1633_Then:
	assume $_$_condition_$156;
	assume $_$_condition_$156 <==> (Heap_$_17[sh#8_$_0,Node.next] == null);
	assume Heap_$_17[sh#8_$_0,Node.next] == null;
	assume !(sh#8_$_0 == null);
	assume wf(Heap_$_17,Mask_$_108,SecMask_$_174);
	assume (Heap_$_17[sh#8_$_0,Node.prev] == null) || (dtype(Heap_$_17[sh#8_$_0,Node.prev]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_109 == Mask_$_108[sh#8_$_0,Node.prev := Mask_$_108[sh#8_$_0,Node.prev][perm$R := Mask_$_108[sh#8_$_0,Node.prev][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_109);
	assume IsGoodState(heapFragment(Heap_$_17[sh#8_$_0,Node.prev]));
	assume wf(Heap_$_17,Mask_$_109,SecMask_$_174);
	assume wf(Heap_$_17,Mask_$_109,SecMask_$_174);
	assume !(sh#8_$_0 == null);
	assume wf(Heap_$_17,Mask_$_109,SecMask_$_174);
	assume (Heap_$_17[sh#8_$_0,Node.next] == null) || (dtype(Heap_$_17[sh#8_$_0,Node.next]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_110 == Mask_$_109[sh#8_$_0,Node.next := Mask_$_109[sh#8_$_0,Node.next][perm$R := Mask_$_109[sh#8_$_0,Node.next][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_110);
	assume IsGoodState(heapFragment(Heap_$_17[sh#8_$_0,Node.next]));
	assume wf(Heap_$_17,Mask_$_110,SecMask_$_174);
	assume wf(Heap_$_17,Mask_$_110,SecMask_$_174);
	assume !(sh#8_$_0 == null);
	assume wf(Heap_$_17,Mask_$_110,SecMask_$_174);
	assume true;
	assume Fractions(25) > 0;
	assume Mask_$_111 == Mask_$_110[sh#8_$_0,mu := Mask_$_110[sh#8_$_0,mu][perm$R := Mask_$_110[sh#8_$_0,mu][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_111);
	assume IsGoodState(heapFragment(Heap_$_17[sh#8_$_0,mu]));
	assume wf(Heap_$_17,Mask_$_111,SecMask_$_174);
	assume wf(Heap_$_17,Mask_$_111,SecMask_$_174);
	assume Mask_$_112 == Mask_$_111;
	goto $branchMerge_34;
anon1633_Else:
	assume !$_$_condition_$156;
	assume $_$_condition_$156 <==> (Heap_$_17[sh#8_$_0,Node.next] == null);
	assume !(Heap_$_17[sh#8_$_0,Node.next] == null);
	assume Mask_$_112 == Mask_$_108;
	goto $branchMerge_34;
anon323:
	assert { :msg "  63.9: SMOKE-TEST-20. (The statements after the local variable statement are unreachable.)" } !(1 == 1);
	assert { :msg "  64.9: SMOKE-TEST-21. (The statements after the local variable statement are unreachable.)" } !(1 == 1);
	assert { :msg "  65.20: Receiver might be null." } true ==> (!(this == null));
	assert { :msg "  65.20: Location might not be readable." } true ==> CanRead(Mask_$_147,SecMask_$_174,this,Node.prev);
	assume oldPrev#2_$_0 == Heap_$_19[this,Node.prev];
	assert { :msg "  65.9: SMOKE-TEST-22. (The statements after the assign statement are unreachable.)" } !(1 == 1);
	assert { :msg "  66.20: Receiver might be null." } true ==> (!(this == null));
	assert { :msg "  66.20: Location might not be readable." } true ==> CanRead(Mask_$_147,SecMask_$_174,this,Node.next);
	assume oldNext#4_$_0 == Heap_$_19[this,Node.next];
	assert { :msg "  66.9: SMOKE-TEST-23. (The statements after the assign statement are unreachable.)" } !(1 == 1);
	assume cond#_476_$_0 <==> (!(Heap_$_19[this,Node.prev] == null));
	assert { :msg "  67.13: Receiver might be null." } true ==> (!(this == null));
	assert { :msg "  67.13: Location might not be readable." } true ==> CanRead(Mask_$_147,SecMask_$_174,this,Node.prev);
	if ($_$_condition_$187) { goto anon1650_Then; } else { goto anon1650_Else; }
anon1634_Then:
	assume $_$_condition_$157;
	assume $_$_condition_$157 <==> (!(Heap_$_17[sh#8_$_0,Node.next] == null));
	assume !(Heap_$_17[sh#8_$_0,Node.next] == null);
	assume !(Heap_$_17[sh#8_$_0,Node.next] == null);
	assume wf(Heap_$_17,Mask_$_112,SecMask_$_174);
	assume (Heap_$_17[Heap_$_17[sh#8_$_0,Node.next],Node.next] == null) || (dtype(Heap_$_17[Heap_$_17[sh#8_$_0,Node.next],Node.next]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_113 == Mask_$_112[Heap_$_17[sh#8_$_0,Node.next],Node.next := Mask_$_112[Heap_$_17[sh#8_$_0,Node.next],Node.next][perm$R := Mask_$_112[Heap_$_17[sh#8_$_0,Node.next],Node.next][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_113);
	assume IsGoodState(heapFragment(Heap_$_17[Heap_$_17[sh#8_$_0,Node.next],Node.next]));
	assume wf(Heap_$_17,Mask_$_113,SecMask_$_174);
	assume wf(Heap_$_17,Mask_$_113,SecMask_$_174);
	assume !(Heap_$_17[sh#8_$_0,Node.next] == null);
	assume wf(Heap_$_17,Mask_$_113,SecMask_$_174);
	assume (Heap_$_17[Heap_$_17[sh#8_$_0,Node.next],Node.prev] == null) || (dtype(Heap_$_17[Heap_$_17[sh#8_$_0,Node.next],Node.prev]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_114 == Mask_$_113[Heap_$_17[sh#8_$_0,Node.next],Node.prev := Mask_$_113[Heap_$_17[sh#8_$_0,Node.next],Node.prev][perm$R := Mask_$_113[Heap_$_17[sh#8_$_0,Node.next],Node.prev][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_114);
	assume IsGoodState(heapFragment(Heap_$_17[Heap_$_17[sh#8_$_0,Node.next],Node.prev]));
	assume wf(Heap_$_17,Mask_$_114,SecMask_$_174);
	assume wf(Heap_$_17,Mask_$_114,SecMask_$_174);
	assume !(Heap_$_17[sh#8_$_0,Node.next] == null);
	assume wf(Heap_$_17,Mask_$_114,SecMask_$_174);
	assume true;
	assume Fractions(25) > 0;
	assume Mask_$_115 == Mask_$_114[Heap_$_17[sh#8_$_0,Node.next],mu := Mask_$_114[Heap_$_17[sh#8_$_0,Node.next],mu][perm$R := Mask_$_114[Heap_$_17[sh#8_$_0,Node.next],mu][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_115);
	assume IsGoodState(heapFragment(Heap_$_17[Heap_$_17[sh#8_$_0,Node.next],mu]));
	assume wf(Heap_$_17,Mask_$_115,SecMask_$_174);
	assume wf(Heap_$_17,Mask_$_115,SecMask_$_174);
	assume Mask_$_116 == Mask_$_115;
	goto $branchMerge_35;
anon1634_Else:
	assume !$_$_condition_$157;
	assume $_$_condition_$157 <==> (!(Heap_$_17[sh#8_$_0,Node.next] == null));
	assume Heap_$_17[sh#8_$_0,Node.next] == null;
	assume Mask_$_116 == Mask_$_112;
	goto $branchMerge_35;
anon1635_Then:
	assume $_$_condition_$159;
	assume $_$_condition_$159 <==> (Heap_$_17[sh#8_$_0,Node.prev] == null);
	assume Heap_$_17[sh#8_$_0,Node.prev] == null;
	assume !(sh#8_$_0 == null);
	assume wf(Heap_$_17,Mask_$_116,SecMask_$_174);
	assume (Heap_$_17[sh#8_$_0,Node.prev] == null) || (dtype(Heap_$_17[sh#8_$_0,Node.prev]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_117 == Mask_$_116[sh#8_$_0,Node.prev := Mask_$_116[sh#8_$_0,Node.prev][perm$R := Mask_$_116[sh#8_$_0,Node.prev][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_117);
	assume IsGoodState(heapFragment(Heap_$_17[sh#8_$_0,Node.prev]));
	assume wf(Heap_$_17,Mask_$_117,SecMask_$_174);
	assume wf(Heap_$_17,Mask_$_117,SecMask_$_174);
	assume !(sh#8_$_0 == null);
	assume wf(Heap_$_17,Mask_$_117,SecMask_$_174);
	assume (Heap_$_17[sh#8_$_0,Node.next] == null) || (dtype(Heap_$_17[sh#8_$_0,Node.next]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_118 == Mask_$_117[sh#8_$_0,Node.next := Mask_$_117[sh#8_$_0,Node.next][perm$R := Mask_$_117[sh#8_$_0,Node.next][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_118);
	assume IsGoodState(heapFragment(Heap_$_17[sh#8_$_0,Node.next]));
	assume wf(Heap_$_17,Mask_$_118,SecMask_$_174);
	assume wf(Heap_$_17,Mask_$_118,SecMask_$_174);
	assume !(sh#8_$_0 == null);
	assume wf(Heap_$_17,Mask_$_118,SecMask_$_174);
	assume true;
	assume Fractions(25) > 0;
	assume Mask_$_119 == Mask_$_118[sh#8_$_0,mu := Mask_$_118[sh#8_$_0,mu][perm$R := Mask_$_118[sh#8_$_0,mu][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_119);
	assume IsGoodState(heapFragment(Heap_$_17[sh#8_$_0,mu]));
	assume wf(Heap_$_17,Mask_$_119,SecMask_$_174);
	assume wf(Heap_$_17,Mask_$_119,SecMask_$_174);
	assume Mask_$_120 == Mask_$_119;
	goto $branchMerge_36;
anon1635_Else:
	assume !$_$_condition_$159;
	assume $_$_condition_$159 <==> (Heap_$_17[sh#8_$_0,Node.prev] == null);
	assume !(Heap_$_17[sh#8_$_0,Node.prev] == null);
	assume Mask_$_120 == Mask_$_116;
	goto $branchMerge_36;
anon1636_Then:
	assume $_$_condition_$161;
	assume $_$_condition_$161 <==> (!(Heap_$_17[sh#8_$_0,Node.prev] == null));
	assume !(Heap_$_17[sh#8_$_0,Node.prev] == null);
	assume !(Heap_$_17[sh#8_$_0,Node.prev] == null);
	assume wf(Heap_$_17,Mask_$_120,SecMask_$_174);
	assume (Heap_$_17[Heap_$_17[sh#8_$_0,Node.prev],Node.next] == null) || (dtype(Heap_$_17[Heap_$_17[sh#8_$_0,Node.prev],Node.next]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_121 == Mask_$_120[Heap_$_17[sh#8_$_0,Node.prev],Node.next := Mask_$_120[Heap_$_17[sh#8_$_0,Node.prev],Node.next][perm$R := Mask_$_120[Heap_$_17[sh#8_$_0,Node.prev],Node.next][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_121);
	assume IsGoodState(heapFragment(Heap_$_17[Heap_$_17[sh#8_$_0,Node.prev],Node.next]));
	assume wf(Heap_$_17,Mask_$_121,SecMask_$_174);
	assume wf(Heap_$_17,Mask_$_121,SecMask_$_174);
	assume !(Heap_$_17[sh#8_$_0,Node.prev] == null);
	assume wf(Heap_$_17,Mask_$_121,SecMask_$_174);
	assume (Heap_$_17[Heap_$_17[sh#8_$_0,Node.prev],Node.prev] == null) || (dtype(Heap_$_17[Heap_$_17[sh#8_$_0,Node.prev],Node.prev]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_122 == Mask_$_121[Heap_$_17[sh#8_$_0,Node.prev],Node.prev := Mask_$_121[Heap_$_17[sh#8_$_0,Node.prev],Node.prev][perm$R := Mask_$_121[Heap_$_17[sh#8_$_0,Node.prev],Node.prev][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_122);
	assume IsGoodState(heapFragment(Heap_$_17[Heap_$_17[sh#8_$_0,Node.prev],Node.prev]));
	assume wf(Heap_$_17,Mask_$_122,SecMask_$_174);
	assume wf(Heap_$_17,Mask_$_122,SecMask_$_174);
	assume !(Heap_$_17[sh#8_$_0,Node.prev] == null);
	assume wf(Heap_$_17,Mask_$_122,SecMask_$_174);
	assume true;
	assume Fractions(25) > 0;
	assume Mask_$_123 == Mask_$_122[Heap_$_17[sh#8_$_0,Node.prev],mu := Mask_$_122[Heap_$_17[sh#8_$_0,Node.prev],mu][perm$R := Mask_$_122[Heap_$_17[sh#8_$_0,Node.prev],mu][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_123);
	assume IsGoodState(heapFragment(Heap_$_17[Heap_$_17[sh#8_$_0,Node.prev],mu]));
	assume wf(Heap_$_17,Mask_$_123,SecMask_$_174);
	assume wf(Heap_$_17,Mask_$_123,SecMask_$_174);
	assume Mask_$_124 == Mask_$_123;
	goto $branchMerge_37;
anon1636_Else:
	assume !$_$_condition_$161;
	assume $_$_condition_$161 <==> (!(Heap_$_17[sh#8_$_0,Node.prev] == null));
	assume Heap_$_17[sh#8_$_0,Node.prev] == null;
	assume Mask_$_124 == Mask_$_120;
	goto $branchMerge_37;
anon1637_Then:
	assume $_$_condition_$163;
	assume $_$_condition_$163 <==> (!(Heap_$_17[sh#8_$_0,Node.next] == null));
	assume !(Heap_$_17[sh#8_$_0,Node.next] == null);
	assume !(Heap_$_17[Heap_$_17[sh#8_$_0,Node.next],Node.prev] == null);
	assume Heap_$_17[Heap_$_17[sh#8_$_0,Node.next],Node.prev] == sh#8_$_0;
	goto $branchMerge_38;
anon1637_Else:
	assume !$_$_condition_$163;
	assume $_$_condition_$163 <==> (!(Heap_$_17[sh#8_$_0,Node.next] == null));
	assume Heap_$_17[sh#8_$_0,Node.next] == null;
	goto $branchMerge_38;
anon1638_Then:
	assume $_$_condition_$165;
	assume $_$_condition_$165 <==> (!(Heap_$_17[sh#8_$_0,Node.prev] == null));
	assume !(Heap_$_17[sh#8_$_0,Node.prev] == null);
	assume !(Heap_$_17[Heap_$_17[sh#8_$_0,Node.prev],Node.next] == null);
	assume Heap_$_17[Heap_$_17[sh#8_$_0,Node.prev],Node.next] == sh#8_$_0;
	goto $branchMerge_39;
anon1638_Else:
	assume !$_$_condition_$165;
	assume $_$_condition_$165 <==> (!(Heap_$_17[sh#8_$_0,Node.prev] == null));
	assume Heap_$_17[sh#8_$_0,Node.prev] == null;
	goto $branchMerge_39;
anon1639_Then:
	assume $_$_condition_$167;
	assume $_$_condition_$167 <==> (!(Heap_$_17[sh#8_$_0,Node.next] == null));
	assume !(Heap_$_17[sh#8_$_0,Node.next] == null);
	assume MuBelow(Heap_$_17[sh#8_$_0,mu],Heap_$_17[Heap_$_17[sh#8_$_0,Node.next],mu]);
	goto $branchMerge_40;
anon1639_Else:
	assume !$_$_condition_$167;
	assume $_$_condition_$167 <==> (!(Heap_$_17[sh#8_$_0,Node.next] == null));
	assume Heap_$_17[sh#8_$_0,Node.next] == null;
	goto $branchMerge_40;
anon1640_Then:
	assume $_$_condition_$169;
	assume $_$_condition_$169 <==> (!(Heap_$_17[sh#8_$_0,Node.prev] == null));
	assume !(Heap_$_17[sh#8_$_0,Node.prev] == null);
	assume MuBelow(Heap_$_17[Heap_$_17[sh#8_$_0,Node.prev],mu],Heap_$_17[sh#8_$_0,mu]);
	goto anon305;
anon1640_Else:
	assume !$_$_condition_$169;
	assume $_$_condition_$169 <==> (!(Heap_$_17[sh#8_$_0,Node.prev] == null));
	assume Heap_$_17[sh#8_$_0,Node.prev] == null;
	goto anon305;
anon305:
	assume IsGoodMask(Mask_$_124);
	assume wf(Heap_$_17,Mask_$_124,SecMask_$_174);
	assume Acquire$Heap(lastAcquire#_467_$_0) == Heap_$_17;
	assume Acquire$Mask(lastAcquire#_467_$_0) == Mask_$_124;
	assume Acquire$SecMask(lastAcquire#_467_$_0) == SecMask_$_174;
	assume Acquire$Credits(lastAcquire#_467_$_0) == ZeroCredits;
	assert { :msg "  59.13: SMOKE-TEST-17. (The statements after the acquire statement are unreachable.)" } !(1 == 1);
	assume cond#_471_$_0 <==> (!(Heap_$_17[Heap_$_17[this,Node.next],Node.next] == null));
	assert { :msg "  60.16: Receiver might be null." } true ==> (!(this == null));
	assert { :msg "  60.16: Location might not be readable." } true ==> CanRead(Mask_$_124,SecMask_$_174,this,Node.next);
	assert { :msg "  60.16: Receiver might be null." } true ==> (!(Heap_$_17[this,Node.next] == null));
	assert { :msg "  60.16: Location might not be readable." } true ==> CanRead(Mask_$_124,SecMask_$_174,Heap_$_17[this,Node.next],Node.next);
	if ($_$_condition_$171) { goto anon1641_Then; } else { goto anon1641_Else; }
anon1641_Then:
	assume $_$_condition_$171;
	assume $_$_condition_$171 <==> cond#_471_$_0;
	assume cond#_471_$_0;
	assert { :msg "  60.13: SMOKE-TEST-18. (The begging of the if-branch is unreachable.)" } !(1 == 1);
	assert { :msg "  60.45: Receiver might be null." } true ==> (!(this == null));
	assert { :msg "  60.45: Location might not be readable." } true ==> CanRead(Mask_$_124,SecMask_$_174,this,Node.next);
	assert { :msg "  60.45: Receiver might be null." } true ==> (!(Heap_$_17[this,Node.next] == null));
	assert { :msg "  60.45: Location might not be readable." } true ==> CanRead(Mask_$_124,SecMask_$_174,Heap_$_17[this,Node.next],Node.next);
	assert { :msg "  60.37: The target of the acquire statement might be null." } !(Heap_$_17[Heap_$_17[this,Node.next],Node.next] == null);
	assert { :msg "  60.37: The mu field of the target of the acquire statement might not be readable." } CanRead(Mask_$_124,SecMask_$_174,Heap_$_17[Heap_$_17[this,Node.next],Node.next],mu);
	assert { :msg "  60.37: The mu field of the target of the acquire statement might not be above waitlevel." } (forall  o#_475 : ref :: ( (((0 < Heap_$_17[o#_475,held]) || Heap_$_17[o#_475,rdheld]) || (ZeroCredits[o#_475] < 0)) ==> MuBelow(Heap_$_17[o#_475,mu],Heap_$_17[Heap_$_17[Heap_$_17[this,Node.next],Node.next],mu]) ));
	assume !(Heap_$_17[Heap_$_17[Heap_$_17[this,Node.next],Node.next],mu] == $LockBottom);
	assume lastSeenMu#_474_$_0 == Heap_$_17[Heap_$_17[Heap_$_17[this,Node.next],Node.next],mu];
	assume lastSeenHeld#_473_$_1 == Heap_$_17[Heap_$_17[Heap_$_17[this,Node.next],Node.next],held];
	assume (!(0 < Heap_$_17[Heap_$_17[Heap_$_17[this,Node.next],Node.next],held])) && (!Heap_$_17[Heap_$_17[Heap_$_17[this,Node.next],Node.next],rdheld]);
	assume 0 < lastAcquire#_472_$_0;
	assume Heap_$_18 == Heap_$_17[Heap_$_17[Heap_$_17[this,Node.next],Node.next],held := lastAcquire#_472_$_0];
	assume sh#9_$_0 == Heap_$_18[Heap_$_18[this,Node.next],Node.next];
	assume !(sh#9_$_0 == null);
	assume wf(Heap_$_18,Mask_$_124,SecMask_$_174);
	assume (Heap_$_18[sh#9_$_0,Node.prev] == null) || (dtype(Heap_$_18[sh#9_$_0,Node.prev]) == Node#t);
	assume ((Fractions(50) - 0) > 0) || (false && ((0 - 1) > 0));
	assume Mask_$_125 == Mask_$_124[sh#9_$_0,Node.prev := Mask_$_124[sh#9_$_0,Node.prev][perm$R := Mask_$_124[sh#9_$_0,Node.prev][perm$R] + (Fractions(50) - 0)]];
	assume Mask_$_126 == Mask_$_125[sh#9_$_0,Node.prev := Mask_$_125[sh#9_$_0,Node.prev][perm$N := Mask_$_125[sh#9_$_0,Node.prev][perm$N] + (0 - 1)]];
	assume wf(Heap_$_18,Mask_$_126,SecMask_$_174);
	assume IsGoodMask(Mask_$_126);
	assume IsGoodState(heapFragment(Heap_$_18[sh#9_$_0,Node.prev]));
	assume wf(Heap_$_18,Mask_$_126,SecMask_$_174);
	assume wf(Heap_$_18,Mask_$_126,SecMask_$_174);
	assume !(sh#9_$_0 == null);
	assume wf(Heap_$_18,Mask_$_126,SecMask_$_174);
	assume (Heap_$_18[sh#9_$_0,Node.next] == null) || (dtype(Heap_$_18[sh#9_$_0,Node.next]) == Node#t);
	assume ((Fractions(50) - 0) > 0) || (false && ((0 - 1) > 0));
	assume Mask_$_127 == Mask_$_126[sh#9_$_0,Node.next := Mask_$_126[sh#9_$_0,Node.next][perm$R := Mask_$_126[sh#9_$_0,Node.next][perm$R] + (Fractions(50) - 0)]];
	assume Mask_$_128 == Mask_$_127[sh#9_$_0,Node.next := Mask_$_127[sh#9_$_0,Node.next][perm$N := Mask_$_127[sh#9_$_0,Node.next][perm$N] + (0 - 1)]];
	assume wf(Heap_$_18,Mask_$_128,SecMask_$_174);
	assume IsGoodMask(Mask_$_128);
	assume IsGoodState(heapFragment(Heap_$_18[sh#9_$_0,Node.next]));
	assume wf(Heap_$_18,Mask_$_128,SecMask_$_174);
	assume wf(Heap_$_18,Mask_$_128,SecMask_$_174);
	assume !(sh#9_$_0 == null);
	assume wf(Heap_$_18,Mask_$_128,SecMask_$_174);
	assume true;
	assume ((Fractions(50) - 0) > 0) || (false && ((0 - 1) > 0));
	assume Mask_$_129 == Mask_$_128[sh#9_$_0,mu := Mask_$_128[sh#9_$_0,mu][perm$R := Mask_$_128[sh#9_$_0,mu][perm$R] + (Fractions(50) - 0)]];
	assume Mask_$_130 == Mask_$_129[sh#9_$_0,mu := Mask_$_129[sh#9_$_0,mu][perm$N := Mask_$_129[sh#9_$_0,mu][perm$N] + (0 - 1)]];
	assume wf(Heap_$_18,Mask_$_130,SecMask_$_174);
	assume IsGoodMask(Mask_$_130);
	assume IsGoodState(heapFragment(Heap_$_18[sh#9_$_0,mu]));
	assume wf(Heap_$_18,Mask_$_130,SecMask_$_174);
	assume wf(Heap_$_18,Mask_$_130,SecMask_$_174);
	if ($_$_condition_$172) { goto anon1642_Then; } else { goto anon1642_Else; }
anon1641_Else:
	assume !$_$_condition_$171;
	assume $_$_condition_$171 <==> cond#_471_$_0;
	assume !cond#_471_$_0;
	assume Mask_$_147 == Mask_$_124;
	assume Heap_$_19 == Heap_$_17;
	assume cond#_471_$_1 <==> cond#_471_$_0;
	goto anon323;
anon1642_Then:
	assume $_$_condition_$172;
	assume $_$_condition_$172 <==> (Heap_$_18[sh#9_$_0,Node.next] == null);
	assume Heap_$_18[sh#9_$_0,Node.next] == null;
	assume !(sh#9_$_0 == null);
	assume wf(Heap_$_18,Mask_$_130,SecMask_$_174);
	assume (Heap_$_18[sh#9_$_0,Node.prev] == null) || (dtype(Heap_$_18[sh#9_$_0,Node.prev]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_131 == Mask_$_130[sh#9_$_0,Node.prev := Mask_$_130[sh#9_$_0,Node.prev][perm$R := Mask_$_130[sh#9_$_0,Node.prev][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_131);
	assume IsGoodState(heapFragment(Heap_$_18[sh#9_$_0,Node.prev]));
	assume wf(Heap_$_18,Mask_$_131,SecMask_$_174);
	assume wf(Heap_$_18,Mask_$_131,SecMask_$_174);
	assume !(sh#9_$_0 == null);
	assume wf(Heap_$_18,Mask_$_131,SecMask_$_174);
	assume (Heap_$_18[sh#9_$_0,Node.next] == null) || (dtype(Heap_$_18[sh#9_$_0,Node.next]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_132 == Mask_$_131[sh#9_$_0,Node.next := Mask_$_131[sh#9_$_0,Node.next][perm$R := Mask_$_131[sh#9_$_0,Node.next][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_132);
	assume IsGoodState(heapFragment(Heap_$_18[sh#9_$_0,Node.next]));
	assume wf(Heap_$_18,Mask_$_132,SecMask_$_174);
	assume wf(Heap_$_18,Mask_$_132,SecMask_$_174);
	assume !(sh#9_$_0 == null);
	assume wf(Heap_$_18,Mask_$_132,SecMask_$_174);
	assume true;
	assume Fractions(25) > 0;
	assume Mask_$_133 == Mask_$_132[sh#9_$_0,mu := Mask_$_132[sh#9_$_0,mu][perm$R := Mask_$_132[sh#9_$_0,mu][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_133);
	assume IsGoodState(heapFragment(Heap_$_18[sh#9_$_0,mu]));
	assume wf(Heap_$_18,Mask_$_133,SecMask_$_174);
	assume wf(Heap_$_18,Mask_$_133,SecMask_$_174);
	assume Mask_$_134 == Mask_$_133;
	goto $branchMerge_41;
anon1642_Else:
	assume !$_$_condition_$172;
	assume $_$_condition_$172 <==> (Heap_$_18[sh#9_$_0,Node.next] == null);
	assume !(Heap_$_18[sh#9_$_0,Node.next] == null);
	assume Mask_$_134 == Mask_$_130;
	goto $branchMerge_41;
anon1643_Then:
	assume $_$_condition_$173;
	assume $_$_condition_$173 <==> (!(Heap_$_18[sh#9_$_0,Node.next] == null));
	assume !(Heap_$_18[sh#9_$_0,Node.next] == null);
	assume !(Heap_$_18[sh#9_$_0,Node.next] == null);
	assume wf(Heap_$_18,Mask_$_134,SecMask_$_174);
	assume (Heap_$_18[Heap_$_18[sh#9_$_0,Node.next],Node.next] == null) || (dtype(Heap_$_18[Heap_$_18[sh#9_$_0,Node.next],Node.next]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_135 == Mask_$_134[Heap_$_18[sh#9_$_0,Node.next],Node.next := Mask_$_134[Heap_$_18[sh#9_$_0,Node.next],Node.next][perm$R := Mask_$_134[Heap_$_18[sh#9_$_0,Node.next],Node.next][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_135);
	assume IsGoodState(heapFragment(Heap_$_18[Heap_$_18[sh#9_$_0,Node.next],Node.next]));
	assume wf(Heap_$_18,Mask_$_135,SecMask_$_174);
	assume wf(Heap_$_18,Mask_$_135,SecMask_$_174);
	assume !(Heap_$_18[sh#9_$_0,Node.next] == null);
	assume wf(Heap_$_18,Mask_$_135,SecMask_$_174);
	assume (Heap_$_18[Heap_$_18[sh#9_$_0,Node.next],Node.prev] == null) || (dtype(Heap_$_18[Heap_$_18[sh#9_$_0,Node.next],Node.prev]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_136 == Mask_$_135[Heap_$_18[sh#9_$_0,Node.next],Node.prev := Mask_$_135[Heap_$_18[sh#9_$_0,Node.next],Node.prev][perm$R := Mask_$_135[Heap_$_18[sh#9_$_0,Node.next],Node.prev][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_136);
	assume IsGoodState(heapFragment(Heap_$_18[Heap_$_18[sh#9_$_0,Node.next],Node.prev]));
	assume wf(Heap_$_18,Mask_$_136,SecMask_$_174);
	assume wf(Heap_$_18,Mask_$_136,SecMask_$_174);
	assume !(Heap_$_18[sh#9_$_0,Node.next] == null);
	assume wf(Heap_$_18,Mask_$_136,SecMask_$_174);
	assume true;
	assume Fractions(25) > 0;
	assume Mask_$_137 == Mask_$_136[Heap_$_18[sh#9_$_0,Node.next],mu := Mask_$_136[Heap_$_18[sh#9_$_0,Node.next],mu][perm$R := Mask_$_136[Heap_$_18[sh#9_$_0,Node.next],mu][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_137);
	assume IsGoodState(heapFragment(Heap_$_18[Heap_$_18[sh#9_$_0,Node.next],mu]));
	assume wf(Heap_$_18,Mask_$_137,SecMask_$_174);
	assume wf(Heap_$_18,Mask_$_137,SecMask_$_174);
	assume Mask_$_138 == Mask_$_137;
	goto $branchMerge_42;
anon1643_Else:
	assume !$_$_condition_$173;
	assume $_$_condition_$173 <==> (!(Heap_$_18[sh#9_$_0,Node.next] == null));
	assume Heap_$_18[sh#9_$_0,Node.next] == null;
	assume Mask_$_138 == Mask_$_134;
	goto $branchMerge_42;
anon1644_Then:
	assume $_$_condition_$175;
	assume $_$_condition_$175 <==> (Heap_$_18[sh#9_$_0,Node.prev] == null);
	assume Heap_$_18[sh#9_$_0,Node.prev] == null;
	assume !(sh#9_$_0 == null);
	assume wf(Heap_$_18,Mask_$_138,SecMask_$_174);
	assume (Heap_$_18[sh#9_$_0,Node.prev] == null) || (dtype(Heap_$_18[sh#9_$_0,Node.prev]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_139 == Mask_$_138[sh#9_$_0,Node.prev := Mask_$_138[sh#9_$_0,Node.prev][perm$R := Mask_$_138[sh#9_$_0,Node.prev][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_139);
	assume IsGoodState(heapFragment(Heap_$_18[sh#9_$_0,Node.prev]));
	assume wf(Heap_$_18,Mask_$_139,SecMask_$_174);
	assume wf(Heap_$_18,Mask_$_139,SecMask_$_174);
	assume !(sh#9_$_0 == null);
	assume wf(Heap_$_18,Mask_$_139,SecMask_$_174);
	assume (Heap_$_18[sh#9_$_0,Node.next] == null) || (dtype(Heap_$_18[sh#9_$_0,Node.next]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_140 == Mask_$_139[sh#9_$_0,Node.next := Mask_$_139[sh#9_$_0,Node.next][perm$R := Mask_$_139[sh#9_$_0,Node.next][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_140);
	assume IsGoodState(heapFragment(Heap_$_18[sh#9_$_0,Node.next]));
	assume wf(Heap_$_18,Mask_$_140,SecMask_$_174);
	assume wf(Heap_$_18,Mask_$_140,SecMask_$_174);
	assume !(sh#9_$_0 == null);
	assume wf(Heap_$_18,Mask_$_140,SecMask_$_174);
	assume true;
	assume Fractions(25) > 0;
	assume Mask_$_141 == Mask_$_140[sh#9_$_0,mu := Mask_$_140[sh#9_$_0,mu][perm$R := Mask_$_140[sh#9_$_0,mu][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_141);
	assume IsGoodState(heapFragment(Heap_$_18[sh#9_$_0,mu]));
	assume wf(Heap_$_18,Mask_$_141,SecMask_$_174);
	assume wf(Heap_$_18,Mask_$_141,SecMask_$_174);
	assume Mask_$_142 == Mask_$_141;
	goto $branchMerge_43;
anon1644_Else:
	assume !$_$_condition_$175;
	assume $_$_condition_$175 <==> (Heap_$_18[sh#9_$_0,Node.prev] == null);
	assume !(Heap_$_18[sh#9_$_0,Node.prev] == null);
	assume Mask_$_142 == Mask_$_138;
	goto $branchMerge_43;
anon1645_Then:
	assume $_$_condition_$177;
	assume $_$_condition_$177 <==> (!(Heap_$_18[sh#9_$_0,Node.prev] == null));
	assume !(Heap_$_18[sh#9_$_0,Node.prev] == null);
	assume !(Heap_$_18[sh#9_$_0,Node.prev] == null);
	assume wf(Heap_$_18,Mask_$_142,SecMask_$_174);
	assume (Heap_$_18[Heap_$_18[sh#9_$_0,Node.prev],Node.next] == null) || (dtype(Heap_$_18[Heap_$_18[sh#9_$_0,Node.prev],Node.next]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_143 == Mask_$_142[Heap_$_18[sh#9_$_0,Node.prev],Node.next := Mask_$_142[Heap_$_18[sh#9_$_0,Node.prev],Node.next][perm$R := Mask_$_142[Heap_$_18[sh#9_$_0,Node.prev],Node.next][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_143);
	assume IsGoodState(heapFragment(Heap_$_18[Heap_$_18[sh#9_$_0,Node.prev],Node.next]));
	assume wf(Heap_$_18,Mask_$_143,SecMask_$_174);
	assume wf(Heap_$_18,Mask_$_143,SecMask_$_174);
	assume !(Heap_$_18[sh#9_$_0,Node.prev] == null);
	assume wf(Heap_$_18,Mask_$_143,SecMask_$_174);
	assume (Heap_$_18[Heap_$_18[sh#9_$_0,Node.prev],Node.prev] == null) || (dtype(Heap_$_18[Heap_$_18[sh#9_$_0,Node.prev],Node.prev]) == Node#t);
	assume Fractions(25) > 0;
	assume Mask_$_144 == Mask_$_143[Heap_$_18[sh#9_$_0,Node.prev],Node.prev := Mask_$_143[Heap_$_18[sh#9_$_0,Node.prev],Node.prev][perm$R := Mask_$_143[Heap_$_18[sh#9_$_0,Node.prev],Node.prev][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_144);
	assume IsGoodState(heapFragment(Heap_$_18[Heap_$_18[sh#9_$_0,Node.prev],Node.prev]));
	assume wf(Heap_$_18,Mask_$_144,SecMask_$_174);
	assume wf(Heap_$_18,Mask_$_144,SecMask_$_174);
	assume !(Heap_$_18[sh#9_$_0,Node.prev] == null);
	assume wf(Heap_$_18,Mask_$_144,SecMask_$_174);
	assume true;
	assume Fractions(25) > 0;
	assume Mask_$_145 == Mask_$_144[Heap_$_18[sh#9_$_0,Node.prev],mu := Mask_$_144[Heap_$_18[sh#9_$_0,Node.prev],mu][perm$R := Mask_$_144[Heap_$_18[sh#9_$_0,Node.prev],mu][perm$R] + Fractions(25)]];
	assume IsGoodMask(Mask_$_145);
	assume IsGoodState(heapFragment(Heap_$_18[Heap_$_18[sh#9_$_0,Node.prev],mu]));
	assume wf(Heap_$_18,Mask_$_145,SecMask_$_174);
	assume wf(Heap_$_18,Mask_$_145,SecMask_$_174);
	assume Mask_$_146 == Mask_$_145;
	goto $branchMerge_44;
anon1645_Else:
	assume !$_$_condition_$177;
	assume $_$_condition_$177 <==> (!(Heap_$_18[sh#9_$_0,Node.prev] == null));
	assume Heap_$_18[sh#9_$_0,Node.prev] == null;
	assume Mask_$_146 == Mask_$_142;
	goto $branchMerge_44;
anon1646_Then:
	assume $_$_condition_$179;
	assume $_$_condition_$179 <==> (!(Heap_$_18[sh#9_$_0,Node.next] == null));
	assume !(Heap_$_18[sh#9_$_0,Node.next] == null);
	assume !(Heap_$_18[Heap_$_18[sh#9_$_0,Node.next],Node.prev] == null);
	assume Heap_$_18[Heap_$_18[sh#9_$_0,Node.next],Node.prev] == sh#9_$_0;
	goto $branchMerge_45;
anon1646_Else:
	assume !$_$_condition_$179;
	assume $_$_condition_$179 <==> (!(Heap_$_18[sh#9_$_0,Node.next] == null));
	assume Heap_$_18[sh#9_$_0,Node.next] == null;
	goto $branchMerge_45;
anon1647_Then:
	assume $_$_condition_$181;
	assume $_$_condition_$181 <==> (!(Heap_$_18[sh#9_$_0,Node.prev] == null));
	assume !(Heap_$_18[sh#9_$_0,Node.prev] == null);
	assume !(Heap_$_18[Heap_$_18[sh#9_$_0,Node.prev],Node.next] == null);
	assume Heap_$_18[Heap_$_18[sh#9_$_0,Node.prev],Node.next] == sh#9_$_0;
	goto $branchMerge_46;
anon1647_Else:
	assume !$_$_condition_$181;
	assume $_$_condition_$181 <==> (!(Heap_$_18[sh#9_$_0,Node.prev] == null));
	assume Heap_$_18[sh#9_$_0,Node.prev] == null;
	goto $branchMerge_46;
anon1648_Then:
	assume $_$_condition_$183;
	assume $_$_condition_$183 <==> (!(Heap_$_18[sh#9_$_0,Node.next] == null));
	assume !(Heap_$_18[sh#9_$_0,Node.next] == null);
	assume MuBelow(Heap_$_18[sh#9_$_0,mu],Heap_$_18[Heap_$_18[sh#9_$_0,Node.next],mu]);
	goto $branchMerge_47;
anon1648_Else:
	assume !$_$_condition_$183;
	assume $_$_condition_$183 <==> (!(Heap_$_18[sh#9_$_0,Node.next] == null));
	assume Heap_$_18[sh#9_$_0,Node.next] == null;
	goto $branchMerge_47;
anon1649_Then:
	assume $_$_condition_$185;
	assume $_$_condition_$185 <==> (!(Heap_$_18[sh#9_$_0,Node.prev] == null));
	assume !(Heap_$_18[sh#9_$_0,Node.prev] == null);
	assume MuBelow(Heap_$_18[Heap_$_18[sh#9_$_0,Node.prev],mu],Heap_$_18[sh#9_$_0,mu]);
	goto anon322;
anon1649_Else:
	assume !$_$_condition_$185;
	assume $_$_condition_$185 <==> (!(Heap_$_18[sh#9_$_0,Node.prev] == null));
	assume Heap_$_18[sh#9_$_0,Node.prev] == null;
	goto anon322;
anon322:
	assume IsGoodMask(Mask_$_146);
	assume wf(Heap_$_18,Mask_$_146,SecMask_$_174);
	assume Acquire$Heap(lastAcquire#_472_$_0) == Heap_$_18;
	assume Acquire$Mask(lastAcquire#_472_$_0) == Mask_$_146;
	assume Acquire$SecMask(lastAcquire#_472_$_0) == SecMask_$_174;
	assume Acquire$Credits(lastAcquire#_472_$_0) == ZeroCredits;
	assert { :msg "  60.37: SMOKE-TEST-19. (The statements after the acquire statement are unreachable.)" } !(1 == 1);
	assume Mask_$_147 == Mask_$_146;
	assume Heap_$_19 == Heap_$_18;
	assume cond#_471_$_1 <==> cond#_471_$_0;
	goto anon323;
anon1650_Then:
	assume $_$_condition_$187;
	assume $_$_condition_$187 <==> cond#_476_$_0;
	assume cond#_476_$_0;
	assert { :msg "  67.9: SMOKE-TEST-24. (The begging of the if-branch is unreachable.)" } !(1 == 1);
	assert { :msg "  67.29: Receiver might be null." } true ==> (!(this == null));
	assert { :msg "  67.29: Location might not be readable." } true ==> CanRead(Mask_$_147,SecMask_$_174,this,Node.prev);
	assert { :msg "  67.42: Receiver might be null." } true ==> (!(this == null));
	assert { :msg "  67.42: Location might not be readable." } true ==> CanRead(Mask_$_147,SecMask_$_174,this,Node.next);
	assert { :msg "  67.29: Location might not be writable" } CanWrite(Mask_$_147,Heap_$_19[this,Node.prev],Node.next);
	assume Heap_$_20 == Heap_$_19[Heap_$_19[this,Node.prev],Node.next := Heap_$_19[this,Node.next]];
	assume wf(Heap_$_20,Mask_$_147,SecMask_$_174);
	assert { :msg "  67.29: SMOKE-TEST-25. (The statements after the field update statement are unreachable.)" } !(1 == 1);
	assume Heap_$_21 == Heap_$_20;
	goto anon325;
anon1650_Else:
	assume !$_$_condition_$187;
	assume $_$_condition_$187 <==> cond#_476_$_0;
	assume !cond#_476_$_0;
	assume Heap_$_21 == Heap_$_19;
	goto anon325;
anon325:
	assume cond#_477_$_0 <==> (!(Heap_$_21[this,Node.next] == null));
	assert { :msg "  68.13: Receiver might be null." } true ==> (!(this == null));
	assert { :msg "  68.13: Location might not be readable." } true ==> CanRead(Mask_$_147,SecMask_$_174,this,Node.next);
	if ($_$_condition_$188) { goto anon1651_Then; } else { goto anon1651_Else; }
anon1651_Then:
	assume $_$_condition_$188;
	assume $_$_condition_$188 <==> cond#_477_$_0;
	assume cond#_477_$_0;
	assert { :msg "  68.9: SMOKE-TEST-26. (The begging of the if-branch is unreachable.)" } !(1 == 1);
	assert { :msg "  68.29: Receiver might be null." } true ==> (!(this == null));
	assert { :msg "  68.29: Location might not be readable." } true ==> CanRead(Mask_$_147,SecMask_$_174,this,Node.next);
	assert { :msg "  68.42: Receiver might be null." } true ==> (!(this == null));
	assert { :msg "  68.42: Location might not be readable." } true ==> CanRead(Mask_$_147,SecMask_$_174,this,Node.prev);
	assert { :msg "  68.29: Location might not be writable" } CanWrite(Mask_$_147,Heap_$_21[this,Node.next],Node.prev);
	assume Heap_$_22 == Heap_$_21[Heap_$_21[this,Node.next],Node.prev := Heap_$_21[this,Node.prev]];
	assume wf(Heap_$_22,Mask_$_147,SecMask_$_174);
	assert { :msg "  68.29: SMOKE-TEST-27. (The statements after the field update statement are unreachable.)" } !(1 == 1);
	assume Heap_$_23 == Heap_$_22;
	goto anon327;
anon1651_Else:
	assume !$_$_condition_$188;
	assume $_$_condition_$188 <==> cond#_477_$_0;
	assume !cond#_477_$_0;
	assume Heap_$_23 == Heap_$_21;
	goto anon327;
anon327:
	assert { :msg "  69.9: Location might not be writable" } CanWrite(Mask_$_147,this,Node.next);
	assume Heap_$_24 == Heap_$_23[this,Node.next := null];
	assume wf(Heap_$_24,Mask_$_147,SecMask_$_174);
	assert { :msg "  69.9: SMOKE-TEST-28. (The statements after the field update statement are unreachable.)" } !(1 == 1);
	assert { :msg "  70.9: Location might not be writable" } CanWrite(Mask_$_147,this,Node.prev);
	assume Heap_$_25 == Heap_$_24[this,Node.prev := null];
	assume wf(Heap_$_25,Mask_$_147,SecMask_$_174);
	assert { :msg "  70.9: SMOKE-TEST-29. (The statements after the field update statement are unreachable.)" } !(1 == 1);
	assert { :msg "  71.9: SMOKE-TEST-30. (The statements after the assign statement are unreachable.)" } !(1 == 1);
	assert { :msg "  73.9: The target of the release statement might be null." } !(this == null);
	assert { :msg "  73.9: The target of the release statement might not be locked by the current thread." } 0 < Heap_$_25[this,held];
	assert { :msg "  73.9: Release might fail because the current thread might hold the read lock." } !Heap_$_25[this,rdheld];
	if ($_$_condition_$189) { goto anon1652_Then; } else { goto anon1652_Else; }
anon1652_Then:
	assume $_$_condition_$189;
	assume $_$_condition_$189 <==> (!(Heap_$_25[this,Node.next] == null));
	assume !(Heap_$_25[this,Node.next] == null);
	assert { :msg "  73.9: Monitor invariant might hot hold. The expression at 11.31 might not evaluate to true." } !(Heap_$_25[Heap_$_25[this,Node.next],Node.prev] == null);
	assert { :msg "  73.9: Monitor invariant might hot hold. The expression at 11.52 might not evaluate to true." } Heap_$_25[Heap_$_25[this,Node.next],Node.prev] == this;
	goto $branchMerge_48;
anon1652_Else:
	assume !$_$_condition_$189;
	assume $_$_condition_$189 <==> (!(Heap_$_25[this,Node.next] == null));
	assume Heap_$_25[this,Node.next] == null;
	goto $branchMerge_48;
anon1653_Then:
	assume $_$_condition_$190;
	assume $_$_condition_$190 <==> (!(Heap_$_25[this,Node.prev] == null));
	assume !(Heap_$_25[this,Node.prev] == null);
	assert { :msg "  73.9: Monitor invariant might hot hold. The expression at 12.31 might not evaluate to true." } !(Heap_$_25[Heap_$_25[this,Node.prev],Node.next] == null);
	assert { :msg "  73.9: Monitor invariant might hot hold. The expression at 12.52 might not evaluate to true." } Heap_$_25[Heap_$_25[this,Node.prev],Node.next] == this;
	goto $branchMerge_49;
anon1653_Else:
	assume !$_$_condition_$190;
	assume $_$_condition_$190 <==> (!(Heap_$_25[this,Node.prev] == null));
	assume Heap_$_25[this,Node.prev] == null;
	goto $branchMerge_49;
anon1654_Then:
	assume $_$_condition_$192;
	assume $_$_condition_$192 <==> (!(Heap_$_25[this,Node.next] == null));
	assume !(Heap_$_25[this,Node.next] == null);
	assert { :msg "  73.9: Monitor invariant might hot hold. The expression at 13.30 might not evaluate to true." } MuBelow(Heap_$_25[this,mu],Heap_$_25[Heap_$_25[this,Node.next],mu]);
	goto $branchMerge_50;
anon1654_Else:
	assume !$_$_condition_$192;
	assume $_$_condition_$192 <==> (!(Heap_$_25[this,Node.next] == null));
	assume Heap_$_25[this,Node.next] == null;
	goto $branchMerge_50;
anon1655_Then:
	assume $_$_condition_$194;
	assume $_$_condition_$194 <==> (!(Heap_$_25[this,Node.prev] == null));
	assume !(Heap_$_25[this,Node.prev] == null);
	assert { :msg "  73.9: Monitor invariant might hot hold. The expression at 14.30 might not evaluate to true." } MuBelow(Heap_$_25[Heap_$_25[this,Node.prev],mu],Heap_$_25[this,mu]);
	goto anon335;
anon1655_Else:
	assume !$_$_condition_$194;
	assume $_$_condition_$194 <==> (!(Heap_$_25[this,Node.prev] == null));
	assume Heap_$_25[this,Node.prev] == null;
	goto anon335;
anon335:
	assert { :msg "  73.9: Monitor invariant might hot hold. The permission at 6.15 might not be positive." } ((Fractions(50) - 0) > 0) || (false && ((0 - 1) > 0));
	assert { :msg "  73.9: Monitor invariant might hot hold. Insufficient permission at 6.15 for Node.prev." } ((Fractions(50) - 0) <= Mask_$_147[this,Node.prev][perm$R]) && (((Fractions(50) - 0) == Mask_$_147[this,Node.prev][perm$R]) ==> ((0 - 1) <= Mask_$_147[this,Node.prev][perm$N]));
	assume exhaleMask#_485_$_0 == Mask_$_147[this,Node.prev := Mask_$_147[this,Node.prev][perm$N := Mask_$_147[this,Node.prev][perm$N] - (0 - 1)]];
	assume exhaleMask#_485_$_1 == exhaleMask#_485_$_0[this,Node.prev := exhaleMask#_485_$_0[this,Node.prev][perm$R := exhaleMask#_485_$_0[this,Node.prev][perm$R] - (Fractions(50) - 0)]];
	assume wf(Heap_$_25,Mask_$_147,SecMask_$_174);
	assume IsGoodMask(exhaleMask#_485_$_1);
	assume wf(Heap_$_25,exhaleMask#_485_$_1,SecMask_$_174);
	assume wf(Heap_$_25,Mask_$_147,SecMask_$_174);
	assert { :msg "  73.9: Monitor invariant might hot hold. The permission at 6.38 might not be positive." } ((Fractions(50) - 0) > 0) || (false && ((0 - 1) > 0));
	assert { :msg "  73.9: Monitor invariant might hot hold. Insufficient permission at 6.38 for Node.next." } ((Fractions(50) - 0) <= exhaleMask#_485_$_1[this,Node.next][perm$R]) && (((Fractions(50) - 0) == exhaleMask#_485_$_1[this,Node.next][perm$R]) ==> ((0 - 1) <= exhaleMask#_485_$_1[this,Node.next][perm$N]));
	assume exhaleMask#_485_$_2 == exhaleMask#_485_$_1[this,Node.next := exhaleMask#_485_$_1[this,Node.next][perm$N := exhaleMask#_485_$_1[this,Node.next][perm$N] - (0 - 1)]];
	assume exhaleMask#_485_$_3 == exhaleMask#_485_$_2[this,Node.next := exhaleMask#_485_$_2[this,Node.next][perm$R := exhaleMask#_485_$_2[this,Node.next][perm$R] - (Fractions(50) - 0)]];
	assume wf(Heap_$_25,Mask_$_147,SecMask_$_174);
	assume IsGoodMask(exhaleMask#_485_$_3);
	assume wf(Heap_$_25,exhaleMask#_485_$_3,SecMask_$_174);
	assume wf(Heap_$_25,Mask_$_147,SecMask_$_174);
	assert { :msg "  73.9: Monitor invariant might hot hold. The permission at 6.61 might not be positive." } ((Fractions(50) - 0) > 0) || (false && ((0 - 1) > 0));
	assert { :msg "  73.9: Monitor invariant might hot hold. Insufficient permission at 6.61 for mu." } ((Fractions(50) - 0) <= exhaleMask#_485_$_3[this,mu][perm$R]) && (((Fractions(50) - 0) == exhaleMask#_485_$_3[this,mu][perm$R]) ==> ((0 - 1) <= exhaleMask#_485_$_3[this,mu][perm$N]));
	assume exhaleMask#_485_$_4 == exhaleMask#_485_$_3[this,mu := exhaleMask#_485_$_3[this,mu][perm$N := exhaleMask#_485_$_3[this,mu][perm$N] - (0 - 1)]];
	assume exhaleMask#_485_$_5 == exhaleMask#_485_$_4[this,mu := exhaleMask#_485_$_4[this,mu][perm$R := exhaleMask#_485_$_4[this,mu][perm$R] - (Fractions(50) - 0)]];
	assume wf(Heap_$_25,Mask_$_147,SecMask_$_174);
	assume IsGoodMask(exhaleMask#_485_$_5);
	assume wf(Heap_$_25,exhaleMask#_485_$_5,SecMask_$_174);
	assume wf(Heap_$_25,Mask_$_147,SecMask_$_174);
	if ($_$_condition_$196) { goto anon1656_Then; } else { goto anon1656_Else; }
anon1656_Then:
	assume $_$_condition_$196;
	assume $_$_condition_$196 <==> (Heap_$_25[this,Node.next] == null);
	assume Heap_$_25[this,Node.next] == null;
	assert { :msg "  73.9: Monitor invariant might hot hold. The permission at 7.31 might not be positive." } Fractions(25) > 0;
	assert { :msg "  73.9: Monitor invariant might hot hold. Insufficient fraction at 7.31 for Node.prev." } (Fractions(25) <= exhaleMask#_485_$_5[this,Node.prev][perm$R]) && ((Fractions(25) == exhaleMask#_485_$_5[this,Node.prev][perm$R]) ==> (0 <= exhaleMask#_485_$_5[this,Node.prev][perm$N]));
	assume exhaleMask#_485_$_6 == exhaleMask#_485_$_5[this,Node.prev := exhaleMask#_485_$_5[this,Node.prev][perm$R := exhaleMask#_485_$_5[this,Node.prev][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_485_$_6);
	assume wf(Heap_$_25,exhaleMask#_485_$_6,SecMask_$_174);
	assume wf(Heap_$_25,Mask_$_147,SecMask_$_174);
	assert { :msg "  73.9: Monitor invariant might hot hold. The permission at 7.48 might not be positive." } Fractions(25) > 0;
	assert { :msg "  73.9: Monitor invariant might hot hold. Insufficient fraction at 7.48 for Node.next." } (Fractions(25) <= exhaleMask#_485_$_6[this,Node.next][perm$R]) && ((Fractions(25) == exhaleMask#_485_$_6[this,Node.next][perm$R]) ==> (0 <= exhaleMask#_485_$_6[this,Node.next][perm$N]));
	assume exhaleMask#_485_$_7 == exhaleMask#_485_$_6[this,Node.next := exhaleMask#_485_$_6[this,Node.next][perm$R := exhaleMask#_485_$_6[this,Node.next][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_485_$_7);
	assume wf(Heap_$_25,exhaleMask#_485_$_7,SecMask_$_174);
	assume wf(Heap_$_25,Mask_$_147,SecMask_$_174);
	assert { :msg "  73.9: Monitor invariant might hot hold. The permission at 7.65 might not be positive." } Fractions(25) > 0;
	assert { :msg "  73.9: Monitor invariant might hot hold. Insufficient fraction at 7.65 for mu." } (Fractions(25) <= exhaleMask#_485_$_7[this,mu][perm$R]) && ((Fractions(25) == exhaleMask#_485_$_7[this,mu][perm$R]) ==> (0 <= exhaleMask#_485_$_7[this,mu][perm$N]));
	assume exhaleMask#_485_$_8 == exhaleMask#_485_$_7[this,mu := exhaleMask#_485_$_7[this,mu][perm$R := exhaleMask#_485_$_7[this,mu][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_485_$_8);
	assume wf(Heap_$_25,exhaleMask#_485_$_8,SecMask_$_174);
	assume wf(Heap_$_25,Mask_$_147,SecMask_$_174);
	assume exhaleMask#_485_$_9 == exhaleMask#_485_$_8;
	goto $branchMerge_51;
anon1656_Else:
	assume !$_$_condition_$196;
	assume $_$_condition_$196 <==> (Heap_$_25[this,Node.next] == null);
	assume !(Heap_$_25[this,Node.next] == null);
	assume exhaleMask#_485_$_9 == exhaleMask#_485_$_5;
	goto $branchMerge_51;
anon1657_Then:
	assume $_$_condition_$197;
	assume $_$_condition_$197 <==> (!(Heap_$_25[this,Node.next] == null));
	assume !(Heap_$_25[this,Node.next] == null);
	assert { :msg "  73.9: Monitor invariant might hot hold. The permission at 8.31 might not be positive." } Fractions(25) > 0;
	assert { :msg "  73.9: Monitor invariant might hot hold. Insufficient fraction at 8.31 for Node.next." } (Fractions(25) <= exhaleMask#_485_$_9[Heap_$_25[this,Node.next],Node.next][perm$R]) && ((Fractions(25) == exhaleMask#_485_$_9[Heap_$_25[this,Node.next],Node.next][perm$R]) ==> (0 <= exhaleMask#_485_$_9[Heap_$_25[this,Node.next],Node.next][perm$N]));
	assume exhaleMask#_485_$_10 == exhaleMask#_485_$_9[Heap_$_25[this,Node.next],Node.next := exhaleMask#_485_$_9[Heap_$_25[this,Node.next],Node.next][perm$R := exhaleMask#_485_$_9[Heap_$_25[this,Node.next],Node.next][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_485_$_10);
	assume wf(Heap_$_25,exhaleMask#_485_$_10,SecMask_$_174);
	assume wf(Heap_$_25,Mask_$_147,SecMask_$_174);
	assert { :msg "  73.9: Monitor invariant might hot hold. The permission at 8.53 might not be positive." } Fractions(25) > 0;
	assert { :msg "  73.9: Monitor invariant might hot hold. Insufficient fraction at 8.53 for Node.prev." } (Fractions(25) <= exhaleMask#_485_$_10[Heap_$_25[this,Node.next],Node.prev][perm$R]) && ((Fractions(25) == exhaleMask#_485_$_10[Heap_$_25[this,Node.next],Node.prev][perm$R]) ==> (0 <= exhaleMask#_485_$_10[Heap_$_25[this,Node.next],Node.prev][perm$N]));
	assume exhaleMask#_485_$_11 == exhaleMask#_485_$_10[Heap_$_25[this,Node.next],Node.prev := exhaleMask#_485_$_10[Heap_$_25[this,Node.next],Node.prev][perm$R := exhaleMask#_485_$_10[Heap_$_25[this,Node.next],Node.prev][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_485_$_11);
	assume wf(Heap_$_25,exhaleMask#_485_$_11,SecMask_$_174);
	assume wf(Heap_$_25,Mask_$_147,SecMask_$_174);
	assert { :msg "  73.9: Monitor invariant might hot hold. The permission at 8.75 might not be positive." } Fractions(25) > 0;
	assert { :msg "  73.9: Monitor invariant might hot hold. Insufficient fraction at 8.75 for mu." } (Fractions(25) <= exhaleMask#_485_$_11[Heap_$_25[this,Node.next],mu][perm$R]) && ((Fractions(25) == exhaleMask#_485_$_11[Heap_$_25[this,Node.next],mu][perm$R]) ==> (0 <= exhaleMask#_485_$_11[Heap_$_25[this,Node.next],mu][perm$N]));
	assume exhaleMask#_485_$_12 == exhaleMask#_485_$_11[Heap_$_25[this,Node.next],mu := exhaleMask#_485_$_11[Heap_$_25[this,Node.next],mu][perm$R := exhaleMask#_485_$_11[Heap_$_25[this,Node.next],mu][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_485_$_12);
	assume wf(Heap_$_25,exhaleMask#_485_$_12,SecMask_$_174);
	assume wf(Heap_$_25,Mask_$_147,SecMask_$_174);
	assume exhaleMask#_485_$_13 == exhaleMask#_485_$_12;
	goto $branchMerge_52;
anon1657_Else:
	assume !$_$_condition_$197;
	assume $_$_condition_$197 <==> (!(Heap_$_25[this,Node.next] == null));
	assume Heap_$_25[this,Node.next] == null;
	assume exhaleMask#_485_$_13 == exhaleMask#_485_$_9;
	goto $branchMerge_52;
anon1658_Then:
	assume $_$_condition_$199;
	assume $_$_condition_$199 <==> (Heap_$_25[this,Node.prev] == null);
	assume Heap_$_25[this,Node.prev] == null;
	assert { :msg "  73.9: Monitor invariant might hot hold. The permission at 9.31 might not be positive." } Fractions(25) > 0;
	assert { :msg "  73.9: Monitor invariant might hot hold. Insufficient fraction at 9.31 for Node.prev." } (Fractions(25) <= exhaleMask#_485_$_13[this,Node.prev][perm$R]) && ((Fractions(25) == exhaleMask#_485_$_13[this,Node.prev][perm$R]) ==> (0 <= exhaleMask#_485_$_13[this,Node.prev][perm$N]));
	assume exhaleMask#_485_$_14 == exhaleMask#_485_$_13[this,Node.prev := exhaleMask#_485_$_13[this,Node.prev][perm$R := exhaleMask#_485_$_13[this,Node.prev][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_485_$_14);
	assume wf(Heap_$_25,exhaleMask#_485_$_14,SecMask_$_174);
	assume wf(Heap_$_25,Mask_$_147,SecMask_$_174);
	assert { :msg "  73.9: Monitor invariant might hot hold. The permission at 9.48 might not be positive." } Fractions(25) > 0;
	assert { :msg "  73.9: Monitor invariant might hot hold. Insufficient fraction at 9.48 for Node.next." } (Fractions(25) <= exhaleMask#_485_$_14[this,Node.next][perm$R]) && ((Fractions(25) == exhaleMask#_485_$_14[this,Node.next][perm$R]) ==> (0 <= exhaleMask#_485_$_14[this,Node.next][perm$N]));
	assume exhaleMask#_485_$_15 == exhaleMask#_485_$_14[this,Node.next := exhaleMask#_485_$_14[this,Node.next][perm$R := exhaleMask#_485_$_14[this,Node.next][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_485_$_15);
	assume wf(Heap_$_25,exhaleMask#_485_$_15,SecMask_$_174);
	assume wf(Heap_$_25,Mask_$_147,SecMask_$_174);
	assert { :msg "  73.9: Monitor invariant might hot hold. The permission at 9.65 might not be positive." } Fractions(25) > 0;
	assert { :msg "  73.9: Monitor invariant might hot hold. Insufficient fraction at 9.65 for mu." } (Fractions(25) <= exhaleMask#_485_$_15[this,mu][perm$R]) && ((Fractions(25) == exhaleMask#_485_$_15[this,mu][perm$R]) ==> (0 <= exhaleMask#_485_$_15[this,mu][perm$N]));
	assume exhaleMask#_485_$_16 == exhaleMask#_485_$_15[this,mu := exhaleMask#_485_$_15[this,mu][perm$R := exhaleMask#_485_$_15[this,mu][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_485_$_16);
	assume wf(Heap_$_25,exhaleMask#_485_$_16,SecMask_$_174);
	assume wf(Heap_$_25,Mask_$_147,SecMask_$_174);
	assume exhaleMask#_485_$_17 == exhaleMask#_485_$_16;
	goto $branchMerge_53;
anon1658_Else:
	assume !$_$_condition_$199;
	assume $_$_condition_$199 <==> (Heap_$_25[this,Node.prev] == null);
	assume !(Heap_$_25[this,Node.prev] == null);
	assume exhaleMask#_485_$_17 == exhaleMask#_485_$_13;
	goto $branchMerge_53;
anon1659_Then:
	assume $_$_condition_$201;
	assume $_$_condition_$201 <==> (!(Heap_$_25[this,Node.prev] == null));
	assume !(Heap_$_25[this,Node.prev] == null);
	assert { :msg "  73.9: Monitor invariant might hot hold. The permission at 10.31 might not be positive." } Fractions(25) > 0;
	assert { :msg "  73.9: Monitor invariant might hot hold. Insufficient fraction at 10.31 for Node.next." } (Fractions(25) <= exhaleMask#_485_$_17[Heap_$_25[this,Node.prev],Node.next][perm$R]) && ((Fractions(25) == exhaleMask#_485_$_17[Heap_$_25[this,Node.prev],Node.next][perm$R]) ==> (0 <= exhaleMask#_485_$_17[Heap_$_25[this,Node.prev],Node.next][perm$N]));
	assume exhaleMask#_485_$_18 == exhaleMask#_485_$_17[Heap_$_25[this,Node.prev],Node.next := exhaleMask#_485_$_17[Heap_$_25[this,Node.prev],Node.next][perm$R := exhaleMask#_485_$_17[Heap_$_25[this,Node.prev],Node.next][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_485_$_18);
	assume wf(Heap_$_25,exhaleMask#_485_$_18,SecMask_$_174);
	assume wf(Heap_$_25,Mask_$_147,SecMask_$_174);
	assert { :msg "  73.9: Monitor invariant might hot hold. The permission at 10.53 might not be positive." } Fractions(25) > 0;
	assert { :msg "  73.9: Monitor invariant might hot hold. Insufficient fraction at 10.53 for Node.prev." } (Fractions(25) <= exhaleMask#_485_$_18[Heap_$_25[this,Node.prev],Node.prev][perm$R]) && ((Fractions(25) == exhaleMask#_485_$_18[Heap_$_25[this,Node.prev],Node.prev][perm$R]) ==> (0 <= exhaleMask#_485_$_18[Heap_$_25[this,Node.prev],Node.prev][perm$N]));
	assume exhaleMask#_485_$_19 == exhaleMask#_485_$_18[Heap_$_25[this,Node.prev],Node.prev := exhaleMask#_485_$_18[Heap_$_25[this,Node.prev],Node.prev][perm$R := exhaleMask#_485_$_18[Heap_$_25[this,Node.prev],Node.prev][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_485_$_19);
	assume wf(Heap_$_25,exhaleMask#_485_$_19,SecMask_$_174);
	assume wf(Heap_$_25,Mask_$_147,SecMask_$_174);
	assert { :msg "  73.9: Monitor invariant might hot hold. The permission at 10.75 might not be positive." } Fractions(25) > 0;
	assert { :msg "  73.9: Monitor invariant might hot hold. Insufficient fraction at 10.75 for mu." } (Fractions(25) <= exhaleMask#_485_$_19[Heap_$_25[this,Node.prev],mu][perm$R]) && ((Fractions(25) == exhaleMask#_485_$_19[Heap_$_25[this,Node.prev],mu][perm$R]) ==> (0 <= exhaleMask#_485_$_19[Heap_$_25[this,Node.prev],mu][perm$N]));
	assume exhaleMask#_485_$_20 == exhaleMask#_485_$_19[Heap_$_25[this,Node.prev],mu := exhaleMask#_485_$_19[Heap_$_25[this,Node.prev],mu][perm$R := exhaleMask#_485_$_19[Heap_$_25[this,Node.prev],mu][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_485_$_20);
	assume wf(Heap_$_25,exhaleMask#_485_$_20,SecMask_$_174);
	assume wf(Heap_$_25,Mask_$_147,SecMask_$_174);
	assume exhaleMask#_485_$_21 == exhaleMask#_485_$_20;
	goto anon343;
anon1659_Else:
	assume !$_$_condition_$201;
	assume $_$_condition_$201 <==> (!(Heap_$_25[this,Node.prev] == null));
	assume Heap_$_25[this,Node.prev] == null;
	assume exhaleMask#_485_$_21 == exhaleMask#_485_$_17;
	goto anon343;
anon343:
	assume IsGoodExhaleState(exhaleHeap#_484_$_0,Heap_$_25,exhaleMask#_485_$_21,SecMask_$_174);
	assume IsGoodMask(exhaleMask#_485_$_21);
	assume wf(exhaleHeap#_484_$_0,exhaleMask#_485_$_21,SecMask_$_174);
	assume held#_478_$_0 <= 0;
	assume Heap_$_26 == exhaleHeap#_484_$_0[this,held := held#_478_$_0];
	assume LastSeen$Heap(Heap_$_26[this,mu],held#_478_$_0) == Heap_$_25;
	assume LastSeen$Mask(Heap_$_26[this,mu],held#_478_$_0) == Mask_$_147;
	assume LastSeen$SecMask(Heap_$_26[this,mu],held#_478_$_0) == SecMask_$_174;
	assume LastSeen$Credits(Heap_$_26[this,mu],held#_478_$_0) == ZeroCredits;
	assert { :msg "  73.9: SMOKE-TEST-31. (The statements after the release statement are unreachable.)" } !(1 == 1);
	assume cond#_501_$_0 <==> (!(oldNext#4_$_0 == null));
	if ($_$_condition_$203) { goto anon1660_Then; } else { goto anon1660_Else; }
anon1660_Then:
	assume $_$_condition_$203;
	assume $_$_condition_$203 <==> cond#_501_$_0;
	assume cond#_501_$_0;
	assert { :msg "  74.9: SMOKE-TEST-32. (The begging of the if-branch is unreachable.)" } !(1 == 1);
	assume cond#_502_$_0 <==> (!(Heap_$_26[oldNext#4_$_0,Node.next] == null));
	assert { :msg "  75.16: Receiver might be null." } true ==> (!(oldNext#4_$_0 == null));
	assert { :msg "  75.16: Location might not be readable." } true ==> CanRead(exhaleMask#_485_$_21,SecMask_$_174,oldNext#4_$_0,Node.next);
	if ($_$_condition_$204) { goto anon1661_Then; } else { goto anon1661_Else; }
anon1660_Else:
	assume !$_$_condition_$203;
	assume $_$_condition_$203 <==> cond#_501_$_0;
	assume !cond#_501_$_0;
	assume Mask_$_149 == exhaleMask#_485_$_21;
	assume Heap_$_30 == Heap_$_26;
	assume cond#_502_$_1 <==> cond#_502;
	goto anon379;
anon1661_Then:
	assume $_$_condition_$204;
	assume $_$_condition_$204 <==> cond#_502_$_0;
	assume cond#_502_$_0;
	assert { :msg "  75.13: SMOKE-TEST-33. (The begging of the if-branch is unreachable.)" } !(1 == 1);
	assert { :msg "  75.48: Receiver might be null." } true ==> (!(oldNext#4_$_0 == null));
	assert { :msg "  75.48: Location might not be readable." } true ==> CanRead(exhaleMask#_485_$_21,SecMask_$_174,oldNext#4_$_0,Node.next);
	assert { :msg "  75.40: The target of the release statement might be null." } !(Heap_$_26[oldNext#4_$_0,Node.next] == null);
	assert { :msg "  75.40: The target of the release statement might not be locked by the current thread." } 0 < Heap_$_26[Heap_$_26[oldNext#4_$_0,Node.next],held];
	assert { :msg "  75.40: Release might fail because the current thread might hold the read lock." } !Heap_$_26[Heap_$_26[oldNext#4_$_0,Node.next],rdheld];
	assume sh#11_$_0 == Heap_$_26[oldNext#4_$_0,Node.next];
	if ($_$_condition_$205) { goto anon1662_Then; } else { goto anon1662_Else; }
anon1661_Else:
	assume !$_$_condition_$204;
	assume $_$_condition_$204 <==> cond#_502_$_0;
	assume !cond#_502_$_0;
	assume Heap_$_28 == Heap_$_26;
	assume Mask_$_148 == exhaleMask#_485_$_21;
	goto anon362;
anon379:
	assume cond#_549_$_0 <==> (!(oldPrev#2_$_0 == null));
	if ($_$_condition_$233) { goto anon1678_Then; } else { goto anon1678_Else; }
anon1662_Then:
	assume $_$_condition_$205;
	assume $_$_condition_$205 <==> (!(Heap_$_26[sh#11_$_0,Node.next] == null));
	assume !(Heap_$_26[sh#11_$_0,Node.next] == null);
	assert { :msg "  75.40: Monitor invariant might hot hold. The expression at 11.31 might not evaluate to true." } !(Heap_$_26[Heap_$_26[sh#11_$_0,Node.next],Node.prev] == null);
	assert { :msg "  75.40: Monitor invariant might hot hold. The expression at 11.52 might not evaluate to true." } Heap_$_26[Heap_$_26[sh#11_$_0,Node.next],Node.prev] == sh#11_$_0;
	goto $branchMerge_54;
anon1662_Else:
	assume !$_$_condition_$205;
	assume $_$_condition_$205 <==> (!(Heap_$_26[sh#11_$_0,Node.next] == null));
	assume Heap_$_26[sh#11_$_0,Node.next] == null;
	goto $branchMerge_54;
anon362:
	assert { :msg "  76.13: The target of the release statement might be null." } !(oldNext#4_$_0 == null);
	assert { :msg "  76.13: The target of the release statement might not be locked by the current thread." } 0 < Heap_$_28[oldNext#4_$_0,held];
	assert { :msg "  76.13: Release might fail because the current thread might hold the read lock." } !Heap_$_28[oldNext#4_$_0,rdheld];
	if ($_$_condition_$219) { goto anon1670_Then; } else { goto anon1670_Else; }
anon1663_Then:
	assume $_$_condition_$206;
	assume $_$_condition_$206 <==> (!(Heap_$_26[sh#11_$_0,Node.prev] == null));
	assume !(Heap_$_26[sh#11_$_0,Node.prev] == null);
	assert { :msg "  75.40: Monitor invariant might hot hold. The expression at 12.31 might not evaluate to true." } !(Heap_$_26[Heap_$_26[sh#11_$_0,Node.prev],Node.next] == null);
	assert { :msg "  75.40: Monitor invariant might hot hold. The expression at 12.52 might not evaluate to true." } Heap_$_26[Heap_$_26[sh#11_$_0,Node.prev],Node.next] == sh#11_$_0;
	goto $branchMerge_55;
anon1663_Else:
	assume !$_$_condition_$206;
	assume $_$_condition_$206 <==> (!(Heap_$_26[sh#11_$_0,Node.prev] == null));
	assume Heap_$_26[sh#11_$_0,Node.prev] == null;
	goto $branchMerge_55;
anon1664_Then:
	assume $_$_condition_$208;
	assume $_$_condition_$208 <==> (!(Heap_$_26[sh#11_$_0,Node.next] == null));
	assume !(Heap_$_26[sh#11_$_0,Node.next] == null);
	assert { :msg "  75.40: Monitor invariant might hot hold. The expression at 13.30 might not evaluate to true." } MuBelow(Heap_$_26[sh#11_$_0,mu],Heap_$_26[Heap_$_26[sh#11_$_0,Node.next],mu]);
	goto $branchMerge_56;
anon1664_Else:
	assume !$_$_condition_$208;
	assume $_$_condition_$208 <==> (!(Heap_$_26[sh#11_$_0,Node.next] == null));
	assume Heap_$_26[sh#11_$_0,Node.next] == null;
	goto $branchMerge_56;
anon1665_Then:
	assume $_$_condition_$210;
	assume $_$_condition_$210 <==> (!(Heap_$_26[sh#11_$_0,Node.prev] == null));
	assume !(Heap_$_26[sh#11_$_0,Node.prev] == null);
	assert { :msg "  75.40: Monitor invariant might hot hold. The expression at 14.30 might not evaluate to true." } MuBelow(Heap_$_26[Heap_$_26[sh#11_$_0,Node.prev],mu],Heap_$_26[sh#11_$_0,mu]);
	goto anon353;
anon1665_Else:
	assume !$_$_condition_$210;
	assume $_$_condition_$210 <==> (!(Heap_$_26[sh#11_$_0,Node.prev] == null));
	assume Heap_$_26[sh#11_$_0,Node.prev] == null;
	goto anon353;
anon353:
	assert { :msg "  75.40: Monitor invariant might hot hold. The permission at 6.15 might not be positive." } ((Fractions(50) - 0) > 0) || (false && ((0 - 1) > 0));
	assert { :msg "  75.40: Monitor invariant might hot hold. Insufficient permission at 6.15 for Node.prev." } ((Fractions(50) - 0) <= exhaleMask#_485_$_21[sh#11_$_0,Node.prev][perm$R]) && (((Fractions(50) - 0) == exhaleMask#_485_$_21[sh#11_$_0,Node.prev][perm$R]) ==> ((0 - 1) <= exhaleMask#_485_$_21[sh#11_$_0,Node.prev][perm$N]));
	assume exhaleMask#_510_$_0 == exhaleMask#_485_$_21[sh#11_$_0,Node.prev := exhaleMask#_485_$_21[sh#11_$_0,Node.prev][perm$N := exhaleMask#_485_$_21[sh#11_$_0,Node.prev][perm$N] - (0 - 1)]];
	assume exhaleMask#_510_$_1 == exhaleMask#_510_$_0[sh#11_$_0,Node.prev := exhaleMask#_510_$_0[sh#11_$_0,Node.prev][perm$R := exhaleMask#_510_$_0[sh#11_$_0,Node.prev][perm$R] - (Fractions(50) - 0)]];
	assume wf(Heap_$_26,exhaleMask#_485_$_21,SecMask_$_174);
	assume IsGoodMask(exhaleMask#_510_$_1);
	assume wf(Heap_$_26,exhaleMask#_510_$_1,SecMask_$_174);
	assume wf(Heap_$_26,exhaleMask#_485_$_21,SecMask_$_174);
	assert { :msg "  75.40: Monitor invariant might hot hold. The permission at 6.38 might not be positive." } ((Fractions(50) - 0) > 0) || (false && ((0 - 1) > 0));
	assert { :msg "  75.40: Monitor invariant might hot hold. Insufficient permission at 6.38 for Node.next." } ((Fractions(50) - 0) <= exhaleMask#_510_$_1[sh#11_$_0,Node.next][perm$R]) && (((Fractions(50) - 0) == exhaleMask#_510_$_1[sh#11_$_0,Node.next][perm$R]) ==> ((0 - 1) <= exhaleMask#_510_$_1[sh#11_$_0,Node.next][perm$N]));
	assume exhaleMask#_510_$_2 == exhaleMask#_510_$_1[sh#11_$_0,Node.next := exhaleMask#_510_$_1[sh#11_$_0,Node.next][perm$N := exhaleMask#_510_$_1[sh#11_$_0,Node.next][perm$N] - (0 - 1)]];
	assume exhaleMask#_510_$_3 == exhaleMask#_510_$_2[sh#11_$_0,Node.next := exhaleMask#_510_$_2[sh#11_$_0,Node.next][perm$R := exhaleMask#_510_$_2[sh#11_$_0,Node.next][perm$R] - (Fractions(50) - 0)]];
	assume wf(Heap_$_26,exhaleMask#_485_$_21,SecMask_$_174);
	assume IsGoodMask(exhaleMask#_510_$_3);
	assume wf(Heap_$_26,exhaleMask#_510_$_3,SecMask_$_174);
	assume wf(Heap_$_26,exhaleMask#_485_$_21,SecMask_$_174);
	assert { :msg "  75.40: Monitor invariant might hot hold. The permission at 6.61 might not be positive." } ((Fractions(50) - 0) > 0) || (false && ((0 - 1) > 0));
	assert { :msg "  75.40: Monitor invariant might hot hold. Insufficient permission at 6.61 for mu." } ((Fractions(50) - 0) <= exhaleMask#_510_$_3[sh#11_$_0,mu][perm$R]) && (((Fractions(50) - 0) == exhaleMask#_510_$_3[sh#11_$_0,mu][perm$R]) ==> ((0 - 1) <= exhaleMask#_510_$_3[sh#11_$_0,mu][perm$N]));
	assume exhaleMask#_510_$_4 == exhaleMask#_510_$_3[sh#11_$_0,mu := exhaleMask#_510_$_3[sh#11_$_0,mu][perm$N := exhaleMask#_510_$_3[sh#11_$_0,mu][perm$N] - (0 - 1)]];
	assume exhaleMask#_510_$_5 == exhaleMask#_510_$_4[sh#11_$_0,mu := exhaleMask#_510_$_4[sh#11_$_0,mu][perm$R := exhaleMask#_510_$_4[sh#11_$_0,mu][perm$R] - (Fractions(50) - 0)]];
	assume wf(Heap_$_26,exhaleMask#_485_$_21,SecMask_$_174);
	assume IsGoodMask(exhaleMask#_510_$_5);
	assume wf(Heap_$_26,exhaleMask#_510_$_5,SecMask_$_174);
	assume wf(Heap_$_26,exhaleMask#_485_$_21,SecMask_$_174);
	if ($_$_condition_$212) { goto anon1666_Then; } else { goto anon1666_Else; }
anon1666_Then:
	assume $_$_condition_$212;
	assume $_$_condition_$212 <==> (Heap_$_26[sh#11_$_0,Node.next] == null);
	assume Heap_$_26[sh#11_$_0,Node.next] == null;
	assert { :msg "  75.40: Monitor invariant might hot hold. The permission at 7.31 might not be positive." } Fractions(25) > 0;
	assert { :msg "  75.40: Monitor invariant might hot hold. Insufficient fraction at 7.31 for Node.prev." } (Fractions(25) <= exhaleMask#_510_$_5[sh#11_$_0,Node.prev][perm$R]) && ((Fractions(25) == exhaleMask#_510_$_5[sh#11_$_0,Node.prev][perm$R]) ==> (0 <= exhaleMask#_510_$_5[sh#11_$_0,Node.prev][perm$N]));
	assume exhaleMask#_510_$_6 == exhaleMask#_510_$_5[sh#11_$_0,Node.prev := exhaleMask#_510_$_5[sh#11_$_0,Node.prev][perm$R := exhaleMask#_510_$_5[sh#11_$_0,Node.prev][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_510_$_6);
	assume wf(Heap_$_26,exhaleMask#_510_$_6,SecMask_$_174);
	assume wf(Heap_$_26,exhaleMask#_485_$_21,SecMask_$_174);
	assert { :msg "  75.40: Monitor invariant might hot hold. The permission at 7.48 might not be positive." } Fractions(25) > 0;
	assert { :msg "  75.40: Monitor invariant might hot hold. Insufficient fraction at 7.48 for Node.next." } (Fractions(25) <= exhaleMask#_510_$_6[sh#11_$_0,Node.next][perm$R]) && ((Fractions(25) == exhaleMask#_510_$_6[sh#11_$_0,Node.next][perm$R]) ==> (0 <= exhaleMask#_510_$_6[sh#11_$_0,Node.next][perm$N]));
	assume exhaleMask#_510_$_7 == exhaleMask#_510_$_6[sh#11_$_0,Node.next := exhaleMask#_510_$_6[sh#11_$_0,Node.next][perm$R := exhaleMask#_510_$_6[sh#11_$_0,Node.next][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_510_$_7);
	assume wf(Heap_$_26,exhaleMask#_510_$_7,SecMask_$_174);
	assume wf(Heap_$_26,exhaleMask#_485_$_21,SecMask_$_174);
	assert { :msg "  75.40: Monitor invariant might hot hold. The permission at 7.65 might not be positive." } Fractions(25) > 0;
	assert { :msg "  75.40: Monitor invariant might hot hold. Insufficient fraction at 7.65 for mu." } (Fractions(25) <= exhaleMask#_510_$_7[sh#11_$_0,mu][perm$R]) && ((Fractions(25) == exhaleMask#_510_$_7[sh#11_$_0,mu][perm$R]) ==> (0 <= exhaleMask#_510_$_7[sh#11_$_0,mu][perm$N]));
	assume exhaleMask#_510_$_8 == exhaleMask#_510_$_7[sh#11_$_0,mu := exhaleMask#_510_$_7[sh#11_$_0,mu][perm$R := exhaleMask#_510_$_7[sh#11_$_0,mu][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_510_$_8);
	assume wf(Heap_$_26,exhaleMask#_510_$_8,SecMask_$_174);
	assume wf(Heap_$_26,exhaleMask#_485_$_21,SecMask_$_174);
	assume exhaleMask#_510_$_9 == exhaleMask#_510_$_8;
	goto $branchMerge_57;
anon1666_Else:
	assume !$_$_condition_$212;
	assume $_$_condition_$212 <==> (Heap_$_26[sh#11_$_0,Node.next] == null);
	assume !(Heap_$_26[sh#11_$_0,Node.next] == null);
	assume exhaleMask#_510_$_9 == exhaleMask#_510_$_5;
	goto $branchMerge_57;
anon1667_Then:
	assume $_$_condition_$213;
	assume $_$_condition_$213 <==> (!(Heap_$_26[sh#11_$_0,Node.next] == null));
	assume !(Heap_$_26[sh#11_$_0,Node.next] == null);
	assert { :msg "  75.40: Monitor invariant might hot hold. The permission at 8.31 might not be positive." } Fractions(25) > 0;
	assert { :msg "  75.40: Monitor invariant might hot hold. Insufficient fraction at 8.31 for Node.next." } (Fractions(25) <= exhaleMask#_510_$_9[Heap_$_26[sh#11_$_0,Node.next],Node.next][perm$R]) && ((Fractions(25) == exhaleMask#_510_$_9[Heap_$_26[sh#11_$_0,Node.next],Node.next][perm$R]) ==> (0 <= exhaleMask#_510_$_9[Heap_$_26[sh#11_$_0,Node.next],Node.next][perm$N]));
	assume exhaleMask#_510_$_10 == exhaleMask#_510_$_9[Heap_$_26[sh#11_$_0,Node.next],Node.next := exhaleMask#_510_$_9[Heap_$_26[sh#11_$_0,Node.next],Node.next][perm$R := exhaleMask#_510_$_9[Heap_$_26[sh#11_$_0,Node.next],Node.next][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_510_$_10);
	assume wf(Heap_$_26,exhaleMask#_510_$_10,SecMask_$_174);
	assume wf(Heap_$_26,exhaleMask#_485_$_21,SecMask_$_174);
	assert { :msg "  75.40: Monitor invariant might hot hold. The permission at 8.53 might not be positive." } Fractions(25) > 0;
	assert { :msg "  75.40: Monitor invariant might hot hold. Insufficient fraction at 8.53 for Node.prev." } (Fractions(25) <= exhaleMask#_510_$_10[Heap_$_26[sh#11_$_0,Node.next],Node.prev][perm$R]) && ((Fractions(25) == exhaleMask#_510_$_10[Heap_$_26[sh#11_$_0,Node.next],Node.prev][perm$R]) ==> (0 <= exhaleMask#_510_$_10[Heap_$_26[sh#11_$_0,Node.next],Node.prev][perm$N]));
	assume exhaleMask#_510_$_11 == exhaleMask#_510_$_10[Heap_$_26[sh#11_$_0,Node.next],Node.prev := exhaleMask#_510_$_10[Heap_$_26[sh#11_$_0,Node.next],Node.prev][perm$R := exhaleMask#_510_$_10[Heap_$_26[sh#11_$_0,Node.next],Node.prev][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_510_$_11);
	assume wf(Heap_$_26,exhaleMask#_510_$_11,SecMask_$_174);
	assume wf(Heap_$_26,exhaleMask#_485_$_21,SecMask_$_174);
	assert { :msg "  75.40: Monitor invariant might hot hold. The permission at 8.75 might not be positive." } Fractions(25) > 0;
	assert { :msg "  75.40: Monitor invariant might hot hold. Insufficient fraction at 8.75 for mu." } (Fractions(25) <= exhaleMask#_510_$_11[Heap_$_26[sh#11_$_0,Node.next],mu][perm$R]) && ((Fractions(25) == exhaleMask#_510_$_11[Heap_$_26[sh#11_$_0,Node.next],mu][perm$R]) ==> (0 <= exhaleMask#_510_$_11[Heap_$_26[sh#11_$_0,Node.next],mu][perm$N]));
	assume exhaleMask#_510_$_12 == exhaleMask#_510_$_11[Heap_$_26[sh#11_$_0,Node.next],mu := exhaleMask#_510_$_11[Heap_$_26[sh#11_$_0,Node.next],mu][perm$R := exhaleMask#_510_$_11[Heap_$_26[sh#11_$_0,Node.next],mu][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_510_$_12);
	assume wf(Heap_$_26,exhaleMask#_510_$_12,SecMask_$_174);
	assume wf(Heap_$_26,exhaleMask#_485_$_21,SecMask_$_174);
	assume exhaleMask#_510_$_13 == exhaleMask#_510_$_12;
	goto $branchMerge_58;
anon1667_Else:
	assume !$_$_condition_$213;
	assume $_$_condition_$213 <==> (!(Heap_$_26[sh#11_$_0,Node.next] == null));
	assume Heap_$_26[sh#11_$_0,Node.next] == null;
	assume exhaleMask#_510_$_13 == exhaleMask#_510_$_9;
	goto $branchMerge_58;
anon1668_Then:
	assume $_$_condition_$215;
	assume $_$_condition_$215 <==> (Heap_$_26[sh#11_$_0,Node.prev] == null);
	assume Heap_$_26[sh#11_$_0,Node.prev] == null;
	assert { :msg "  75.40: Monitor invariant might hot hold. The permission at 9.31 might not be positive." } Fractions(25) > 0;
	assert { :msg "  75.40: Monitor invariant might hot hold. Insufficient fraction at 9.31 for Node.prev." } (Fractions(25) <= exhaleMask#_510_$_13[sh#11_$_0,Node.prev][perm$R]) && ((Fractions(25) == exhaleMask#_510_$_13[sh#11_$_0,Node.prev][perm$R]) ==> (0 <= exhaleMask#_510_$_13[sh#11_$_0,Node.prev][perm$N]));
	assume exhaleMask#_510_$_14 == exhaleMask#_510_$_13[sh#11_$_0,Node.prev := exhaleMask#_510_$_13[sh#11_$_0,Node.prev][perm$R := exhaleMask#_510_$_13[sh#11_$_0,Node.prev][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_510_$_14);
	assume wf(Heap_$_26,exhaleMask#_510_$_14,SecMask_$_174);
	assume wf(Heap_$_26,exhaleMask#_485_$_21,SecMask_$_174);
	assert { :msg "  75.40: Monitor invariant might hot hold. The permission at 9.48 might not be positive." } Fractions(25) > 0;
	assert { :msg "  75.40: Monitor invariant might hot hold. Insufficient fraction at 9.48 for Node.next." } (Fractions(25) <= exhaleMask#_510_$_14[sh#11_$_0,Node.next][perm$R]) && ((Fractions(25) == exhaleMask#_510_$_14[sh#11_$_0,Node.next][perm$R]) ==> (0 <= exhaleMask#_510_$_14[sh#11_$_0,Node.next][perm$N]));
	assume exhaleMask#_510_$_15 == exhaleMask#_510_$_14[sh#11_$_0,Node.next := exhaleMask#_510_$_14[sh#11_$_0,Node.next][perm$R := exhaleMask#_510_$_14[sh#11_$_0,Node.next][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_510_$_15);
	assume wf(Heap_$_26,exhaleMask#_510_$_15,SecMask_$_174);
	assume wf(Heap_$_26,exhaleMask#_485_$_21,SecMask_$_174);
	assert { :msg "  75.40: Monitor invariant might hot hold. The permission at 9.65 might not be positive." } Fractions(25) > 0;
	assert { :msg "  75.40: Monitor invariant might hot hold. Insufficient fraction at 9.65 for mu." } (Fractions(25) <= exhaleMask#_510_$_15[sh#11_$_0,mu][perm$R]) && ((Fractions(25) == exhaleMask#_510_$_15[sh#11_$_0,mu][perm$R]) ==> (0 <= exhaleMask#_510_$_15[sh#11_$_0,mu][perm$N]));
	assume exhaleMask#_510_$_16 == exhaleMask#_510_$_15[sh#11_$_0,mu := exhaleMask#_510_$_15[sh#11_$_0,mu][perm$R := exhaleMask#_510_$_15[sh#11_$_0,mu][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_510_$_16);
	assume wf(Heap_$_26,exhaleMask#_510_$_16,SecMask_$_174);
	assume wf(Heap_$_26,exhaleMask#_485_$_21,SecMask_$_174);
	assume exhaleMask#_510_$_17 == exhaleMask#_510_$_16;
	goto $branchMerge_59;
anon1668_Else:
	assume !$_$_condition_$215;
	assume $_$_condition_$215 <==> (Heap_$_26[sh#11_$_0,Node.prev] == null);
	assume !(Heap_$_26[sh#11_$_0,Node.prev] == null);
	assume exhaleMask#_510_$_17 == exhaleMask#_510_$_13;
	goto $branchMerge_59;
anon1669_Then:
	assume $_$_condition_$217;
	assume $_$_condition_$217 <==> (!(Heap_$_26[sh#11_$_0,Node.prev] == null));
	assume !(Heap_$_26[sh#11_$_0,Node.prev] == null);
	assert { :msg "  75.40: Monitor invariant might hot hold. The permission at 10.31 might not be positive." } Fractions(25) > 0;
	assert { :msg "  75.40: Monitor invariant might hot hold. Insufficient fraction at 10.31 for Node.next." } (Fractions(25) <= exhaleMask#_510_$_17[Heap_$_26[sh#11_$_0,Node.prev],Node.next][perm$R]) && ((Fractions(25) == exhaleMask#_510_$_17[Heap_$_26[sh#11_$_0,Node.prev],Node.next][perm$R]) ==> (0 <= exhaleMask#_510_$_17[Heap_$_26[sh#11_$_0,Node.prev],Node.next][perm$N]));
	assume exhaleMask#_510_$_18 == exhaleMask#_510_$_17[Heap_$_26[sh#11_$_0,Node.prev],Node.next := exhaleMask#_510_$_17[Heap_$_26[sh#11_$_0,Node.prev],Node.next][perm$R := exhaleMask#_510_$_17[Heap_$_26[sh#11_$_0,Node.prev],Node.next][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_510_$_18);
	assume wf(Heap_$_26,exhaleMask#_510_$_18,SecMask_$_174);
	assume wf(Heap_$_26,exhaleMask#_485_$_21,SecMask_$_174);
	assert { :msg "  75.40: Monitor invariant might hot hold. The permission at 10.53 might not be positive." } Fractions(25) > 0;
	assert { :msg "  75.40: Monitor invariant might hot hold. Insufficient fraction at 10.53 for Node.prev." } (Fractions(25) <= exhaleMask#_510_$_18[Heap_$_26[sh#11_$_0,Node.prev],Node.prev][perm$R]) && ((Fractions(25) == exhaleMask#_510_$_18[Heap_$_26[sh#11_$_0,Node.prev],Node.prev][perm$R]) ==> (0 <= exhaleMask#_510_$_18[Heap_$_26[sh#11_$_0,Node.prev],Node.prev][perm$N]));
	assume exhaleMask#_510_$_19 == exhaleMask#_510_$_18[Heap_$_26[sh#11_$_0,Node.prev],Node.prev := exhaleMask#_510_$_18[Heap_$_26[sh#11_$_0,Node.prev],Node.prev][perm$R := exhaleMask#_510_$_18[Heap_$_26[sh#11_$_0,Node.prev],Node.prev][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_510_$_19);
	assume wf(Heap_$_26,exhaleMask#_510_$_19,SecMask_$_174);
	assume wf(Heap_$_26,exhaleMask#_485_$_21,SecMask_$_174);
	assert { :msg "  75.40: Monitor invariant might hot hold. The permission at 10.75 might not be positive." } Fractions(25) > 0;
	assert { :msg "  75.40: Monitor invariant might hot hold. Insufficient fraction at 10.75 for mu." } (Fractions(25) <= exhaleMask#_510_$_19[Heap_$_26[sh#11_$_0,Node.prev],mu][perm$R]) && ((Fractions(25) == exhaleMask#_510_$_19[Heap_$_26[sh#11_$_0,Node.prev],mu][perm$R]) ==> (0 <= exhaleMask#_510_$_19[Heap_$_26[sh#11_$_0,Node.prev],mu][perm$N]));
	assume exhaleMask#_510_$_20 == exhaleMask#_510_$_19[Heap_$_26[sh#11_$_0,Node.prev],mu := exhaleMask#_510_$_19[Heap_$_26[sh#11_$_0,Node.prev],mu][perm$R := exhaleMask#_510_$_19[Heap_$_26[sh#11_$_0,Node.prev],mu][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_510_$_20);
	assume wf(Heap_$_26,exhaleMask#_510_$_20,SecMask_$_174);
	assume wf(Heap_$_26,exhaleMask#_485_$_21,SecMask_$_174);
	assume exhaleMask#_510_$_21 == exhaleMask#_510_$_20;
	goto anon361;
anon1669_Else:
	assume !$_$_condition_$217;
	assume $_$_condition_$217 <==> (!(Heap_$_26[sh#11_$_0,Node.prev] == null));
	assume Heap_$_26[sh#11_$_0,Node.prev] == null;
	assume exhaleMask#_510_$_21 == exhaleMask#_510_$_17;
	goto anon361;
anon361:
	assume IsGoodExhaleState(exhaleHeap#_509_$_0,Heap_$_26,exhaleMask#_510_$_21,SecMask_$_174);
	assume IsGoodMask(exhaleMask#_510_$_21);
	assume wf(exhaleHeap#_509_$_0,exhaleMask#_510_$_21,SecMask_$_174);
	assume held#_503_$_0 <= 0;
	assume Heap_$_27 == exhaleHeap#_509_$_0[exhaleHeap#_509_$_0[oldNext#4_$_0,Node.next],held := held#_503_$_0];
	assume LastSeen$Heap(Heap_$_27[Heap_$_27[oldNext#4_$_0,Node.next],mu],held#_503_$_0) == Heap_$_26;
	assume LastSeen$Mask(Heap_$_27[Heap_$_27[oldNext#4_$_0,Node.next],mu],held#_503_$_0) == exhaleMask#_485_$_21;
	assume LastSeen$SecMask(Heap_$_27[Heap_$_27[oldNext#4_$_0,Node.next],mu],held#_503_$_0) == SecMask_$_174;
	assume LastSeen$Credits(Heap_$_27[Heap_$_27[oldNext#4_$_0,Node.next],mu],held#_503_$_0) == ZeroCredits;
	assert { :msg "  75.40: SMOKE-TEST-34. (The statements after the release statement are unreachable.)" } !(1 == 1);
	assume Heap_$_28 == Heap_$_27;
	assume Mask_$_148 == exhaleMask#_510_$_21;
	goto anon362;
anon1670_Then:
	assume $_$_condition_$219;
	assume $_$_condition_$219 <==> (!(Heap_$_28[oldNext#4_$_0,Node.next] == null));
	assume !(Heap_$_28[oldNext#4_$_0,Node.next] == null);
	assert { :msg "  76.13: Monitor invariant might hot hold. The expression at 11.31 might not evaluate to true." } !(Heap_$_28[Heap_$_28[oldNext#4_$_0,Node.next],Node.prev] == null);
	assert { :msg "  76.13: Monitor invariant might hot hold. The expression at 11.52 might not evaluate to true." } Heap_$_28[Heap_$_28[oldNext#4_$_0,Node.next],Node.prev] == oldNext#4_$_0;
	goto $branchMerge_60;
anon1670_Else:
	assume !$_$_condition_$219;
	assume $_$_condition_$219 <==> (!(Heap_$_28[oldNext#4_$_0,Node.next] == null));
	assume Heap_$_28[oldNext#4_$_0,Node.next] == null;
	goto $branchMerge_60;
anon1671_Then:
	assume $_$_condition_$220;
	assume $_$_condition_$220 <==> (!(Heap_$_28[oldNext#4_$_0,Node.prev] == null));
	assume !(Heap_$_28[oldNext#4_$_0,Node.prev] == null);
	assert { :msg "  76.13: Monitor invariant might hot hold. The expression at 12.31 might not evaluate to true." } !(Heap_$_28[Heap_$_28[oldNext#4_$_0,Node.prev],Node.next] == null);
	assert { :msg "  76.13: Monitor invariant might hot hold. The expression at 12.52 might not evaluate to true." } Heap_$_28[Heap_$_28[oldNext#4_$_0,Node.prev],Node.next] == oldNext#4_$_0;
	goto $branchMerge_61;
anon1671_Else:
	assume !$_$_condition_$220;
	assume $_$_condition_$220 <==> (!(Heap_$_28[oldNext#4_$_0,Node.prev] == null));
	assume Heap_$_28[oldNext#4_$_0,Node.prev] == null;
	goto $branchMerge_61;
anon1672_Then:
	assume $_$_condition_$222;
	assume $_$_condition_$222 <==> (!(Heap_$_28[oldNext#4_$_0,Node.next] == null));
	assume !(Heap_$_28[oldNext#4_$_0,Node.next] == null);
	assert { :msg "  76.13: Monitor invariant might hot hold. The expression at 13.30 might not evaluate to true." } MuBelow(Heap_$_28[oldNext#4_$_0,mu],Heap_$_28[Heap_$_28[oldNext#4_$_0,Node.next],mu]);
	goto $branchMerge_62;
anon1672_Else:
	assume !$_$_condition_$222;
	assume $_$_condition_$222 <==> (!(Heap_$_28[oldNext#4_$_0,Node.next] == null));
	assume Heap_$_28[oldNext#4_$_0,Node.next] == null;
	goto $branchMerge_62;
anon1673_Then:
	assume $_$_condition_$224;
	assume $_$_condition_$224 <==> (!(Heap_$_28[oldNext#4_$_0,Node.prev] == null));
	assume !(Heap_$_28[oldNext#4_$_0,Node.prev] == null);
	assert { :msg "  76.13: Monitor invariant might hot hold. The expression at 14.30 might not evaluate to true." } MuBelow(Heap_$_28[Heap_$_28[oldNext#4_$_0,Node.prev],mu],Heap_$_28[oldNext#4_$_0,mu]);
	goto anon370;
anon1673_Else:
	assume !$_$_condition_$224;
	assume $_$_condition_$224 <==> (!(Heap_$_28[oldNext#4_$_0,Node.prev] == null));
	assume Heap_$_28[oldNext#4_$_0,Node.prev] == null;
	goto anon370;
anon370:
	assert { :msg "  76.13: Monitor invariant might hot hold. The permission at 6.15 might not be positive." } ((Fractions(50) - 0) > 0) || (false && ((0 - 1) > 0));
	assert { :msg "  76.13: Monitor invariant might hot hold. Insufficient permission at 6.15 for Node.prev." } ((Fractions(50) - 0) <= Mask_$_148[oldNext#4_$_0,Node.prev][perm$R]) && (((Fractions(50) - 0) == Mask_$_148[oldNext#4_$_0,Node.prev][perm$R]) ==> ((0 - 1) <= Mask_$_148[oldNext#4_$_0,Node.prev][perm$N]));
	assume exhaleMask#_533_$_0 == Mask_$_148[oldNext#4_$_0,Node.prev := Mask_$_148[oldNext#4_$_0,Node.prev][perm$N := Mask_$_148[oldNext#4_$_0,Node.prev][perm$N] - (0 - 1)]];
	assume exhaleMask#_533_$_1 == exhaleMask#_533_$_0[oldNext#4_$_0,Node.prev := exhaleMask#_533_$_0[oldNext#4_$_0,Node.prev][perm$R := exhaleMask#_533_$_0[oldNext#4_$_0,Node.prev][perm$R] - (Fractions(50) - 0)]];
	assume wf(Heap_$_28,Mask_$_148,SecMask_$_174);
	assume IsGoodMask(exhaleMask#_533_$_1);
	assume wf(Heap_$_28,exhaleMask#_533_$_1,SecMask_$_174);
	assume wf(Heap_$_28,Mask_$_148,SecMask_$_174);
	assert { :msg "  76.13: Monitor invariant might hot hold. The permission at 6.38 might not be positive." } ((Fractions(50) - 0) > 0) || (false && ((0 - 1) > 0));
	assert { :msg "  76.13: Monitor invariant might hot hold. Insufficient permission at 6.38 for Node.next." } ((Fractions(50) - 0) <= exhaleMask#_533_$_1[oldNext#4_$_0,Node.next][perm$R]) && (((Fractions(50) - 0) == exhaleMask#_533_$_1[oldNext#4_$_0,Node.next][perm$R]) ==> ((0 - 1) <= exhaleMask#_533_$_1[oldNext#4_$_0,Node.next][perm$N]));
	assume exhaleMask#_533_$_2 == exhaleMask#_533_$_1[oldNext#4_$_0,Node.next := exhaleMask#_533_$_1[oldNext#4_$_0,Node.next][perm$N := exhaleMask#_533_$_1[oldNext#4_$_0,Node.next][perm$N] - (0 - 1)]];
	assume exhaleMask#_533_$_3 == exhaleMask#_533_$_2[oldNext#4_$_0,Node.next := exhaleMask#_533_$_2[oldNext#4_$_0,Node.next][perm$R := exhaleMask#_533_$_2[oldNext#4_$_0,Node.next][perm$R] - (Fractions(50) - 0)]];
	assume wf(Heap_$_28,Mask_$_148,SecMask_$_174);
	assume IsGoodMask(exhaleMask#_533_$_3);
	assume wf(Heap_$_28,exhaleMask#_533_$_3,SecMask_$_174);
	assume wf(Heap_$_28,Mask_$_148,SecMask_$_174);
	assert { :msg "  76.13: Monitor invariant might hot hold. The permission at 6.61 might not be positive." } ((Fractions(50) - 0) > 0) || (false && ((0 - 1) > 0));
	assert { :msg "  76.13: Monitor invariant might hot hold. Insufficient permission at 6.61 for mu." } ((Fractions(50) - 0) <= exhaleMask#_533_$_3[oldNext#4_$_0,mu][perm$R]) && (((Fractions(50) - 0) == exhaleMask#_533_$_3[oldNext#4_$_0,mu][perm$R]) ==> ((0 - 1) <= exhaleMask#_533_$_3[oldNext#4_$_0,mu][perm$N]));
	assume exhaleMask#_533_$_4 == exhaleMask#_533_$_3[oldNext#4_$_0,mu := exhaleMask#_533_$_3[oldNext#4_$_0,mu][perm$N := exhaleMask#_533_$_3[oldNext#4_$_0,mu][perm$N] - (0 - 1)]];
	assume exhaleMask#_533_$_5 == exhaleMask#_533_$_4[oldNext#4_$_0,mu := exhaleMask#_533_$_4[oldNext#4_$_0,mu][perm$R := exhaleMask#_533_$_4[oldNext#4_$_0,mu][perm$R] - (Fractions(50) - 0)]];
	assume wf(Heap_$_28,Mask_$_148,SecMask_$_174);
	assume IsGoodMask(exhaleMask#_533_$_5);
	assume wf(Heap_$_28,exhaleMask#_533_$_5,SecMask_$_174);
	assume wf(Heap_$_28,Mask_$_148,SecMask_$_174);
	if ($_$_condition_$226) { goto anon1674_Then; } else { goto anon1674_Else; }
anon1674_Then:
	assume $_$_condition_$226;
	assume $_$_condition_$226 <==> (Heap_$_28[oldNext#4_$_0,Node.next] == null);
	assume Heap_$_28[oldNext#4_$_0,Node.next] == null;
	assert { :msg "  76.13: Monitor invariant might hot hold. The permission at 7.31 might not be positive." } Fractions(25) > 0;
	assert { :msg "  76.13: Monitor invariant might hot hold. Insufficient fraction at 7.31 for Node.prev." } (Fractions(25) <= exhaleMask#_533_$_5[oldNext#4_$_0,Node.prev][perm$R]) && ((Fractions(25) == exhaleMask#_533_$_5[oldNext#4_$_0,Node.prev][perm$R]) ==> (0 <= exhaleMask#_533_$_5[oldNext#4_$_0,Node.prev][perm$N]));
	assume exhaleMask#_533_$_6 == exhaleMask#_533_$_5[oldNext#4_$_0,Node.prev := exhaleMask#_533_$_5[oldNext#4_$_0,Node.prev][perm$R := exhaleMask#_533_$_5[oldNext#4_$_0,Node.prev][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_533_$_6);
	assume wf(Heap_$_28,exhaleMask#_533_$_6,SecMask_$_174);
	assume wf(Heap_$_28,Mask_$_148,SecMask_$_174);
	assert { :msg "  76.13: Monitor invariant might hot hold. The permission at 7.48 might not be positive." } Fractions(25) > 0;
	assert { :msg "  76.13: Monitor invariant might hot hold. Insufficient fraction at 7.48 for Node.next." } (Fractions(25) <= exhaleMask#_533_$_6[oldNext#4_$_0,Node.next][perm$R]) && ((Fractions(25) == exhaleMask#_533_$_6[oldNext#4_$_0,Node.next][perm$R]) ==> (0 <= exhaleMask#_533_$_6[oldNext#4_$_0,Node.next][perm$N]));
	assume exhaleMask#_533_$_7 == exhaleMask#_533_$_6[oldNext#4_$_0,Node.next := exhaleMask#_533_$_6[oldNext#4_$_0,Node.next][perm$R := exhaleMask#_533_$_6[oldNext#4_$_0,Node.next][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_533_$_7);
	assume wf(Heap_$_28,exhaleMask#_533_$_7,SecMask_$_174);
	assume wf(Heap_$_28,Mask_$_148,SecMask_$_174);
	assert { :msg "  76.13: Monitor invariant might hot hold. The permission at 7.65 might not be positive." } Fractions(25) > 0;
	assert { :msg "  76.13: Monitor invariant might hot hold. Insufficient fraction at 7.65 for mu." } (Fractions(25) <= exhaleMask#_533_$_7[oldNext#4_$_0,mu][perm$R]) && ((Fractions(25) == exhaleMask#_533_$_7[oldNext#4_$_0,mu][perm$R]) ==> (0 <= exhaleMask#_533_$_7[oldNext#4_$_0,mu][perm$N]));
	assume exhaleMask#_533_$_8 == exhaleMask#_533_$_7[oldNext#4_$_0,mu := exhaleMask#_533_$_7[oldNext#4_$_0,mu][perm$R := exhaleMask#_533_$_7[oldNext#4_$_0,mu][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_533_$_8);
	assume wf(Heap_$_28,exhaleMask#_533_$_8,SecMask_$_174);
	assume wf(Heap_$_28,Mask_$_148,SecMask_$_174);
	assume exhaleMask#_533_$_9 == exhaleMask#_533_$_8;
	goto $branchMerge_63;
anon1674_Else:
	assume !$_$_condition_$226;
	assume $_$_condition_$226 <==> (Heap_$_28[oldNext#4_$_0,Node.next] == null);
	assume !(Heap_$_28[oldNext#4_$_0,Node.next] == null);
	assume exhaleMask#_533_$_9 == exhaleMask#_533_$_5;
	goto $branchMerge_63;
anon1675_Then:
	assume $_$_condition_$227;
	assume $_$_condition_$227 <==> (!(Heap_$_28[oldNext#4_$_0,Node.next] == null));
	assume !(Heap_$_28[oldNext#4_$_0,Node.next] == null);
	assert { :msg "  76.13: Monitor invariant might hot hold. The permission at 8.31 might not be positive." } Fractions(25) > 0;
	assert { :msg "  76.13: Monitor invariant might hot hold. Insufficient fraction at 8.31 for Node.next." } (Fractions(25) <= exhaleMask#_533_$_9[Heap_$_28[oldNext#4_$_0,Node.next],Node.next][perm$R]) && ((Fractions(25) == exhaleMask#_533_$_9[Heap_$_28[oldNext#4_$_0,Node.next],Node.next][perm$R]) ==> (0 <= exhaleMask#_533_$_9[Heap_$_28[oldNext#4_$_0,Node.next],Node.next][perm$N]));
	assume exhaleMask#_533_$_10 == exhaleMask#_533_$_9[Heap_$_28[oldNext#4_$_0,Node.next],Node.next := exhaleMask#_533_$_9[Heap_$_28[oldNext#4_$_0,Node.next],Node.next][perm$R := exhaleMask#_533_$_9[Heap_$_28[oldNext#4_$_0,Node.next],Node.next][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_533_$_10);
	assume wf(Heap_$_28,exhaleMask#_533_$_10,SecMask_$_174);
	assume wf(Heap_$_28,Mask_$_148,SecMask_$_174);
	assert { :msg "  76.13: Monitor invariant might hot hold. The permission at 8.53 might not be positive." } Fractions(25) > 0;
	assert { :msg "  76.13: Monitor invariant might hot hold. Insufficient fraction at 8.53 for Node.prev." } (Fractions(25) <= exhaleMask#_533_$_10[Heap_$_28[oldNext#4_$_0,Node.next],Node.prev][perm$R]) && ((Fractions(25) == exhaleMask#_533_$_10[Heap_$_28[oldNext#4_$_0,Node.next],Node.prev][perm$R]) ==> (0 <= exhaleMask#_533_$_10[Heap_$_28[oldNext#4_$_0,Node.next],Node.prev][perm$N]));
	assume exhaleMask#_533_$_11 == exhaleMask#_533_$_10[Heap_$_28[oldNext#4_$_0,Node.next],Node.prev := exhaleMask#_533_$_10[Heap_$_28[oldNext#4_$_0,Node.next],Node.prev][perm$R := exhaleMask#_533_$_10[Heap_$_28[oldNext#4_$_0,Node.next],Node.prev][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_533_$_11);
	assume wf(Heap_$_28,exhaleMask#_533_$_11,SecMask_$_174);
	assume wf(Heap_$_28,Mask_$_148,SecMask_$_174);
	assert { :msg "  76.13: Monitor invariant might hot hold. The permission at 8.75 might not be positive." } Fractions(25) > 0;
	assert { :msg "  76.13: Monitor invariant might hot hold. Insufficient fraction at 8.75 for mu." } (Fractions(25) <= exhaleMask#_533_$_11[Heap_$_28[oldNext#4_$_0,Node.next],mu][perm$R]) && ((Fractions(25) == exhaleMask#_533_$_11[Heap_$_28[oldNext#4_$_0,Node.next],mu][perm$R]) ==> (0 <= exhaleMask#_533_$_11[Heap_$_28[oldNext#4_$_0,Node.next],mu][perm$N]));
	assume exhaleMask#_533_$_12 == exhaleMask#_533_$_11[Heap_$_28[oldNext#4_$_0,Node.next],mu := exhaleMask#_533_$_11[Heap_$_28[oldNext#4_$_0,Node.next],mu][perm$R := exhaleMask#_533_$_11[Heap_$_28[oldNext#4_$_0,Node.next],mu][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_533_$_12);
	assume wf(Heap_$_28,exhaleMask#_533_$_12,SecMask_$_174);
	assume wf(Heap_$_28,Mask_$_148,SecMask_$_174);
	assume exhaleMask#_533_$_13 == exhaleMask#_533_$_12;
	goto $branchMerge_64;
anon1675_Else:
	assume !$_$_condition_$227;
	assume $_$_condition_$227 <==> (!(Heap_$_28[oldNext#4_$_0,Node.next] == null));
	assume Heap_$_28[oldNext#4_$_0,Node.next] == null;
	assume exhaleMask#_533_$_13 == exhaleMask#_533_$_9;
	goto $branchMerge_64;
anon1676_Then:
	assume $_$_condition_$229;
	assume $_$_condition_$229 <==> (Heap_$_28[oldNext#4_$_0,Node.prev] == null);
	assume Heap_$_28[oldNext#4_$_0,Node.prev] == null;
	assert { :msg "  76.13: Monitor invariant might hot hold. The permission at 9.31 might not be positive." } Fractions(25) > 0;
	assert { :msg "  76.13: Monitor invariant might hot hold. Insufficient fraction at 9.31 for Node.prev." } (Fractions(25) <= exhaleMask#_533_$_13[oldNext#4_$_0,Node.prev][perm$R]) && ((Fractions(25) == exhaleMask#_533_$_13[oldNext#4_$_0,Node.prev][perm$R]) ==> (0 <= exhaleMask#_533_$_13[oldNext#4_$_0,Node.prev][perm$N]));
	assume exhaleMask#_533_$_14 == exhaleMask#_533_$_13[oldNext#4_$_0,Node.prev := exhaleMask#_533_$_13[oldNext#4_$_0,Node.prev][perm$R := exhaleMask#_533_$_13[oldNext#4_$_0,Node.prev][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_533_$_14);
	assume wf(Heap_$_28,exhaleMask#_533_$_14,SecMask_$_174);
	assume wf(Heap_$_28,Mask_$_148,SecMask_$_174);
	assert { :msg "  76.13: Monitor invariant might hot hold. The permission at 9.48 might not be positive." } Fractions(25) > 0;
	assert { :msg "  76.13: Monitor invariant might hot hold. Insufficient fraction at 9.48 for Node.next." } (Fractions(25) <= exhaleMask#_533_$_14[oldNext#4_$_0,Node.next][perm$R]) && ((Fractions(25) == exhaleMask#_533_$_14[oldNext#4_$_0,Node.next][perm$R]) ==> (0 <= exhaleMask#_533_$_14[oldNext#4_$_0,Node.next][perm$N]));
	assume exhaleMask#_533_$_15 == exhaleMask#_533_$_14[oldNext#4_$_0,Node.next := exhaleMask#_533_$_14[oldNext#4_$_0,Node.next][perm$R := exhaleMask#_533_$_14[oldNext#4_$_0,Node.next][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_533_$_15);
	assume wf(Heap_$_28,exhaleMask#_533_$_15,SecMask_$_174);
	assume wf(Heap_$_28,Mask_$_148,SecMask_$_174);
	assert { :msg "  76.13: Monitor invariant might hot hold. The permission at 9.65 might not be positive." } Fractions(25) > 0;
	assert { :msg "  76.13: Monitor invariant might hot hold. Insufficient fraction at 9.65 for mu." } (Fractions(25) <= exhaleMask#_533_$_15[oldNext#4_$_0,mu][perm$R]) && ((Fractions(25) == exhaleMask#_533_$_15[oldNext#4_$_0,mu][perm$R]) ==> (0 <= exhaleMask#_533_$_15[oldNext#4_$_0,mu][perm$N]));
	assume exhaleMask#_533_$_16 == exhaleMask#_533_$_15[oldNext#4_$_0,mu := exhaleMask#_533_$_15[oldNext#4_$_0,mu][perm$R := exhaleMask#_533_$_15[oldNext#4_$_0,mu][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_533_$_16);
	assume wf(Heap_$_28,exhaleMask#_533_$_16,SecMask_$_174);
	assume wf(Heap_$_28,Mask_$_148,SecMask_$_174);
	assume exhaleMask#_533_$_17 == exhaleMask#_533_$_16;
	goto $branchMerge_65;
anon1676_Else:
	assume !$_$_condition_$229;
	assume $_$_condition_$229 <==> (Heap_$_28[oldNext#4_$_0,Node.prev] == null);
	assume !(Heap_$_28[oldNext#4_$_0,Node.prev] == null);
	assume exhaleMask#_533_$_17 == exhaleMask#_533_$_13;
	goto $branchMerge_65;
anon1677_Then:
	assume $_$_condition_$231;
	assume $_$_condition_$231 <==> (!(Heap_$_28[oldNext#4_$_0,Node.prev] == null));
	assume !(Heap_$_28[oldNext#4_$_0,Node.prev] == null);
	assert { :msg "  76.13: Monitor invariant might hot hold. The permission at 10.31 might not be positive." } Fractions(25) > 0;
	assert { :msg "  76.13: Monitor invariant might hot hold. Insufficient fraction at 10.31 for Node.next." } (Fractions(25) <= exhaleMask#_533_$_17[Heap_$_28[oldNext#4_$_0,Node.prev],Node.next][perm$R]) && ((Fractions(25) == exhaleMask#_533_$_17[Heap_$_28[oldNext#4_$_0,Node.prev],Node.next][perm$R]) ==> (0 <= exhaleMask#_533_$_17[Heap_$_28[oldNext#4_$_0,Node.prev],Node.next][perm$N]));
	assume exhaleMask#_533_$_18 == exhaleMask#_533_$_17[Heap_$_28[oldNext#4_$_0,Node.prev],Node.next := exhaleMask#_533_$_17[Heap_$_28[oldNext#4_$_0,Node.prev],Node.next][perm$R := exhaleMask#_533_$_17[Heap_$_28[oldNext#4_$_0,Node.prev],Node.next][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_533_$_18);
	assume wf(Heap_$_28,exhaleMask#_533_$_18,SecMask_$_174);
	assume wf(Heap_$_28,Mask_$_148,SecMask_$_174);
	assert { :msg "  76.13: Monitor invariant might hot hold. The permission at 10.53 might not be positive." } Fractions(25) > 0;
	assert { :msg "  76.13: Monitor invariant might hot hold. Insufficient fraction at 10.53 for Node.prev." } (Fractions(25) <= exhaleMask#_533_$_18[Heap_$_28[oldNext#4_$_0,Node.prev],Node.prev][perm$R]) && ((Fractions(25) == exhaleMask#_533_$_18[Heap_$_28[oldNext#4_$_0,Node.prev],Node.prev][perm$R]) ==> (0 <= exhaleMask#_533_$_18[Heap_$_28[oldNext#4_$_0,Node.prev],Node.prev][perm$N]));
	assume exhaleMask#_533_$_19 == exhaleMask#_533_$_18[Heap_$_28[oldNext#4_$_0,Node.prev],Node.prev := exhaleMask#_533_$_18[Heap_$_28[oldNext#4_$_0,Node.prev],Node.prev][perm$R := exhaleMask#_533_$_18[Heap_$_28[oldNext#4_$_0,Node.prev],Node.prev][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_533_$_19);
	assume wf(Heap_$_28,exhaleMask#_533_$_19,SecMask_$_174);
	assume wf(Heap_$_28,Mask_$_148,SecMask_$_174);
	assert { :msg "  76.13: Monitor invariant might hot hold. The permission at 10.75 might not be positive." } Fractions(25) > 0;
	assert { :msg "  76.13: Monitor invariant might hot hold. Insufficient fraction at 10.75 for mu." } (Fractions(25) <= exhaleMask#_533_$_19[Heap_$_28[oldNext#4_$_0,Node.prev],mu][perm$R]) && ((Fractions(25) == exhaleMask#_533_$_19[Heap_$_28[oldNext#4_$_0,Node.prev],mu][perm$R]) ==> (0 <= exhaleMask#_533_$_19[Heap_$_28[oldNext#4_$_0,Node.prev],mu][perm$N]));
	assume exhaleMask#_533_$_20 == exhaleMask#_533_$_19[Heap_$_28[oldNext#4_$_0,Node.prev],mu := exhaleMask#_533_$_19[Heap_$_28[oldNext#4_$_0,Node.prev],mu][perm$R := exhaleMask#_533_$_19[Heap_$_28[oldNext#4_$_0,Node.prev],mu][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_533_$_20);
	assume wf(Heap_$_28,exhaleMask#_533_$_20,SecMask_$_174);
	assume wf(Heap_$_28,Mask_$_148,SecMask_$_174);
	assume exhaleMask#_533_$_21 == exhaleMask#_533_$_20;
	goto anon378;
anon1677_Else:
	assume !$_$_condition_$231;
	assume $_$_condition_$231 <==> (!(Heap_$_28[oldNext#4_$_0,Node.prev] == null));
	assume Heap_$_28[oldNext#4_$_0,Node.prev] == null;
	assume exhaleMask#_533_$_21 == exhaleMask#_533_$_17;
	goto anon378;
anon378:
	assume IsGoodExhaleState(exhaleHeap#_532_$_0,Heap_$_28,exhaleMask#_533_$_21,SecMask_$_174);
	assume IsGoodMask(exhaleMask#_533_$_21);
	assume wf(exhaleHeap#_532_$_0,exhaleMask#_533_$_21,SecMask_$_174);
	assume held#_526_$_0 <= 0;
	assume Heap_$_29 == exhaleHeap#_532_$_0[oldNext#4_$_0,held := held#_526_$_0];
	assume LastSeen$Heap(Heap_$_29[oldNext#4_$_0,mu],held#_526_$_0) == Heap_$_28;
	assume LastSeen$Mask(Heap_$_29[oldNext#4_$_0,mu],held#_526_$_0) == Mask_$_148;
	assume LastSeen$SecMask(Heap_$_29[oldNext#4_$_0,mu],held#_526_$_0) == SecMask_$_174;
	assume LastSeen$Credits(Heap_$_29[oldNext#4_$_0,mu],held#_526_$_0) == ZeroCredits;
	assert { :msg "  76.13: SMOKE-TEST-35. (The statements after the release statement are unreachable.)" } !(1 == 1);
	assume Mask_$_149 == exhaleMask#_533_$_21;
	assume Heap_$_30 == Heap_$_29;
	assume cond#_502_$_1 <==> cond#_502_$_0;
	goto anon379;
anon1678_Then:
	assume $_$_condition_$233;
	assume $_$_condition_$233 <==> cond#_549_$_0;
	assume cond#_549_$_0;
	assert { :msg "  78.9: SMOKE-TEST-36. (The begging of the if-branch is unreachable.)" } !(1 == 1);
	assert { :msg "  79.13: The target of the release statement might be null." } !(oldPrev#2_$_0 == null);
	assert { :msg "  79.13: The target of the release statement might not be locked by the current thread." } 0 < Heap_$_30[oldPrev#2_$_0,held];
	assert { :msg "  79.13: Release might fail because the current thread might hold the read lock." } !Heap_$_30[oldPrev#2_$_0,rdheld];
	if ($_$_condition_$234) { goto anon1679_Then; } else { goto anon1679_Else; }
anon1678_Else:
	assume !$_$_condition_$233;
	assume $_$_condition_$233 <==> cond#_549_$_0;
	assume !cond#_549_$_0;
	assume Mask_$_150 == Mask_$_149;
	assume Heap_$_33 == Heap_$_30;
	assume cond#_573_$_1 <==> cond#_573;
	goto anon414;
anon1679_Then:
	assume $_$_condition_$234;
	assume $_$_condition_$234 <==> (!(Heap_$_30[oldPrev#2_$_0,Node.next] == null));
	assume !(Heap_$_30[oldPrev#2_$_0,Node.next] == null);
	assert { :msg "  79.13: Monitor invariant might hot hold. The expression at 11.31 might not evaluate to true." } !(Heap_$_30[Heap_$_30[oldPrev#2_$_0,Node.next],Node.prev] == null);
	assert { :msg "  79.13: Monitor invariant might hot hold. The expression at 11.52 might not evaluate to true." } Heap_$_30[Heap_$_30[oldPrev#2_$_0,Node.next],Node.prev] == oldPrev#2_$_0;
	goto $branchMerge_66;
anon1679_Else:
	assume !$_$_condition_$234;
	assume $_$_condition_$234 <==> (!(Heap_$_30[oldPrev#2_$_0,Node.next] == null));
	assume Heap_$_30[oldPrev#2_$_0,Node.next] == null;
	goto $branchMerge_66;
anon414:
	assume #Node.inv#trigger(this);
	assume ((0 < foldK#_600) && ((1000 * foldK#_600) < Fractions(1))) && ((1000 * foldK#_600) < methodK#_170);
	assert { :msg "  82.9: The target of the fold statement might be null." } !(this == null);
	if ($_$_condition_$263) { goto anon1696_Then; } else { goto anon1696_Else; }
anon1680_Then:
	assume $_$_condition_$235;
	assume $_$_condition_$235 <==> (!(Heap_$_30[oldPrev#2_$_0,Node.prev] == null));
	assume !(Heap_$_30[oldPrev#2_$_0,Node.prev] == null);
	assert { :msg "  79.13: Monitor invariant might hot hold. The expression at 12.31 might not evaluate to true." } !(Heap_$_30[Heap_$_30[oldPrev#2_$_0,Node.prev],Node.next] == null);
	assert { :msg "  79.13: Monitor invariant might hot hold. The expression at 12.52 might not evaluate to true." } Heap_$_30[Heap_$_30[oldPrev#2_$_0,Node.prev],Node.next] == oldPrev#2_$_0;
	goto $branchMerge_67;
anon1680_Else:
	assume !$_$_condition_$235;
	assume $_$_condition_$235 <==> (!(Heap_$_30[oldPrev#2_$_0,Node.prev] == null));
	assume Heap_$_30[oldPrev#2_$_0,Node.prev] == null;
	goto $branchMerge_67;
anon1681_Then:
	assume $_$_condition_$237;
	assume $_$_condition_$237 <==> (!(Heap_$_30[oldPrev#2_$_0,Node.next] == null));
	assume !(Heap_$_30[oldPrev#2_$_0,Node.next] == null);
	assert { :msg "  79.13: Monitor invariant might hot hold. The expression at 13.30 might not evaluate to true." } MuBelow(Heap_$_30[oldPrev#2_$_0,mu],Heap_$_30[Heap_$_30[oldPrev#2_$_0,Node.next],mu]);
	goto $branchMerge_68;
anon1681_Else:
	assume !$_$_condition_$237;
	assume $_$_condition_$237 <==> (!(Heap_$_30[oldPrev#2_$_0,Node.next] == null));
	assume Heap_$_30[oldPrev#2_$_0,Node.next] == null;
	goto $branchMerge_68;
anon1682_Then:
	assume $_$_condition_$239;
	assume $_$_condition_$239 <==> (!(Heap_$_30[oldPrev#2_$_0,Node.prev] == null));
	assume !(Heap_$_30[oldPrev#2_$_0,Node.prev] == null);
	assert { :msg "  79.13: Monitor invariant might hot hold. The expression at 14.30 might not evaluate to true." } MuBelow(Heap_$_30[Heap_$_30[oldPrev#2_$_0,Node.prev],mu],Heap_$_30[oldPrev#2_$_0,mu]);
	goto anon388;
anon1682_Else:
	assume !$_$_condition_$239;
	assume $_$_condition_$239 <==> (!(Heap_$_30[oldPrev#2_$_0,Node.prev] == null));
	assume Heap_$_30[oldPrev#2_$_0,Node.prev] == null;
	goto anon388;
anon388:
	assert { :msg "  79.13: Monitor invariant might hot hold. The permission at 6.15 might not be positive." } ((Fractions(50) - 0) > 0) || (false && ((0 - 1) > 0));
	assert { :msg "  79.13: Monitor invariant might hot hold. Insufficient permission at 6.15 for Node.prev." } ((Fractions(50) - 0) <= Mask_$_149[oldPrev#2_$_0,Node.prev][perm$R]) && (((Fractions(50) - 0) == Mask_$_149[oldPrev#2_$_0,Node.prev][perm$R]) ==> ((0 - 1) <= Mask_$_149[oldPrev#2_$_0,Node.prev][perm$N]));
	assume exhaleMask#_557_$_0 == Mask_$_149[oldPrev#2_$_0,Node.prev := Mask_$_149[oldPrev#2_$_0,Node.prev][perm$N := Mask_$_149[oldPrev#2_$_0,Node.prev][perm$N] - (0 - 1)]];
	assume exhaleMask#_557_$_1 == exhaleMask#_557_$_0[oldPrev#2_$_0,Node.prev := exhaleMask#_557_$_0[oldPrev#2_$_0,Node.prev][perm$R := exhaleMask#_557_$_0[oldPrev#2_$_0,Node.prev][perm$R] - (Fractions(50) - 0)]];
	assume wf(Heap_$_30,Mask_$_149,SecMask_$_174);
	assume IsGoodMask(exhaleMask#_557_$_1);
	assume wf(Heap_$_30,exhaleMask#_557_$_1,SecMask_$_174);
	assume wf(Heap_$_30,Mask_$_149,SecMask_$_174);
	assert { :msg "  79.13: Monitor invariant might hot hold. The permission at 6.38 might not be positive." } ((Fractions(50) - 0) > 0) || (false && ((0 - 1) > 0));
	assert { :msg "  79.13: Monitor invariant might hot hold. Insufficient permission at 6.38 for Node.next." } ((Fractions(50) - 0) <= exhaleMask#_557_$_1[oldPrev#2_$_0,Node.next][perm$R]) && (((Fractions(50) - 0) == exhaleMask#_557_$_1[oldPrev#2_$_0,Node.next][perm$R]) ==> ((0 - 1) <= exhaleMask#_557_$_1[oldPrev#2_$_0,Node.next][perm$N]));
	assume exhaleMask#_557_$_2 == exhaleMask#_557_$_1[oldPrev#2_$_0,Node.next := exhaleMask#_557_$_1[oldPrev#2_$_0,Node.next][perm$N := exhaleMask#_557_$_1[oldPrev#2_$_0,Node.next][perm$N] - (0 - 1)]];
	assume exhaleMask#_557_$_3 == exhaleMask#_557_$_2[oldPrev#2_$_0,Node.next := exhaleMask#_557_$_2[oldPrev#2_$_0,Node.next][perm$R := exhaleMask#_557_$_2[oldPrev#2_$_0,Node.next][perm$R] - (Fractions(50) - 0)]];
	assume wf(Heap_$_30,Mask_$_149,SecMask_$_174);
	assume IsGoodMask(exhaleMask#_557_$_3);
	assume wf(Heap_$_30,exhaleMask#_557_$_3,SecMask_$_174);
	assume wf(Heap_$_30,Mask_$_149,SecMask_$_174);
	assert { :msg "  79.13: Monitor invariant might hot hold. The permission at 6.61 might not be positive." } ((Fractions(50) - 0) > 0) || (false && ((0 - 1) > 0));
	assert { :msg "  79.13: Monitor invariant might hot hold. Insufficient permission at 6.61 for mu." } ((Fractions(50) - 0) <= exhaleMask#_557_$_3[oldPrev#2_$_0,mu][perm$R]) && (((Fractions(50) - 0) == exhaleMask#_557_$_3[oldPrev#2_$_0,mu][perm$R]) ==> ((0 - 1) <= exhaleMask#_557_$_3[oldPrev#2_$_0,mu][perm$N]));
	assume exhaleMask#_557_$_4 == exhaleMask#_557_$_3[oldPrev#2_$_0,mu := exhaleMask#_557_$_3[oldPrev#2_$_0,mu][perm$N := exhaleMask#_557_$_3[oldPrev#2_$_0,mu][perm$N] - (0 - 1)]];
	assume exhaleMask#_557_$_5 == exhaleMask#_557_$_4[oldPrev#2_$_0,mu := exhaleMask#_557_$_4[oldPrev#2_$_0,mu][perm$R := exhaleMask#_557_$_4[oldPrev#2_$_0,mu][perm$R] - (Fractions(50) - 0)]];
	assume wf(Heap_$_30,Mask_$_149,SecMask_$_174);
	assume IsGoodMask(exhaleMask#_557_$_5);
	assume wf(Heap_$_30,exhaleMask#_557_$_5,SecMask_$_174);
	assume wf(Heap_$_30,Mask_$_149,SecMask_$_174);
	if ($_$_condition_$241) { goto anon1683_Then; } else { goto anon1683_Else; }
anon1683_Then:
	assume $_$_condition_$241;
	assume $_$_condition_$241 <==> (Heap_$_30[oldPrev#2_$_0,Node.next] == null);
	assume Heap_$_30[oldPrev#2_$_0,Node.next] == null;
	assert { :msg "  79.13: Monitor invariant might hot hold. The permission at 7.31 might not be positive." } Fractions(25) > 0;
	assert { :msg "  79.13: Monitor invariant might hot hold. Insufficient fraction at 7.31 for Node.prev." } (Fractions(25) <= exhaleMask#_557_$_5[oldPrev#2_$_0,Node.prev][perm$R]) && ((Fractions(25) == exhaleMask#_557_$_5[oldPrev#2_$_0,Node.prev][perm$R]) ==> (0 <= exhaleMask#_557_$_5[oldPrev#2_$_0,Node.prev][perm$N]));
	assume exhaleMask#_557_$_6 == exhaleMask#_557_$_5[oldPrev#2_$_0,Node.prev := exhaleMask#_557_$_5[oldPrev#2_$_0,Node.prev][perm$R := exhaleMask#_557_$_5[oldPrev#2_$_0,Node.prev][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_557_$_6);
	assume wf(Heap_$_30,exhaleMask#_557_$_6,SecMask_$_174);
	assume wf(Heap_$_30,Mask_$_149,SecMask_$_174);
	assert { :msg "  79.13: Monitor invariant might hot hold. The permission at 7.48 might not be positive." } Fractions(25) > 0;
	assert { :msg "  79.13: Monitor invariant might hot hold. Insufficient fraction at 7.48 for Node.next." } (Fractions(25) <= exhaleMask#_557_$_6[oldPrev#2_$_0,Node.next][perm$R]) && ((Fractions(25) == exhaleMask#_557_$_6[oldPrev#2_$_0,Node.next][perm$R]) ==> (0 <= exhaleMask#_557_$_6[oldPrev#2_$_0,Node.next][perm$N]));
	assume exhaleMask#_557_$_7 == exhaleMask#_557_$_6[oldPrev#2_$_0,Node.next := exhaleMask#_557_$_6[oldPrev#2_$_0,Node.next][perm$R := exhaleMask#_557_$_6[oldPrev#2_$_0,Node.next][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_557_$_7);
	assume wf(Heap_$_30,exhaleMask#_557_$_7,SecMask_$_174);
	assume wf(Heap_$_30,Mask_$_149,SecMask_$_174);
	assert { :msg "  79.13: Monitor invariant might hot hold. The permission at 7.65 might not be positive." } Fractions(25) > 0;
	assert { :msg "  79.13: Monitor invariant might hot hold. Insufficient fraction at 7.65 for mu." } (Fractions(25) <= exhaleMask#_557_$_7[oldPrev#2_$_0,mu][perm$R]) && ((Fractions(25) == exhaleMask#_557_$_7[oldPrev#2_$_0,mu][perm$R]) ==> (0 <= exhaleMask#_557_$_7[oldPrev#2_$_0,mu][perm$N]));
	assume exhaleMask#_557_$_8 == exhaleMask#_557_$_7[oldPrev#2_$_0,mu := exhaleMask#_557_$_7[oldPrev#2_$_0,mu][perm$R := exhaleMask#_557_$_7[oldPrev#2_$_0,mu][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_557_$_8);
	assume wf(Heap_$_30,exhaleMask#_557_$_8,SecMask_$_174);
	assume wf(Heap_$_30,Mask_$_149,SecMask_$_174);
	assume exhaleMask#_557_$_9 == exhaleMask#_557_$_8;
	goto $branchMerge_69;
anon1683_Else:
	assume !$_$_condition_$241;
	assume $_$_condition_$241 <==> (Heap_$_30[oldPrev#2_$_0,Node.next] == null);
	assume !(Heap_$_30[oldPrev#2_$_0,Node.next] == null);
	assume exhaleMask#_557_$_9 == exhaleMask#_557_$_5;
	goto $branchMerge_69;
anon1684_Then:
	assume $_$_condition_$242;
	assume $_$_condition_$242 <==> (!(Heap_$_30[oldPrev#2_$_0,Node.next] == null));
	assume !(Heap_$_30[oldPrev#2_$_0,Node.next] == null);
	assert { :msg "  79.13: Monitor invariant might hot hold. The permission at 8.31 might not be positive." } Fractions(25) > 0;
	assert { :msg "  79.13: Monitor invariant might hot hold. Insufficient fraction at 8.31 for Node.next." } (Fractions(25) <= exhaleMask#_557_$_9[Heap_$_30[oldPrev#2_$_0,Node.next],Node.next][perm$R]) && ((Fractions(25) == exhaleMask#_557_$_9[Heap_$_30[oldPrev#2_$_0,Node.next],Node.next][perm$R]) ==> (0 <= exhaleMask#_557_$_9[Heap_$_30[oldPrev#2_$_0,Node.next],Node.next][perm$N]));
	assume exhaleMask#_557_$_10 == exhaleMask#_557_$_9[Heap_$_30[oldPrev#2_$_0,Node.next],Node.next := exhaleMask#_557_$_9[Heap_$_30[oldPrev#2_$_0,Node.next],Node.next][perm$R := exhaleMask#_557_$_9[Heap_$_30[oldPrev#2_$_0,Node.next],Node.next][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_557_$_10);
	assume wf(Heap_$_30,exhaleMask#_557_$_10,SecMask_$_174);
	assume wf(Heap_$_30,Mask_$_149,SecMask_$_174);
	assert { :msg "  79.13: Monitor invariant might hot hold. The permission at 8.53 might not be positive." } Fractions(25) > 0;
	assert { :msg "  79.13: Monitor invariant might hot hold. Insufficient fraction at 8.53 for Node.prev." } (Fractions(25) <= exhaleMask#_557_$_10[Heap_$_30[oldPrev#2_$_0,Node.next],Node.prev][perm$R]) && ((Fractions(25) == exhaleMask#_557_$_10[Heap_$_30[oldPrev#2_$_0,Node.next],Node.prev][perm$R]) ==> (0 <= exhaleMask#_557_$_10[Heap_$_30[oldPrev#2_$_0,Node.next],Node.prev][perm$N]));
	assume exhaleMask#_557_$_11 == exhaleMask#_557_$_10[Heap_$_30[oldPrev#2_$_0,Node.next],Node.prev := exhaleMask#_557_$_10[Heap_$_30[oldPrev#2_$_0,Node.next],Node.prev][perm$R := exhaleMask#_557_$_10[Heap_$_30[oldPrev#2_$_0,Node.next],Node.prev][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_557_$_11);
	assume wf(Heap_$_30,exhaleMask#_557_$_11,SecMask_$_174);
	assume wf(Heap_$_30,Mask_$_149,SecMask_$_174);
	assert { :msg "  79.13: Monitor invariant might hot hold. The permission at 8.75 might not be positive." } Fractions(25) > 0;
	assert { :msg "  79.13: Monitor invariant might hot hold. Insufficient fraction at 8.75 for mu." } (Fractions(25) <= exhaleMask#_557_$_11[Heap_$_30[oldPrev#2_$_0,Node.next],mu][perm$R]) && ((Fractions(25) == exhaleMask#_557_$_11[Heap_$_30[oldPrev#2_$_0,Node.next],mu][perm$R]) ==> (0 <= exhaleMask#_557_$_11[Heap_$_30[oldPrev#2_$_0,Node.next],mu][perm$N]));
	assume exhaleMask#_557_$_12 == exhaleMask#_557_$_11[Heap_$_30[oldPrev#2_$_0,Node.next],mu := exhaleMask#_557_$_11[Heap_$_30[oldPrev#2_$_0,Node.next],mu][perm$R := exhaleMask#_557_$_11[Heap_$_30[oldPrev#2_$_0,Node.next],mu][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_557_$_12);
	assume wf(Heap_$_30,exhaleMask#_557_$_12,SecMask_$_174);
	assume wf(Heap_$_30,Mask_$_149,SecMask_$_174);
	assume exhaleMask#_557_$_13 == exhaleMask#_557_$_12;
	goto $branchMerge_70;
anon1684_Else:
	assume !$_$_condition_$242;
	assume $_$_condition_$242 <==> (!(Heap_$_30[oldPrev#2_$_0,Node.next] == null));
	assume Heap_$_30[oldPrev#2_$_0,Node.next] == null;
	assume exhaleMask#_557_$_13 == exhaleMask#_557_$_9;
	goto $branchMerge_70;
anon1685_Then:
	assume $_$_condition_$244;
	assume $_$_condition_$244 <==> (Heap_$_30[oldPrev#2_$_0,Node.prev] == null);
	assume Heap_$_30[oldPrev#2_$_0,Node.prev] == null;
	assert { :msg "  79.13: Monitor invariant might hot hold. The permission at 9.31 might not be positive." } Fractions(25) > 0;
	assert { :msg "  79.13: Monitor invariant might hot hold. Insufficient fraction at 9.31 for Node.prev." } (Fractions(25) <= exhaleMask#_557_$_13[oldPrev#2_$_0,Node.prev][perm$R]) && ((Fractions(25) == exhaleMask#_557_$_13[oldPrev#2_$_0,Node.prev][perm$R]) ==> (0 <= exhaleMask#_557_$_13[oldPrev#2_$_0,Node.prev][perm$N]));
	assume exhaleMask#_557_$_14 == exhaleMask#_557_$_13[oldPrev#2_$_0,Node.prev := exhaleMask#_557_$_13[oldPrev#2_$_0,Node.prev][perm$R := exhaleMask#_557_$_13[oldPrev#2_$_0,Node.prev][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_557_$_14);
	assume wf(Heap_$_30,exhaleMask#_557_$_14,SecMask_$_174);
	assume wf(Heap_$_30,Mask_$_149,SecMask_$_174);
	assert { :msg "  79.13: Monitor invariant might hot hold. The permission at 9.48 might not be positive." } Fractions(25) > 0;
	assert { :msg "  79.13: Monitor invariant might hot hold. Insufficient fraction at 9.48 for Node.next." } (Fractions(25) <= exhaleMask#_557_$_14[oldPrev#2_$_0,Node.next][perm$R]) && ((Fractions(25) == exhaleMask#_557_$_14[oldPrev#2_$_0,Node.next][perm$R]) ==> (0 <= exhaleMask#_557_$_14[oldPrev#2_$_0,Node.next][perm$N]));
	assume exhaleMask#_557_$_15 == exhaleMask#_557_$_14[oldPrev#2_$_0,Node.next := exhaleMask#_557_$_14[oldPrev#2_$_0,Node.next][perm$R := exhaleMask#_557_$_14[oldPrev#2_$_0,Node.next][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_557_$_15);
	assume wf(Heap_$_30,exhaleMask#_557_$_15,SecMask_$_174);
	assume wf(Heap_$_30,Mask_$_149,SecMask_$_174);
	assert { :msg "  79.13: Monitor invariant might hot hold. The permission at 9.65 might not be positive." } Fractions(25) > 0;
	assert { :msg "  79.13: Monitor invariant might hot hold. Insufficient fraction at 9.65 for mu." } (Fractions(25) <= exhaleMask#_557_$_15[oldPrev#2_$_0,mu][perm$R]) && ((Fractions(25) == exhaleMask#_557_$_15[oldPrev#2_$_0,mu][perm$R]) ==> (0 <= exhaleMask#_557_$_15[oldPrev#2_$_0,mu][perm$N]));
	assume exhaleMask#_557_$_16 == exhaleMask#_557_$_15[oldPrev#2_$_0,mu := exhaleMask#_557_$_15[oldPrev#2_$_0,mu][perm$R := exhaleMask#_557_$_15[oldPrev#2_$_0,mu][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_557_$_16);
	assume wf(Heap_$_30,exhaleMask#_557_$_16,SecMask_$_174);
	assume wf(Heap_$_30,Mask_$_149,SecMask_$_174);
	assume exhaleMask#_557_$_17 == exhaleMask#_557_$_16;
	goto $branchMerge_71;
anon1685_Else:
	assume !$_$_condition_$244;
	assume $_$_condition_$244 <==> (Heap_$_30[oldPrev#2_$_0,Node.prev] == null);
	assume !(Heap_$_30[oldPrev#2_$_0,Node.prev] == null);
	assume exhaleMask#_557_$_17 == exhaleMask#_557_$_13;
	goto $branchMerge_71;
anon1686_Then:
	assume $_$_condition_$246;
	assume $_$_condition_$246 <==> (!(Heap_$_30[oldPrev#2_$_0,Node.prev] == null));
	assume !(Heap_$_30[oldPrev#2_$_0,Node.prev] == null);
	assert { :msg "  79.13: Monitor invariant might hot hold. The permission at 10.31 might not be positive." } Fractions(25) > 0;
	assert { :msg "  79.13: Monitor invariant might hot hold. Insufficient fraction at 10.31 for Node.next." } (Fractions(25) <= exhaleMask#_557_$_17[Heap_$_30[oldPrev#2_$_0,Node.prev],Node.next][perm$R]) && ((Fractions(25) == exhaleMask#_557_$_17[Heap_$_30[oldPrev#2_$_0,Node.prev],Node.next][perm$R]) ==> (0 <= exhaleMask#_557_$_17[Heap_$_30[oldPrev#2_$_0,Node.prev],Node.next][perm$N]));
	assume exhaleMask#_557_$_18 == exhaleMask#_557_$_17[Heap_$_30[oldPrev#2_$_0,Node.prev],Node.next := exhaleMask#_557_$_17[Heap_$_30[oldPrev#2_$_0,Node.prev],Node.next][perm$R := exhaleMask#_557_$_17[Heap_$_30[oldPrev#2_$_0,Node.prev],Node.next][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_557_$_18);
	assume wf(Heap_$_30,exhaleMask#_557_$_18,SecMask_$_174);
	assume wf(Heap_$_30,Mask_$_149,SecMask_$_174);
	assert { :msg "  79.13: Monitor invariant might hot hold. The permission at 10.53 might not be positive." } Fractions(25) > 0;
	assert { :msg "  79.13: Monitor invariant might hot hold. Insufficient fraction at 10.53 for Node.prev." } (Fractions(25) <= exhaleMask#_557_$_18[Heap_$_30[oldPrev#2_$_0,Node.prev],Node.prev][perm$R]) && ((Fractions(25) == exhaleMask#_557_$_18[Heap_$_30[oldPrev#2_$_0,Node.prev],Node.prev][perm$R]) ==> (0 <= exhaleMask#_557_$_18[Heap_$_30[oldPrev#2_$_0,Node.prev],Node.prev][perm$N]));
	assume exhaleMask#_557_$_19 == exhaleMask#_557_$_18[Heap_$_30[oldPrev#2_$_0,Node.prev],Node.prev := exhaleMask#_557_$_18[Heap_$_30[oldPrev#2_$_0,Node.prev],Node.prev][perm$R := exhaleMask#_557_$_18[Heap_$_30[oldPrev#2_$_0,Node.prev],Node.prev][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_557_$_19);
	assume wf(Heap_$_30,exhaleMask#_557_$_19,SecMask_$_174);
	assume wf(Heap_$_30,Mask_$_149,SecMask_$_174);
	assert { :msg "  79.13: Monitor invariant might hot hold. The permission at 10.75 might not be positive." } Fractions(25) > 0;
	assert { :msg "  79.13: Monitor invariant might hot hold. Insufficient fraction at 10.75 for mu." } (Fractions(25) <= exhaleMask#_557_$_19[Heap_$_30[oldPrev#2_$_0,Node.prev],mu][perm$R]) && ((Fractions(25) == exhaleMask#_557_$_19[Heap_$_30[oldPrev#2_$_0,Node.prev],mu][perm$R]) ==> (0 <= exhaleMask#_557_$_19[Heap_$_30[oldPrev#2_$_0,Node.prev],mu][perm$N]));
	assume exhaleMask#_557_$_20 == exhaleMask#_557_$_19[Heap_$_30[oldPrev#2_$_0,Node.prev],mu := exhaleMask#_557_$_19[Heap_$_30[oldPrev#2_$_0,Node.prev],mu][perm$R := exhaleMask#_557_$_19[Heap_$_30[oldPrev#2_$_0,Node.prev],mu][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_557_$_20);
	assume wf(Heap_$_30,exhaleMask#_557_$_20,SecMask_$_174);
	assume wf(Heap_$_30,Mask_$_149,SecMask_$_174);
	assume exhaleMask#_557_$_21 == exhaleMask#_557_$_20;
	goto anon396;
anon1686_Else:
	assume !$_$_condition_$246;
	assume $_$_condition_$246 <==> (!(Heap_$_30[oldPrev#2_$_0,Node.prev] == null));
	assume Heap_$_30[oldPrev#2_$_0,Node.prev] == null;
	assume exhaleMask#_557_$_21 == exhaleMask#_557_$_17;
	goto anon396;
anon396:
	assume IsGoodExhaleState(exhaleHeap#_556_$_0,Heap_$_30,exhaleMask#_557_$_21,SecMask_$_174);
	assume IsGoodMask(exhaleMask#_557_$_21);
	assume wf(exhaleHeap#_556_$_0,exhaleMask#_557_$_21,SecMask_$_174);
	assume held#_550_$_0 <= 0;
	assume Heap_$_31 == exhaleHeap#_556_$_0[oldPrev#2_$_0,held := held#_550_$_0];
	assume LastSeen$Heap(Heap_$_31[oldPrev#2_$_0,mu],held#_550_$_0) == Heap_$_30;
	assume LastSeen$Mask(Heap_$_31[oldPrev#2_$_0,mu],held#_550_$_0) == Mask_$_149;
	assume LastSeen$SecMask(Heap_$_31[oldPrev#2_$_0,mu],held#_550_$_0) == SecMask_$_174;
	assume LastSeen$Credits(Heap_$_31[oldPrev#2_$_0,mu],held#_550_$_0) == ZeroCredits;
	assert { :msg "  79.13: SMOKE-TEST-37. (The statements after the release statement are unreachable.)" } !(1 == 1);
	assume cond#_573_$_0 <==> (!(Heap_$_31[oldPrev#2_$_0,Node.prev] == null));
	assert { :msg "  80.16: Receiver might be null." } true ==> (!(oldPrev#2_$_0 == null));
	assert { :msg "  80.16: Location might not be readable." } true ==> CanRead(exhaleMask#_557_$_21,SecMask_$_174,oldPrev#2_$_0,Node.prev);
	if ($_$_condition_$248) { goto anon1687_Then; } else { goto anon1687_Else; }
anon1687_Then:
	assume $_$_condition_$248;
	assume $_$_condition_$248 <==> cond#_573_$_0;
	assume cond#_573_$_0;
	assert { :msg "  80.13: SMOKE-TEST-38. (The begging of the if-branch is unreachable.)" } !(1 == 1);
	assert { :msg "  80.48: Receiver might be null." } true ==> (!(oldPrev#2_$_0 == null));
	assert { :msg "  80.48: Location might not be readable." } true ==> CanRead(exhaleMask#_557_$_21,SecMask_$_174,oldPrev#2_$_0,Node.prev);
	assert { :msg "  80.40: The target of the release statement might be null." } !(Heap_$_31[oldPrev#2_$_0,Node.prev] == null);
	assert { :msg "  80.40: The target of the release statement might not be locked by the current thread." } 0 < Heap_$_31[Heap_$_31[oldPrev#2_$_0,Node.prev],held];
	assert { :msg "  80.40: Release might fail because the current thread might hold the read lock." } !Heap_$_31[Heap_$_31[oldPrev#2_$_0,Node.prev],rdheld];
	assume sh#14_$_0 == Heap_$_31[oldPrev#2_$_0,Node.prev];
	if ($_$_condition_$249) { goto anon1688_Then; } else { goto anon1688_Else; }
anon1687_Else:
	assume !$_$_condition_$248;
	assume $_$_condition_$248 <==> cond#_573_$_0;
	assume !cond#_573_$_0;
	assume Mask_$_150 == exhaleMask#_557_$_21;
	assume Heap_$_33 == Heap_$_31;
	assume cond#_573_$_1 <==> cond#_573_$_0;
	goto anon414;
anon1688_Then:
	assume $_$_condition_$249;
	assume $_$_condition_$249 <==> (!(Heap_$_31[sh#14_$_0,Node.next] == null));
	assume !(Heap_$_31[sh#14_$_0,Node.next] == null);
	assert { :msg "  80.40: Monitor invariant might hot hold. The expression at 11.31 might not evaluate to true." } !(Heap_$_31[Heap_$_31[sh#14_$_0,Node.next],Node.prev] == null);
	assert { :msg "  80.40: Monitor invariant might hot hold. The expression at 11.52 might not evaluate to true." } Heap_$_31[Heap_$_31[sh#14_$_0,Node.next],Node.prev] == sh#14_$_0;
	goto $branchMerge_72;
anon1688_Else:
	assume !$_$_condition_$249;
	assume $_$_condition_$249 <==> (!(Heap_$_31[sh#14_$_0,Node.next] == null));
	assume Heap_$_31[sh#14_$_0,Node.next] == null;
	goto $branchMerge_72;
anon1689_Then:
	assume $_$_condition_$250;
	assume $_$_condition_$250 <==> (!(Heap_$_31[sh#14_$_0,Node.prev] == null));
	assume !(Heap_$_31[sh#14_$_0,Node.prev] == null);
	assert { :msg "  80.40: Monitor invariant might hot hold. The expression at 12.31 might not evaluate to true." } !(Heap_$_31[Heap_$_31[sh#14_$_0,Node.prev],Node.next] == null);
	assert { :msg "  80.40: Monitor invariant might hot hold. The expression at 12.52 might not evaluate to true." } Heap_$_31[Heap_$_31[sh#14_$_0,Node.prev],Node.next] == sh#14_$_0;
	goto $branchMerge_73;
anon1689_Else:
	assume !$_$_condition_$250;
	assume $_$_condition_$250 <==> (!(Heap_$_31[sh#14_$_0,Node.prev] == null));
	assume Heap_$_31[sh#14_$_0,Node.prev] == null;
	goto $branchMerge_73;
anon1690_Then:
	assume $_$_condition_$252;
	assume $_$_condition_$252 <==> (!(Heap_$_31[sh#14_$_0,Node.next] == null));
	assume !(Heap_$_31[sh#14_$_0,Node.next] == null);
	assert { :msg "  80.40: Monitor invariant might hot hold. The expression at 13.30 might not evaluate to true." } MuBelow(Heap_$_31[sh#14_$_0,mu],Heap_$_31[Heap_$_31[sh#14_$_0,Node.next],mu]);
	goto $branchMerge_74;
anon1690_Else:
	assume !$_$_condition_$252;
	assume $_$_condition_$252 <==> (!(Heap_$_31[sh#14_$_0,Node.next] == null));
	assume Heap_$_31[sh#14_$_0,Node.next] == null;
	goto $branchMerge_74;
anon1691_Then:
	assume $_$_condition_$254;
	assume $_$_condition_$254 <==> (!(Heap_$_31[sh#14_$_0,Node.prev] == null));
	assume !(Heap_$_31[sh#14_$_0,Node.prev] == null);
	assert { :msg "  80.40: Monitor invariant might hot hold. The expression at 14.30 might not evaluate to true." } MuBelow(Heap_$_31[Heap_$_31[sh#14_$_0,Node.prev],mu],Heap_$_31[sh#14_$_0,mu]);
	goto anon405;
anon1691_Else:
	assume !$_$_condition_$254;
	assume $_$_condition_$254 <==> (!(Heap_$_31[sh#14_$_0,Node.prev] == null));
	assume Heap_$_31[sh#14_$_0,Node.prev] == null;
	goto anon405;
anon405:
	assert { :msg "  80.40: Monitor invariant might hot hold. The permission at 6.15 might not be positive." } ((Fractions(50) - 0) > 0) || (false && ((0 - 1) > 0));
	assert { :msg "  80.40: Monitor invariant might hot hold. Insufficient permission at 6.15 for Node.prev." } ((Fractions(50) - 0) <= exhaleMask#_557_$_21[sh#14_$_0,Node.prev][perm$R]) && (((Fractions(50) - 0) == exhaleMask#_557_$_21[sh#14_$_0,Node.prev][perm$R]) ==> ((0 - 1) <= exhaleMask#_557_$_21[sh#14_$_0,Node.prev][perm$N]));
	assume exhaleMask#_581_$_0 == exhaleMask#_557_$_21[sh#14_$_0,Node.prev := exhaleMask#_557_$_21[sh#14_$_0,Node.prev][perm$N := exhaleMask#_557_$_21[sh#14_$_0,Node.prev][perm$N] - (0 - 1)]];
	assume exhaleMask#_581_$_1 == exhaleMask#_581_$_0[sh#14_$_0,Node.prev := exhaleMask#_581_$_0[sh#14_$_0,Node.prev][perm$R := exhaleMask#_581_$_0[sh#14_$_0,Node.prev][perm$R] - (Fractions(50) - 0)]];
	assume wf(Heap_$_31,exhaleMask#_557_$_21,SecMask_$_174);
	assume IsGoodMask(exhaleMask#_581_$_1);
	assume wf(Heap_$_31,exhaleMask#_581_$_1,SecMask_$_174);
	assume wf(Heap_$_31,exhaleMask#_557_$_21,SecMask_$_174);
	assert { :msg "  80.40: Monitor invariant might hot hold. The permission at 6.38 might not be positive." } ((Fractions(50) - 0) > 0) || (false && ((0 - 1) > 0));
	assert { :msg "  80.40: Monitor invariant might hot hold. Insufficient permission at 6.38 for Node.next." } ((Fractions(50) - 0) <= exhaleMask#_581_$_1[sh#14_$_0,Node.next][perm$R]) && (((Fractions(50) - 0) == exhaleMask#_581_$_1[sh#14_$_0,Node.next][perm$R]) ==> ((0 - 1) <= exhaleMask#_581_$_1[sh#14_$_0,Node.next][perm$N]));
	assume exhaleMask#_581_$_2 == exhaleMask#_581_$_1[sh#14_$_0,Node.next := exhaleMask#_581_$_1[sh#14_$_0,Node.next][perm$N := exhaleMask#_581_$_1[sh#14_$_0,Node.next][perm$N] - (0 - 1)]];
	assume exhaleMask#_581_$_3 == exhaleMask#_581_$_2[sh#14_$_0,Node.next := exhaleMask#_581_$_2[sh#14_$_0,Node.next][perm$R := exhaleMask#_581_$_2[sh#14_$_0,Node.next][perm$R] - (Fractions(50) - 0)]];
	assume wf(Heap_$_31,exhaleMask#_557_$_21,SecMask_$_174);
	assume IsGoodMask(exhaleMask#_581_$_3);
	assume wf(Heap_$_31,exhaleMask#_581_$_3,SecMask_$_174);
	assume wf(Heap_$_31,exhaleMask#_557_$_21,SecMask_$_174);
	assert { :msg "  80.40: Monitor invariant might hot hold. The permission at 6.61 might not be positive." } ((Fractions(50) - 0) > 0) || (false && ((0 - 1) > 0));
	assert { :msg "  80.40: Monitor invariant might hot hold. Insufficient permission at 6.61 for mu." } ((Fractions(50) - 0) <= exhaleMask#_581_$_3[sh#14_$_0,mu][perm$R]) && (((Fractions(50) - 0) == exhaleMask#_581_$_3[sh#14_$_0,mu][perm$R]) ==> ((0 - 1) <= exhaleMask#_581_$_3[sh#14_$_0,mu][perm$N]));
	assume exhaleMask#_581_$_4 == exhaleMask#_581_$_3[sh#14_$_0,mu := exhaleMask#_581_$_3[sh#14_$_0,mu][perm$N := exhaleMask#_581_$_3[sh#14_$_0,mu][perm$N] - (0 - 1)]];
	assume exhaleMask#_581_$_5 == exhaleMask#_581_$_4[sh#14_$_0,mu := exhaleMask#_581_$_4[sh#14_$_0,mu][perm$R := exhaleMask#_581_$_4[sh#14_$_0,mu][perm$R] - (Fractions(50) - 0)]];
	assume wf(Heap_$_31,exhaleMask#_557_$_21,SecMask_$_174);
	assume IsGoodMask(exhaleMask#_581_$_5);
	assume wf(Heap_$_31,exhaleMask#_581_$_5,SecMask_$_174);
	assume wf(Heap_$_31,exhaleMask#_557_$_21,SecMask_$_174);
	if ($_$_condition_$256) { goto anon1692_Then; } else { goto anon1692_Else; }
anon1692_Then:
	assume $_$_condition_$256;
	assume $_$_condition_$256 <==> (Heap_$_31[sh#14_$_0,Node.next] == null);
	assume Heap_$_31[sh#14_$_0,Node.next] == null;
	assert { :msg "  80.40: Monitor invariant might hot hold. The permission at 7.31 might not be positive." } Fractions(25) > 0;
	assert { :msg "  80.40: Monitor invariant might hot hold. Insufficient fraction at 7.31 for Node.prev." } (Fractions(25) <= exhaleMask#_581_$_5[sh#14_$_0,Node.prev][perm$R]) && ((Fractions(25) == exhaleMask#_581_$_5[sh#14_$_0,Node.prev][perm$R]) ==> (0 <= exhaleMask#_581_$_5[sh#14_$_0,Node.prev][perm$N]));
	assume exhaleMask#_581_$_6 == exhaleMask#_581_$_5[sh#14_$_0,Node.prev := exhaleMask#_581_$_5[sh#14_$_0,Node.prev][perm$R := exhaleMask#_581_$_5[sh#14_$_0,Node.prev][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_581_$_6);
	assume wf(Heap_$_31,exhaleMask#_581_$_6,SecMask_$_174);
	assume wf(Heap_$_31,exhaleMask#_557_$_21,SecMask_$_174);
	assert { :msg "  80.40: Monitor invariant might hot hold. The permission at 7.48 might not be positive." } Fractions(25) > 0;
	assert { :msg "  80.40: Monitor invariant might hot hold. Insufficient fraction at 7.48 for Node.next." } (Fractions(25) <= exhaleMask#_581_$_6[sh#14_$_0,Node.next][perm$R]) && ((Fractions(25) == exhaleMask#_581_$_6[sh#14_$_0,Node.next][perm$R]) ==> (0 <= exhaleMask#_581_$_6[sh#14_$_0,Node.next][perm$N]));
	assume exhaleMask#_581_$_7 == exhaleMask#_581_$_6[sh#14_$_0,Node.next := exhaleMask#_581_$_6[sh#14_$_0,Node.next][perm$R := exhaleMask#_581_$_6[sh#14_$_0,Node.next][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_581_$_7);
	assume wf(Heap_$_31,exhaleMask#_581_$_7,SecMask_$_174);
	assume wf(Heap_$_31,exhaleMask#_557_$_21,SecMask_$_174);
	assert { :msg "  80.40: Monitor invariant might hot hold. The permission at 7.65 might not be positive." } Fractions(25) > 0;
	assert { :msg "  80.40: Monitor invariant might hot hold. Insufficient fraction at 7.65 for mu." } (Fractions(25) <= exhaleMask#_581_$_7[sh#14_$_0,mu][perm$R]) && ((Fractions(25) == exhaleMask#_581_$_7[sh#14_$_0,mu][perm$R]) ==> (0 <= exhaleMask#_581_$_7[sh#14_$_0,mu][perm$N]));
	assume exhaleMask#_581_$_8 == exhaleMask#_581_$_7[sh#14_$_0,mu := exhaleMask#_581_$_7[sh#14_$_0,mu][perm$R := exhaleMask#_581_$_7[sh#14_$_0,mu][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_581_$_8);
	assume wf(Heap_$_31,exhaleMask#_581_$_8,SecMask_$_174);
	assume wf(Heap_$_31,exhaleMask#_557_$_21,SecMask_$_174);
	assume exhaleMask#_581_$_9 == exhaleMask#_581_$_8;
	goto $branchMerge_75;
anon1692_Else:
	assume !$_$_condition_$256;
	assume $_$_condition_$256 <==> (Heap_$_31[sh#14_$_0,Node.next] == null);
	assume !(Heap_$_31[sh#14_$_0,Node.next] == null);
	assume exhaleMask#_581_$_9 == exhaleMask#_581_$_5;
	goto $branchMerge_75;
anon1693_Then:
	assume $_$_condition_$257;
	assume $_$_condition_$257 <==> (!(Heap_$_31[sh#14_$_0,Node.next] == null));
	assume !(Heap_$_31[sh#14_$_0,Node.next] == null);
	assert { :msg "  80.40: Monitor invariant might hot hold. The permission at 8.31 might not be positive." } Fractions(25) > 0;
	assert { :msg "  80.40: Monitor invariant might hot hold. Insufficient fraction at 8.31 for Node.next." } (Fractions(25) <= exhaleMask#_581_$_9[Heap_$_31[sh#14_$_0,Node.next],Node.next][perm$R]) && ((Fractions(25) == exhaleMask#_581_$_9[Heap_$_31[sh#14_$_0,Node.next],Node.next][perm$R]) ==> (0 <= exhaleMask#_581_$_9[Heap_$_31[sh#14_$_0,Node.next],Node.next][perm$N]));
	assume exhaleMask#_581_$_10 == exhaleMask#_581_$_9[Heap_$_31[sh#14_$_0,Node.next],Node.next := exhaleMask#_581_$_9[Heap_$_31[sh#14_$_0,Node.next],Node.next][perm$R := exhaleMask#_581_$_9[Heap_$_31[sh#14_$_0,Node.next],Node.next][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_581_$_10);
	assume wf(Heap_$_31,exhaleMask#_581_$_10,SecMask_$_174);
	assume wf(Heap_$_31,exhaleMask#_557_$_21,SecMask_$_174);
	assert { :msg "  80.40: Monitor invariant might hot hold. The permission at 8.53 might not be positive." } Fractions(25) > 0;
	assert { :msg "  80.40: Monitor invariant might hot hold. Insufficient fraction at 8.53 for Node.prev." } (Fractions(25) <= exhaleMask#_581_$_10[Heap_$_31[sh#14_$_0,Node.next],Node.prev][perm$R]) && ((Fractions(25) == exhaleMask#_581_$_10[Heap_$_31[sh#14_$_0,Node.next],Node.prev][perm$R]) ==> (0 <= exhaleMask#_581_$_10[Heap_$_31[sh#14_$_0,Node.next],Node.prev][perm$N]));
	assume exhaleMask#_581_$_11 == exhaleMask#_581_$_10[Heap_$_31[sh#14_$_0,Node.next],Node.prev := exhaleMask#_581_$_10[Heap_$_31[sh#14_$_0,Node.next],Node.prev][perm$R := exhaleMask#_581_$_10[Heap_$_31[sh#14_$_0,Node.next],Node.prev][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_581_$_11);
	assume wf(Heap_$_31,exhaleMask#_581_$_11,SecMask_$_174);
	assume wf(Heap_$_31,exhaleMask#_557_$_21,SecMask_$_174);
	assert { :msg "  80.40: Monitor invariant might hot hold. The permission at 8.75 might not be positive." } Fractions(25) > 0;
	assert { :msg "  80.40: Monitor invariant might hot hold. Insufficient fraction at 8.75 for mu." } (Fractions(25) <= exhaleMask#_581_$_11[Heap_$_31[sh#14_$_0,Node.next],mu][perm$R]) && ((Fractions(25) == exhaleMask#_581_$_11[Heap_$_31[sh#14_$_0,Node.next],mu][perm$R]) ==> (0 <= exhaleMask#_581_$_11[Heap_$_31[sh#14_$_0,Node.next],mu][perm$N]));
	assume exhaleMask#_581_$_12 == exhaleMask#_581_$_11[Heap_$_31[sh#14_$_0,Node.next],mu := exhaleMask#_581_$_11[Heap_$_31[sh#14_$_0,Node.next],mu][perm$R := exhaleMask#_581_$_11[Heap_$_31[sh#14_$_0,Node.next],mu][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_581_$_12);
	assume wf(Heap_$_31,exhaleMask#_581_$_12,SecMask_$_174);
	assume wf(Heap_$_31,exhaleMask#_557_$_21,SecMask_$_174);
	assume exhaleMask#_581_$_13 == exhaleMask#_581_$_12;
	goto $branchMerge_76;
anon1693_Else:
	assume !$_$_condition_$257;
	assume $_$_condition_$257 <==> (!(Heap_$_31[sh#14_$_0,Node.next] == null));
	assume Heap_$_31[sh#14_$_0,Node.next] == null;
	assume exhaleMask#_581_$_13 == exhaleMask#_581_$_9;
	goto $branchMerge_76;
anon1694_Then:
	assume $_$_condition_$259;
	assume $_$_condition_$259 <==> (Heap_$_31[sh#14_$_0,Node.prev] == null);
	assume Heap_$_31[sh#14_$_0,Node.prev] == null;
	assert { :msg "  80.40: Monitor invariant might hot hold. The permission at 9.31 might not be positive." } Fractions(25) > 0;
	assert { :msg "  80.40: Monitor invariant might hot hold. Insufficient fraction at 9.31 for Node.prev." } (Fractions(25) <= exhaleMask#_581_$_13[sh#14_$_0,Node.prev][perm$R]) && ((Fractions(25) == exhaleMask#_581_$_13[sh#14_$_0,Node.prev][perm$R]) ==> (0 <= exhaleMask#_581_$_13[sh#14_$_0,Node.prev][perm$N]));
	assume exhaleMask#_581_$_14 == exhaleMask#_581_$_13[sh#14_$_0,Node.prev := exhaleMask#_581_$_13[sh#14_$_0,Node.prev][perm$R := exhaleMask#_581_$_13[sh#14_$_0,Node.prev][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_581_$_14);
	assume wf(Heap_$_31,exhaleMask#_581_$_14,SecMask_$_174);
	assume wf(Heap_$_31,exhaleMask#_557_$_21,SecMask_$_174);
	assert { :msg "  80.40: Monitor invariant might hot hold. The permission at 9.48 might not be positive." } Fractions(25) > 0;
	assert { :msg "  80.40: Monitor invariant might hot hold. Insufficient fraction at 9.48 for Node.next." } (Fractions(25) <= exhaleMask#_581_$_14[sh#14_$_0,Node.next][perm$R]) && ((Fractions(25) == exhaleMask#_581_$_14[sh#14_$_0,Node.next][perm$R]) ==> (0 <= exhaleMask#_581_$_14[sh#14_$_0,Node.next][perm$N]));
	assume exhaleMask#_581_$_15 == exhaleMask#_581_$_14[sh#14_$_0,Node.next := exhaleMask#_581_$_14[sh#14_$_0,Node.next][perm$R := exhaleMask#_581_$_14[sh#14_$_0,Node.next][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_581_$_15);
	assume wf(Heap_$_31,exhaleMask#_581_$_15,SecMask_$_174);
	assume wf(Heap_$_31,exhaleMask#_557_$_21,SecMask_$_174);
	assert { :msg "  80.40: Monitor invariant might hot hold. The permission at 9.65 might not be positive." } Fractions(25) > 0;
	assert { :msg "  80.40: Monitor invariant might hot hold. Insufficient fraction at 9.65 for mu." } (Fractions(25) <= exhaleMask#_581_$_15[sh#14_$_0,mu][perm$R]) && ((Fractions(25) == exhaleMask#_581_$_15[sh#14_$_0,mu][perm$R]) ==> (0 <= exhaleMask#_581_$_15[sh#14_$_0,mu][perm$N]));
	assume exhaleMask#_581_$_16 == exhaleMask#_581_$_15[sh#14_$_0,mu := exhaleMask#_581_$_15[sh#14_$_0,mu][perm$R := exhaleMask#_581_$_15[sh#14_$_0,mu][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_581_$_16);
	assume wf(Heap_$_31,exhaleMask#_581_$_16,SecMask_$_174);
	assume wf(Heap_$_31,exhaleMask#_557_$_21,SecMask_$_174);
	assume exhaleMask#_581_$_17 == exhaleMask#_581_$_16;
	goto $branchMerge_77;
anon1694_Else:
	assume !$_$_condition_$259;
	assume $_$_condition_$259 <==> (Heap_$_31[sh#14_$_0,Node.prev] == null);
	assume !(Heap_$_31[sh#14_$_0,Node.prev] == null);
	assume exhaleMask#_581_$_17 == exhaleMask#_581_$_13;
	goto $branchMerge_77;
anon1695_Then:
	assume $_$_condition_$261;
	assume $_$_condition_$261 <==> (!(Heap_$_31[sh#14_$_0,Node.prev] == null));
	assume !(Heap_$_31[sh#14_$_0,Node.prev] == null);
	assert { :msg "  80.40: Monitor invariant might hot hold. The permission at 10.31 might not be positive." } Fractions(25) > 0;
	assert { :msg "  80.40: Monitor invariant might hot hold. Insufficient fraction at 10.31 for Node.next." } (Fractions(25) <= exhaleMask#_581_$_17[Heap_$_31[sh#14_$_0,Node.prev],Node.next][perm$R]) && ((Fractions(25) == exhaleMask#_581_$_17[Heap_$_31[sh#14_$_0,Node.prev],Node.next][perm$R]) ==> (0 <= exhaleMask#_581_$_17[Heap_$_31[sh#14_$_0,Node.prev],Node.next][perm$N]));
	assume exhaleMask#_581_$_18 == exhaleMask#_581_$_17[Heap_$_31[sh#14_$_0,Node.prev],Node.next := exhaleMask#_581_$_17[Heap_$_31[sh#14_$_0,Node.prev],Node.next][perm$R := exhaleMask#_581_$_17[Heap_$_31[sh#14_$_0,Node.prev],Node.next][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_581_$_18);
	assume wf(Heap_$_31,exhaleMask#_581_$_18,SecMask_$_174);
	assume wf(Heap_$_31,exhaleMask#_557_$_21,SecMask_$_174);
	assert { :msg "  80.40: Monitor invariant might hot hold. The permission at 10.53 might not be positive." } Fractions(25) > 0;
	assert { :msg "  80.40: Monitor invariant might hot hold. Insufficient fraction at 10.53 for Node.prev." } (Fractions(25) <= exhaleMask#_581_$_18[Heap_$_31[sh#14_$_0,Node.prev],Node.prev][perm$R]) && ((Fractions(25) == exhaleMask#_581_$_18[Heap_$_31[sh#14_$_0,Node.prev],Node.prev][perm$R]) ==> (0 <= exhaleMask#_581_$_18[Heap_$_31[sh#14_$_0,Node.prev],Node.prev][perm$N]));
	assume exhaleMask#_581_$_19 == exhaleMask#_581_$_18[Heap_$_31[sh#14_$_0,Node.prev],Node.prev := exhaleMask#_581_$_18[Heap_$_31[sh#14_$_0,Node.prev],Node.prev][perm$R := exhaleMask#_581_$_18[Heap_$_31[sh#14_$_0,Node.prev],Node.prev][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_581_$_19);
	assume wf(Heap_$_31,exhaleMask#_581_$_19,SecMask_$_174);
	assume wf(Heap_$_31,exhaleMask#_557_$_21,SecMask_$_174);
	assert { :msg "  80.40: Monitor invariant might hot hold. The permission at 10.75 might not be positive." } Fractions(25) > 0;
	assert { :msg "  80.40: Monitor invariant might hot hold. Insufficient fraction at 10.75 for mu." } (Fractions(25) <= exhaleMask#_581_$_19[Heap_$_31[sh#14_$_0,Node.prev],mu][perm$R]) && ((Fractions(25) == exhaleMask#_581_$_19[Heap_$_31[sh#14_$_0,Node.prev],mu][perm$R]) ==> (0 <= exhaleMask#_581_$_19[Heap_$_31[sh#14_$_0,Node.prev],mu][perm$N]));
	assume exhaleMask#_581_$_20 == exhaleMask#_581_$_19[Heap_$_31[sh#14_$_0,Node.prev],mu := exhaleMask#_581_$_19[Heap_$_31[sh#14_$_0,Node.prev],mu][perm$R := exhaleMask#_581_$_19[Heap_$_31[sh#14_$_0,Node.prev],mu][perm$R] - Fractions(25)]];
	assume IsGoodMask(exhaleMask#_581_$_20);
	assume wf(Heap_$_31,exhaleMask#_581_$_20,SecMask_$_174);
	assume wf(Heap_$_31,exhaleMask#_557_$_21,SecMask_$_174);
	assume exhaleMask#_581_$_21 == exhaleMask#_581_$_20;
	goto anon413;
anon1695_Else:
	assume !$_$_condition_$261;
	assume $_$_condition_$261 <==> (!(Heap_$_31[sh#14_$_0,Node.prev] == null));
	assume Heap_$_31[sh#14_$_0,Node.prev] == null;
	assume exhaleMask#_581_$_21 == exhaleMask#_581_$_17;
	goto anon413;
anon413:
	assume IsGoodExhaleState(exhaleHeap#_580_$_0,Heap_$_31,exhaleMask#_581_$_21,SecMask_$_174);
	assume IsGoodMask(exhaleMask#_581_$_21);
	assume wf(exhaleHeap#_580_$_0,exhaleMask#_581_$_21,SecMask_$_174);
	assume held#_574_$_0 <= 0;
	assume Heap_$_32 == exhaleHeap#_580_$_0[exhaleHeap#_580_$_0[oldPrev#2_$_0,Node.prev],held := held#_574_$_0];
	assume LastSeen$Heap(Heap_$_32[Heap_$_32[oldPrev#2_$_0,Node.prev],mu],held#_574_$_0) == Heap_$_31;
	assume LastSeen$Mask(Heap_$_32[Heap_$_32[oldPrev#2_$_0,Node.prev],mu],held#_574_$_0) == exhaleMask#_557_$_21;
	assume LastSeen$SecMask(Heap_$_32[Heap_$_32[oldPrev#2_$_0,Node.prev],mu],held#_574_$_0) == SecMask_$_174;
	assume LastSeen$Credits(Heap_$_32[Heap_$_32[oldPrev#2_$_0,Node.prev],mu],held#_574_$_0) == ZeroCredits;
	assert { :msg "  80.40: SMOKE-TEST-39. (The statements after the release statement are unreachable.)" } !(1 == 1);
	assume Mask_$_150 == exhaleMask#_581_$_21;
	assume Heap_$_33 == Heap_$_32;
	assume cond#_573_$_1 <==> cond#_573_$_0;
	goto anon414;
anon1696_Then:
	assume $_$_condition_$263;
	assume $_$_condition_$263 <==> (!(Heap_$_33[this,Node.prev] == null));
	assume !(Heap_$_33[this,Node.prev] == null);
	assert { :msg "  82.9: Fold might fail because the definition of Node.inv does not hold. The expression at 18.41 might not evaluate to true." } MuBelow(Heap_$_33[Heap_$_33[this,Node.prev],mu],Heap_$_33[this,mu]);
	goto $branchMerge_78;
anon1696_Else:
	assume !$_$_condition_$263;
	assume $_$_condition_$263 <==> (!(Heap_$_33[this,Node.prev] == null));
	assume Heap_$_33[this,Node.prev] == null;
	goto $branchMerge_78;
anon1697_Then:
	assume $_$_condition_$264;
	assume $_$_condition_$264 <==> (!(Heap_$_33[this,Node.next] == null));
	assume !(Heap_$_33[this,Node.next] == null);
	assert { :msg "  82.9: Fold might fail because the definition of Node.inv does not hold. The expression at 19.42 might not evaluate to true." } MuBelow(Heap_$_33[this,mu],Heap_$_33[Heap_$_33[this,Node.next],mu]);
	goto anon418;
anon1697_Else:
	assume !$_$_condition_$264;
	assume $_$_condition_$264 <==> (!(Heap_$_33[this,Node.next] == null));
	assume Heap_$_33[this,Node.next] == null;
	goto anon418;
anon418:
	assert { :msg "  82.9: Fold might fail because the definition of Node.inv does not hold. The permission at 17.9 might not be positive." } 1 > 0;
	assert { :msg "  82.9: Fold might fail because the definition of Node.inv does not hold. Insufficient epsilons at 17.9  for Node.prev." } (Mask_$_150[this,Node.prev][perm$R] == 0) ==> (1 <= Mask_$_150[this,Node.prev][perm$N]);
	assume exhaleMask#_602_$_0 == Mask_$_150[this,Node.prev := Mask_$_150[this,Node.prev][perm$N := Mask_$_150[this,Node.prev][perm$N] - 1]];
	assume wf(Heap_$_33,Mask_$_150,SecMask_$_174);
	assume 1 > 0;
	assume SecMask_$_175 == SecMask_$_174[this,Node.prev := SecMask_$_174[this,Node.prev][perm$N := SecMask_$_174[this,Node.prev][perm$N] + 1]];
	assume wf(Heap_$_33,SecMask_$_175,SecMask_$_175);
	assume IsGoodMask(exhaleMask#_602_$_0);
	assume wf(Heap_$_33,exhaleMask#_602_$_0,SecMask_$_175);
	assume wf(Heap_$_33,Mask_$_150,SecMask_$_175);
	assert { :msg "  82.9: Fold might fail because the definition of Node.inv does not hold. The permission at 17.29 might not be positive." } 1 > 0;
	assert { :msg "  82.9: Fold might fail because the definition of Node.inv does not hold. Insufficient epsilons at 17.29  for Node.next." } (exhaleMask#_602_$_0[this,Node.next][perm$R] == 0) ==> (1 <= exhaleMask#_602_$_0[this,Node.next][perm$N]);
	assume exhaleMask#_602_$_1 == exhaleMask#_602_$_0[this,Node.next := exhaleMask#_602_$_0[this,Node.next][perm$N := exhaleMask#_602_$_0[this,Node.next][perm$N] - 1]];
	assume wf(Heap_$_33,Mask_$_150,SecMask_$_175);
	assume 1 > 0;
	assume SecMask_$_176 == SecMask_$_175[this,Node.next := SecMask_$_175[this,Node.next][perm$N := SecMask_$_175[this,Node.next][perm$N] + 1]];
	assume wf(Heap_$_33,SecMask_$_176,SecMask_$_176);
	assume IsGoodMask(exhaleMask#_602_$_1);
	assume wf(Heap_$_33,exhaleMask#_602_$_1,SecMask_$_176);
	assume wf(Heap_$_33,Mask_$_150,SecMask_$_176);
	assert { :msg "  82.9: Fold might fail because the definition of Node.inv does not hold. The permission at 17.49 might not be positive." } 1 > 0;
	assert { :msg "  82.9: Fold might fail because the definition of Node.inv does not hold. Insufficient epsilons at 17.49  for mu." } (exhaleMask#_602_$_1[this,mu][perm$R] == 0) ==> (1 <= exhaleMask#_602_$_1[this,mu][perm$N]);
	assume exhaleMask#_602_$_2 == exhaleMask#_602_$_1[this,mu := exhaleMask#_602_$_1[this,mu][perm$N := exhaleMask#_602_$_1[this,mu][perm$N] - 1]];
	assume wf(Heap_$_33,Mask_$_150,SecMask_$_176);
	assume 1 > 0;
	assume SecMask_$_177 == SecMask_$_176[this,mu := SecMask_$_176[this,mu][perm$N := SecMask_$_176[this,mu][perm$N] + 1]];
	assume wf(Heap_$_33,SecMask_$_177,SecMask_$_177);
	assume IsGoodMask(exhaleMask#_602_$_2);
	assume wf(Heap_$_33,exhaleMask#_602_$_2,SecMask_$_177);
	assume wf(Heap_$_33,Mask_$_150,SecMask_$_177);
	if ($_$_condition_$266) { goto anon1698_Then; } else { goto anon1698_Else; }
anon1698_Then:
	assume $_$_condition_$266;
	assume $_$_condition_$266 <==> (!(Heap_$_33[this,Node.prev] == null));
	assume !(Heap_$_33[this,Node.prev] == null);
	assert { :msg "  82.9: Fold might fail because the definition of Node.inv does not hold. The permission at 18.25 might not be positive." } Fractions(100) > 0;
	assert { :msg "  82.9: Fold might fail because the definition of Node.inv does not hold. Insufficient fraction at 18.25 for Node.invLeft." } (Fractions(100) <= exhaleMask#_602_$_2[Heap_$_33[this,Node.prev],Node.invLeft][perm$R]) && ((Fractions(100) == exhaleMask#_602_$_2[Heap_$_33[this,Node.prev],Node.invLeft][perm$R]) ==> (0 <= exhaleMask#_602_$_2[Heap_$_33[this,Node.prev],Node.invLeft][perm$N]));
	assume exhaleMask#_602_$_3 == exhaleMask#_602_$_2[Heap_$_33[this,Node.prev],Node.invLeft := exhaleMask#_602_$_2[Heap_$_33[this,Node.prev],Node.invLeft][perm$R := exhaleMask#_602_$_2[Heap_$_33[this,Node.prev],Node.invLeft][perm$R] - Fractions(100)]];
	assume Fractions(100) > 0;
	assume SecMask_$_178 == SecMask_$_177[Heap_$_33[this,Node.prev],Node.invLeft := SecMask_$_177[Heap_$_33[this,Node.prev],Node.invLeft][perm$R := SecMask_$_177[Heap_$_33[this,Node.prev],Node.invLeft][perm$R] + Fractions(100)]];
	if ($_$_condition_$267) { goto anon1699_Then; } else { goto anon1699_Else; }
anon1698_Else:
	assume !$_$_condition_$266;
	assume $_$_condition_$266 <==> (!(Heap_$_33[this,Node.prev] == null));
	assume Heap_$_33[this,Node.prev] == null;
	assume SecMask_$_179 == SecMask_$_177;
	assume exhaleMask#_602_$_4 == exhaleMask#_602_$_2;
	goto $branchMerge_79;
anon1699_Then:
	assume $_$_condition_$267;
	assume $_$_condition_$267 <==> (!CanRead(exhaleMask#_602_$_3,SecMask_$_178,Heap_$_33[this,Node.prev],Node.invLeft));
	assume !CanRead(exhaleMask#_602_$_3,SecMask_$_178,Heap_$_33[this,Node.prev],Node.invLeft);
	assume Heap_$_33[Heap_$_33[this,Node.prev],Node.invLeft] < exhaleHeap#_601_$_0[Heap_$_33[this,Node.prev],Node.invLeft];
	goto anon421;
anon1699_Else:
	assume !$_$_condition_$267;
	assume $_$_condition_$267 <==> (!CanRead(exhaleMask#_602_$_3,SecMask_$_178,Heap_$_33[this,Node.prev],Node.invLeft));
	assume CanRead(exhaleMask#_602_$_3,SecMask_$_178,Heap_$_33[this,Node.prev],Node.invLeft);
	goto anon421;
anon1700_Then:
	assume $_$_condition_$268;
	assume $_$_condition_$268 <==> (!(Heap_$_33[this,Node.next] == null));
	assume !(Heap_$_33[this,Node.next] == null);
	assert { :msg "  82.9: Fold might fail because the definition of Node.inv does not hold. The permission at 19.25 might not be positive." } Fractions(100) > 0;
	assert { :msg "  82.9: Fold might fail because the definition of Node.inv does not hold. Insufficient fraction at 19.25 for Node.invRight." } (Fractions(100) <= exhaleMask#_602_$_4[Heap_$_33[this,Node.next],Node.invRight][perm$R]) && ((Fractions(100) == exhaleMask#_602_$_4[Heap_$_33[this,Node.next],Node.invRight][perm$R]) ==> (0 <= exhaleMask#_602_$_4[Heap_$_33[this,Node.next],Node.invRight][perm$N]));
	assume exhaleMask#_602_$_5 == exhaleMask#_602_$_4[Heap_$_33[this,Node.next],Node.invRight := exhaleMask#_602_$_4[Heap_$_33[this,Node.next],Node.invRight][perm$R := exhaleMask#_602_$_4[Heap_$_33[this,Node.next],Node.invRight][perm$R] - Fractions(100)]];
	assume Fractions(100) > 0;
	assume SecMask_$_180 == SecMask_$_179[Heap_$_33[this,Node.next],Node.invRight := SecMask_$_179[Heap_$_33[this,Node.next],Node.invRight][perm$R := SecMask_$_179[Heap_$_33[this,Node.next],Node.invRight][perm$R] + Fractions(100)]];
	if ($_$_condition_$270) { goto anon1701_Then; } else { goto anon1701_Else; }
anon1700_Else:
	assume !$_$_condition_$268;
	assume $_$_condition_$268 <==> (!(Heap_$_33[this,Node.next] == null));
	assume Heap_$_33[this,Node.next] == null;
	assume exhaleMask#_602_$_6 == exhaleMask#_602_$_4;
	assume SecMask_$_181 == SecMask_$_179;
	goto anon426;
anon421:
	assume IsGoodMask(exhaleMask#_602_$_3);
	assume wf(Heap_$_33,exhaleMask#_602_$_3,SecMask_$_178);
	assume wf(Heap_$_33,Mask_$_150,SecMask_$_178);
	assume SecMask_$_179 == SecMask_$_178;
	assume exhaleMask#_602_$_4 == exhaleMask#_602_$_3;
	goto $branchMerge_79;
anon1701_Then:
	assume $_$_condition_$270;
	assume $_$_condition_$270 <==> (!CanRead(exhaleMask#_602_$_5,SecMask_$_180,Heap_$_33[this,Node.next],Node.invRight));
	assume !CanRead(exhaleMask#_602_$_5,SecMask_$_180,Heap_$_33[this,Node.next],Node.invRight);
	assume Heap_$_33[Heap_$_33[this,Node.next],Node.invRight] < exhaleHeap#_601_$_0[Heap_$_33[this,Node.next],Node.invRight];
	goto anon425;
anon1701_Else:
	assume !$_$_condition_$270;
	assume $_$_condition_$270 <==> (!CanRead(exhaleMask#_602_$_5,SecMask_$_180,Heap_$_33[this,Node.next],Node.invRight));
	assume CanRead(exhaleMask#_602_$_5,SecMask_$_180,Heap_$_33[this,Node.next],Node.invRight);
	goto anon425;
anon426:
	assume IsGoodExhaleState(exhaleHeap#_601_$_0,Heap_$_33,exhaleMask#_602_$_6,SecMask_$_181);
	assume IsGoodMask(exhaleMask#_602_$_6);
	assume wf(exhaleHeap#_601_$_0,exhaleMask#_602_$_6,SecMask_$_181);
	assume !(this == null);
	assume wf(exhaleHeap#_601_$_0,exhaleMask#_602_$_6,SecMask_$_181);
	assume Fractions(100) > 0;
	assume Mask_$_151 == exhaleMask#_602_$_6[this,Node.inv := exhaleMask#_602_$_6[this,Node.inv][perm$R := exhaleMask#_602_$_6[this,Node.inv][perm$R] + Fractions(100)]];
	assume IsGoodMask(Mask_$_151);
	assume IsGoodState(heapFragment(exhaleHeap#_601_$_0[this,Node.inv]));
	assume wf(exhaleHeap#_601_$_0,Mask_$_151,SecMask_$_181);
	assume wf(exhaleHeap#_601_$_0,Mask_$_151,SecMask_$_181);
	assume IsGoodMask(Mask_$_151);
	assume wf(exhaleHeap#_601_$_0,Mask_$_151,SecMask_$_181);
	assume predVer#_598_$_0 == exhaleHeap#_601_$_0[this,Node.inv];
	assume wf(exhaleHeap#_601_$_0,Mask_$_151,SecMask_$_181);
	assert { :msg "  82.9: SMOKE-TEST-40. (The statements after the fold statement are unreachable.)" } !(1 == 1);
	assume cond#_608_$_0 <==> (!(oldNext#4_$_0 == null));
	if ($_$_condition_$271) { goto anon1702_Then; } else { goto anon1702_Else; }
anon425:
	assume IsGoodMask(exhaleMask#_602_$_5);
	assume wf(Heap_$_33,exhaleMask#_602_$_5,SecMask_$_180);
	assume wf(Heap_$_33,Mask_$_150,SecMask_$_180);
	assume exhaleMask#_602_$_6 == exhaleMask#_602_$_5;
	assume SecMask_$_181 == SecMask_$_180;
	goto anon426;
anon1702_Then:
	assume $_$_condition_$271;
	assume $_$_condition_$271 <==> cond#_608_$_0;
	assume cond#_608_$_0;
	assert { :msg "  83.9: SMOKE-TEST-41. (The begging of the if-branch is unreachable.)" } !(1 == 1);
	assume cond#_609_$_0 <==> (!(exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next] == null));
	assert { :msg "  84.17: Receiver might be null." } true ==> (!(oldNext#4_$_0 == null));
	assert { :msg "  84.17: Location might not be readable." } true ==> CanRead(Mask_$_151,SecMask_$_181,oldNext#4_$_0,Node.next);
	if ($_$_condition_$272) { goto anon1703_Then; } else { goto anon1703_Else; }
anon1702_Else:
	assume !$_$_condition_$271;
	assume $_$_condition_$271 <==> cond#_608_$_0;
	assume !cond#_608_$_0;
	assume cond#_621_$_2 <==> cond#_621;
	assume Heap_$_37 == exhaleHeap#_601_$_0;
	assume Mask_$_159 == Mask_$_151;
	assume cond#_609_$_1 <==> cond#_609;
	assume predRec#_610_$_2 == predRec#_610;
	assume predVer#_611_$_2 == predVer#_611;
	assume predFlag#_612_$_1 <==> predFlag#_612;
	assume cond#_620_$_1 <==> cond#_620;
	assume predRec#_622_$_3 == predRec#_622;
	assume predVer#_623_$_3 == predVer#_623;
	assume predFlag#_624_$_2 <==> predFlag#_624;
	assume SecMask_$_207 == SecMask_$_181;
	assume predRec#_632_$_2 == predRec#_632;
	assume predVer#_633_$_2 == predVer#_633;
	assume predFlag#_634_$_1 <==> predFlag#_634;
	assume predRec#_642_$_0 == predRec#_642;
	assume predVer#_643_$_1 == predVer#_643;
	assume predFlag#_644_$_0 <==> predFlag#_644;
	goto anon464;
anon1703_Then:
	assume $_$_condition_$272;
	assume $_$_condition_$272 <==> cond#_609_$_0;
	assume cond#_609_$_0;
	assert { :msg "  84.13: SMOKE-TEST-42. (The begging of the if-branch is unreachable.)" } !(1 == 1);
	assume #Node.invRight#trigger(exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next]);
	assume ((0 < foldK#_613) && ((1000 * foldK#_613) < Fractions(1))) && ((1000 * foldK#_613) < methodK#_170);
	assert { :msg "  84.46: Receiver might be null." } true ==> (!(oldNext#4_$_0 == null));
	assert { :msg "  84.46: Location might not be readable." } true ==> CanRead(Mask_$_151,SecMask_$_181,oldNext#4_$_0,Node.next);
	assert { :msg "  84.41: The target of the fold statement might be null." } !(exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next] == null);
	if ($_$_condition_$273) { goto anon1704_Then; } else { goto anon1704_Else; }
anon1703_Else:
	assume !$_$_condition_$272;
	assume $_$_condition_$272 <==> cond#_609_$_0;
	assume !cond#_609_$_0;
	assume Heap_$_34 == exhaleHeap#_601_$_0;
	assume Mask_$_153 == Mask_$_151;
	assume SecMask_$_187 == SecMask_$_181;
	assume predRec#_610_$_1 == predRec#_610;
	assume predVer#_611_$_1 == predVer#_611;
	assume predFlag#_612_$_0 <==> predFlag#_612;
	goto anon435;
anon464:
	assert { :msg "  30.5: SMOKE-TEST-49. (The end of method delete is unreachable.)" } !(1 == 1);
	assert { :msg "  30.5: The postcondition at 42.17 might not hold. The expression at 42.17 might not evaluate to true." } Heap[this,Node.next] == oldNext#4_$_0;
	assert { :msg "  30.5: The postcondition at 40.17 might not hold. The permission at 40.17 might not be positive." } Fractions(100) > 0;
	assert { :msg "  30.5: The postcondition at 40.17 might not hold. Insufficient fraction at 40.17 for Node.inv." } (Fractions(100) <= Mask_$_159[this,Node.inv][perm$R]) && ((Fractions(100) == Mask_$_159[this,Node.inv][perm$R]) ==> (0 <= Mask_$_159[this,Node.inv][perm$N]));
	assume exhaleMask#_654_$_0 == Mask_$_159[this,Node.inv := Mask_$_159[this,Node.inv][perm$R := Mask_$_159[this,Node.inv][perm$R] - Fractions(100)]];
	if ($_$_condition_$292) { goto anon1721_Then; } else { goto anon1721_Else; }
anon1704_Then:
	assume $_$_condition_$273;
	assume $_$_condition_$273 <==> (!(exhaleHeap#_601_$_0[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.next] == null));
	assume !(exhaleHeap#_601_$_0[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.next] == null);
	assert { :msg "  84.41: Fold might fail because the definition of Node.invRight does not hold. The expression at 27.42 might not evaluate to true." } MuBelow(exhaleHeap#_601_$_0[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],mu],exhaleHeap#_601_$_0[exhaleHeap#_601_$_0[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.next],mu]);
	goto anon430;
anon1704_Else:
	assume !$_$_condition_$273;
	assume $_$_condition_$273 <==> (!(exhaleHeap#_601_$_0[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.next] == null));
	assume exhaleHeap#_601_$_0[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.next] == null;
	goto anon430;
anon435:
	assume cond#_620_$_0 <==> (!(Heap_$_34[oldNext#4_$_0,Node.prev] == null));
	assert { :msg "  85.17: Receiver might be null." } true ==> (!(oldNext#4_$_0 == null));
	assert { :msg "  85.17: Location might not be readable." } true ==> CanRead(Mask_$_153,SecMask_$_187,oldNext#4_$_0,Node.prev);
	if ($_$_condition_$276) { goto anon1707_Then; } else { goto anon1707_Else; }
anon430:
	assert { :msg "  84.41: Fold might fail because the definition of Node.invRight does not hold. The permission at 26.9 might not be positive." } 1 > 0;
	assert { :msg "  84.41: Fold might fail because the definition of Node.invRight does not hold. Insufficient epsilons at 26.9  for Node.prev." } (Mask_$_151[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.prev][perm$R] == 0) ==> (1 <= Mask_$_151[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.prev][perm$N]);
	assume exhaleMask#_615_$_0 == Mask_$_151[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.prev := Mask_$_151[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.prev][perm$N := Mask_$_151[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.prev][perm$N] - 1]];
	assume wf(exhaleHeap#_601_$_0,Mask_$_151,SecMask_$_181);
	assume 1 > 0;
	assume SecMask_$_182 == SecMask_$_181[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.prev := SecMask_$_181[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.prev][perm$N := SecMask_$_181[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.prev][perm$N] + 1]];
	assume wf(exhaleHeap#_601_$_0,SecMask_$_182,SecMask_$_182);
	assume IsGoodMask(exhaleMask#_615_$_0);
	assume wf(exhaleHeap#_601_$_0,exhaleMask#_615_$_0,SecMask_$_182);
	assume wf(exhaleHeap#_601_$_0,Mask_$_151,SecMask_$_182);
	assert { :msg "  84.41: Fold might fail because the definition of Node.invRight does not hold. The permission at 26.29 might not be positive." } 1 > 0;
	assert { :msg "  84.41: Fold might fail because the definition of Node.invRight does not hold. Insufficient epsilons at 26.29  for Node.next." } (exhaleMask#_615_$_0[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.next][perm$R] == 0) ==> (1 <= exhaleMask#_615_$_0[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.next][perm$N]);
	assume exhaleMask#_615_$_1 == exhaleMask#_615_$_0[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.next := exhaleMask#_615_$_0[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.next][perm$N := exhaleMask#_615_$_0[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.next][perm$N] - 1]];
	assume wf(exhaleHeap#_601_$_0,Mask_$_151,SecMask_$_182);
	assume 1 > 0;
	assume SecMask_$_183 == SecMask_$_182[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.next := SecMask_$_182[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.next][perm$N := SecMask_$_182[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.next][perm$N] + 1]];
	assume wf(exhaleHeap#_601_$_0,SecMask_$_183,SecMask_$_183);
	assume IsGoodMask(exhaleMask#_615_$_1);
	assume wf(exhaleHeap#_601_$_0,exhaleMask#_615_$_1,SecMask_$_183);
	assume wf(exhaleHeap#_601_$_0,Mask_$_151,SecMask_$_183);
	assert { :msg "  84.41: Fold might fail because the definition of Node.invRight does not hold. The permission at 26.49 might not be positive." } 1 > 0;
	assert { :msg "  84.41: Fold might fail because the definition of Node.invRight does not hold. Insufficient epsilons at 26.49  for mu." } (exhaleMask#_615_$_1[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],mu][perm$R] == 0) ==> (1 <= exhaleMask#_615_$_1[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],mu][perm$N]);
	assume exhaleMask#_615_$_2 == exhaleMask#_615_$_1[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],mu := exhaleMask#_615_$_1[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],mu][perm$N := exhaleMask#_615_$_1[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],mu][perm$N] - 1]];
	assume wf(exhaleHeap#_601_$_0,Mask_$_151,SecMask_$_183);
	assume 1 > 0;
	assume SecMask_$_184 == SecMask_$_183[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],mu := SecMask_$_183[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],mu][perm$N := SecMask_$_183[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],mu][perm$N] + 1]];
	assume wf(exhaleHeap#_601_$_0,SecMask_$_184,SecMask_$_184);
	assume IsGoodMask(exhaleMask#_615_$_2);
	assume wf(exhaleHeap#_601_$_0,exhaleMask#_615_$_2,SecMask_$_184);
	assume wf(exhaleHeap#_601_$_0,Mask_$_151,SecMask_$_184);
	if ($_$_condition_$274) { goto anon1705_Then; } else { goto anon1705_Else; }
anon1705_Then:
	assume $_$_condition_$274;
	assume $_$_condition_$274 <==> (!(exhaleHeap#_601_$_0[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.next] == null));
	assume !(exhaleHeap#_601_$_0[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.next] == null);
	assert { :msg "  84.41: Fold might fail because the definition of Node.invRight does not hold. The permission at 27.25 might not be positive." } Fractions(100) > 0;
	assert { :msg "  84.41: Fold might fail because the definition of Node.invRight does not hold. Insufficient fraction at 27.25 for Node.invRight." } (Fractions(100) <= exhaleMask#_615_$_2[exhaleHeap#_601_$_0[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.next],Node.invRight][perm$R]) && ((Fractions(100) == exhaleMask#_615_$_2[exhaleHeap#_601_$_0[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.next],Node.invRight][perm$R]) ==> (0 <= exhaleMask#_615_$_2[exhaleHeap#_601_$_0[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.next],Node.invRight][perm$N]));
	assume exhaleMask#_615_$_3 == exhaleMask#_615_$_2[exhaleHeap#_601_$_0[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.next],Node.invRight := exhaleMask#_615_$_2[exhaleHeap#_601_$_0[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.next],Node.invRight][perm$R := exhaleMask#_615_$_2[exhaleHeap#_601_$_0[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.next],Node.invRight][perm$R] - Fractions(100)]];
	assume Fractions(100) > 0;
	assume SecMask_$_185 == SecMask_$_184[exhaleHeap#_601_$_0[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.next],Node.invRight := SecMask_$_184[exhaleHeap#_601_$_0[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.next],Node.invRight][perm$R := SecMask_$_184[exhaleHeap#_601_$_0[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.next],Node.invRight][perm$R] + Fractions(100)]];
	if ($_$_condition_$275) { goto anon1706_Then; } else { goto anon1706_Else; }
anon1705_Else:
	assume !$_$_condition_$274;
	assume $_$_condition_$274 <==> (!(exhaleHeap#_601_$_0[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.next] == null));
	assume exhaleHeap#_601_$_0[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.next] == null;
	assume SecMask_$_186 == SecMask_$_184;
	assume exhaleMask#_615_$_4 == exhaleMask#_615_$_2;
	goto anon434;
anon1706_Then:
	assume $_$_condition_$275;
	assume $_$_condition_$275 <==> (!CanRead(exhaleMask#_615_$_3,SecMask_$_185,exhaleHeap#_601_$_0[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.next],Node.invRight));
	assume !CanRead(exhaleMask#_615_$_3,SecMask_$_185,exhaleHeap#_601_$_0[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.next],Node.invRight);
	assume exhaleHeap#_601_$_0[exhaleHeap#_601_$_0[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.next],Node.invRight] < exhaleHeap#_614_$_0[exhaleHeap#_601_$_0[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.next],Node.invRight];
	goto anon433;
anon1706_Else:
	assume !$_$_condition_$275;
	assume $_$_condition_$275 <==> (!CanRead(exhaleMask#_615_$_3,SecMask_$_185,exhaleHeap#_601_$_0[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.next],Node.invRight));
	assume CanRead(exhaleMask#_615_$_3,SecMask_$_185,exhaleHeap#_601_$_0[exhaleHeap#_601_$_0[oldNext#4_$_0,Node.next],Node.next],Node.invRight);
	goto anon433;
anon434:
	assume IsGoodExhaleState(exhaleHeap#_614_$_0,exhaleHeap#_601_$_0,exhaleMask#_615_$_4,SecMask_$_186);
	assume IsGoodMask(exhaleMask#_615_$_4);
	assume wf(exhaleHeap#_614_$_0,exhaleMask#_615_$_4,SecMask_$_186);
	assume !(exhaleHeap#_614_$_0[oldNext#4_$_0,Node.next] == null);
	assume wf(exhaleHeap#_614_$_0,exhaleMask#_615_$_4,SecMask_$_186);
	assume Fractions(100) > 0;
	assume Mask_$_152 == exhaleMask#_615_$_4[exhaleHeap#_614_$_0[oldNext#4_$_0,Node.next],Node.invRight := exhaleMask#_615_$_4[exhaleHeap#_614_$_0[oldNext#4_$_0,Node.next],Node.invRight][perm$R := exhaleMask#_615_$_4[exhaleHeap#_614_$_0[oldNext#4_$_0,Node.next],Node.invRight][perm$R] + Fractions(100)]];
	assume IsGoodMask(Mask_$_152);
	assume IsGoodState(heapFragment(exhaleHeap#_614_$_0[exhaleHeap#_614_$_0[oldNext#4_$_0,Node.next],Node.invRight]));
	assume wf(exhaleHeap#_614_$_0,Mask_$_152,SecMask_$_186);
	assume wf(exhaleHeap#_614_$_0,Mask_$_152,SecMask_$_186);
	assume IsGoodMask(Mask_$_152);
	assume wf(exhaleHeap#_614_$_0,Mask_$_152,SecMask_$_186);
	assume predRec#_610_$_0 == exhaleHeap#_614_$_0[oldNext#4_$_0,Node.next];
	assume predVer#_611_$_0 == exhaleHeap#_614_$_0[exhaleHeap#_614_$_0[oldNext#4_$_0,Node.next],Node.invRight];
	assume wf(exhaleHeap#_614_$_0,Mask_$_152,SecMask_$_186);
	assert { :msg "  84.41: SMOKE-TEST-43. (The statements after the fold statement are unreachable.)" } !(1 == 1);
	assume Heap_$_34 == exhaleHeap#_614_$_0;
	assume Mask_$_153 == Mask_$_152;
	assume SecMask_$_187 == SecMask_$_186;
	assume predRec#_610_$_1 == predRec#_610_$_0;
	assume predVer#_611_$_1 == predVer#_611_$_0;
	assume predFlag#_612_$_0 <==> true;
	goto anon435;
anon433:
	assume IsGoodMask(exhaleMask#_615_$_3);
	assume wf(exhaleHeap#_601_$_0,exhaleMask#_615_$_3,SecMask_$_185);
	assume wf(exhaleHeap#_601_$_0,Mask_$_151,SecMask_$_185);
	assume SecMask_$_186 == SecMask_$_185;
	assume exhaleMask#_615_$_4 == exhaleMask#_615_$_3;
	goto anon434;
anon1707_Then:
	assume $_$_condition_$276;
	assume $_$_condition_$276 <==> cond#_620_$_0;
	assume cond#_620_$_0;
	assert { :msg "  85.13: SMOKE-TEST-44. (The begging of the if-branch is unreachable.)" } !(1 == 1);
	assume cond#_621_$_0 <==> (!(Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev] == null));
	assert { :msg "  86.21: Receiver might be null." } true ==> (!(oldNext#4_$_0 == null));
	assert { :msg "  86.21: Location might not be readable." } true ==> CanRead(Mask_$_153,SecMask_$_187,oldNext#4_$_0,Node.prev);
	assert { :msg "  86.21: Receiver might be null." } true ==> (!(Heap_$_34[oldNext#4_$_0,Node.prev] == null));
	assert { :msg "  86.21: Location might not be readable." } true ==> CanRead(Mask_$_153,SecMask_$_187,Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev);
	if ($_$_condition_$277) { goto anon1708_Then; } else { goto anon1708_Else; }
anon1707_Else:
	assume !$_$_condition_$276;
	assume $_$_condition_$276 <==> cond#_620_$_0;
	assume !cond#_620_$_0;
	assume Heap_$_36 == Heap_$_34;
	assume Mask_$_157 == Mask_$_153;
	assume cond#_621_$_1 <==> cond#_621;
	assume predRec#_622_$_2 == predRec#_622;
	assume predVer#_623_$_2 == predVer#_623;
	assume predFlag#_624_$_1 <==> predFlag#_624;
	assume SecMask_$_199 == SecMask_$_187;
	assume predRec#_632_$_1 == predRec#_632;
	assume predVer#_633_$_1 == predVer#_633;
	assume predFlag#_634_$_0 <==> predFlag#_634;
	goto anon451;
anon1708_Then:
	assume $_$_condition_$277;
	assume $_$_condition_$277 <==> cond#_621_$_0;
	assume cond#_621_$_0;
	assert { :msg "  86.17: SMOKE-TEST-45. (The begging of the if-branch is unreachable.)" } !(1 == 1);
	assume #Node.invLeft#trigger(Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev]);
	assume ((0 < foldK#_625) && ((1000 * foldK#_625) < Fractions(1))) && ((1000 * foldK#_625) < methodK#_170);
	assert { :msg "  86.55: Receiver might be null." } true ==> (!(oldNext#4_$_0 == null));
	assert { :msg "  86.55: Location might not be readable." } true ==> CanRead(Mask_$_153,SecMask_$_187,oldNext#4_$_0,Node.prev);
	assert { :msg "  86.55: Receiver might be null." } true ==> (!(Heap_$_34[oldNext#4_$_0,Node.prev] == null));
	assert { :msg "  86.55: Location might not be readable." } true ==> CanRead(Mask_$_153,SecMask_$_187,Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev);
	assert { :msg "  86.50: The target of the fold statement might be null." } !(Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev] == null);
	if ($_$_condition_$278) { goto anon1709_Then; } else { goto anon1709_Else; }
anon1708_Else:
	assume !$_$_condition_$277;
	assume $_$_condition_$277 <==> cond#_621_$_0;
	assume !cond#_621_$_0;
	assume Heap_$_35 == Heap_$_34;
	assume Mask_$_155 == Mask_$_153;
	assume SecMask_$_193 == SecMask_$_187;
	assume predRec#_622_$_1 == predRec#_622;
	assume predVer#_623_$_1 == predVer#_623;
	assume predFlag#_624_$_0 <==> predFlag#_624;
	goto anon444;
anon451:
	assume #Node.inv#trigger(oldNext#4_$_0);
	assume ((0 < foldK#_645) && ((1000 * foldK#_645) < Fractions(1))) && ((1000 * foldK#_645) < methodK#_170);
	assert { :msg "  89.13: The target of the fold statement might be null." } !(oldNext#4_$_0 == null);
	if ($_$_condition_$284) { goto anon1715_Then; } else { goto anon1715_Else; }
anon1709_Then:
	assume $_$_condition_$278;
	assume $_$_condition_$278 <==> (!(Heap_$_34[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_34[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.prev] == null);
	assert { :msg "  86.50: Fold might fail because the definition of Node.invLeft does not hold. The expression at 23.41 might not evaluate to true." } MuBelow(Heap_$_34[Heap_$_34[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],mu],Heap_$_34[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],mu]);
	goto anon439;
anon1709_Else:
	assume !$_$_condition_$278;
	assume $_$_condition_$278 <==> (!(Heap_$_34[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_34[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.prev] == null;
	goto anon439;
anon444:
	assume #Node.invLeft#trigger(Heap_$_35[oldNext#4_$_0,Node.prev]);
	assume ((0 < foldK#_635) && ((1000 * foldK#_635) < Fractions(1))) && ((1000 * foldK#_635) < methodK#_170);
	assert { :msg "  87.22: Receiver might be null." } true ==> (!(oldNext#4_$_0 == null));
	assert { :msg "  87.22: Location might not be readable." } true ==> CanRead(Mask_$_155,SecMask_$_193,oldNext#4_$_0,Node.prev);
	assert { :msg "  87.17: The target of the fold statement might be null." } !(Heap_$_35[oldNext#4_$_0,Node.prev] == null);
	if ($_$_condition_$281) { goto anon1712_Then; } else { goto anon1712_Else; }
anon439:
	assert { :msg "  86.50: Fold might fail because the definition of Node.invLeft does not hold. The permission at 22.9 might not be positive." } 1 > 0;
	assert { :msg "  86.50: Fold might fail because the definition of Node.invLeft does not hold. Insufficient epsilons at 22.9  for Node.prev." } (Mask_$_153[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.prev][perm$R] == 0) ==> (1 <= Mask_$_153[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.prev][perm$N]);
	assume exhaleMask#_627_$_0 == Mask_$_153[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.prev := Mask_$_153[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.prev][perm$N := Mask_$_153[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_34,Mask_$_153,SecMask_$_187);
	assume 1 > 0;
	assume SecMask_$_188 == SecMask_$_187[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.prev := SecMask_$_187[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.prev][perm$N := SecMask_$_187[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.prev][perm$N] + 1]];
	assume wf(Heap_$_34,SecMask_$_188,SecMask_$_188);
	assume IsGoodMask(exhaleMask#_627_$_0);
	assume wf(Heap_$_34,exhaleMask#_627_$_0,SecMask_$_188);
	assume wf(Heap_$_34,Mask_$_153,SecMask_$_188);
	assert { :msg "  86.50: Fold might fail because the definition of Node.invLeft does not hold. The permission at 22.29 might not be positive." } 1 > 0;
	assert { :msg "  86.50: Fold might fail because the definition of Node.invLeft does not hold. Insufficient epsilons at 22.29  for Node.next." } (exhaleMask#_627_$_0[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.next][perm$R] == 0) ==> (1 <= exhaleMask#_627_$_0[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.next][perm$N]);
	assume exhaleMask#_627_$_1 == exhaleMask#_627_$_0[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.next := exhaleMask#_627_$_0[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.next][perm$N := exhaleMask#_627_$_0[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.next][perm$N] - 1]];
	assume wf(Heap_$_34,Mask_$_153,SecMask_$_188);
	assume 1 > 0;
	assume SecMask_$_189 == SecMask_$_188[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.next := SecMask_$_188[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.next][perm$N := SecMask_$_188[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.next][perm$N] + 1]];
	assume wf(Heap_$_34,SecMask_$_189,SecMask_$_189);
	assume IsGoodMask(exhaleMask#_627_$_1);
	assume wf(Heap_$_34,exhaleMask#_627_$_1,SecMask_$_189);
	assume wf(Heap_$_34,Mask_$_153,SecMask_$_189);
	assert { :msg "  86.50: Fold might fail because the definition of Node.invLeft does not hold. The permission at 22.49 might not be positive." } 1 > 0;
	assert { :msg "  86.50: Fold might fail because the definition of Node.invLeft does not hold. Insufficient epsilons at 22.49  for mu." } (exhaleMask#_627_$_1[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],mu][perm$R] == 0) ==> (1 <= exhaleMask#_627_$_1[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],mu][perm$N]);
	assume exhaleMask#_627_$_2 == exhaleMask#_627_$_1[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],mu := exhaleMask#_627_$_1[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],mu][perm$N := exhaleMask#_627_$_1[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],mu][perm$N] - 1]];
	assume wf(Heap_$_34,Mask_$_153,SecMask_$_189);
	assume 1 > 0;
	assume SecMask_$_190 == SecMask_$_189[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],mu := SecMask_$_189[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],mu][perm$N := SecMask_$_189[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],mu][perm$N] + 1]];
	assume wf(Heap_$_34,SecMask_$_190,SecMask_$_190);
	assume IsGoodMask(exhaleMask#_627_$_2);
	assume wf(Heap_$_34,exhaleMask#_627_$_2,SecMask_$_190);
	assume wf(Heap_$_34,Mask_$_153,SecMask_$_190);
	if ($_$_condition_$279) { goto anon1710_Then; } else { goto anon1710_Else; }
anon1710_Then:
	assume $_$_condition_$279;
	assume $_$_condition_$279 <==> (!(Heap_$_34[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_34[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.prev] == null);
	assert { :msg "  86.50: Fold might fail because the definition of Node.invLeft does not hold. The permission at 23.25 might not be positive." } Fractions(100) > 0;
	assert { :msg "  86.50: Fold might fail because the definition of Node.invLeft does not hold. Insufficient fraction at 23.25 for Node.invLeft." } (Fractions(100) <= exhaleMask#_627_$_2[Heap_$_34[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R]) && ((Fractions(100) == exhaleMask#_627_$_2[Heap_$_34[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R]) ==> (0 <= exhaleMask#_627_$_2[Heap_$_34[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft][perm$N]));
	assume exhaleMask#_627_$_3 == exhaleMask#_627_$_2[Heap_$_34[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft := exhaleMask#_627_$_2[Heap_$_34[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := exhaleMask#_627_$_2[Heap_$_34[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] - Fractions(100)]];
	assume Fractions(100) > 0;
	assume SecMask_$_191 == SecMask_$_190[Heap_$_34[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_190[Heap_$_34[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := SecMask_$_190[Heap_$_34[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] + Fractions(100)]];
	if ($_$_condition_$280) { goto anon1711_Then; } else { goto anon1711_Else; }
anon1710_Else:
	assume !$_$_condition_$279;
	assume $_$_condition_$279 <==> (!(Heap_$_34[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_34[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.prev] == null;
	assume SecMask_$_192 == SecMask_$_190;
	assume exhaleMask#_627_$_4 == exhaleMask#_627_$_2;
	goto anon443;
anon1711_Then:
	assume $_$_condition_$280;
	assume $_$_condition_$280 <==> (!CanRead(exhaleMask#_627_$_3,SecMask_$_191,Heap_$_34[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft));
	assume !CanRead(exhaleMask#_627_$_3,SecMask_$_191,Heap_$_34[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft);
	assume Heap_$_34[Heap_$_34[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft] < exhaleHeap#_626_$_0[Heap_$_34[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft];
	goto anon442;
anon1711_Else:
	assume !$_$_condition_$280;
	assume $_$_condition_$280 <==> (!CanRead(exhaleMask#_627_$_3,SecMask_$_191,Heap_$_34[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft));
	assume CanRead(exhaleMask#_627_$_3,SecMask_$_191,Heap_$_34[Heap_$_34[Heap_$_34[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft);
	goto anon442;
anon443:
	assume IsGoodExhaleState(exhaleHeap#_626_$_0,Heap_$_34,exhaleMask#_627_$_4,SecMask_$_192);
	assume IsGoodMask(exhaleMask#_627_$_4);
	assume wf(exhaleHeap#_626_$_0,exhaleMask#_627_$_4,SecMask_$_192);
	assume !(exhaleHeap#_626_$_0[exhaleHeap#_626_$_0[oldNext#4_$_0,Node.prev],Node.prev] == null);
	assume wf(exhaleHeap#_626_$_0,exhaleMask#_627_$_4,SecMask_$_192);
	assume Fractions(100) > 0;
	assume Mask_$_154 == exhaleMask#_627_$_4[exhaleHeap#_626_$_0[exhaleHeap#_626_$_0[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft := exhaleMask#_627_$_4[exhaleHeap#_626_$_0[exhaleHeap#_626_$_0[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft][perm$R := exhaleMask#_627_$_4[exhaleHeap#_626_$_0[exhaleHeap#_626_$_0[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft][perm$R] + Fractions(100)]];
	assume IsGoodMask(Mask_$_154);
	assume IsGoodState(heapFragment(exhaleHeap#_626_$_0[exhaleHeap#_626_$_0[exhaleHeap#_626_$_0[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft]));
	assume wf(exhaleHeap#_626_$_0,Mask_$_154,SecMask_$_192);
	assume wf(exhaleHeap#_626_$_0,Mask_$_154,SecMask_$_192);
	assume IsGoodMask(Mask_$_154);
	assume wf(exhaleHeap#_626_$_0,Mask_$_154,SecMask_$_192);
	assume predRec#_622_$_0 == exhaleHeap#_626_$_0[exhaleHeap#_626_$_0[oldNext#4_$_0,Node.prev],Node.prev];
	assume predVer#_623_$_0 == exhaleHeap#_626_$_0[exhaleHeap#_626_$_0[exhaleHeap#_626_$_0[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft];
	assume wf(exhaleHeap#_626_$_0,Mask_$_154,SecMask_$_192);
	assert { :msg "  86.50: SMOKE-TEST-46. (The statements after the fold statement are unreachable.)" } !(1 == 1);
	assume Heap_$_35 == exhaleHeap#_626_$_0;
	assume Mask_$_155 == Mask_$_154;
	assume SecMask_$_193 == SecMask_$_192;
	assume predRec#_622_$_1 == predRec#_622_$_0;
	assume predVer#_623_$_1 == predVer#_623_$_0;
	assume predFlag#_624_$_0 <==> true;
	goto anon444;
anon442:
	assume IsGoodMask(exhaleMask#_627_$_3);
	assume wf(Heap_$_34,exhaleMask#_627_$_3,SecMask_$_191);
	assume wf(Heap_$_34,Mask_$_153,SecMask_$_191);
	assume SecMask_$_192 == SecMask_$_191;
	assume exhaleMask#_627_$_4 == exhaleMask#_627_$_3;
	goto anon443;
anon1712_Then:
	assume $_$_condition_$281;
	assume $_$_condition_$281 <==> (!(Heap_$_35[Heap_$_35[oldNext#4_$_0,Node.prev],Node.prev] == null));
	assume !(Heap_$_35[Heap_$_35[oldNext#4_$_0,Node.prev],Node.prev] == null);
	assert { :msg "  87.17: Fold might fail because the definition of Node.invLeft does not hold. The expression at 23.41 might not evaluate to true." } MuBelow(Heap_$_35[Heap_$_35[Heap_$_35[oldNext#4_$_0,Node.prev],Node.prev],mu],Heap_$_35[Heap_$_35[oldNext#4_$_0,Node.prev],mu]);
	goto anon446;
anon1712_Else:
	assume !$_$_condition_$281;
	assume $_$_condition_$281 <==> (!(Heap_$_35[Heap_$_35[oldNext#4_$_0,Node.prev],Node.prev] == null));
	assume Heap_$_35[Heap_$_35[oldNext#4_$_0,Node.prev],Node.prev] == null;
	goto anon446;
anon446:
	assert { :msg "  87.17: Fold might fail because the definition of Node.invLeft does not hold. The permission at 22.9 might not be positive." } 1 > 0;
	assert { :msg "  87.17: Fold might fail because the definition of Node.invLeft does not hold. Insufficient epsilons at 22.9  for Node.prev." } (Mask_$_155[Heap_$_35[oldNext#4_$_0,Node.prev],Node.prev][perm$R] == 0) ==> (1 <= Mask_$_155[Heap_$_35[oldNext#4_$_0,Node.prev],Node.prev][perm$N]);
	assume exhaleMask#_637_$_0 == Mask_$_155[Heap_$_35[oldNext#4_$_0,Node.prev],Node.prev := Mask_$_155[Heap_$_35[oldNext#4_$_0,Node.prev],Node.prev][perm$N := Mask_$_155[Heap_$_35[oldNext#4_$_0,Node.prev],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_35,Mask_$_155,SecMask_$_193);
	assume 1 > 0;
	assume SecMask_$_194 == SecMask_$_193[Heap_$_35[oldNext#4_$_0,Node.prev],Node.prev := SecMask_$_193[Heap_$_35[oldNext#4_$_0,Node.prev],Node.prev][perm$N := SecMask_$_193[Heap_$_35[oldNext#4_$_0,Node.prev],Node.prev][perm$N] + 1]];
	assume wf(Heap_$_35,SecMask_$_194,SecMask_$_194);
	assume IsGoodMask(exhaleMask#_637_$_0);
	assume wf(Heap_$_35,exhaleMask#_637_$_0,SecMask_$_194);
	assume wf(Heap_$_35,Mask_$_155,SecMask_$_194);
	assert { :msg "  87.17: Fold might fail because the definition of Node.invLeft does not hold. The permission at 22.29 might not be positive." } 1 > 0;
	assert { :msg "  87.17: Fold might fail because the definition of Node.invLeft does not hold. Insufficient epsilons at 22.29  for Node.next." } (exhaleMask#_637_$_0[Heap_$_35[oldNext#4_$_0,Node.prev],Node.next][perm$R] == 0) ==> (1 <= exhaleMask#_637_$_0[Heap_$_35[oldNext#4_$_0,Node.prev],Node.next][perm$N]);
	assume exhaleMask#_637_$_1 == exhaleMask#_637_$_0[Heap_$_35[oldNext#4_$_0,Node.prev],Node.next := exhaleMask#_637_$_0[Heap_$_35[oldNext#4_$_0,Node.prev],Node.next][perm$N := exhaleMask#_637_$_0[Heap_$_35[oldNext#4_$_0,Node.prev],Node.next][perm$N] - 1]];
	assume wf(Heap_$_35,Mask_$_155,SecMask_$_194);
	assume 1 > 0;
	assume SecMask_$_195 == SecMask_$_194[Heap_$_35[oldNext#4_$_0,Node.prev],Node.next := SecMask_$_194[Heap_$_35[oldNext#4_$_0,Node.prev],Node.next][perm$N := SecMask_$_194[Heap_$_35[oldNext#4_$_0,Node.prev],Node.next][perm$N] + 1]];
	assume wf(Heap_$_35,SecMask_$_195,SecMask_$_195);
	assume IsGoodMask(exhaleMask#_637_$_1);
	assume wf(Heap_$_35,exhaleMask#_637_$_1,SecMask_$_195);
	assume wf(Heap_$_35,Mask_$_155,SecMask_$_195);
	assert { :msg "  87.17: Fold might fail because the definition of Node.invLeft does not hold. The permission at 22.49 might not be positive." } 1 > 0;
	assert { :msg "  87.17: Fold might fail because the definition of Node.invLeft does not hold. Insufficient epsilons at 22.49  for mu." } (exhaleMask#_637_$_1[Heap_$_35[oldNext#4_$_0,Node.prev],mu][perm$R] == 0) ==> (1 <= exhaleMask#_637_$_1[Heap_$_35[oldNext#4_$_0,Node.prev],mu][perm$N]);
	assume exhaleMask#_637_$_2 == exhaleMask#_637_$_1[Heap_$_35[oldNext#4_$_0,Node.prev],mu := exhaleMask#_637_$_1[Heap_$_35[oldNext#4_$_0,Node.prev],mu][perm$N := exhaleMask#_637_$_1[Heap_$_35[oldNext#4_$_0,Node.prev],mu][perm$N] - 1]];
	assume wf(Heap_$_35,Mask_$_155,SecMask_$_195);
	assume 1 > 0;
	assume SecMask_$_196 == SecMask_$_195[Heap_$_35[oldNext#4_$_0,Node.prev],mu := SecMask_$_195[Heap_$_35[oldNext#4_$_0,Node.prev],mu][perm$N := SecMask_$_195[Heap_$_35[oldNext#4_$_0,Node.prev],mu][perm$N] + 1]];
	assume wf(Heap_$_35,SecMask_$_196,SecMask_$_196);
	assume IsGoodMask(exhaleMask#_637_$_2);
	assume wf(Heap_$_35,exhaleMask#_637_$_2,SecMask_$_196);
	assume wf(Heap_$_35,Mask_$_155,SecMask_$_196);
	if ($_$_condition_$282) { goto anon1713_Then; } else { goto anon1713_Else; }
anon1713_Then:
	assume $_$_condition_$282;
	assume $_$_condition_$282 <==> (!(Heap_$_35[Heap_$_35[oldNext#4_$_0,Node.prev],Node.prev] == null));
	assume !(Heap_$_35[Heap_$_35[oldNext#4_$_0,Node.prev],Node.prev] == null);
	assert { :msg "  87.17: Fold might fail because the definition of Node.invLeft does not hold. The permission at 23.25 might not be positive." } Fractions(100) > 0;
	assert { :msg "  87.17: Fold might fail because the definition of Node.invLeft does not hold. Insufficient fraction at 23.25 for Node.invLeft." } (Fractions(100) <= exhaleMask#_637_$_2[Heap_$_35[Heap_$_35[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft][perm$R]) && ((Fractions(100) == exhaleMask#_637_$_2[Heap_$_35[Heap_$_35[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft][perm$R]) ==> (0 <= exhaleMask#_637_$_2[Heap_$_35[Heap_$_35[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft][perm$N]));
	assume exhaleMask#_637_$_3 == exhaleMask#_637_$_2[Heap_$_35[Heap_$_35[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft := exhaleMask#_637_$_2[Heap_$_35[Heap_$_35[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft][perm$R := exhaleMask#_637_$_2[Heap_$_35[Heap_$_35[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft][perm$R] - Fractions(100)]];
	assume Fractions(100) > 0;
	assume SecMask_$_197 == SecMask_$_196[Heap_$_35[Heap_$_35[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft := SecMask_$_196[Heap_$_35[Heap_$_35[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft][perm$R := SecMask_$_196[Heap_$_35[Heap_$_35[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft][perm$R] + Fractions(100)]];
	if ($_$_condition_$283) { goto anon1714_Then; } else { goto anon1714_Else; }
anon1713_Else:
	assume !$_$_condition_$282;
	assume $_$_condition_$282 <==> (!(Heap_$_35[Heap_$_35[oldNext#4_$_0,Node.prev],Node.prev] == null));
	assume Heap_$_35[Heap_$_35[oldNext#4_$_0,Node.prev],Node.prev] == null;
	assume SecMask_$_198 == SecMask_$_196;
	assume exhaleMask#_637_$_4 == exhaleMask#_637_$_2;
	goto anon450;
anon1714_Then:
	assume $_$_condition_$283;
	assume $_$_condition_$283 <==> (!CanRead(exhaleMask#_637_$_3,SecMask_$_197,Heap_$_35[Heap_$_35[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft));
	assume !CanRead(exhaleMask#_637_$_3,SecMask_$_197,Heap_$_35[Heap_$_35[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft);
	assume Heap_$_35[Heap_$_35[Heap_$_35[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft] < exhaleHeap#_636_$_0[Heap_$_35[Heap_$_35[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft];
	goto anon449;
anon1714_Else:
	assume !$_$_condition_$283;
	assume $_$_condition_$283 <==> (!CanRead(exhaleMask#_637_$_3,SecMask_$_197,Heap_$_35[Heap_$_35[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft));
	assume CanRead(exhaleMask#_637_$_3,SecMask_$_197,Heap_$_35[Heap_$_35[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft);
	goto anon449;
anon450:
	assume IsGoodExhaleState(exhaleHeap#_636_$_0,Heap_$_35,exhaleMask#_637_$_4,SecMask_$_198);
	assume IsGoodMask(exhaleMask#_637_$_4);
	assume wf(exhaleHeap#_636_$_0,exhaleMask#_637_$_4,SecMask_$_198);
	assume !(exhaleHeap#_636_$_0[oldNext#4_$_0,Node.prev] == null);
	assume wf(exhaleHeap#_636_$_0,exhaleMask#_637_$_4,SecMask_$_198);
	assume Fractions(100) > 0;
	assume Mask_$_156 == exhaleMask#_637_$_4[exhaleHeap#_636_$_0[oldNext#4_$_0,Node.prev],Node.invLeft := exhaleMask#_637_$_4[exhaleHeap#_636_$_0[oldNext#4_$_0,Node.prev],Node.invLeft][perm$R := exhaleMask#_637_$_4[exhaleHeap#_636_$_0[oldNext#4_$_0,Node.prev],Node.invLeft][perm$R] + Fractions(100)]];
	assume IsGoodMask(Mask_$_156);
	assume IsGoodState(heapFragment(exhaleHeap#_636_$_0[exhaleHeap#_636_$_0[oldNext#4_$_0,Node.prev],Node.invLeft]));
	assume wf(exhaleHeap#_636_$_0,Mask_$_156,SecMask_$_198);
	assume wf(exhaleHeap#_636_$_0,Mask_$_156,SecMask_$_198);
	assume IsGoodMask(Mask_$_156);
	assume wf(exhaleHeap#_636_$_0,Mask_$_156,SecMask_$_198);
	assume predRec#_632_$_0 == exhaleHeap#_636_$_0[oldNext#4_$_0,Node.prev];
	assume predVer#_633_$_0 == exhaleHeap#_636_$_0[exhaleHeap#_636_$_0[oldNext#4_$_0,Node.prev],Node.invLeft];
	assume wf(exhaleHeap#_636_$_0,Mask_$_156,SecMask_$_198);
	assert { :msg "  87.17: SMOKE-TEST-47. (The statements after the fold statement are unreachable.)" } !(1 == 1);
	assume Heap_$_36 == exhaleHeap#_636_$_0;
	assume Mask_$_157 == Mask_$_156;
	assume cond#_621_$_1 <==> cond#_621_$_0;
	assume predRec#_622_$_2 == predRec#_622_$_1;
	assume predVer#_623_$_2 == predVer#_623_$_1;
	assume predFlag#_624_$_1 <==> predFlag#_624_$_0;
	assume SecMask_$_199 == SecMask_$_198;
	assume predRec#_632_$_1 == predRec#_632_$_0;
	assume predVer#_633_$_1 == predVer#_633_$_0;
	assume predFlag#_634_$_0 <==> true;
	goto anon451;
anon449:
	assume IsGoodMask(exhaleMask#_637_$_3);
	assume wf(Heap_$_35,exhaleMask#_637_$_3,SecMask_$_197);
	assume wf(Heap_$_35,Mask_$_155,SecMask_$_197);
	assume SecMask_$_198 == SecMask_$_197;
	assume exhaleMask#_637_$_4 == exhaleMask#_637_$_3;
	goto anon450;
anon1715_Then:
	assume $_$_condition_$284;
	assume $_$_condition_$284 <==> (!(Heap_$_36[oldNext#4_$_0,Node.prev] == null));
	assume !(Heap_$_36[oldNext#4_$_0,Node.prev] == null);
	assert { :msg "  89.13: Fold might fail because the definition of Node.inv does not hold. The expression at 18.41 might not evaluate to true." } MuBelow(Heap_$_36[Heap_$_36[oldNext#4_$_0,Node.prev],mu],Heap_$_36[oldNext#4_$_0,mu]);
	goto $branchMerge_80;
anon1715_Else:
	assume !$_$_condition_$284;
	assume $_$_condition_$284 <==> (!(Heap_$_36[oldNext#4_$_0,Node.prev] == null));
	assume Heap_$_36[oldNext#4_$_0,Node.prev] == null;
	goto $branchMerge_80;
anon1716_Then:
	assume $_$_condition_$285;
	assume $_$_condition_$285 <==> (!(Heap_$_36[oldNext#4_$_0,Node.next] == null));
	assume !(Heap_$_36[oldNext#4_$_0,Node.next] == null);
	assert { :msg "  89.13: Fold might fail because the definition of Node.inv does not hold. The expression at 19.42 might not evaluate to true." } MuBelow(Heap_$_36[oldNext#4_$_0,mu],Heap_$_36[Heap_$_36[oldNext#4_$_0,Node.next],mu]);
	goto anon455;
anon1716_Else:
	assume !$_$_condition_$285;
	assume $_$_condition_$285 <==> (!(Heap_$_36[oldNext#4_$_0,Node.next] == null));
	assume Heap_$_36[oldNext#4_$_0,Node.next] == null;
	goto anon455;
anon455:
	assert { :msg "  89.13: Fold might fail because the definition of Node.inv does not hold. The permission at 17.9 might not be positive." } 1 > 0;
	assert { :msg "  89.13: Fold might fail because the definition of Node.inv does not hold. Insufficient epsilons at 17.9  for Node.prev." } (Mask_$_157[oldNext#4_$_0,Node.prev][perm$R] == 0) ==> (1 <= Mask_$_157[oldNext#4_$_0,Node.prev][perm$N]);
	assume exhaleMask#_647_$_0 == Mask_$_157[oldNext#4_$_0,Node.prev := Mask_$_157[oldNext#4_$_0,Node.prev][perm$N := Mask_$_157[oldNext#4_$_0,Node.prev][perm$N] - 1]];
	assume wf(Heap_$_36,Mask_$_157,SecMask_$_199);
	assume 1 > 0;
	assume SecMask_$_200 == SecMask_$_199[oldNext#4_$_0,Node.prev := SecMask_$_199[oldNext#4_$_0,Node.prev][perm$N := SecMask_$_199[oldNext#4_$_0,Node.prev][perm$N] + 1]];
	assume wf(Heap_$_36,SecMask_$_200,SecMask_$_200);
	assume IsGoodMask(exhaleMask#_647_$_0);
	assume wf(Heap_$_36,exhaleMask#_647_$_0,SecMask_$_200);
	assume wf(Heap_$_36,Mask_$_157,SecMask_$_200);
	assert { :msg "  89.13: Fold might fail because the definition of Node.inv does not hold. The permission at 17.29 might not be positive." } 1 > 0;
	assert { :msg "  89.13: Fold might fail because the definition of Node.inv does not hold. Insufficient epsilons at 17.29  for Node.next." } (exhaleMask#_647_$_0[oldNext#4_$_0,Node.next][perm$R] == 0) ==> (1 <= exhaleMask#_647_$_0[oldNext#4_$_0,Node.next][perm$N]);
	assume exhaleMask#_647_$_1 == exhaleMask#_647_$_0[oldNext#4_$_0,Node.next := exhaleMask#_647_$_0[oldNext#4_$_0,Node.next][perm$N := exhaleMask#_647_$_0[oldNext#4_$_0,Node.next][perm$N] - 1]];
	assume wf(Heap_$_36,Mask_$_157,SecMask_$_200);
	assume 1 > 0;
	assume SecMask_$_201 == SecMask_$_200[oldNext#4_$_0,Node.next := SecMask_$_200[oldNext#4_$_0,Node.next][perm$N := SecMask_$_200[oldNext#4_$_0,Node.next][perm$N] + 1]];
	assume wf(Heap_$_36,SecMask_$_201,SecMask_$_201);
	assume IsGoodMask(exhaleMask#_647_$_1);
	assume wf(Heap_$_36,exhaleMask#_647_$_1,SecMask_$_201);
	assume wf(Heap_$_36,Mask_$_157,SecMask_$_201);
	assert { :msg "  89.13: Fold might fail because the definition of Node.inv does not hold. The permission at 17.49 might not be positive." } 1 > 0;
	assert { :msg "  89.13: Fold might fail because the definition of Node.inv does not hold. Insufficient epsilons at 17.49  for mu." } (exhaleMask#_647_$_1[oldNext#4_$_0,mu][perm$R] == 0) ==> (1 <= exhaleMask#_647_$_1[oldNext#4_$_0,mu][perm$N]);
	assume exhaleMask#_647_$_2 == exhaleMask#_647_$_1[oldNext#4_$_0,mu := exhaleMask#_647_$_1[oldNext#4_$_0,mu][perm$N := exhaleMask#_647_$_1[oldNext#4_$_0,mu][perm$N] - 1]];
	assume wf(Heap_$_36,Mask_$_157,SecMask_$_201);
	assume 1 > 0;
	assume SecMask_$_202 == SecMask_$_201[oldNext#4_$_0,mu := SecMask_$_201[oldNext#4_$_0,mu][perm$N := SecMask_$_201[oldNext#4_$_0,mu][perm$N] + 1]];
	assume wf(Heap_$_36,SecMask_$_202,SecMask_$_202);
	assume IsGoodMask(exhaleMask#_647_$_2);
	assume wf(Heap_$_36,exhaleMask#_647_$_2,SecMask_$_202);
	assume wf(Heap_$_36,Mask_$_157,SecMask_$_202);
	if ($_$_condition_$287) { goto anon1717_Then; } else { goto anon1717_Else; }
anon1717_Then:
	assume $_$_condition_$287;
	assume $_$_condition_$287 <==> (!(Heap_$_36[oldNext#4_$_0,Node.prev] == null));
	assume !(Heap_$_36[oldNext#4_$_0,Node.prev] == null);
	assert { :msg "  89.13: Fold might fail because the definition of Node.inv does not hold. The permission at 18.25 might not be positive." } Fractions(100) > 0;
	assert { :msg "  89.13: Fold might fail because the definition of Node.inv does not hold. Insufficient fraction at 18.25 for Node.invLeft." } (Fractions(100) <= exhaleMask#_647_$_2[Heap_$_36[oldNext#4_$_0,Node.prev],Node.invLeft][perm$R]) && ((Fractions(100) == exhaleMask#_647_$_2[Heap_$_36[oldNext#4_$_0,Node.prev],Node.invLeft][perm$R]) ==> (0 <= exhaleMask#_647_$_2[Heap_$_36[oldNext#4_$_0,Node.prev],Node.invLeft][perm$N]));
	assume exhaleMask#_647_$_3 == exhaleMask#_647_$_2[Heap_$_36[oldNext#4_$_0,Node.prev],Node.invLeft := exhaleMask#_647_$_2[Heap_$_36[oldNext#4_$_0,Node.prev],Node.invLeft][perm$R := exhaleMask#_647_$_2[Heap_$_36[oldNext#4_$_0,Node.prev],Node.invLeft][perm$R] - Fractions(100)]];
	assume Fractions(100) > 0;
	assume SecMask_$_203 == SecMask_$_202[Heap_$_36[oldNext#4_$_0,Node.prev],Node.invLeft := SecMask_$_202[Heap_$_36[oldNext#4_$_0,Node.prev],Node.invLeft][perm$R := SecMask_$_202[Heap_$_36[oldNext#4_$_0,Node.prev],Node.invLeft][perm$R] + Fractions(100)]];
	if ($_$_condition_$288) { goto anon1718_Then; } else { goto anon1718_Else; }
anon1717_Else:
	assume !$_$_condition_$287;
	assume $_$_condition_$287 <==> (!(Heap_$_36[oldNext#4_$_0,Node.prev] == null));
	assume Heap_$_36[oldNext#4_$_0,Node.prev] == null;
	assume SecMask_$_204 == SecMask_$_202;
	assume exhaleMask#_647_$_4 == exhaleMask#_647_$_2;
	goto $branchMerge_81;
anon1718_Then:
	assume $_$_condition_$288;
	assume $_$_condition_$288 <==> (!CanRead(exhaleMask#_647_$_3,SecMask_$_203,Heap_$_36[oldNext#4_$_0,Node.prev],Node.invLeft));
	assume !CanRead(exhaleMask#_647_$_3,SecMask_$_203,Heap_$_36[oldNext#4_$_0,Node.prev],Node.invLeft);
	assume Heap_$_36[Heap_$_36[oldNext#4_$_0,Node.prev],Node.invLeft] < exhaleHeap#_646_$_0[Heap_$_36[oldNext#4_$_0,Node.prev],Node.invLeft];
	goto anon458;
anon1718_Else:
	assume !$_$_condition_$288;
	assume $_$_condition_$288 <==> (!CanRead(exhaleMask#_647_$_3,SecMask_$_203,Heap_$_36[oldNext#4_$_0,Node.prev],Node.invLeft));
	assume CanRead(exhaleMask#_647_$_3,SecMask_$_203,Heap_$_36[oldNext#4_$_0,Node.prev],Node.invLeft);
	goto anon458;
anon1719_Then:
	assume $_$_condition_$289;
	assume $_$_condition_$289 <==> (!(Heap_$_36[oldNext#4_$_0,Node.next] == null));
	assume !(Heap_$_36[oldNext#4_$_0,Node.next] == null);
	assert { :msg "  89.13: Fold might fail because the definition of Node.inv does not hold. The permission at 19.25 might not be positive." } Fractions(100) > 0;
	assert { :msg "  89.13: Fold might fail because the definition of Node.inv does not hold. Insufficient fraction at 19.25 for Node.invRight." } (Fractions(100) <= exhaleMask#_647_$_4[Heap_$_36[oldNext#4_$_0,Node.next],Node.invRight][perm$R]) && ((Fractions(100) == exhaleMask#_647_$_4[Heap_$_36[oldNext#4_$_0,Node.next],Node.invRight][perm$R]) ==> (0 <= exhaleMask#_647_$_4[Heap_$_36[oldNext#4_$_0,Node.next],Node.invRight][perm$N]));
	assume exhaleMask#_647_$_5 == exhaleMask#_647_$_4[Heap_$_36[oldNext#4_$_0,Node.next],Node.invRight := exhaleMask#_647_$_4[Heap_$_36[oldNext#4_$_0,Node.next],Node.invRight][perm$R := exhaleMask#_647_$_4[Heap_$_36[oldNext#4_$_0,Node.next],Node.invRight][perm$R] - Fractions(100)]];
	assume Fractions(100) > 0;
	assume SecMask_$_205 == SecMask_$_204[Heap_$_36[oldNext#4_$_0,Node.next],Node.invRight := SecMask_$_204[Heap_$_36[oldNext#4_$_0,Node.next],Node.invRight][perm$R := SecMask_$_204[Heap_$_36[oldNext#4_$_0,Node.next],Node.invRight][perm$R] + Fractions(100)]];
	if ($_$_condition_$291) { goto anon1720_Then; } else { goto anon1720_Else; }
anon1719_Else:
	assume !$_$_condition_$289;
	assume $_$_condition_$289 <==> (!(Heap_$_36[oldNext#4_$_0,Node.next] == null));
	assume Heap_$_36[oldNext#4_$_0,Node.next] == null;
	assume exhaleMask#_647_$_6 == exhaleMask#_647_$_4;
	assume SecMask_$_206 == SecMask_$_204;
	goto anon463;
anon458:
	assume IsGoodMask(exhaleMask#_647_$_3);
	assume wf(Heap_$_36,exhaleMask#_647_$_3,SecMask_$_203);
	assume wf(Heap_$_36,Mask_$_157,SecMask_$_203);
	assume SecMask_$_204 == SecMask_$_203;
	assume exhaleMask#_647_$_4 == exhaleMask#_647_$_3;
	goto $branchMerge_81;
anon1720_Then:
	assume $_$_condition_$291;
	assume $_$_condition_$291 <==> (!CanRead(exhaleMask#_647_$_5,SecMask_$_205,Heap_$_36[oldNext#4_$_0,Node.next],Node.invRight));
	assume !CanRead(exhaleMask#_647_$_5,SecMask_$_205,Heap_$_36[oldNext#4_$_0,Node.next],Node.invRight);
	assume Heap_$_36[Heap_$_36[oldNext#4_$_0,Node.next],Node.invRight] < exhaleHeap#_646_$_0[Heap_$_36[oldNext#4_$_0,Node.next],Node.invRight];
	goto anon462;
anon1720_Else:
	assume !$_$_condition_$291;
	assume $_$_condition_$291 <==> (!CanRead(exhaleMask#_647_$_5,SecMask_$_205,Heap_$_36[oldNext#4_$_0,Node.next],Node.invRight));
	assume CanRead(exhaleMask#_647_$_5,SecMask_$_205,Heap_$_36[oldNext#4_$_0,Node.next],Node.invRight);
	goto anon462;
anon463:
	assume IsGoodExhaleState(exhaleHeap#_646_$_0,Heap_$_36,exhaleMask#_647_$_6,SecMask_$_206);
	assume IsGoodMask(exhaleMask#_647_$_6);
	assume wf(exhaleHeap#_646_$_0,exhaleMask#_647_$_6,SecMask_$_206);
	assume !(oldNext#4_$_0 == null);
	assume wf(exhaleHeap#_646_$_0,exhaleMask#_647_$_6,SecMask_$_206);
	assume Fractions(100) > 0;
	assume Mask_$_158 == exhaleMask#_647_$_6[oldNext#4_$_0,Node.inv := exhaleMask#_647_$_6[oldNext#4_$_0,Node.inv][perm$R := exhaleMask#_647_$_6[oldNext#4_$_0,Node.inv][perm$R] + Fractions(100)]];
	assume IsGoodMask(Mask_$_158);
	assume IsGoodState(heapFragment(exhaleHeap#_646_$_0[oldNext#4_$_0,Node.inv]));
	assume wf(exhaleHeap#_646_$_0,Mask_$_158,SecMask_$_206);
	assume wf(exhaleHeap#_646_$_0,Mask_$_158,SecMask_$_206);
	assume IsGoodMask(Mask_$_158);
	assume wf(exhaleHeap#_646_$_0,Mask_$_158,SecMask_$_206);
	assume predVer#_643_$_0 == exhaleHeap#_646_$_0[oldNext#4_$_0,Node.inv];
	assume wf(exhaleHeap#_646_$_0,Mask_$_158,SecMask_$_206);
	assert { :msg "  89.13: SMOKE-TEST-48. (The statements after the fold statement are unreachable.)" } !(1 == 1);
	assume cond#_621_$_2 <==> cond#_621_$_1;
	assume Heap_$_37 == exhaleHeap#_646_$_0;
	assume Mask_$_159 == Mask_$_158;
	assume cond#_609_$_1 <==> cond#_609_$_0;
	assume predRec#_610_$_2 == predRec#_610_$_1;
	assume predVer#_611_$_2 == predVer#_611_$_1;
	assume predFlag#_612_$_1 <==> predFlag#_612_$_0;
	assume cond#_620_$_1 <==> cond#_620_$_0;
	assume predRec#_622_$_3 == predRec#_622_$_2;
	assume predVer#_623_$_3 == predVer#_623_$_2;
	assume predFlag#_624_$_2 <==> predFlag#_624_$_1;
	assume SecMask_$_207 == SecMask_$_206;
	assume predRec#_632_$_2 == predRec#_632_$_1;
	assume predVer#_633_$_2 == predVer#_633_$_1;
	assume predFlag#_634_$_1 <==> predFlag#_634_$_0;
	assume predRec#_642_$_0 == oldNext#4_$_0;
	assume predVer#_643_$_1 == predVer#_643_$_0;
	assume predFlag#_644_$_0 <==> true;
	goto anon464;
anon462:
	assume IsGoodMask(exhaleMask#_647_$_5);
	assume wf(Heap_$_36,exhaleMask#_647_$_5,SecMask_$_205);
	assume wf(Heap_$_36,Mask_$_157,SecMask_$_205);
	assume exhaleMask#_647_$_6 == exhaleMask#_647_$_5;
	assume SecMask_$_206 == SecMask_$_205;
	goto anon463;
anon1721_Then:
	assume $_$_condition_$292;
	assume $_$_condition_$292 <==> (((false || ((((((((((((((((((((((predVer#_643_$_1 == Heap_$_37[this,Node.inv]) && (predRec#_642_$_0 == this)) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_644_$_0)) || ((((((((((((((((((predVer#_598_$_0 == Heap_$_37[this,Node.inv]) && (this == this)) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_476_$_0) && cond#_430_$_1) && cond#_452_$_0) && true)) || ((((predVer#_321_$_0 == Heap_$_37[this,Node.inv]) && (this == this)) && true) && true));
	assume ((false || ((((((((((((((((((((((predVer#_643_$_1 == Heap_$_37[this,Node.inv]) && (predRec#_642_$_0 == this)) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_644_$_0)) || ((((((((((((((((((predVer#_598_$_0 == Heap_$_37[this,Node.inv]) && (this == this)) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_476_$_0) && cond#_430_$_1) && cond#_452_$_0) && true)) || ((((predVer#_321_$_0 == Heap_$_37[this,Node.inv]) && (this == this)) && true) && true);
	if ($_$_condition_$293) { goto anon1722_Then; } else { goto anon1722_Else; }
anon1721_Else:
	assume !$_$_condition_$292;
	assume $_$_condition_$292 <==> (((false || ((((((((((((((((((((((predVer#_643_$_1 == Heap_$_37[this,Node.inv]) && (predRec#_642_$_0 == this)) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_644_$_0)) || ((((((((((((((((((predVer#_598_$_0 == Heap_$_37[this,Node.inv]) && (this == this)) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_476_$_0) && cond#_430_$_1) && cond#_452_$_0) && true)) || ((((predVer#_321_$_0 == Heap_$_37[this,Node.inv]) && (this == this)) && true) && true));
	assume !(((false || ((((((((((((((((((((((predVer#_643_$_1 == Heap_$_37[this,Node.inv]) && (predRec#_642_$_0 == this)) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_644_$_0)) || ((((((((((((((((((predVer#_598_$_0 == Heap_$_37[this,Node.inv]) && (this == this)) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_476_$_0) && cond#_430_$_1) && cond#_452_$_0) && true)) || ((((predVer#_321_$_0 == Heap_$_37[this,Node.inv]) && (this == this)) && true) && true));
	assume SecMask_$_533 == SecMask_$_207;
	goto $branchMerge_82;
anon1722_Then:
	assume $_$_condition_$293;
	assume $_$_condition_$293 <==> ((((predVer#_321_$_0 == Heap_$_37[this,Node.inv]) && (this == this)) && true) && true);
	assume (((predVer#_321_$_0 == Heap_$_37[this,Node.inv]) && (this == this)) && true) && true;
	goto $branchMerge_83;
anon1722_Else:
	assume !$_$_condition_$293;
	assume $_$_condition_$293 <==> ((((predVer#_321_$_0 == Heap_$_37[this,Node.inv]) && (this == this)) && true) && true);
	assume !((((predVer#_321_$_0 == Heap_$_37[this,Node.inv]) && (this == this)) && true) && true);
	if ($_$_condition_$296) { goto anon1723_Then; } else { goto anon1723_Else; }
anon1964_Then:
	assume $_$_condition_$294;
	assume $_$_condition_$294 <==> (!CanRead(exhaleMask#_654_$_0,SecMask_$_533,this,Node.inv));
	assume !CanRead(exhaleMask#_654_$_0,SecMask_$_533,this,Node.inv);
	assume Heap_$_37[this,Node.inv] < exhaleHeap#_653_$_0[this,Node.inv];
	goto anon975;
anon1964_Else:
	assume !$_$_condition_$294;
	assume $_$_condition_$294 <==> (!CanRead(exhaleMask#_654_$_0,SecMask_$_533,this,Node.inv));
	assume CanRead(exhaleMask#_654_$_0,SecMask_$_533,this,Node.inv);
	goto anon975;
anon1724_Then:
	assume $_$_condition_$295;
	assume $_$_condition_$295 <==> (!(Heap_$_37[this,Node.prev] == null));
	assume !(Heap_$_37[this,Node.prev] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[this,Node.prev],mu],Heap_$_37[this,mu]);
	goto $branchMerge_84;
anon1724_Else:
	assume !$_$_condition_$295;
	assume $_$_condition_$295 <==> (!(Heap_$_37[this,Node.prev] == null));
	assume Heap_$_37[this,Node.prev] == null;
	goto $branchMerge_84;
anon1723_Then:
	assume $_$_condition_$296;
	assume $_$_condition_$296 <==> ((((((((((((((((((predVer#_598_$_0 == Heap_$_37[this,Node.inv]) && (this == this)) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_476_$_0) && cond#_430_$_1) && cond#_452_$_0) && true);
	assume (((((((((((((((((predVer#_598_$_0 == Heap_$_37[this,Node.inv]) && (this == this)) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_476_$_0) && cond#_430_$_1) && cond#_452_$_0) && true;
	goto $branchMerge_83;
anon1723_Else:
	assume !$_$_condition_$296;
	assume $_$_condition_$296 <==> ((((((((((((((((((predVer#_598_$_0 == Heap_$_37[this,Node.inv]) && (this == this)) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_476_$_0) && cond#_430_$_1) && cond#_452_$_0) && true);
	assume !((((((((((((((((((predVer#_598_$_0 == Heap_$_37[this,Node.inv]) && (this == this)) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_476_$_0) && cond#_430_$_1) && cond#_452_$_0) && true);
	goto $branchMerge_83;
anon1725_Then:
	assume $_$_condition_$299;
	assume $_$_condition_$299 <==> (!(Heap_$_37[this,Node.next] == null));
	assume !(Heap_$_37[this,Node.next] == null);
	assume MuBelow(Heap_$_37[this,mu],Heap_$_37[Heap_$_37[this,Node.next],mu]);
	goto anon474;
anon1725_Else:
	assume !$_$_condition_$299;
	assume $_$_condition_$299 <==> (!(Heap_$_37[this,Node.next] == null));
	assume Heap_$_37[this,Node.next] == null;
	goto anon474;
anon474:
	assume SecMask_$_208 == SecMask_$_207[this,Node.prev := SecMask_$_207[this,Node.prev][perm$N := SecMask_$_207[this,Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_208);
	if ($_$_condition_$301) { goto anon1726_Then; } else { goto anon1726_Else; }
anon1726_Then:
	assume $_$_condition_$301;
	assume SecMask_$_208[this,Node.prev][perm$N] < 0;
	assume SecMask_$_209 == SecMask_$_208[this,Node.prev := SecMask_$_208[this,Node.prev][perm$N := 0]];
	assume SecMask_$_210 == SecMask_$_209;
	goto anon476;
anon1726_Else:
	assume !$_$_condition_$301;
	assume 0 <= SecMask_$_208[this,Node.prev][perm$N];
	assume SecMask_$_210 == SecMask_$_208;
	goto anon476;
anon476:
	assume wf(Heap_$_37,SecMask_$_210,SecMask_$_210);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_210);
	assume SecMask_$_211 == SecMask_$_210[this,Node.next := SecMask_$_210[this,Node.next][perm$N := SecMask_$_210[this,Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_211);
	if ($_$_condition_$302) { goto anon1727_Then; } else { goto anon1727_Else; }
anon1727_Then:
	assume $_$_condition_$302;
	assume SecMask_$_211[this,Node.next][perm$N] < 0;
	assume SecMask_$_212 == SecMask_$_211[this,Node.next := SecMask_$_211[this,Node.next][perm$N := 0]];
	assume SecMask_$_213 == SecMask_$_212;
	goto anon478;
anon1727_Else:
	assume !$_$_condition_$302;
	assume 0 <= SecMask_$_211[this,Node.next][perm$N];
	assume SecMask_$_213 == SecMask_$_211;
	goto anon478;
anon478:
	assume wf(Heap_$_37,SecMask_$_213,SecMask_$_213);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_213);
	assume SecMask_$_214 == SecMask_$_213[this,mu := SecMask_$_213[this,mu][perm$N := SecMask_$_213[this,mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_214);
	if ($_$_condition_$303) { goto anon1728_Then; } else { goto anon1728_Else; }
anon1728_Then:
	assume $_$_condition_$303;
	assume SecMask_$_214[this,mu][perm$N] < 0;
	assume SecMask_$_215 == SecMask_$_214[this,mu := SecMask_$_214[this,mu][perm$N := 0]];
	assume SecMask_$_216 == SecMask_$_215;
	goto anon480;
anon1728_Else:
	assume !$_$_condition_$303;
	assume 0 <= SecMask_$_214[this,mu][perm$N];
	assume SecMask_$_216 == SecMask_$_214;
	goto anon480;
anon480:
	assume wf(Heap_$_37,SecMask_$_216,SecMask_$_216);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_216);
	if ($_$_condition_$304) { goto anon1729_Then; } else { goto anon1729_Else; }
anon1729_Then:
	assume $_$_condition_$304;
	assume $_$_condition_$304 <==> (!(Heap_$_37[this,Node.prev] == null));
	assume !(Heap_$_37[this,Node.prev] == null);
	assume SecMask_$_217 == SecMask_$_216[Heap_$_37[this,Node.prev],Node.invLeft := SecMask_$_216[Heap_$_37[this,Node.prev],Node.invLeft][perm$R := SecMask_$_216[Heap_$_37[this,Node.prev],Node.invLeft][perm$R] - Fractions(100)]];
	if ($_$_condition_$305) { goto anon1730_Then; } else { goto anon1730_Else; }
anon1729_Else:
	assume !$_$_condition_$304;
	assume $_$_condition_$304 <==> (!(Heap_$_37[this,Node.prev] == null));
	assume Heap_$_37[this,Node.prev] == null;
	assume SecMask_$_374 == SecMask_$_216;
	goto $branchMerge_85;
anon1730_Then:
	assume $_$_condition_$305;
	assume SecMask_$_217[Heap_$_37[this,Node.prev],Node.invLeft][perm$R] < 0;
	assume SecMask_$_218 == SecMask_$_217[Heap_$_37[this,Node.prev],Node.invLeft := SecMask_$_217[Heap_$_37[this,Node.prev],Node.invLeft][perm$R := 0]];
	assume SecMask_$_219 == SecMask_$_218;
	goto $branchMerge_86;
anon1730_Else:
	assume !$_$_condition_$305;
	assume 0 <= SecMask_$_217[Heap_$_37[this,Node.prev],Node.invLeft][perm$R];
	assume SecMask_$_219 == SecMask_$_217;
	goto $branchMerge_86;
anon1852_Then:
	assume $_$_condition_$306;
	assume $_$_condition_$306 <==> (!(Heap_$_37[this,Node.next] == null));
	assume !(Heap_$_37[this,Node.next] == null);
	assume SecMask_$_375 == SecMask_$_374[Heap_$_37[this,Node.next],Node.invRight := SecMask_$_374[Heap_$_37[this,Node.next],Node.invRight][perm$R := SecMask_$_374[Heap_$_37[this,Node.next],Node.invRight][perm$R] - Fractions(100)]];
	if ($_$_condition_$474) { goto anon1853_Then; } else { goto anon1853_Else; }
anon1852_Else:
	assume !$_$_condition_$306;
	assume $_$_condition_$306 <==> (!(Heap_$_37[this,Node.next] == null));
	assume Heap_$_37[this,Node.next] == null;
	assume SecMask_$_532 == SecMask_$_374;
	goto anon972;
anon1731_Then:
	assume $_$_condition_$307;
	assume $_$_condition_$307 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[this,Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[this,Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[this,Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[this,Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[this,Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[this,Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[this,Node.prev])) && true) && predFlag#_348_$_0));
	assume ((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[this,Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[this,Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[this,Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[this,Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[this,Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[this,Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[this,Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$309) { goto anon1732_Then; } else { goto anon1732_Else; }
anon1731_Else:
	assume !$_$_condition_$307;
	assume $_$_condition_$307 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[this,Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[this,Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[this,Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[this,Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[this,Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[this,Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[this,Node.prev])) && true) && predFlag#_348_$_0));
	assume !(((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[this,Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[this,Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[this,Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[this,Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[this,Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[this,Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[this,Node.prev])) && true) && predFlag#_348_$_0));
	assume SecMask_$_373 == SecMask_$_219;
	goto anon736;
anon1732_Then:
	assume $_$_condition_$309;
	assume $_$_condition_$309 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[this,Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[this,Node.prev])) && true) && predFlag#_348_$_0);
	assume (((predVer#_347_$_1 == Heap_$_37[Heap_$_37[this,Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[this,Node.prev])) && true) && predFlag#_348_$_0;
	goto $branchMerge_87;
anon1732_Else:
	assume !$_$_condition_$309;
	assume $_$_condition_$309 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[this,Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[this,Node.prev])) && true) && predFlag#_348_$_0);
	assume !((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[this,Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[this,Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$311) { goto anon1733_Then; } else { goto anon1733_Else; }
anon736:
	assume wf(Heap_$_37,SecMask_$_373,SecMask_$_373);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_373);
	assume SecMask_$_374 == SecMask_$_373;
	goto $branchMerge_85;
anon1736_Then:
	assume $_$_condition_$310;
	assume $_$_condition_$310 <==> (!(Heap_$_37[Heap_$_37[this,Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[this,Node.prev],Node.prev] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],mu],Heap_$_37[Heap_$_37[this,Node.prev],mu]);
	goto anon495;
anon1736_Else:
	assume !$_$_condition_$310;
	assume $_$_condition_$310 <==> (!(Heap_$_37[Heap_$_37[this,Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[this,Node.prev],Node.prev] == null;
	goto anon495;
anon1733_Then:
	assume $_$_condition_$311;
	assume $_$_condition_$311 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[this,Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume ((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[this,Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1;
	goto $branchMerge_87;
anon1733_Else:
	assume !$_$_condition_$311;
	assume $_$_condition_$311 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[this,Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume !(((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[this,Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	if ($_$_condition_$313) { goto anon1734_Then; } else { goto anon1734_Else; }
anon1734_Then:
	assume $_$_condition_$313;
	assume $_$_condition_$313 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[this,Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume (((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[this,Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1;
	goto $branchMerge_87;
anon1734_Else:
	assume !$_$_condition_$313;
	assume $_$_condition_$313 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[this,Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume !((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[this,Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	if ($_$_condition_$315) { goto anon1735_Then; } else { goto anon1735_Else; }
anon1735_Then:
	assume $_$_condition_$315;
	assume $_$_condition_$315 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[this,Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[this,Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume (((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[this,Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[this,Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2;
	goto $branchMerge_87;
anon1735_Else:
	assume !$_$_condition_$315;
	assume $_$_condition_$315 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[this,Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[this,Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume !((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[this,Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[this,Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	goto $branchMerge_87;
anon495:
	assume SecMask_$_220 == SecMask_$_219[Heap_$_37[this,Node.prev],Node.prev := SecMask_$_219[Heap_$_37[this,Node.prev],Node.prev][perm$N := SecMask_$_219[Heap_$_37[this,Node.prev],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_220);
	if ($_$_condition_$318) { goto anon1737_Then; } else { goto anon1737_Else; }
anon1737_Then:
	assume $_$_condition_$318;
	assume SecMask_$_220[Heap_$_37[this,Node.prev],Node.prev][perm$N] < 0;
	assume SecMask_$_221 == SecMask_$_220[Heap_$_37[this,Node.prev],Node.prev := SecMask_$_220[Heap_$_37[this,Node.prev],Node.prev][perm$N := 0]];
	assume SecMask_$_222 == SecMask_$_221;
	goto anon497;
anon1737_Else:
	assume !$_$_condition_$318;
	assume 0 <= SecMask_$_220[Heap_$_37[this,Node.prev],Node.prev][perm$N];
	assume SecMask_$_222 == SecMask_$_220;
	goto anon497;
anon497:
	assume wf(Heap_$_37,SecMask_$_222,SecMask_$_222);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_222);
	assume SecMask_$_223 == SecMask_$_222[Heap_$_37[this,Node.prev],Node.next := SecMask_$_222[Heap_$_37[this,Node.prev],Node.next][perm$N := SecMask_$_222[Heap_$_37[this,Node.prev],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_223);
	if ($_$_condition_$319) { goto anon1738_Then; } else { goto anon1738_Else; }
anon1738_Then:
	assume $_$_condition_$319;
	assume SecMask_$_223[Heap_$_37[this,Node.prev],Node.next][perm$N] < 0;
	assume SecMask_$_224 == SecMask_$_223[Heap_$_37[this,Node.prev],Node.next := SecMask_$_223[Heap_$_37[this,Node.prev],Node.next][perm$N := 0]];
	assume SecMask_$_225 == SecMask_$_224;
	goto anon499;
anon1738_Else:
	assume !$_$_condition_$319;
	assume 0 <= SecMask_$_223[Heap_$_37[this,Node.prev],Node.next][perm$N];
	assume SecMask_$_225 == SecMask_$_223;
	goto anon499;
anon499:
	assume wf(Heap_$_37,SecMask_$_225,SecMask_$_225);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_225);
	assume SecMask_$_226 == SecMask_$_225[Heap_$_37[this,Node.prev],mu := SecMask_$_225[Heap_$_37[this,Node.prev],mu][perm$N := SecMask_$_225[Heap_$_37[this,Node.prev],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_226);
	if ($_$_condition_$320) { goto anon1739_Then; } else { goto anon1739_Else; }
anon1739_Then:
	assume $_$_condition_$320;
	assume SecMask_$_226[Heap_$_37[this,Node.prev],mu][perm$N] < 0;
	assume SecMask_$_227 == SecMask_$_226[Heap_$_37[this,Node.prev],mu := SecMask_$_226[Heap_$_37[this,Node.prev],mu][perm$N := 0]];
	assume SecMask_$_228 == SecMask_$_227;
	goto anon501;
anon1739_Else:
	assume !$_$_condition_$320;
	assume 0 <= SecMask_$_226[Heap_$_37[this,Node.prev],mu][perm$N];
	assume SecMask_$_228 == SecMask_$_226;
	goto anon501;
anon501:
	assume wf(Heap_$_37,SecMask_$_228,SecMask_$_228);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_228);
	if ($_$_condition_$321) { goto anon1740_Then; } else { goto anon1740_Else; }
anon1740_Then:
	assume $_$_condition_$321;
	assume $_$_condition_$321 <==> (!(Heap_$_37[Heap_$_37[this,Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[this,Node.prev],Node.prev] == null);
	assume SecMask_$_229 == SecMask_$_228[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft := SecMask_$_228[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft][perm$R := SecMask_$_228[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft][perm$R] - Fractions(100)]];
	if ($_$_condition_$322) { goto anon1741_Then; } else { goto anon1741_Else; }
anon1740_Else:
	assume !$_$_condition_$321;
	assume $_$_condition_$321 <==> (!(Heap_$_37[Heap_$_37[this,Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[this,Node.prev],Node.prev] == null;
	assume SecMask_$_372 == SecMask_$_228;
	goto anon735;
anon1741_Then:
	assume $_$_condition_$322;
	assume SecMask_$_229[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft][perm$R] < 0;
	assume SecMask_$_230 == SecMask_$_229[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft := SecMask_$_229[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft][perm$R := 0]];
	assume SecMask_$_231 == SecMask_$_230;
	goto anon504;
anon1741_Else:
	assume !$_$_condition_$322;
	assume 0 <= SecMask_$_229[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft][perm$R];
	assume SecMask_$_231 == SecMask_$_229;
	goto anon504;
anon735:
	assume wf(Heap_$_37,SecMask_$_372,SecMask_$_372);
	assume SecMask_$_373 == SecMask_$_372;
	goto anon736;
anon504:
	assume !(Heap_$_37[Heap_$_37[this,Node.prev],Node.prev] == Heap_$_37[this,Node.prev]);
	if ($_$_condition_$323) { goto anon1742_Then; } else { goto anon1742_Else; }
anon1742_Then:
	assume $_$_condition_$323;
	assume $_$_condition_$323 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume ((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$324) { goto anon1743_Then; } else { goto anon1743_Else; }
anon1742_Else:
	assume !$_$_condition_$323;
	assume $_$_condition_$323 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume !(((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume SecMask_$_371 == SecMask_$_231;
	goto anon734;
anon1743_Then:
	assume $_$_condition_$324;
	assume $_$_condition_$324 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume (((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev])) && true) && predFlag#_348_$_0;
	goto $branchMerge_88;
anon1743_Else:
	assume !$_$_condition_$324;
	assume $_$_condition_$324 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume !((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$326) { goto anon1744_Then; } else { goto anon1744_Else; }
anon734:
	assume wf(Heap_$_37,SecMask_$_371,SecMask_$_371);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_371);
	assume SecMask_$_372 == SecMask_$_371;
	goto anon735;
anon1747_Then:
	assume $_$_condition_$325;
	assume $_$_condition_$325 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],mu],Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],mu]);
	goto anon516;
anon1747_Else:
	assume !$_$_condition_$325;
	assume $_$_condition_$325 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev] == null;
	goto anon516;
anon1744_Then:
	assume $_$_condition_$326;
	assume $_$_condition_$326 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume ((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1;
	goto $branchMerge_88;
anon1744_Else:
	assume !$_$_condition_$326;
	assume $_$_condition_$326 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume !(((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	if ($_$_condition_$328) { goto anon1745_Then; } else { goto anon1745_Else; }
anon1745_Then:
	assume $_$_condition_$328;
	assume $_$_condition_$328 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume (((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1;
	goto $branchMerge_88;
anon1745_Else:
	assume !$_$_condition_$328;
	assume $_$_condition_$328 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume !((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	if ($_$_condition_$330) { goto anon1746_Then; } else { goto anon1746_Else; }
anon1746_Then:
	assume $_$_condition_$330;
	assume $_$_condition_$330 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume (((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2;
	goto $branchMerge_88;
anon1746_Else:
	assume !$_$_condition_$330;
	assume $_$_condition_$330 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume !((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	goto $branchMerge_88;
anon516:
	assume SecMask_$_232 == SecMask_$_231[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev := SecMask_$_231[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev][perm$N := SecMask_$_231[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_232);
	if ($_$_condition_$333) { goto anon1748_Then; } else { goto anon1748_Else; }
anon1748_Then:
	assume $_$_condition_$333;
	assume SecMask_$_232[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev][perm$N] < 0;
	assume SecMask_$_233 == SecMask_$_232[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev := SecMask_$_232[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev][perm$N := 0]];
	assume SecMask_$_234 == SecMask_$_233;
	goto anon518;
anon1748_Else:
	assume !$_$_condition_$333;
	assume 0 <= SecMask_$_232[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev][perm$N];
	assume SecMask_$_234 == SecMask_$_232;
	goto anon518;
anon518:
	assume wf(Heap_$_37,SecMask_$_234,SecMask_$_234);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_234);
	assume SecMask_$_235 == SecMask_$_234[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.next := SecMask_$_234[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.next][perm$N := SecMask_$_234[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_235);
	if ($_$_condition_$334) { goto anon1749_Then; } else { goto anon1749_Else; }
anon1749_Then:
	assume $_$_condition_$334;
	assume SecMask_$_235[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.next][perm$N] < 0;
	assume SecMask_$_236 == SecMask_$_235[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.next := SecMask_$_235[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.next][perm$N := 0]];
	assume SecMask_$_237 == SecMask_$_236;
	goto anon520;
anon1749_Else:
	assume !$_$_condition_$334;
	assume 0 <= SecMask_$_235[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.next][perm$N];
	assume SecMask_$_237 == SecMask_$_235;
	goto anon520;
anon520:
	assume wf(Heap_$_37,SecMask_$_237,SecMask_$_237);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_237);
	assume SecMask_$_238 == SecMask_$_237[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],mu := SecMask_$_237[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],mu][perm$N := SecMask_$_237[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_238);
	if ($_$_condition_$335) { goto anon1750_Then; } else { goto anon1750_Else; }
anon1750_Then:
	assume $_$_condition_$335;
	assume SecMask_$_238[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],mu][perm$N] < 0;
	assume SecMask_$_239 == SecMask_$_238[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],mu := SecMask_$_238[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],mu][perm$N := 0]];
	assume SecMask_$_240 == SecMask_$_239;
	goto anon522;
anon1750_Else:
	assume !$_$_condition_$335;
	assume 0 <= SecMask_$_238[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],mu][perm$N];
	assume SecMask_$_240 == SecMask_$_238;
	goto anon522;
anon522:
	assume wf(Heap_$_37,SecMask_$_240,SecMask_$_240);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_240);
	if ($_$_condition_$336) { goto anon1751_Then; } else { goto anon1751_Else; }
anon1751_Then:
	assume $_$_condition_$336;
	assume $_$_condition_$336 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev] == null);
	assume SecMask_$_241 == SecMask_$_240[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_240[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := SecMask_$_240[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] - Fractions(100)]];
	if ($_$_condition_$337) { goto anon1752_Then; } else { goto anon1752_Else; }
anon1751_Else:
	assume !$_$_condition_$336;
	assume $_$_condition_$336 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev] == null;
	assume SecMask_$_370 == SecMask_$_240;
	goto anon733;
anon1752_Then:
	assume $_$_condition_$337;
	assume SecMask_$_241[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] < 0;
	assume SecMask_$_242 == SecMask_$_241[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_241[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := 0]];
	assume SecMask_$_243 == SecMask_$_242;
	goto anon525;
anon1752_Else:
	assume !$_$_condition_$337;
	assume 0 <= SecMask_$_241[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R];
	assume SecMask_$_243 == SecMask_$_241;
	goto anon525;
anon733:
	assume wf(Heap_$_37,SecMask_$_370,SecMask_$_370);
	assume SecMask_$_371 == SecMask_$_370;
	goto anon734;
anon525:
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev] == Heap_$_37[this,Node.prev]);
	if ($_$_condition_$338) { goto anon1753_Then; } else { goto anon1753_Else; }
anon1753_Then:
	assume $_$_condition_$338;
	assume $_$_condition_$338 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume ((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$339) { goto anon1754_Then; } else { goto anon1754_Else; }
anon1753_Else:
	assume !$_$_condition_$338;
	assume $_$_condition_$338 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume !(((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume SecMask_$_369 == SecMask_$_243;
	goto anon732;
anon1754_Then:
	assume $_$_condition_$339;
	assume $_$_condition_$339 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume (((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0;
	goto $branchMerge_89;
anon1754_Else:
	assume !$_$_condition_$339;
	assume $_$_condition_$339 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume !((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$341) { goto anon1755_Then; } else { goto anon1755_Else; }
anon732:
	assume wf(Heap_$_37,SecMask_$_369,SecMask_$_369);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_369);
	assume SecMask_$_370 == SecMask_$_369;
	goto anon733;
anon1758_Then:
	assume $_$_condition_$340;
	assume $_$_condition_$340 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],mu],Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],mu]);
	goto anon537;
anon1758_Else:
	assume !$_$_condition_$340;
	assume $_$_condition_$340 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev] == null;
	goto anon537;
anon1755_Then:
	assume $_$_condition_$341;
	assume $_$_condition_$341 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume ((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1;
	goto $branchMerge_89;
anon1755_Else:
	assume !$_$_condition_$341;
	assume $_$_condition_$341 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume !(((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	if ($_$_condition_$343) { goto anon1756_Then; } else { goto anon1756_Else; }
anon1756_Then:
	assume $_$_condition_$343;
	assume $_$_condition_$343 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume (((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1;
	goto $branchMerge_89;
anon1756_Else:
	assume !$_$_condition_$343;
	assume $_$_condition_$343 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume !((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	if ($_$_condition_$345) { goto anon1757_Then; } else { goto anon1757_Else; }
anon1757_Then:
	assume $_$_condition_$345;
	assume $_$_condition_$345 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume (((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2;
	goto $branchMerge_89;
anon1757_Else:
	assume !$_$_condition_$345;
	assume $_$_condition_$345 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume !((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	goto $branchMerge_89;
anon537:
	assume SecMask_$_244 == SecMask_$_243[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev := SecMask_$_243[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev][perm$N := SecMask_$_243[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_244);
	if ($_$_condition_$348) { goto anon1759_Then; } else { goto anon1759_Else; }
anon1759_Then:
	assume $_$_condition_$348;
	assume SecMask_$_244[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev][perm$N] < 0;
	assume SecMask_$_245 == SecMask_$_244[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev := SecMask_$_244[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev][perm$N := 0]];
	assume SecMask_$_246 == SecMask_$_245;
	goto anon539;
anon1759_Else:
	assume !$_$_condition_$348;
	assume 0 <= SecMask_$_244[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev][perm$N];
	assume SecMask_$_246 == SecMask_$_244;
	goto anon539;
anon539:
	assume wf(Heap_$_37,SecMask_$_246,SecMask_$_246);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_246);
	assume SecMask_$_247 == SecMask_$_246[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.next := SecMask_$_246[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.next][perm$N := SecMask_$_246[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_247);
	if ($_$_condition_$349) { goto anon1760_Then; } else { goto anon1760_Else; }
anon1760_Then:
	assume $_$_condition_$349;
	assume SecMask_$_247[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.next][perm$N] < 0;
	assume SecMask_$_248 == SecMask_$_247[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.next := SecMask_$_247[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.next][perm$N := 0]];
	assume SecMask_$_249 == SecMask_$_248;
	goto anon541;
anon1760_Else:
	assume !$_$_condition_$349;
	assume 0 <= SecMask_$_247[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.next][perm$N];
	assume SecMask_$_249 == SecMask_$_247;
	goto anon541;
anon541:
	assume wf(Heap_$_37,SecMask_$_249,SecMask_$_249);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_249);
	assume SecMask_$_250 == SecMask_$_249[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],mu := SecMask_$_249[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],mu][perm$N := SecMask_$_249[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_250);
	if ($_$_condition_$350) { goto anon1761_Then; } else { goto anon1761_Else; }
anon1761_Then:
	assume $_$_condition_$350;
	assume SecMask_$_250[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],mu][perm$N] < 0;
	assume SecMask_$_251 == SecMask_$_250[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],mu := SecMask_$_250[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],mu][perm$N := 0]];
	assume SecMask_$_252 == SecMask_$_251;
	goto anon543;
anon1761_Else:
	assume !$_$_condition_$350;
	assume 0 <= SecMask_$_250[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],mu][perm$N];
	assume SecMask_$_252 == SecMask_$_250;
	goto anon543;
anon543:
	assume wf(Heap_$_37,SecMask_$_252,SecMask_$_252);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_252);
	if ($_$_condition_$351) { goto anon1762_Then; } else { goto anon1762_Else; }
anon1762_Then:
	assume $_$_condition_$351;
	assume $_$_condition_$351 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev] == null);
	assume SecMask_$_253 == SecMask_$_252[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_252[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := SecMask_$_252[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] - Fractions(100)]];
	if ($_$_condition_$352) { goto anon1763_Then; } else { goto anon1763_Else; }
anon1762_Else:
	assume !$_$_condition_$351;
	assume $_$_condition_$351 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev] == null;
	assume SecMask_$_368 == SecMask_$_252;
	goto anon731;
anon1763_Then:
	assume $_$_condition_$352;
	assume SecMask_$_253[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] < 0;
	assume SecMask_$_254 == SecMask_$_253[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_253[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := 0]];
	assume SecMask_$_255 == SecMask_$_254;
	goto anon546;
anon1763_Else:
	assume !$_$_condition_$352;
	assume 0 <= SecMask_$_253[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R];
	assume SecMask_$_255 == SecMask_$_253;
	goto anon546;
anon731:
	assume wf(Heap_$_37,SecMask_$_368,SecMask_$_368);
	assume SecMask_$_369 == SecMask_$_368;
	goto anon732;
anon546:
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[this,Node.prev]);
	if ($_$_condition_$353) { goto anon1764_Then; } else { goto anon1764_Else; }
anon1764_Then:
	assume $_$_condition_$353;
	assume $_$_condition_$353 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume ((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$354) { goto anon1765_Then; } else { goto anon1765_Else; }
anon1764_Else:
	assume !$_$_condition_$353;
	assume $_$_condition_$353 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume !(((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume SecMask_$_367 == SecMask_$_255;
	goto anon730;
anon1765_Then:
	assume $_$_condition_$354;
	assume $_$_condition_$354 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume (((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0;
	goto $branchMerge_90;
anon1765_Else:
	assume !$_$_condition_$354;
	assume $_$_condition_$354 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume !((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$356) { goto anon1766_Then; } else { goto anon1766_Else; }
anon730:
	assume wf(Heap_$_37,SecMask_$_367,SecMask_$_367);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_367);
	assume SecMask_$_368 == SecMask_$_367;
	goto anon731;
anon1769_Then:
	assume $_$_condition_$355;
	assume $_$_condition_$355 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu],Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],mu]);
	goto anon558;
anon1769_Else:
	assume !$_$_condition_$355;
	assume $_$_condition_$355 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null;
	goto anon558;
anon1766_Then:
	assume $_$_condition_$356;
	assume $_$_condition_$356 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume ((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1;
	goto $branchMerge_90;
anon1766_Else:
	assume !$_$_condition_$356;
	assume $_$_condition_$356 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume !(((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	if ($_$_condition_$358) { goto anon1767_Then; } else { goto anon1767_Else; }
anon1767_Then:
	assume $_$_condition_$358;
	assume $_$_condition_$358 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume (((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1;
	goto $branchMerge_90;
anon1767_Else:
	assume !$_$_condition_$358;
	assume $_$_condition_$358 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume !((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	if ($_$_condition_$360) { goto anon1768_Then; } else { goto anon1768_Else; }
anon1768_Then:
	assume $_$_condition_$360;
	assume $_$_condition_$360 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume (((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2;
	goto $branchMerge_90;
anon1768_Else:
	assume !$_$_condition_$360;
	assume $_$_condition_$360 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume !((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	goto $branchMerge_90;
anon558:
	assume SecMask_$_256 == SecMask_$_255[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev := SecMask_$_255[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N := SecMask_$_255[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_256);
	if ($_$_condition_$363) { goto anon1770_Then; } else { goto anon1770_Else; }
anon1770_Then:
	assume $_$_condition_$363;
	assume SecMask_$_256[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N] < 0;
	assume SecMask_$_257 == SecMask_$_256[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev := SecMask_$_256[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N := 0]];
	assume SecMask_$_258 == SecMask_$_257;
	goto anon560;
anon1770_Else:
	assume !$_$_condition_$363;
	assume 0 <= SecMask_$_256[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N];
	assume SecMask_$_258 == SecMask_$_256;
	goto anon560;
anon560:
	assume wf(Heap_$_37,SecMask_$_258,SecMask_$_258);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_258);
	assume SecMask_$_259 == SecMask_$_258[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.next := SecMask_$_258[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N := SecMask_$_258[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_259);
	if ($_$_condition_$364) { goto anon1771_Then; } else { goto anon1771_Else; }
anon1771_Then:
	assume $_$_condition_$364;
	assume SecMask_$_259[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N] < 0;
	assume SecMask_$_260 == SecMask_$_259[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.next := SecMask_$_259[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N := 0]];
	assume SecMask_$_261 == SecMask_$_260;
	goto anon562;
anon1771_Else:
	assume !$_$_condition_$364;
	assume 0 <= SecMask_$_259[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N];
	assume SecMask_$_261 == SecMask_$_259;
	goto anon562;
anon562:
	assume wf(Heap_$_37,SecMask_$_261,SecMask_$_261);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_261);
	assume SecMask_$_262 == SecMask_$_261[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],mu := SecMask_$_261[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N := SecMask_$_261[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_262);
	if ($_$_condition_$365) { goto anon1772_Then; } else { goto anon1772_Else; }
anon1772_Then:
	assume $_$_condition_$365;
	assume SecMask_$_262[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N] < 0;
	assume SecMask_$_263 == SecMask_$_262[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],mu := SecMask_$_262[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N := 0]];
	assume SecMask_$_264 == SecMask_$_263;
	goto anon564;
anon1772_Else:
	assume !$_$_condition_$365;
	assume 0 <= SecMask_$_262[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N];
	assume SecMask_$_264 == SecMask_$_262;
	goto anon564;
anon564:
	assume wf(Heap_$_37,SecMask_$_264,SecMask_$_264);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_264);
	if ($_$_condition_$366) { goto anon1773_Then; } else { goto anon1773_Else; }
anon1773_Then:
	assume $_$_condition_$366;
	assume $_$_condition_$366 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null);
	assume SecMask_$_265 == SecMask_$_264[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_264[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := SecMask_$_264[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] - Fractions(100)]];
	if ($_$_condition_$367) { goto anon1774_Then; } else { goto anon1774_Else; }
anon1773_Else:
	assume !$_$_condition_$366;
	assume $_$_condition_$366 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null;
	assume SecMask_$_366 == SecMask_$_264;
	goto anon729;
anon1774_Then:
	assume $_$_condition_$367;
	assume SecMask_$_265[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] < 0;
	assume SecMask_$_266 == SecMask_$_265[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_265[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := 0]];
	assume SecMask_$_267 == SecMask_$_266;
	goto anon567;
anon1774_Else:
	assume !$_$_condition_$367;
	assume 0 <= SecMask_$_265[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R];
	assume SecMask_$_267 == SecMask_$_265;
	goto anon567;
anon729:
	assume wf(Heap_$_37,SecMask_$_366,SecMask_$_366);
	assume SecMask_$_367 == SecMask_$_366;
	goto anon730;
anon567:
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[this,Node.prev]);
	if ($_$_condition_$368) { goto anon1775_Then; } else { goto anon1775_Else; }
anon1775_Then:
	assume $_$_condition_$368;
	assume $_$_condition_$368 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume ((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$369) { goto anon1776_Then; } else { goto anon1776_Else; }
anon1775_Else:
	assume !$_$_condition_$368;
	assume $_$_condition_$368 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume !(((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume SecMask_$_365 == SecMask_$_267;
	goto anon728;
anon1776_Then:
	assume $_$_condition_$369;
	assume $_$_condition_$369 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume (((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0;
	goto $branchMerge_91;
anon1776_Else:
	assume !$_$_condition_$369;
	assume $_$_condition_$369 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume !((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$371) { goto anon1777_Then; } else { goto anon1777_Else; }
anon728:
	assume wf(Heap_$_37,SecMask_$_365,SecMask_$_365);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_365);
	assume SecMask_$_366 == SecMask_$_365;
	goto anon729;
anon1780_Then:
	assume $_$_condition_$370;
	assume $_$_condition_$370 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu],Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu]);
	goto anon579;
anon1780_Else:
	assume !$_$_condition_$370;
	assume $_$_condition_$370 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null;
	goto anon579;
anon1777_Then:
	assume $_$_condition_$371;
	assume $_$_condition_$371 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume ((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1;
	goto $branchMerge_91;
anon1777_Else:
	assume !$_$_condition_$371;
	assume $_$_condition_$371 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume !(((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	if ($_$_condition_$373) { goto anon1778_Then; } else { goto anon1778_Else; }
anon1778_Then:
	assume $_$_condition_$373;
	assume $_$_condition_$373 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume (((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1;
	goto $branchMerge_91;
anon1778_Else:
	assume !$_$_condition_$373;
	assume $_$_condition_$373 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume !((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	if ($_$_condition_$375) { goto anon1779_Then; } else { goto anon1779_Else; }
anon1779_Then:
	assume $_$_condition_$375;
	assume $_$_condition_$375 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume (((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2;
	goto $branchMerge_91;
anon1779_Else:
	assume !$_$_condition_$375;
	assume $_$_condition_$375 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume !((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	goto $branchMerge_91;
anon579:
	assume SecMask_$_268 == SecMask_$_267[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev := SecMask_$_267[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N := SecMask_$_267[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_268);
	if ($_$_condition_$378) { goto anon1781_Then; } else { goto anon1781_Else; }
anon1781_Then:
	assume $_$_condition_$378;
	assume SecMask_$_268[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N] < 0;
	assume SecMask_$_269 == SecMask_$_268[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev := SecMask_$_268[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N := 0]];
	assume SecMask_$_270 == SecMask_$_269;
	goto anon581;
anon1781_Else:
	assume !$_$_condition_$378;
	assume 0 <= SecMask_$_268[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N];
	assume SecMask_$_270 == SecMask_$_268;
	goto anon581;
anon581:
	assume wf(Heap_$_37,SecMask_$_270,SecMask_$_270);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_270);
	assume SecMask_$_271 == SecMask_$_270[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next := SecMask_$_270[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N := SecMask_$_270[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_271);
	if ($_$_condition_$379) { goto anon1782_Then; } else { goto anon1782_Else; }
anon1782_Then:
	assume $_$_condition_$379;
	assume SecMask_$_271[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N] < 0;
	assume SecMask_$_272 == SecMask_$_271[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next := SecMask_$_271[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N := 0]];
	assume SecMask_$_273 == SecMask_$_272;
	goto anon583;
anon1782_Else:
	assume !$_$_condition_$379;
	assume 0 <= SecMask_$_271[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N];
	assume SecMask_$_273 == SecMask_$_271;
	goto anon583;
anon583:
	assume wf(Heap_$_37,SecMask_$_273,SecMask_$_273);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_273);
	assume SecMask_$_274 == SecMask_$_273[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu := SecMask_$_273[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N := SecMask_$_273[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_274);
	if ($_$_condition_$380) { goto anon1783_Then; } else { goto anon1783_Else; }
anon1783_Then:
	assume $_$_condition_$380;
	assume SecMask_$_274[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N] < 0;
	assume SecMask_$_275 == SecMask_$_274[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu := SecMask_$_274[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N := 0]];
	assume SecMask_$_276 == SecMask_$_275;
	goto anon585;
anon1783_Else:
	assume !$_$_condition_$380;
	assume 0 <= SecMask_$_274[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N];
	assume SecMask_$_276 == SecMask_$_274;
	goto anon585;
anon585:
	assume wf(Heap_$_37,SecMask_$_276,SecMask_$_276);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_276);
	if ($_$_condition_$381) { goto anon1784_Then; } else { goto anon1784_Else; }
anon1784_Then:
	assume $_$_condition_$381;
	assume $_$_condition_$381 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null);
	assume SecMask_$_277 == SecMask_$_276[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_276[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := SecMask_$_276[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] - Fractions(100)]];
	if ($_$_condition_$382) { goto anon1785_Then; } else { goto anon1785_Else; }
anon1784_Else:
	assume !$_$_condition_$381;
	assume $_$_condition_$381 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null;
	assume SecMask_$_364 == SecMask_$_276;
	goto anon727;
anon1785_Then:
	assume $_$_condition_$382;
	assume SecMask_$_277[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] < 0;
	assume SecMask_$_278 == SecMask_$_277[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_277[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := 0]];
	assume SecMask_$_279 == SecMask_$_278;
	goto anon588;
anon1785_Else:
	assume !$_$_condition_$382;
	assume 0 <= SecMask_$_277[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R];
	assume SecMask_$_279 == SecMask_$_277;
	goto anon588;
anon727:
	assume wf(Heap_$_37,SecMask_$_364,SecMask_$_364);
	assume SecMask_$_365 == SecMask_$_364;
	goto anon728;
anon588:
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[this,Node.prev]);
	if ($_$_condition_$383) { goto anon1786_Then; } else { goto anon1786_Else; }
anon1786_Then:
	assume $_$_condition_$383;
	assume $_$_condition_$383 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume ((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$384) { goto anon1787_Then; } else { goto anon1787_Else; }
anon1786_Else:
	assume !$_$_condition_$383;
	assume $_$_condition_$383 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume !(((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume SecMask_$_363 == SecMask_$_279;
	goto anon726;
anon1787_Then:
	assume $_$_condition_$384;
	assume $_$_condition_$384 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume (((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0;
	goto $branchMerge_92;
anon1787_Else:
	assume !$_$_condition_$384;
	assume $_$_condition_$384 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume !((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$386) { goto anon1788_Then; } else { goto anon1788_Else; }
anon726:
	assume wf(Heap_$_37,SecMask_$_363,SecMask_$_363);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_363);
	assume SecMask_$_364 == SecMask_$_363;
	goto anon727;
anon1791_Then:
	assume $_$_condition_$385;
	assume $_$_condition_$385 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu],Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu]);
	goto anon600;
anon1791_Else:
	assume !$_$_condition_$385;
	assume $_$_condition_$385 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null;
	goto anon600;
anon1788_Then:
	assume $_$_condition_$386;
	assume $_$_condition_$386 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume ((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1;
	goto $branchMerge_92;
anon1788_Else:
	assume !$_$_condition_$386;
	assume $_$_condition_$386 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume !(((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	if ($_$_condition_$388) { goto anon1789_Then; } else { goto anon1789_Else; }
anon1789_Then:
	assume $_$_condition_$388;
	assume $_$_condition_$388 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume (((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1;
	goto $branchMerge_92;
anon1789_Else:
	assume !$_$_condition_$388;
	assume $_$_condition_$388 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume !((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	if ($_$_condition_$390) { goto anon1790_Then; } else { goto anon1790_Else; }
anon1790_Then:
	assume $_$_condition_$390;
	assume $_$_condition_$390 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume (((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2;
	goto $branchMerge_92;
anon1790_Else:
	assume !$_$_condition_$390;
	assume $_$_condition_$390 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume !((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	goto $branchMerge_92;
anon600:
	assume SecMask_$_280 == SecMask_$_279[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev := SecMask_$_279[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N := SecMask_$_279[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_280);
	if ($_$_condition_$393) { goto anon1792_Then; } else { goto anon1792_Else; }
anon1792_Then:
	assume $_$_condition_$393;
	assume SecMask_$_280[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N] < 0;
	assume SecMask_$_281 == SecMask_$_280[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev := SecMask_$_280[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N := 0]];
	assume SecMask_$_282 == SecMask_$_281;
	goto anon602;
anon1792_Else:
	assume !$_$_condition_$393;
	assume 0 <= SecMask_$_280[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N];
	assume SecMask_$_282 == SecMask_$_280;
	goto anon602;
anon602:
	assume wf(Heap_$_37,SecMask_$_282,SecMask_$_282);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_282);
	assume SecMask_$_283 == SecMask_$_282[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next := SecMask_$_282[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N := SecMask_$_282[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_283);
	if ($_$_condition_$394) { goto anon1793_Then; } else { goto anon1793_Else; }
anon1793_Then:
	assume $_$_condition_$394;
	assume SecMask_$_283[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N] < 0;
	assume SecMask_$_284 == SecMask_$_283[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next := SecMask_$_283[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N := 0]];
	assume SecMask_$_285 == SecMask_$_284;
	goto anon604;
anon1793_Else:
	assume !$_$_condition_$394;
	assume 0 <= SecMask_$_283[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N];
	assume SecMask_$_285 == SecMask_$_283;
	goto anon604;
anon604:
	assume wf(Heap_$_37,SecMask_$_285,SecMask_$_285);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_285);
	assume SecMask_$_286 == SecMask_$_285[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu := SecMask_$_285[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N := SecMask_$_285[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_286);
	if ($_$_condition_$395) { goto anon1794_Then; } else { goto anon1794_Else; }
anon1794_Then:
	assume $_$_condition_$395;
	assume SecMask_$_286[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N] < 0;
	assume SecMask_$_287 == SecMask_$_286[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu := SecMask_$_286[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N := 0]];
	assume SecMask_$_288 == SecMask_$_287;
	goto anon606;
anon1794_Else:
	assume !$_$_condition_$395;
	assume 0 <= SecMask_$_286[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N];
	assume SecMask_$_288 == SecMask_$_286;
	goto anon606;
anon606:
	assume wf(Heap_$_37,SecMask_$_288,SecMask_$_288);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_288);
	if ($_$_condition_$396) { goto anon1795_Then; } else { goto anon1795_Else; }
anon1795_Then:
	assume $_$_condition_$396;
	assume $_$_condition_$396 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null);
	assume SecMask_$_289 == SecMask_$_288[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_288[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := SecMask_$_288[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] - Fractions(100)]];
	if ($_$_condition_$397) { goto anon1796_Then; } else { goto anon1796_Else; }
anon1795_Else:
	assume !$_$_condition_$396;
	assume $_$_condition_$396 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null;
	assume SecMask_$_362 == SecMask_$_288;
	goto anon725;
anon1796_Then:
	assume $_$_condition_$397;
	assume SecMask_$_289[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] < 0;
	assume SecMask_$_290 == SecMask_$_289[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_289[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := 0]];
	assume SecMask_$_291 == SecMask_$_290;
	goto anon609;
anon1796_Else:
	assume !$_$_condition_$397;
	assume 0 <= SecMask_$_289[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R];
	assume SecMask_$_291 == SecMask_$_289;
	goto anon609;
anon725:
	assume wf(Heap_$_37,SecMask_$_362,SecMask_$_362);
	assume SecMask_$_363 == SecMask_$_362;
	goto anon726;
anon609:
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[this,Node.prev]);
	if ($_$_condition_$398) { goto anon1797_Then; } else { goto anon1797_Else; }
anon1797_Then:
	assume $_$_condition_$398;
	assume $_$_condition_$398 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume ((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$399) { goto anon1798_Then; } else { goto anon1798_Else; }
anon1797_Else:
	assume !$_$_condition_$398;
	assume $_$_condition_$398 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume !(((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume SecMask_$_361 == SecMask_$_291;
	goto anon724;
anon1798_Then:
	assume $_$_condition_$399;
	assume $_$_condition_$399 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume (((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0;
	goto $branchMerge_93;
anon1798_Else:
	assume !$_$_condition_$399;
	assume $_$_condition_$399 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume !((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$401) { goto anon1799_Then; } else { goto anon1799_Else; }
anon724:
	assume wf(Heap_$_37,SecMask_$_361,SecMask_$_361);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_361);
	assume SecMask_$_362 == SecMask_$_361;
	goto anon725;
anon1802_Then:
	assume $_$_condition_$400;
	assume $_$_condition_$400 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu],Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu]);
	goto anon621;
anon1802_Else:
	assume !$_$_condition_$400;
	assume $_$_condition_$400 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null;
	goto anon621;
anon1799_Then:
	assume $_$_condition_$401;
	assume $_$_condition_$401 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume ((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1;
	goto $branchMerge_93;
anon1799_Else:
	assume !$_$_condition_$401;
	assume $_$_condition_$401 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume !(((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	if ($_$_condition_$403) { goto anon1800_Then; } else { goto anon1800_Else; }
anon1800_Then:
	assume $_$_condition_$403;
	assume $_$_condition_$403 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume (((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1;
	goto $branchMerge_93;
anon1800_Else:
	assume !$_$_condition_$403;
	assume $_$_condition_$403 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume !((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	if ($_$_condition_$405) { goto anon1801_Then; } else { goto anon1801_Else; }
anon1801_Then:
	assume $_$_condition_$405;
	assume $_$_condition_$405 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume (((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2;
	goto $branchMerge_93;
anon1801_Else:
	assume !$_$_condition_$405;
	assume $_$_condition_$405 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume !((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	goto $branchMerge_93;
anon621:
	assume SecMask_$_292 == SecMask_$_291[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev := SecMask_$_291[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N := SecMask_$_291[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_292);
	if ($_$_condition_$408) { goto anon1803_Then; } else { goto anon1803_Else; }
anon1803_Then:
	assume $_$_condition_$408;
	assume SecMask_$_292[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N] < 0;
	assume SecMask_$_293 == SecMask_$_292[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev := SecMask_$_292[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N := 0]];
	assume SecMask_$_294 == SecMask_$_293;
	goto anon623;
anon1803_Else:
	assume !$_$_condition_$408;
	assume 0 <= SecMask_$_292[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N];
	assume SecMask_$_294 == SecMask_$_292;
	goto anon623;
anon623:
	assume wf(Heap_$_37,SecMask_$_294,SecMask_$_294);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_294);
	assume SecMask_$_295 == SecMask_$_294[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next := SecMask_$_294[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N := SecMask_$_294[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_295);
	if ($_$_condition_$409) { goto anon1804_Then; } else { goto anon1804_Else; }
anon1804_Then:
	assume $_$_condition_$409;
	assume SecMask_$_295[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N] < 0;
	assume SecMask_$_296 == SecMask_$_295[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next := SecMask_$_295[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N := 0]];
	assume SecMask_$_297 == SecMask_$_296;
	goto anon625;
anon1804_Else:
	assume !$_$_condition_$409;
	assume 0 <= SecMask_$_295[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N];
	assume SecMask_$_297 == SecMask_$_295;
	goto anon625;
anon625:
	assume wf(Heap_$_37,SecMask_$_297,SecMask_$_297);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_297);
	assume SecMask_$_298 == SecMask_$_297[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu := SecMask_$_297[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N := SecMask_$_297[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_298);
	if ($_$_condition_$410) { goto anon1805_Then; } else { goto anon1805_Else; }
anon1805_Then:
	assume $_$_condition_$410;
	assume SecMask_$_298[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N] < 0;
	assume SecMask_$_299 == SecMask_$_298[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu := SecMask_$_298[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N := 0]];
	assume SecMask_$_300 == SecMask_$_299;
	goto anon627;
anon1805_Else:
	assume !$_$_condition_$410;
	assume 0 <= SecMask_$_298[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N];
	assume SecMask_$_300 == SecMask_$_298;
	goto anon627;
anon627:
	assume wf(Heap_$_37,SecMask_$_300,SecMask_$_300);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_300);
	if ($_$_condition_$411) { goto anon1806_Then; } else { goto anon1806_Else; }
anon1806_Then:
	assume $_$_condition_$411;
	assume $_$_condition_$411 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null);
	assume SecMask_$_301 == SecMask_$_300[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_300[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := SecMask_$_300[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] - Fractions(100)]];
	if ($_$_condition_$412) { goto anon1807_Then; } else { goto anon1807_Else; }
anon1806_Else:
	assume !$_$_condition_$411;
	assume $_$_condition_$411 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null;
	assume SecMask_$_360 == SecMask_$_300;
	goto anon723;
anon1807_Then:
	assume $_$_condition_$412;
	assume SecMask_$_301[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] < 0;
	assume SecMask_$_302 == SecMask_$_301[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_301[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := 0]];
	assume SecMask_$_303 == SecMask_$_302;
	goto anon630;
anon1807_Else:
	assume !$_$_condition_$412;
	assume 0 <= SecMask_$_301[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R];
	assume SecMask_$_303 == SecMask_$_301;
	goto anon630;
anon723:
	assume wf(Heap_$_37,SecMask_$_360,SecMask_$_360);
	assume SecMask_$_361 == SecMask_$_360;
	goto anon724;
anon630:
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[this,Node.prev]);
	if ($_$_condition_$413) { goto anon1808_Then; } else { goto anon1808_Else; }
anon1808_Then:
	assume $_$_condition_$413;
	assume $_$_condition_$413 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume ((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$414) { goto anon1809_Then; } else { goto anon1809_Else; }
anon1808_Else:
	assume !$_$_condition_$413;
	assume $_$_condition_$413 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume !(((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume SecMask_$_359 == SecMask_$_303;
	goto anon722;
anon1809_Then:
	assume $_$_condition_$414;
	assume $_$_condition_$414 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume (((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0;
	goto $branchMerge_94;
anon1809_Else:
	assume !$_$_condition_$414;
	assume $_$_condition_$414 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume !((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$416) { goto anon1810_Then; } else { goto anon1810_Else; }
anon722:
	assume wf(Heap_$_37,SecMask_$_359,SecMask_$_359);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_359);
	assume SecMask_$_360 == SecMask_$_359;
	goto anon723;
anon1813_Then:
	assume $_$_condition_$415;
	assume $_$_condition_$415 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu],Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu]);
	goto anon642;
anon1813_Else:
	assume !$_$_condition_$415;
	assume $_$_condition_$415 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null;
	goto anon642;
anon1810_Then:
	assume $_$_condition_$416;
	assume $_$_condition_$416 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume ((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1;
	goto $branchMerge_94;
anon1810_Else:
	assume !$_$_condition_$416;
	assume $_$_condition_$416 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume !(((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	if ($_$_condition_$418) { goto anon1811_Then; } else { goto anon1811_Else; }
anon1811_Then:
	assume $_$_condition_$418;
	assume $_$_condition_$418 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume (((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1;
	goto $branchMerge_94;
anon1811_Else:
	assume !$_$_condition_$418;
	assume $_$_condition_$418 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume !((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	if ($_$_condition_$420) { goto anon1812_Then; } else { goto anon1812_Else; }
anon1812_Then:
	assume $_$_condition_$420;
	assume $_$_condition_$420 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume (((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2;
	goto $branchMerge_94;
anon1812_Else:
	assume !$_$_condition_$420;
	assume $_$_condition_$420 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume !((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	goto $branchMerge_94;
anon642:
	assume SecMask_$_304 == SecMask_$_303[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev := SecMask_$_303[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N := SecMask_$_303[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_304);
	if ($_$_condition_$423) { goto anon1814_Then; } else { goto anon1814_Else; }
anon1814_Then:
	assume $_$_condition_$423;
	assume SecMask_$_304[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N] < 0;
	assume SecMask_$_305 == SecMask_$_304[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev := SecMask_$_304[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N := 0]];
	assume SecMask_$_306 == SecMask_$_305;
	goto anon644;
anon1814_Else:
	assume !$_$_condition_$423;
	assume 0 <= SecMask_$_304[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N];
	assume SecMask_$_306 == SecMask_$_304;
	goto anon644;
anon644:
	assume wf(Heap_$_37,SecMask_$_306,SecMask_$_306);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_306);
	assume SecMask_$_307 == SecMask_$_306[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next := SecMask_$_306[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N := SecMask_$_306[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_307);
	if ($_$_condition_$424) { goto anon1815_Then; } else { goto anon1815_Else; }
anon1815_Then:
	assume $_$_condition_$424;
	assume SecMask_$_307[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N] < 0;
	assume SecMask_$_308 == SecMask_$_307[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next := SecMask_$_307[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N := 0]];
	assume SecMask_$_309 == SecMask_$_308;
	goto anon646;
anon1815_Else:
	assume !$_$_condition_$424;
	assume 0 <= SecMask_$_307[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N];
	assume SecMask_$_309 == SecMask_$_307;
	goto anon646;
anon646:
	assume wf(Heap_$_37,SecMask_$_309,SecMask_$_309);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_309);
	assume SecMask_$_310 == SecMask_$_309[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu := SecMask_$_309[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N := SecMask_$_309[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_310);
	if ($_$_condition_$425) { goto anon1816_Then; } else { goto anon1816_Else; }
anon1816_Then:
	assume $_$_condition_$425;
	assume SecMask_$_310[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N] < 0;
	assume SecMask_$_311 == SecMask_$_310[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu := SecMask_$_310[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N := 0]];
	assume SecMask_$_312 == SecMask_$_311;
	goto anon648;
anon1816_Else:
	assume !$_$_condition_$425;
	assume 0 <= SecMask_$_310[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N];
	assume SecMask_$_312 == SecMask_$_310;
	goto anon648;
anon648:
	assume wf(Heap_$_37,SecMask_$_312,SecMask_$_312);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_312);
	if ($_$_condition_$426) { goto anon1817_Then; } else { goto anon1817_Else; }
anon1817_Then:
	assume $_$_condition_$426;
	assume $_$_condition_$426 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null);
	assume SecMask_$_313 == SecMask_$_312[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_312[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := SecMask_$_312[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] - Fractions(100)]];
	if ($_$_condition_$427) { goto anon1818_Then; } else { goto anon1818_Else; }
anon1817_Else:
	assume !$_$_condition_$426;
	assume $_$_condition_$426 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null;
	assume SecMask_$_358 == SecMask_$_312;
	goto anon721;
anon1818_Then:
	assume $_$_condition_$427;
	assume SecMask_$_313[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] < 0;
	assume SecMask_$_314 == SecMask_$_313[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_313[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := 0]];
	assume SecMask_$_315 == SecMask_$_314;
	goto anon651;
anon1818_Else:
	assume !$_$_condition_$427;
	assume 0 <= SecMask_$_313[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R];
	assume SecMask_$_315 == SecMask_$_313;
	goto anon651;
anon721:
	assume wf(Heap_$_37,SecMask_$_358,SecMask_$_358);
	assume SecMask_$_359 == SecMask_$_358;
	goto anon722;
anon651:
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[this,Node.prev]);
	if ($_$_condition_$428) { goto anon1819_Then; } else { goto anon1819_Else; }
anon1819_Then:
	assume $_$_condition_$428;
	assume $_$_condition_$428 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume ((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$429) { goto anon1820_Then; } else { goto anon1820_Else; }
anon1819_Else:
	assume !$_$_condition_$428;
	assume $_$_condition_$428 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume !(((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume SecMask_$_357 == SecMask_$_315;
	goto anon720;
anon1820_Then:
	assume $_$_condition_$429;
	assume $_$_condition_$429 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume (((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0;
	goto $branchMerge_95;
anon1820_Else:
	assume !$_$_condition_$429;
	assume $_$_condition_$429 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume !((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$431) { goto anon1821_Then; } else { goto anon1821_Else; }
anon720:
	assume wf(Heap_$_37,SecMask_$_357,SecMask_$_357);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_357);
	assume SecMask_$_358 == SecMask_$_357;
	goto anon721;
anon1824_Then:
	assume $_$_condition_$430;
	assume $_$_condition_$430 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu],Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu]);
	goto anon663;
anon1824_Else:
	assume !$_$_condition_$430;
	assume $_$_condition_$430 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null;
	goto anon663;
anon1821_Then:
	assume $_$_condition_$431;
	assume $_$_condition_$431 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume ((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1;
	goto $branchMerge_95;
anon1821_Else:
	assume !$_$_condition_$431;
	assume $_$_condition_$431 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume !(((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	if ($_$_condition_$433) { goto anon1822_Then; } else { goto anon1822_Else; }
anon1822_Then:
	assume $_$_condition_$433;
	assume $_$_condition_$433 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume (((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1;
	goto $branchMerge_95;
anon1822_Else:
	assume !$_$_condition_$433;
	assume $_$_condition_$433 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume !((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	if ($_$_condition_$435) { goto anon1823_Then; } else { goto anon1823_Else; }
anon1823_Then:
	assume $_$_condition_$435;
	assume $_$_condition_$435 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume (((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2;
	goto $branchMerge_95;
anon1823_Else:
	assume !$_$_condition_$435;
	assume $_$_condition_$435 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume !((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	goto $branchMerge_95;
anon663:
	assume SecMask_$_316 == SecMask_$_315[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev := SecMask_$_315[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N := SecMask_$_315[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_316);
	if ($_$_condition_$438) { goto anon1825_Then; } else { goto anon1825_Else; }
anon1825_Then:
	assume $_$_condition_$438;
	assume SecMask_$_316[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N] < 0;
	assume SecMask_$_317 == SecMask_$_316[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev := SecMask_$_316[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N := 0]];
	assume SecMask_$_318 == SecMask_$_317;
	goto anon665;
anon1825_Else:
	assume !$_$_condition_$438;
	assume 0 <= SecMask_$_316[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N];
	assume SecMask_$_318 == SecMask_$_316;
	goto anon665;
anon665:
	assume wf(Heap_$_37,SecMask_$_318,SecMask_$_318);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_318);
	assume SecMask_$_319 == SecMask_$_318[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next := SecMask_$_318[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N := SecMask_$_318[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_319);
	if ($_$_condition_$439) { goto anon1826_Then; } else { goto anon1826_Else; }
anon1826_Then:
	assume $_$_condition_$439;
	assume SecMask_$_319[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N] < 0;
	assume SecMask_$_320 == SecMask_$_319[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next := SecMask_$_319[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N := 0]];
	assume SecMask_$_321 == SecMask_$_320;
	goto anon667;
anon1826_Else:
	assume !$_$_condition_$439;
	assume 0 <= SecMask_$_319[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N];
	assume SecMask_$_321 == SecMask_$_319;
	goto anon667;
anon667:
	assume wf(Heap_$_37,SecMask_$_321,SecMask_$_321);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_321);
	assume SecMask_$_322 == SecMask_$_321[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu := SecMask_$_321[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N := SecMask_$_321[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_322);
	if ($_$_condition_$440) { goto anon1827_Then; } else { goto anon1827_Else; }
anon1827_Then:
	assume $_$_condition_$440;
	assume SecMask_$_322[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N] < 0;
	assume SecMask_$_323 == SecMask_$_322[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu := SecMask_$_322[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N := 0]];
	assume SecMask_$_324 == SecMask_$_323;
	goto anon669;
anon1827_Else:
	assume !$_$_condition_$440;
	assume 0 <= SecMask_$_322[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N];
	assume SecMask_$_324 == SecMask_$_322;
	goto anon669;
anon669:
	assume wf(Heap_$_37,SecMask_$_324,SecMask_$_324);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_324);
	if ($_$_condition_$441) { goto anon1828_Then; } else { goto anon1828_Else; }
anon1828_Then:
	assume $_$_condition_$441;
	assume $_$_condition_$441 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null);
	assume SecMask_$_325 == SecMask_$_324[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_324[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := SecMask_$_324[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] - Fractions(100)]];
	if ($_$_condition_$442) { goto anon1829_Then; } else { goto anon1829_Else; }
anon1828_Else:
	assume !$_$_condition_$441;
	assume $_$_condition_$441 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null;
	assume SecMask_$_356 == SecMask_$_324;
	goto anon719;
anon1829_Then:
	assume $_$_condition_$442;
	assume SecMask_$_325[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] < 0;
	assume SecMask_$_326 == SecMask_$_325[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_325[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := 0]];
	assume SecMask_$_327 == SecMask_$_326;
	goto anon672;
anon1829_Else:
	assume !$_$_condition_$442;
	assume 0 <= SecMask_$_325[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R];
	assume SecMask_$_327 == SecMask_$_325;
	goto anon672;
anon719:
	assume wf(Heap_$_37,SecMask_$_356,SecMask_$_356);
	assume SecMask_$_357 == SecMask_$_356;
	goto anon720;
anon672:
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[this,Node.prev]);
	if ($_$_condition_$443) { goto anon1830_Then; } else { goto anon1830_Else; }
anon1830_Then:
	assume $_$_condition_$443;
	assume $_$_condition_$443 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume ((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$444) { goto anon1831_Then; } else { goto anon1831_Else; }
anon1830_Else:
	assume !$_$_condition_$443;
	assume $_$_condition_$443 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume !(((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume SecMask_$_355 == SecMask_$_327;
	goto anon718;
anon1831_Then:
	assume $_$_condition_$444;
	assume $_$_condition_$444 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume (((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0;
	goto $branchMerge_96;
anon1831_Else:
	assume !$_$_condition_$444;
	assume $_$_condition_$444 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume !((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$446) { goto anon1832_Then; } else { goto anon1832_Else; }
anon718:
	assume wf(Heap_$_37,SecMask_$_355,SecMask_$_355);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_355);
	assume SecMask_$_356 == SecMask_$_355;
	goto anon719;
anon1835_Then:
	assume $_$_condition_$445;
	assume $_$_condition_$445 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu],Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu]);
	goto anon684;
anon1835_Else:
	assume !$_$_condition_$445;
	assume $_$_condition_$445 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null;
	goto anon684;
anon1832_Then:
	assume $_$_condition_$446;
	assume $_$_condition_$446 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume ((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1;
	goto $branchMerge_96;
anon1832_Else:
	assume !$_$_condition_$446;
	assume $_$_condition_$446 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume !(((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	if ($_$_condition_$448) { goto anon1833_Then; } else { goto anon1833_Else; }
anon1833_Then:
	assume $_$_condition_$448;
	assume $_$_condition_$448 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume (((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1;
	goto $branchMerge_96;
anon1833_Else:
	assume !$_$_condition_$448;
	assume $_$_condition_$448 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume !((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	if ($_$_condition_$450) { goto anon1834_Then; } else { goto anon1834_Else; }
anon1834_Then:
	assume $_$_condition_$450;
	assume $_$_condition_$450 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume (((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2;
	goto $branchMerge_96;
anon1834_Else:
	assume !$_$_condition_$450;
	assume $_$_condition_$450 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume !((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	goto $branchMerge_96;
anon684:
	assume SecMask_$_328 == SecMask_$_327[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev := SecMask_$_327[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N := SecMask_$_327[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_328);
	if ($_$_condition_$453) { goto anon1836_Then; } else { goto anon1836_Else; }
anon1836_Then:
	assume $_$_condition_$453;
	assume SecMask_$_328[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N] < 0;
	assume SecMask_$_329 == SecMask_$_328[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev := SecMask_$_328[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N := 0]];
	assume SecMask_$_330 == SecMask_$_329;
	goto anon686;
anon1836_Else:
	assume !$_$_condition_$453;
	assume 0 <= SecMask_$_328[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N];
	assume SecMask_$_330 == SecMask_$_328;
	goto anon686;
anon686:
	assume wf(Heap_$_37,SecMask_$_330,SecMask_$_330);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_330);
	assume SecMask_$_331 == SecMask_$_330[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next := SecMask_$_330[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N := SecMask_$_330[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_331);
	if ($_$_condition_$454) { goto anon1837_Then; } else { goto anon1837_Else; }
anon1837_Then:
	assume $_$_condition_$454;
	assume SecMask_$_331[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N] < 0;
	assume SecMask_$_332 == SecMask_$_331[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next := SecMask_$_331[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N := 0]];
	assume SecMask_$_333 == SecMask_$_332;
	goto anon688;
anon1837_Else:
	assume !$_$_condition_$454;
	assume 0 <= SecMask_$_331[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N];
	assume SecMask_$_333 == SecMask_$_331;
	goto anon688;
anon688:
	assume wf(Heap_$_37,SecMask_$_333,SecMask_$_333);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_333);
	assume SecMask_$_334 == SecMask_$_333[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu := SecMask_$_333[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N := SecMask_$_333[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_334);
	if ($_$_condition_$455) { goto anon1838_Then; } else { goto anon1838_Else; }
anon1838_Then:
	assume $_$_condition_$455;
	assume SecMask_$_334[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N] < 0;
	assume SecMask_$_335 == SecMask_$_334[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu := SecMask_$_334[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N := 0]];
	assume SecMask_$_336 == SecMask_$_335;
	goto anon690;
anon1838_Else:
	assume !$_$_condition_$455;
	assume 0 <= SecMask_$_334[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N];
	assume SecMask_$_336 == SecMask_$_334;
	goto anon690;
anon690:
	assume wf(Heap_$_37,SecMask_$_336,SecMask_$_336);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_336);
	if ($_$_condition_$456) { goto anon1839_Then; } else { goto anon1839_Else; }
anon1839_Then:
	assume $_$_condition_$456;
	assume $_$_condition_$456 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null);
	assume SecMask_$_337 == SecMask_$_336[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_336[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := SecMask_$_336[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] - Fractions(100)]];
	if ($_$_condition_$457) { goto anon1840_Then; } else { goto anon1840_Else; }
anon1839_Else:
	assume !$_$_condition_$456;
	assume $_$_condition_$456 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null;
	assume SecMask_$_354 == SecMask_$_336;
	goto anon717;
anon1840_Then:
	assume $_$_condition_$457;
	assume SecMask_$_337[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] < 0;
	assume SecMask_$_338 == SecMask_$_337[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_337[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := 0]];
	assume SecMask_$_339 == SecMask_$_338;
	goto anon693;
anon1840_Else:
	assume !$_$_condition_$457;
	assume 0 <= SecMask_$_337[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R];
	assume SecMask_$_339 == SecMask_$_337;
	goto anon693;
anon717:
	assume wf(Heap_$_37,SecMask_$_354,SecMask_$_354);
	assume SecMask_$_355 == SecMask_$_354;
	goto anon718;
anon693:
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[this,Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[this,Node.prev]);
	if ($_$_condition_$458) { goto anon1841_Then; } else { goto anon1841_Else; }
anon1841_Then:
	assume $_$_condition_$458;
	assume $_$_condition_$458 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume ((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$459) { goto anon1842_Then; } else { goto anon1842_Else; }
anon1841_Else:
	assume !$_$_condition_$458;
	assume $_$_condition_$458 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume !(((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume SecMask_$_353 == SecMask_$_339;
	goto anon716;
anon1842_Then:
	assume $_$_condition_$459;
	assume $_$_condition_$459 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume (((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0;
	goto $branchMerge_97;
anon1842_Else:
	assume !$_$_condition_$459;
	assume $_$_condition_$459 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume !((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$461) { goto anon1843_Then; } else { goto anon1843_Else; }
anon716:
	assume wf(Heap_$_37,SecMask_$_353,SecMask_$_353);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_353);
	assume SecMask_$_354 == SecMask_$_353;
	goto anon717;
anon1846_Then:
	assume $_$_condition_$460;
	assume $_$_condition_$460 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu],Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu]);
	goto anon705;
anon1846_Else:
	assume !$_$_condition_$460;
	assume $_$_condition_$460 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null;
	goto anon705;
anon1843_Then:
	assume $_$_condition_$461;
	assume $_$_condition_$461 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume ((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1;
	goto $branchMerge_97;
anon1843_Else:
	assume !$_$_condition_$461;
	assume $_$_condition_$461 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume !(((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	if ($_$_condition_$463) { goto anon1844_Then; } else { goto anon1844_Else; }
anon1844_Then:
	assume $_$_condition_$463;
	assume $_$_condition_$463 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume (((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1;
	goto $branchMerge_97;
anon1844_Else:
	assume !$_$_condition_$463;
	assume $_$_condition_$463 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume !((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	if ($_$_condition_$465) { goto anon1845_Then; } else { goto anon1845_Else; }
anon1845_Then:
	assume $_$_condition_$465;
	assume $_$_condition_$465 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume (((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2;
	goto $branchMerge_97;
anon1845_Else:
	assume !$_$_condition_$465;
	assume $_$_condition_$465 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume !((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	goto $branchMerge_97;
anon705:
	assume SecMask_$_340 == SecMask_$_339[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev := SecMask_$_339[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N := SecMask_$_339[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_340);
	if ($_$_condition_$468) { goto anon1847_Then; } else { goto anon1847_Else; }
anon1847_Then:
	assume $_$_condition_$468;
	assume SecMask_$_340[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N] < 0;
	assume SecMask_$_341 == SecMask_$_340[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev := SecMask_$_340[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N := 0]];
	assume SecMask_$_342 == SecMask_$_341;
	goto anon707;
anon1847_Else:
	assume !$_$_condition_$468;
	assume 0 <= SecMask_$_340[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N];
	assume SecMask_$_342 == SecMask_$_340;
	goto anon707;
anon707:
	assume wf(Heap_$_37,SecMask_$_342,SecMask_$_342);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_342);
	assume SecMask_$_343 == SecMask_$_342[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next := SecMask_$_342[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N := SecMask_$_342[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_343);
	if ($_$_condition_$469) { goto anon1848_Then; } else { goto anon1848_Else; }
anon1848_Then:
	assume $_$_condition_$469;
	assume SecMask_$_343[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N] < 0;
	assume SecMask_$_344 == SecMask_$_343[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next := SecMask_$_343[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N := 0]];
	assume SecMask_$_345 == SecMask_$_344;
	goto anon709;
anon1848_Else:
	assume !$_$_condition_$469;
	assume 0 <= SecMask_$_343[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N];
	assume SecMask_$_345 == SecMask_$_343;
	goto anon709;
anon709:
	assume wf(Heap_$_37,SecMask_$_345,SecMask_$_345);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_345);
	assume SecMask_$_346 == SecMask_$_345[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu := SecMask_$_345[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N := SecMask_$_345[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_346);
	if ($_$_condition_$470) { goto anon1849_Then; } else { goto anon1849_Else; }
anon1849_Then:
	assume $_$_condition_$470;
	assume SecMask_$_346[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N] < 0;
	assume SecMask_$_347 == SecMask_$_346[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu := SecMask_$_346[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N := 0]];
	assume SecMask_$_348 == SecMask_$_347;
	goto anon711;
anon1849_Else:
	assume !$_$_condition_$470;
	assume 0 <= SecMask_$_346[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N];
	assume SecMask_$_348 == SecMask_$_346;
	goto anon711;
anon711:
	assume wf(Heap_$_37,SecMask_$_348,SecMask_$_348);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_348);
	if ($_$_condition_$471) { goto anon1850_Then; } else { goto anon1850_Else; }
anon1850_Then:
	assume $_$_condition_$471;
	assume $_$_condition_$471 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null);
	assume SecMask_$_349 == SecMask_$_348[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_348[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := SecMask_$_348[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] - Fractions(100)]];
	if ($_$_condition_$472) { goto anon1851_Then; } else { goto anon1851_Else; }
anon1850_Else:
	assume !$_$_condition_$471;
	assume $_$_condition_$471 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null;
	assume SecMask_$_352 == SecMask_$_348;
	goto anon715;
anon1851_Then:
	assume $_$_condition_$472;
	assume SecMask_$_349[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] < 0;
	assume SecMask_$_350 == SecMask_$_349[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_349[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := 0]];
	assume SecMask_$_351 == SecMask_$_350;
	goto anon714;
anon1851_Else:
	assume !$_$_condition_$472;
	assume 0 <= SecMask_$_349[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R];
	assume SecMask_$_351 == SecMask_$_349;
	goto anon714;
anon715:
	assume wf(Heap_$_37,SecMask_$_352,SecMask_$_352);
	assume SecMask_$_353 == SecMask_$_352;
	goto anon716;
anon714:
	assume wf(Heap_$_37,SecMask_$_351,SecMask_$_351);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_351);
	assume SecMask_$_352 == SecMask_$_351;
	goto anon715;
anon1853_Then:
	assume $_$_condition_$474;
	assume SecMask_$_375[Heap_$_37[this,Node.next],Node.invRight][perm$R] < 0;
	assume SecMask_$_376 == SecMask_$_375[Heap_$_37[this,Node.next],Node.invRight := SecMask_$_375[Heap_$_37[this,Node.next],Node.invRight][perm$R := 0]];
	assume SecMask_$_377 == SecMask_$_376;
	goto $branchMerge_98;
anon1853_Else:
	assume !$_$_condition_$474;
	assume 0 <= SecMask_$_375[Heap_$_37[this,Node.next],Node.invRight][perm$R];
	assume SecMask_$_377 == SecMask_$_375;
	goto $branchMerge_98;
anon972:
	assume wf(Heap_$_37,SecMask_$_532,SecMask_$_532);
	assume SecMask_$_533 == SecMask_$_532;
	goto $branchMerge_82;
anon1854_Then:
	assume $_$_condition_$475;
	assume $_$_condition_$475 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[this,Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[this,Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[this,Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[this,Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[this,Node.next])) && true) && predFlag#_357_$_0));
	assume (((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[this,Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[this,Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[this,Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[this,Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[this,Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$477) { goto anon1855_Then; } else { goto anon1855_Else; }
anon1854_Else:
	assume !$_$_condition_$475;
	assume $_$_condition_$475 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[this,Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[this,Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[this,Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[this,Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[this,Node.next])) && true) && predFlag#_357_$_0));
	assume !((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[this,Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[this,Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[this,Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[this,Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[this,Node.next])) && true) && predFlag#_357_$_0));
	assume SecMask_$_531 == SecMask_$_377;
	goto anon971;
anon1855_Then:
	assume $_$_condition_$477;
	assume $_$_condition_$477 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[this,Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[this,Node.next])) && true) && predFlag#_357_$_0);
	assume (((predVer#_356_$_1 == Heap_$_37[Heap_$_37[this,Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[this,Node.next])) && true) && predFlag#_357_$_0;
	goto $branchMerge_99;
anon1855_Else:
	assume !$_$_condition_$477;
	assume $_$_condition_$477 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[this,Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[this,Node.next])) && true) && predFlag#_357_$_0);
	assume !((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[this,Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[this,Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$479) { goto anon1856_Then; } else { goto anon1856_Else; }
anon971:
	assume wf(Heap_$_37,SecMask_$_531,SecMask_$_531);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_531);
	assume SecMask_$_532 == SecMask_$_531;
	goto anon972;
anon1858_Then:
	assume $_$_condition_$478;
	assume $_$_condition_$478 <==> (!(Heap_$_37[Heap_$_37[this,Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[this,Node.next],Node.next] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[this,Node.next],mu],Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],mu]);
	goto anon750;
anon1858_Else:
	assume !$_$_condition_$478;
	assume $_$_condition_$478 <==> (!(Heap_$_37[Heap_$_37[this,Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[this,Node.next],Node.next] == null;
	goto anon750;
anon1856_Then:
	assume $_$_condition_$479;
	assume $_$_condition_$479 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[this,Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume ((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[this,Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1;
	goto $branchMerge_99;
anon1856_Else:
	assume !$_$_condition_$479;
	assume $_$_condition_$479 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[this,Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume !(((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[this,Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	if ($_$_condition_$481) { goto anon1857_Then; } else { goto anon1857_Else; }
anon1857_Then:
	assume $_$_condition_$481;
	assume $_$_condition_$481 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[this,Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume (((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[this,Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1;
	goto $branchMerge_99;
anon1857_Else:
	assume !$_$_condition_$481;
	assume $_$_condition_$481 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[this,Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume !((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[this,Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	goto $branchMerge_99;
anon750:
	assume SecMask_$_378 == SecMask_$_377[Heap_$_37[this,Node.next],Node.prev := SecMask_$_377[Heap_$_37[this,Node.next],Node.prev][perm$N := SecMask_$_377[Heap_$_37[this,Node.next],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_378);
	if ($_$_condition_$484) { goto anon1859_Then; } else { goto anon1859_Else; }
anon1859_Then:
	assume $_$_condition_$484;
	assume SecMask_$_378[Heap_$_37[this,Node.next],Node.prev][perm$N] < 0;
	assume SecMask_$_379 == SecMask_$_378[Heap_$_37[this,Node.next],Node.prev := SecMask_$_378[Heap_$_37[this,Node.next],Node.prev][perm$N := 0]];
	assume SecMask_$_380 == SecMask_$_379;
	goto anon752;
anon1859_Else:
	assume !$_$_condition_$484;
	assume 0 <= SecMask_$_378[Heap_$_37[this,Node.next],Node.prev][perm$N];
	assume SecMask_$_380 == SecMask_$_378;
	goto anon752;
anon752:
	assume wf(Heap_$_37,SecMask_$_380,SecMask_$_380);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_380);
	assume SecMask_$_381 == SecMask_$_380[Heap_$_37[this,Node.next],Node.next := SecMask_$_380[Heap_$_37[this,Node.next],Node.next][perm$N := SecMask_$_380[Heap_$_37[this,Node.next],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_381);
	if ($_$_condition_$485) { goto anon1860_Then; } else { goto anon1860_Else; }
anon1860_Then:
	assume $_$_condition_$485;
	assume SecMask_$_381[Heap_$_37[this,Node.next],Node.next][perm$N] < 0;
	assume SecMask_$_382 == SecMask_$_381[Heap_$_37[this,Node.next],Node.next := SecMask_$_381[Heap_$_37[this,Node.next],Node.next][perm$N := 0]];
	assume SecMask_$_383 == SecMask_$_382;
	goto anon754;
anon1860_Else:
	assume !$_$_condition_$485;
	assume 0 <= SecMask_$_381[Heap_$_37[this,Node.next],Node.next][perm$N];
	assume SecMask_$_383 == SecMask_$_381;
	goto anon754;
anon754:
	assume wf(Heap_$_37,SecMask_$_383,SecMask_$_383);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_383);
	assume SecMask_$_384 == SecMask_$_383[Heap_$_37[this,Node.next],mu := SecMask_$_383[Heap_$_37[this,Node.next],mu][perm$N := SecMask_$_383[Heap_$_37[this,Node.next],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_384);
	if ($_$_condition_$486) { goto anon1861_Then; } else { goto anon1861_Else; }
anon1861_Then:
	assume $_$_condition_$486;
	assume SecMask_$_384[Heap_$_37[this,Node.next],mu][perm$N] < 0;
	assume SecMask_$_385 == SecMask_$_384[Heap_$_37[this,Node.next],mu := SecMask_$_384[Heap_$_37[this,Node.next],mu][perm$N := 0]];
	assume SecMask_$_386 == SecMask_$_385;
	goto anon756;
anon1861_Else:
	assume !$_$_condition_$486;
	assume 0 <= SecMask_$_384[Heap_$_37[this,Node.next],mu][perm$N];
	assume SecMask_$_386 == SecMask_$_384;
	goto anon756;
anon756:
	assume wf(Heap_$_37,SecMask_$_386,SecMask_$_386);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_386);
	if ($_$_condition_$487) { goto anon1862_Then; } else { goto anon1862_Else; }
anon1862_Then:
	assume $_$_condition_$487;
	assume $_$_condition_$487 <==> (!(Heap_$_37[Heap_$_37[this,Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[this,Node.next],Node.next] == null);
	assume SecMask_$_387 == SecMask_$_386[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.invRight := SecMask_$_386[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.invRight][perm$R := SecMask_$_386[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.invRight][perm$R] - Fractions(100)]];
	if ($_$_condition_$488) { goto anon1863_Then; } else { goto anon1863_Else; }
anon1862_Else:
	assume !$_$_condition_$487;
	assume $_$_condition_$487 <==> (!(Heap_$_37[Heap_$_37[this,Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[this,Node.next],Node.next] == null;
	assume SecMask_$_530 == SecMask_$_386;
	goto anon970;
anon1863_Then:
	assume $_$_condition_$488;
	assume SecMask_$_387[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.invRight][perm$R] < 0;
	assume SecMask_$_388 == SecMask_$_387[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.invRight := SecMask_$_387[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.invRight][perm$R := 0]];
	assume SecMask_$_389 == SecMask_$_388;
	goto anon759;
anon1863_Else:
	assume !$_$_condition_$488;
	assume 0 <= SecMask_$_387[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.invRight][perm$R];
	assume SecMask_$_389 == SecMask_$_387;
	goto anon759;
anon970:
	assume wf(Heap_$_37,SecMask_$_530,SecMask_$_530);
	assume SecMask_$_531 == SecMask_$_530;
	goto anon971;
anon759:
	assume !(Heap_$_37[Heap_$_37[this,Node.next],Node.next] == Heap_$_37[this,Node.next]);
	if ($_$_condition_$489) { goto anon1864_Then; } else { goto anon1864_Else; }
anon1864_Then:
	assume $_$_condition_$489;
	assume $_$_condition_$489 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[this,Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume (((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[this,Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$490) { goto anon1865_Then; } else { goto anon1865_Else; }
anon1864_Else:
	assume !$_$_condition_$489;
	assume $_$_condition_$489 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[this,Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume !((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[this,Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume SecMask_$_529 == SecMask_$_389;
	goto anon969;
anon1865_Then:
	assume $_$_condition_$490;
	assume $_$_condition_$490 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[this,Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume (((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[this,Node.next],Node.next])) && true) && predFlag#_357_$_0;
	goto $branchMerge_100;
anon1865_Else:
	assume !$_$_condition_$490;
	assume $_$_condition_$490 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[this,Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume !((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[this,Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$492) { goto anon1866_Then; } else { goto anon1866_Else; }
anon969:
	assume wf(Heap_$_37,SecMask_$_529,SecMask_$_529);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_529);
	assume SecMask_$_530 == SecMask_$_529;
	goto anon970;
anon1868_Then:
	assume $_$_condition_$491;
	assume $_$_condition_$491 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],mu],Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],mu]);
	goto anon769;
anon1868_Else:
	assume !$_$_condition_$491;
	assume $_$_condition_$491 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next] == null;
	goto anon769;
anon1866_Then:
	assume $_$_condition_$492;
	assume $_$_condition_$492 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume ((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1;
	goto $branchMerge_100;
anon1866_Else:
	assume !$_$_condition_$492;
	assume $_$_condition_$492 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume !(((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	if ($_$_condition_$494) { goto anon1867_Then; } else { goto anon1867_Else; }
anon1867_Then:
	assume $_$_condition_$494;
	assume $_$_condition_$494 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume (((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1;
	goto $branchMerge_100;
anon1867_Else:
	assume !$_$_condition_$494;
	assume $_$_condition_$494 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume !((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[this,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	goto $branchMerge_100;
anon769:
	assume SecMask_$_390 == SecMask_$_389[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.prev := SecMask_$_389[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.prev][perm$N := SecMask_$_389[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_390);
	if ($_$_condition_$497) { goto anon1869_Then; } else { goto anon1869_Else; }
anon1869_Then:
	assume $_$_condition_$497;
	assume SecMask_$_390[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.prev][perm$N] < 0;
	assume SecMask_$_391 == SecMask_$_390[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.prev := SecMask_$_390[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.prev][perm$N := 0]];
	assume SecMask_$_392 == SecMask_$_391;
	goto anon771;
anon1869_Else:
	assume !$_$_condition_$497;
	assume 0 <= SecMask_$_390[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.prev][perm$N];
	assume SecMask_$_392 == SecMask_$_390;
	goto anon771;
anon771:
	assume wf(Heap_$_37,SecMask_$_392,SecMask_$_392);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_392);
	assume SecMask_$_393 == SecMask_$_392[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next := SecMask_$_392[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next][perm$N := SecMask_$_392[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_393);
	if ($_$_condition_$498) { goto anon1870_Then; } else { goto anon1870_Else; }
anon1870_Then:
	assume $_$_condition_$498;
	assume SecMask_$_393[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next][perm$N] < 0;
	assume SecMask_$_394 == SecMask_$_393[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next := SecMask_$_393[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next][perm$N := 0]];
	assume SecMask_$_395 == SecMask_$_394;
	goto anon773;
anon1870_Else:
	assume !$_$_condition_$498;
	assume 0 <= SecMask_$_393[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next][perm$N];
	assume SecMask_$_395 == SecMask_$_393;
	goto anon773;
anon773:
	assume wf(Heap_$_37,SecMask_$_395,SecMask_$_395);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_395);
	assume SecMask_$_396 == SecMask_$_395[Heap_$_37[Heap_$_37[this,Node.next],Node.next],mu := SecMask_$_395[Heap_$_37[Heap_$_37[this,Node.next],Node.next],mu][perm$N := SecMask_$_395[Heap_$_37[Heap_$_37[this,Node.next],Node.next],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_396);
	if ($_$_condition_$499) { goto anon1871_Then; } else { goto anon1871_Else; }
anon1871_Then:
	assume $_$_condition_$499;
	assume SecMask_$_396[Heap_$_37[Heap_$_37[this,Node.next],Node.next],mu][perm$N] < 0;
	assume SecMask_$_397 == SecMask_$_396[Heap_$_37[Heap_$_37[this,Node.next],Node.next],mu := SecMask_$_396[Heap_$_37[Heap_$_37[this,Node.next],Node.next],mu][perm$N := 0]];
	assume SecMask_$_398 == SecMask_$_397;
	goto anon775;
anon1871_Else:
	assume !$_$_condition_$499;
	assume 0 <= SecMask_$_396[Heap_$_37[Heap_$_37[this,Node.next],Node.next],mu][perm$N];
	assume SecMask_$_398 == SecMask_$_396;
	goto anon775;
anon775:
	assume wf(Heap_$_37,SecMask_$_398,SecMask_$_398);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_398);
	if ($_$_condition_$500) { goto anon1872_Then; } else { goto anon1872_Else; }
anon1872_Then:
	assume $_$_condition_$500;
	assume $_$_condition_$500 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next] == null);
	assume SecMask_$_399 == SecMask_$_398[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.invRight := SecMask_$_398[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.invRight][perm$R := SecMask_$_398[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.invRight][perm$R] - Fractions(100)]];
	if ($_$_condition_$501) { goto anon1873_Then; } else { goto anon1873_Else; }
anon1872_Else:
	assume !$_$_condition_$500;
	assume $_$_condition_$500 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next] == null;
	assume SecMask_$_528 == SecMask_$_398;
	goto anon968;
anon1873_Then:
	assume $_$_condition_$501;
	assume SecMask_$_399[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.invRight][perm$R] < 0;
	assume SecMask_$_400 == SecMask_$_399[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.invRight := SecMask_$_399[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.invRight][perm$R := 0]];
	assume SecMask_$_401 == SecMask_$_400;
	goto anon778;
anon1873_Else:
	assume !$_$_condition_$501;
	assume 0 <= SecMask_$_399[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.invRight][perm$R];
	assume SecMask_$_401 == SecMask_$_399;
	goto anon778;
anon968:
	assume wf(Heap_$_37,SecMask_$_528,SecMask_$_528);
	assume SecMask_$_529 == SecMask_$_528;
	goto anon969;
anon778:
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[this,Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next] == Heap_$_37[this,Node.next]);
	if ($_$_condition_$502) { goto anon1874_Then; } else { goto anon1874_Else; }
anon1874_Then:
	assume $_$_condition_$502;
	assume $_$_condition_$502 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume (((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$503) { goto anon1875_Then; } else { goto anon1875_Else; }
anon1874_Else:
	assume !$_$_condition_$502;
	assume $_$_condition_$502 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume !((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume SecMask_$_527 == SecMask_$_401;
	goto anon967;
anon1875_Then:
	assume $_$_condition_$503;
	assume $_$_condition_$503 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume (((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0;
	goto $branchMerge_101;
anon1875_Else:
	assume !$_$_condition_$503;
	assume $_$_condition_$503 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume !((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$505) { goto anon1876_Then; } else { goto anon1876_Else; }
anon967:
	assume wf(Heap_$_37,SecMask_$_527,SecMask_$_527);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_527);
	assume SecMask_$_528 == SecMask_$_527;
	goto anon968;
anon1878_Then:
	assume $_$_condition_$504;
	assume $_$_condition_$504 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],mu],Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],mu]);
	goto anon788;
anon1878_Else:
	assume !$_$_condition_$504;
	assume $_$_condition_$504 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next] == null;
	goto anon788;
anon1876_Then:
	assume $_$_condition_$505;
	assume $_$_condition_$505 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume ((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1;
	goto $branchMerge_101;
anon1876_Else:
	assume !$_$_condition_$505;
	assume $_$_condition_$505 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume !(((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	if ($_$_condition_$507) { goto anon1877_Then; } else { goto anon1877_Else; }
anon1877_Then:
	assume $_$_condition_$507;
	assume $_$_condition_$507 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume (((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1;
	goto $branchMerge_101;
anon1877_Else:
	assume !$_$_condition_$507;
	assume $_$_condition_$507 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume !((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	goto $branchMerge_101;
anon788:
	assume SecMask_$_402 == SecMask_$_401[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.prev := SecMask_$_401[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.prev][perm$N := SecMask_$_401[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_402);
	if ($_$_condition_$510) { goto anon1879_Then; } else { goto anon1879_Else; }
anon1879_Then:
	assume $_$_condition_$510;
	assume SecMask_$_402[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.prev][perm$N] < 0;
	assume SecMask_$_403 == SecMask_$_402[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.prev := SecMask_$_402[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.prev][perm$N := 0]];
	assume SecMask_$_404 == SecMask_$_403;
	goto anon790;
anon1879_Else:
	assume !$_$_condition_$510;
	assume 0 <= SecMask_$_402[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.prev][perm$N];
	assume SecMask_$_404 == SecMask_$_402;
	goto anon790;
anon790:
	assume wf(Heap_$_37,SecMask_$_404,SecMask_$_404);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_404);
	assume SecMask_$_405 == SecMask_$_404[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next := SecMask_$_404[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next][perm$N := SecMask_$_404[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_405);
	if ($_$_condition_$511) { goto anon1880_Then; } else { goto anon1880_Else; }
anon1880_Then:
	assume $_$_condition_$511;
	assume SecMask_$_405[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next][perm$N] < 0;
	assume SecMask_$_406 == SecMask_$_405[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next := SecMask_$_405[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next][perm$N := 0]];
	assume SecMask_$_407 == SecMask_$_406;
	goto anon792;
anon1880_Else:
	assume !$_$_condition_$511;
	assume 0 <= SecMask_$_405[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next][perm$N];
	assume SecMask_$_407 == SecMask_$_405;
	goto anon792;
anon792:
	assume wf(Heap_$_37,SecMask_$_407,SecMask_$_407);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_407);
	assume SecMask_$_408 == SecMask_$_407[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],mu := SecMask_$_407[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],mu][perm$N := SecMask_$_407[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_408);
	if ($_$_condition_$512) { goto anon1881_Then; } else { goto anon1881_Else; }
anon1881_Then:
	assume $_$_condition_$512;
	assume SecMask_$_408[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],mu][perm$N] < 0;
	assume SecMask_$_409 == SecMask_$_408[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],mu := SecMask_$_408[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],mu][perm$N := 0]];
	assume SecMask_$_410 == SecMask_$_409;
	goto anon794;
anon1881_Else:
	assume !$_$_condition_$512;
	assume 0 <= SecMask_$_408[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],mu][perm$N];
	assume SecMask_$_410 == SecMask_$_408;
	goto anon794;
anon794:
	assume wf(Heap_$_37,SecMask_$_410,SecMask_$_410);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_410);
	if ($_$_condition_$513) { goto anon1882_Then; } else { goto anon1882_Else; }
anon1882_Then:
	assume $_$_condition_$513;
	assume $_$_condition_$513 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next] == null);
	assume SecMask_$_411 == SecMask_$_410[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.invRight := SecMask_$_410[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R := SecMask_$_410[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R] - Fractions(100)]];
	if ($_$_condition_$514) { goto anon1883_Then; } else { goto anon1883_Else; }
anon1882_Else:
	assume !$_$_condition_$513;
	assume $_$_condition_$513 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next] == null;
	assume SecMask_$_526 == SecMask_$_410;
	goto anon966;
anon1883_Then:
	assume $_$_condition_$514;
	assume SecMask_$_411[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R] < 0;
	assume SecMask_$_412 == SecMask_$_411[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.invRight := SecMask_$_411[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R := 0]];
	assume SecMask_$_413 == SecMask_$_412;
	goto anon797;
anon1883_Else:
	assume !$_$_condition_$514;
	assume 0 <= SecMask_$_411[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R];
	assume SecMask_$_413 == SecMask_$_411;
	goto anon797;
anon966:
	assume wf(Heap_$_37,SecMask_$_526,SecMask_$_526);
	assume SecMask_$_527 == SecMask_$_526;
	goto anon967;
anon797:
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[this,Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next] == Heap_$_37[this,Node.next]);
	if ($_$_condition_$515) { goto anon1884_Then; } else { goto anon1884_Else; }
anon1884_Then:
	assume $_$_condition_$515;
	assume $_$_condition_$515 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume (((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$516) { goto anon1885_Then; } else { goto anon1885_Else; }
anon1884_Else:
	assume !$_$_condition_$515;
	assume $_$_condition_$515 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume !((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume SecMask_$_525 == SecMask_$_413;
	goto anon965;
anon1885_Then:
	assume $_$_condition_$516;
	assume $_$_condition_$516 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume (((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0;
	goto $branchMerge_102;
anon1885_Else:
	assume !$_$_condition_$516;
	assume $_$_condition_$516 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume !((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$518) { goto anon1886_Then; } else { goto anon1886_Else; }
anon965:
	assume wf(Heap_$_37,SecMask_$_525,SecMask_$_525);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_525);
	assume SecMask_$_526 == SecMask_$_525;
	goto anon966;
anon1888_Then:
	assume $_$_condition_$517;
	assume $_$_condition_$517 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],mu],Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],mu]);
	goto anon807;
anon1888_Else:
	assume !$_$_condition_$517;
	assume $_$_condition_$517 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next] == null;
	goto anon807;
anon1886_Then:
	assume $_$_condition_$518;
	assume $_$_condition_$518 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume ((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1;
	goto $branchMerge_102;
anon1886_Else:
	assume !$_$_condition_$518;
	assume $_$_condition_$518 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume !(((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	if ($_$_condition_$520) { goto anon1887_Then; } else { goto anon1887_Else; }
anon1887_Then:
	assume $_$_condition_$520;
	assume $_$_condition_$520 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume (((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1;
	goto $branchMerge_102;
anon1887_Else:
	assume !$_$_condition_$520;
	assume $_$_condition_$520 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume !((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	goto $branchMerge_102;
anon807:
	assume SecMask_$_414 == SecMask_$_413[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.prev := SecMask_$_413[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N := SecMask_$_413[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_414);
	if ($_$_condition_$523) { goto anon1889_Then; } else { goto anon1889_Else; }
anon1889_Then:
	assume $_$_condition_$523;
	assume SecMask_$_414[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N] < 0;
	assume SecMask_$_415 == SecMask_$_414[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.prev := SecMask_$_414[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N := 0]];
	assume SecMask_$_416 == SecMask_$_415;
	goto anon809;
anon1889_Else:
	assume !$_$_condition_$523;
	assume 0 <= SecMask_$_414[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N];
	assume SecMask_$_416 == SecMask_$_414;
	goto anon809;
anon809:
	assume wf(Heap_$_37,SecMask_$_416,SecMask_$_416);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_416);
	assume SecMask_$_417 == SecMask_$_416[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next := SecMask_$_416[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next][perm$N := SecMask_$_416[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_417);
	if ($_$_condition_$524) { goto anon1890_Then; } else { goto anon1890_Else; }
anon1890_Then:
	assume $_$_condition_$524;
	assume SecMask_$_417[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next][perm$N] < 0;
	assume SecMask_$_418 == SecMask_$_417[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next := SecMask_$_417[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next][perm$N := 0]];
	assume SecMask_$_419 == SecMask_$_418;
	goto anon811;
anon1890_Else:
	assume !$_$_condition_$524;
	assume 0 <= SecMask_$_417[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next][perm$N];
	assume SecMask_$_419 == SecMask_$_417;
	goto anon811;
anon811:
	assume wf(Heap_$_37,SecMask_$_419,SecMask_$_419);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_419);
	assume SecMask_$_420 == SecMask_$_419[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],mu := SecMask_$_419[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],mu][perm$N := SecMask_$_419[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_420);
	if ($_$_condition_$525) { goto anon1891_Then; } else { goto anon1891_Else; }
anon1891_Then:
	assume $_$_condition_$525;
	assume SecMask_$_420[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],mu][perm$N] < 0;
	assume SecMask_$_421 == SecMask_$_420[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],mu := SecMask_$_420[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],mu][perm$N := 0]];
	assume SecMask_$_422 == SecMask_$_421;
	goto anon813;
anon1891_Else:
	assume !$_$_condition_$525;
	assume 0 <= SecMask_$_420[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],mu][perm$N];
	assume SecMask_$_422 == SecMask_$_420;
	goto anon813;
anon813:
	assume wf(Heap_$_37,SecMask_$_422,SecMask_$_422);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_422);
	if ($_$_condition_$526) { goto anon1892_Then; } else { goto anon1892_Else; }
anon1892_Then:
	assume $_$_condition_$526;
	assume $_$_condition_$526 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next] == null);
	assume SecMask_$_423 == SecMask_$_422[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight := SecMask_$_422[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R := SecMask_$_422[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R] - Fractions(100)]];
	if ($_$_condition_$527) { goto anon1893_Then; } else { goto anon1893_Else; }
anon1892_Else:
	assume !$_$_condition_$526;
	assume $_$_condition_$526 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next] == null;
	assume SecMask_$_524 == SecMask_$_422;
	goto anon964;
anon1893_Then:
	assume $_$_condition_$527;
	assume SecMask_$_423[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R] < 0;
	assume SecMask_$_424 == SecMask_$_423[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight := SecMask_$_423[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R := 0]];
	assume SecMask_$_425 == SecMask_$_424;
	goto anon816;
anon1893_Else:
	assume !$_$_condition_$527;
	assume 0 <= SecMask_$_423[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R];
	assume SecMask_$_425 == SecMask_$_423;
	goto anon816;
anon964:
	assume wf(Heap_$_37,SecMask_$_524,SecMask_$_524);
	assume SecMask_$_525 == SecMask_$_524;
	goto anon965;
anon816:
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[this,Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[this,Node.next]);
	if ($_$_condition_$528) { goto anon1894_Then; } else { goto anon1894_Else; }
anon1894_Then:
	assume $_$_condition_$528;
	assume $_$_condition_$528 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume (((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$529) { goto anon1895_Then; } else { goto anon1895_Else; }
anon1894_Else:
	assume !$_$_condition_$528;
	assume $_$_condition_$528 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume !((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume SecMask_$_523 == SecMask_$_425;
	goto anon963;
anon1895_Then:
	assume $_$_condition_$529;
	assume $_$_condition_$529 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume (((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0;
	goto $branchMerge_103;
anon1895_Else:
	assume !$_$_condition_$529;
	assume $_$_condition_$529 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume !((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$531) { goto anon1896_Then; } else { goto anon1896_Else; }
anon963:
	assume wf(Heap_$_37,SecMask_$_523,SecMask_$_523);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_523);
	assume SecMask_$_524 == SecMask_$_523;
	goto anon964;
anon1898_Then:
	assume $_$_condition_$530;
	assume $_$_condition_$530 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],mu],Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu]);
	goto anon826;
anon1898_Else:
	assume !$_$_condition_$530;
	assume $_$_condition_$530 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null;
	goto anon826;
anon1896_Then:
	assume $_$_condition_$531;
	assume $_$_condition_$531 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume ((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1;
	goto $branchMerge_103;
anon1896_Else:
	assume !$_$_condition_$531;
	assume $_$_condition_$531 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume !(((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	if ($_$_condition_$533) { goto anon1897_Then; } else { goto anon1897_Else; }
anon1897_Then:
	assume $_$_condition_$533;
	assume $_$_condition_$533 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume (((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1;
	goto $branchMerge_103;
anon1897_Else:
	assume !$_$_condition_$533;
	assume $_$_condition_$533 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume !((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	goto $branchMerge_103;
anon826:
	assume SecMask_$_426 == SecMask_$_425[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev := SecMask_$_425[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N := SecMask_$_425[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_426);
	if ($_$_condition_$536) { goto anon1899_Then; } else { goto anon1899_Else; }
anon1899_Then:
	assume $_$_condition_$536;
	assume SecMask_$_426[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N] < 0;
	assume SecMask_$_427 == SecMask_$_426[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev := SecMask_$_426[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N := 0]];
	assume SecMask_$_428 == SecMask_$_427;
	goto anon828;
anon1899_Else:
	assume !$_$_condition_$536;
	assume 0 <= SecMask_$_426[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N];
	assume SecMask_$_428 == SecMask_$_426;
	goto anon828;
anon828:
	assume wf(Heap_$_37,SecMask_$_428,SecMask_$_428);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_428);
	assume SecMask_$_429 == SecMask_$_428[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next := SecMask_$_428[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N := SecMask_$_428[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_429);
	if ($_$_condition_$537) { goto anon1900_Then; } else { goto anon1900_Else; }
anon1900_Then:
	assume $_$_condition_$537;
	assume SecMask_$_429[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N] < 0;
	assume SecMask_$_430 == SecMask_$_429[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next := SecMask_$_429[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N := 0]];
	assume SecMask_$_431 == SecMask_$_430;
	goto anon830;
anon1900_Else:
	assume !$_$_condition_$537;
	assume 0 <= SecMask_$_429[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N];
	assume SecMask_$_431 == SecMask_$_429;
	goto anon830;
anon830:
	assume wf(Heap_$_37,SecMask_$_431,SecMask_$_431);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_431);
	assume SecMask_$_432 == SecMask_$_431[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],mu := SecMask_$_431[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N := SecMask_$_431[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_432);
	if ($_$_condition_$538) { goto anon1901_Then; } else { goto anon1901_Else; }
anon1901_Then:
	assume $_$_condition_$538;
	assume SecMask_$_432[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N] < 0;
	assume SecMask_$_433 == SecMask_$_432[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],mu := SecMask_$_432[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N := 0]];
	assume SecMask_$_434 == SecMask_$_433;
	goto anon832;
anon1901_Else:
	assume !$_$_condition_$538;
	assume 0 <= SecMask_$_432[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N];
	assume SecMask_$_434 == SecMask_$_432;
	goto anon832;
anon832:
	assume wf(Heap_$_37,SecMask_$_434,SecMask_$_434);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_434);
	if ($_$_condition_$539) { goto anon1902_Then; } else { goto anon1902_Else; }
anon1902_Then:
	assume $_$_condition_$539;
	assume $_$_condition_$539 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null);
	assume SecMask_$_435 == SecMask_$_434[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight := SecMask_$_434[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R := SecMask_$_434[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R] - Fractions(100)]];
	if ($_$_condition_$540) { goto anon1903_Then; } else { goto anon1903_Else; }
anon1902_Else:
	assume !$_$_condition_$539;
	assume $_$_condition_$539 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null;
	assume SecMask_$_522 == SecMask_$_434;
	goto anon962;
anon1903_Then:
	assume $_$_condition_$540;
	assume SecMask_$_435[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R] < 0;
	assume SecMask_$_436 == SecMask_$_435[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight := SecMask_$_435[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R := 0]];
	assume SecMask_$_437 == SecMask_$_436;
	goto anon835;
anon1903_Else:
	assume !$_$_condition_$540;
	assume 0 <= SecMask_$_435[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R];
	assume SecMask_$_437 == SecMask_$_435;
	goto anon835;
anon962:
	assume wf(Heap_$_37,SecMask_$_522,SecMask_$_522);
	assume SecMask_$_523 == SecMask_$_522;
	goto anon963;
anon835:
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[this,Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[this,Node.next]);
	if ($_$_condition_$541) { goto anon1904_Then; } else { goto anon1904_Else; }
anon1904_Then:
	assume $_$_condition_$541;
	assume $_$_condition_$541 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume (((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$542) { goto anon1905_Then; } else { goto anon1905_Else; }
anon1904_Else:
	assume !$_$_condition_$541;
	assume $_$_condition_$541 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume !((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume SecMask_$_521 == SecMask_$_437;
	goto anon961;
anon1905_Then:
	assume $_$_condition_$542;
	assume $_$_condition_$542 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume (((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0;
	goto $branchMerge_104;
anon1905_Else:
	assume !$_$_condition_$542;
	assume $_$_condition_$542 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume !((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$544) { goto anon1906_Then; } else { goto anon1906_Else; }
anon961:
	assume wf(Heap_$_37,SecMask_$_521,SecMask_$_521);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_521);
	assume SecMask_$_522 == SecMask_$_521;
	goto anon962;
anon1908_Then:
	assume $_$_condition_$543;
	assume $_$_condition_$543 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu],Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu]);
	goto anon845;
anon1908_Else:
	assume !$_$_condition_$543;
	assume $_$_condition_$543 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null;
	goto anon845;
anon1906_Then:
	assume $_$_condition_$544;
	assume $_$_condition_$544 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume ((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1;
	goto $branchMerge_104;
anon1906_Else:
	assume !$_$_condition_$544;
	assume $_$_condition_$544 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume !(((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	if ($_$_condition_$546) { goto anon1907_Then; } else { goto anon1907_Else; }
anon1907_Then:
	assume $_$_condition_$546;
	assume $_$_condition_$546 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume (((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1;
	goto $branchMerge_104;
anon1907_Else:
	assume !$_$_condition_$546;
	assume $_$_condition_$546 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume !((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	goto $branchMerge_104;
anon845:
	assume SecMask_$_438 == SecMask_$_437[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev := SecMask_$_437[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N := SecMask_$_437[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_438);
	if ($_$_condition_$549) { goto anon1909_Then; } else { goto anon1909_Else; }
anon1909_Then:
	assume $_$_condition_$549;
	assume SecMask_$_438[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N] < 0;
	assume SecMask_$_439 == SecMask_$_438[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev := SecMask_$_438[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N := 0]];
	assume SecMask_$_440 == SecMask_$_439;
	goto anon847;
anon1909_Else:
	assume !$_$_condition_$549;
	assume 0 <= SecMask_$_438[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N];
	assume SecMask_$_440 == SecMask_$_438;
	goto anon847;
anon847:
	assume wf(Heap_$_37,SecMask_$_440,SecMask_$_440);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_440);
	assume SecMask_$_441 == SecMask_$_440[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next := SecMask_$_440[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N := SecMask_$_440[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_441);
	if ($_$_condition_$550) { goto anon1910_Then; } else { goto anon1910_Else; }
anon1910_Then:
	assume $_$_condition_$550;
	assume SecMask_$_441[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N] < 0;
	assume SecMask_$_442 == SecMask_$_441[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next := SecMask_$_441[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N := 0]];
	assume SecMask_$_443 == SecMask_$_442;
	goto anon849;
anon1910_Else:
	assume !$_$_condition_$550;
	assume 0 <= SecMask_$_441[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N];
	assume SecMask_$_443 == SecMask_$_441;
	goto anon849;
anon849:
	assume wf(Heap_$_37,SecMask_$_443,SecMask_$_443);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_443);
	assume SecMask_$_444 == SecMask_$_443[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu := SecMask_$_443[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N := SecMask_$_443[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_444);
	if ($_$_condition_$551) { goto anon1911_Then; } else { goto anon1911_Else; }
anon1911_Then:
	assume $_$_condition_$551;
	assume SecMask_$_444[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N] < 0;
	assume SecMask_$_445 == SecMask_$_444[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu := SecMask_$_444[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N := 0]];
	assume SecMask_$_446 == SecMask_$_445;
	goto anon851;
anon1911_Else:
	assume !$_$_condition_$551;
	assume 0 <= SecMask_$_444[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N];
	assume SecMask_$_446 == SecMask_$_444;
	goto anon851;
anon851:
	assume wf(Heap_$_37,SecMask_$_446,SecMask_$_446);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_446);
	if ($_$_condition_$552) { goto anon1912_Then; } else { goto anon1912_Else; }
anon1912_Then:
	assume $_$_condition_$552;
	assume $_$_condition_$552 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null);
	assume SecMask_$_447 == SecMask_$_446[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight := SecMask_$_446[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R := SecMask_$_446[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R] - Fractions(100)]];
	if ($_$_condition_$553) { goto anon1913_Then; } else { goto anon1913_Else; }
anon1912_Else:
	assume !$_$_condition_$552;
	assume $_$_condition_$552 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null;
	assume SecMask_$_520 == SecMask_$_446;
	goto anon960;
anon1913_Then:
	assume $_$_condition_$553;
	assume SecMask_$_447[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R] < 0;
	assume SecMask_$_448 == SecMask_$_447[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight := SecMask_$_447[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R := 0]];
	assume SecMask_$_449 == SecMask_$_448;
	goto anon854;
anon1913_Else:
	assume !$_$_condition_$553;
	assume 0 <= SecMask_$_447[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R];
	assume SecMask_$_449 == SecMask_$_447;
	goto anon854;
anon960:
	assume wf(Heap_$_37,SecMask_$_520,SecMask_$_520);
	assume SecMask_$_521 == SecMask_$_520;
	goto anon961;
anon854:
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[this,Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[this,Node.next]);
	if ($_$_condition_$554) { goto anon1914_Then; } else { goto anon1914_Else; }
anon1914_Then:
	assume $_$_condition_$554;
	assume $_$_condition_$554 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume (((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$555) { goto anon1915_Then; } else { goto anon1915_Else; }
anon1914_Else:
	assume !$_$_condition_$554;
	assume $_$_condition_$554 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume !((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume SecMask_$_519 == SecMask_$_449;
	goto anon959;
anon1915_Then:
	assume $_$_condition_$555;
	assume $_$_condition_$555 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume (((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0;
	goto $branchMerge_105;
anon1915_Else:
	assume !$_$_condition_$555;
	assume $_$_condition_$555 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume !((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$557) { goto anon1916_Then; } else { goto anon1916_Else; }
anon959:
	assume wf(Heap_$_37,SecMask_$_519,SecMask_$_519);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_519);
	assume SecMask_$_520 == SecMask_$_519;
	goto anon960;
anon1918_Then:
	assume $_$_condition_$556;
	assume $_$_condition_$556 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu],Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu]);
	goto anon864;
anon1918_Else:
	assume !$_$_condition_$556;
	assume $_$_condition_$556 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null;
	goto anon864;
anon1916_Then:
	assume $_$_condition_$557;
	assume $_$_condition_$557 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume ((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1;
	goto $branchMerge_105;
anon1916_Else:
	assume !$_$_condition_$557;
	assume $_$_condition_$557 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume !(((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	if ($_$_condition_$559) { goto anon1917_Then; } else { goto anon1917_Else; }
anon1917_Then:
	assume $_$_condition_$559;
	assume $_$_condition_$559 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume (((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1;
	goto $branchMerge_105;
anon1917_Else:
	assume !$_$_condition_$559;
	assume $_$_condition_$559 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume !((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	goto $branchMerge_105;
anon864:
	assume SecMask_$_450 == SecMask_$_449[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev := SecMask_$_449[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N := SecMask_$_449[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_450);
	if ($_$_condition_$562) { goto anon1919_Then; } else { goto anon1919_Else; }
anon1919_Then:
	assume $_$_condition_$562;
	assume SecMask_$_450[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N] < 0;
	assume SecMask_$_451 == SecMask_$_450[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev := SecMask_$_450[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N := 0]];
	assume SecMask_$_452 == SecMask_$_451;
	goto anon866;
anon1919_Else:
	assume !$_$_condition_$562;
	assume 0 <= SecMask_$_450[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N];
	assume SecMask_$_452 == SecMask_$_450;
	goto anon866;
anon866:
	assume wf(Heap_$_37,SecMask_$_452,SecMask_$_452);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_452);
	assume SecMask_$_453 == SecMask_$_452[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next := SecMask_$_452[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N := SecMask_$_452[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_453);
	if ($_$_condition_$563) { goto anon1920_Then; } else { goto anon1920_Else; }
anon1920_Then:
	assume $_$_condition_$563;
	assume SecMask_$_453[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N] < 0;
	assume SecMask_$_454 == SecMask_$_453[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next := SecMask_$_453[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N := 0]];
	assume SecMask_$_455 == SecMask_$_454;
	goto anon868;
anon1920_Else:
	assume !$_$_condition_$563;
	assume 0 <= SecMask_$_453[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N];
	assume SecMask_$_455 == SecMask_$_453;
	goto anon868;
anon868:
	assume wf(Heap_$_37,SecMask_$_455,SecMask_$_455);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_455);
	assume SecMask_$_456 == SecMask_$_455[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu := SecMask_$_455[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N := SecMask_$_455[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_456);
	if ($_$_condition_$564) { goto anon1921_Then; } else { goto anon1921_Else; }
anon1921_Then:
	assume $_$_condition_$564;
	assume SecMask_$_456[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N] < 0;
	assume SecMask_$_457 == SecMask_$_456[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu := SecMask_$_456[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N := 0]];
	assume SecMask_$_458 == SecMask_$_457;
	goto anon870;
anon1921_Else:
	assume !$_$_condition_$564;
	assume 0 <= SecMask_$_456[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N];
	assume SecMask_$_458 == SecMask_$_456;
	goto anon870;
anon870:
	assume wf(Heap_$_37,SecMask_$_458,SecMask_$_458);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_458);
	if ($_$_condition_$565) { goto anon1922_Then; } else { goto anon1922_Else; }
anon1922_Then:
	assume $_$_condition_$565;
	assume $_$_condition_$565 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null);
	assume SecMask_$_459 == SecMask_$_458[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight := SecMask_$_458[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R := SecMask_$_458[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R] - Fractions(100)]];
	if ($_$_condition_$566) { goto anon1923_Then; } else { goto anon1923_Else; }
anon1922_Else:
	assume !$_$_condition_$565;
	assume $_$_condition_$565 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null;
	assume SecMask_$_518 == SecMask_$_458;
	goto anon958;
anon1923_Then:
	assume $_$_condition_$566;
	assume SecMask_$_459[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R] < 0;
	assume SecMask_$_460 == SecMask_$_459[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight := SecMask_$_459[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R := 0]];
	assume SecMask_$_461 == SecMask_$_460;
	goto anon873;
anon1923_Else:
	assume !$_$_condition_$566;
	assume 0 <= SecMask_$_459[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R];
	assume SecMask_$_461 == SecMask_$_459;
	goto anon873;
anon958:
	assume wf(Heap_$_37,SecMask_$_518,SecMask_$_518);
	assume SecMask_$_519 == SecMask_$_518;
	goto anon959;
anon873:
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[this,Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[this,Node.next]);
	if ($_$_condition_$567) { goto anon1924_Then; } else { goto anon1924_Else; }
anon1924_Then:
	assume $_$_condition_$567;
	assume $_$_condition_$567 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume (((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$568) { goto anon1925_Then; } else { goto anon1925_Else; }
anon1924_Else:
	assume !$_$_condition_$567;
	assume $_$_condition_$567 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume !((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume SecMask_$_517 == SecMask_$_461;
	goto anon957;
anon1925_Then:
	assume $_$_condition_$568;
	assume $_$_condition_$568 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume (((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0;
	goto $branchMerge_106;
anon1925_Else:
	assume !$_$_condition_$568;
	assume $_$_condition_$568 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume !((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$570) { goto anon1926_Then; } else { goto anon1926_Else; }
anon957:
	assume wf(Heap_$_37,SecMask_$_517,SecMask_$_517);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_517);
	assume SecMask_$_518 == SecMask_$_517;
	goto anon958;
anon1928_Then:
	assume $_$_condition_$569;
	assume $_$_condition_$569 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu],Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu]);
	goto anon883;
anon1928_Else:
	assume !$_$_condition_$569;
	assume $_$_condition_$569 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null;
	goto anon883;
anon1926_Then:
	assume $_$_condition_$570;
	assume $_$_condition_$570 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume ((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1;
	goto $branchMerge_106;
anon1926_Else:
	assume !$_$_condition_$570;
	assume $_$_condition_$570 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume !(((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	if ($_$_condition_$572) { goto anon1927_Then; } else { goto anon1927_Else; }
anon1927_Then:
	assume $_$_condition_$572;
	assume $_$_condition_$572 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume (((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1;
	goto $branchMerge_106;
anon1927_Else:
	assume !$_$_condition_$572;
	assume $_$_condition_$572 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume !((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	goto $branchMerge_106;
anon883:
	assume SecMask_$_462 == SecMask_$_461[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev := SecMask_$_461[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N := SecMask_$_461[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_462);
	if ($_$_condition_$575) { goto anon1929_Then; } else { goto anon1929_Else; }
anon1929_Then:
	assume $_$_condition_$575;
	assume SecMask_$_462[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N] < 0;
	assume SecMask_$_463 == SecMask_$_462[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev := SecMask_$_462[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N := 0]];
	assume SecMask_$_464 == SecMask_$_463;
	goto anon885;
anon1929_Else:
	assume !$_$_condition_$575;
	assume 0 <= SecMask_$_462[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N];
	assume SecMask_$_464 == SecMask_$_462;
	goto anon885;
anon885:
	assume wf(Heap_$_37,SecMask_$_464,SecMask_$_464);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_464);
	assume SecMask_$_465 == SecMask_$_464[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next := SecMask_$_464[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N := SecMask_$_464[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_465);
	if ($_$_condition_$576) { goto anon1930_Then; } else { goto anon1930_Else; }
anon1930_Then:
	assume $_$_condition_$576;
	assume SecMask_$_465[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N] < 0;
	assume SecMask_$_466 == SecMask_$_465[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next := SecMask_$_465[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N := 0]];
	assume SecMask_$_467 == SecMask_$_466;
	goto anon887;
anon1930_Else:
	assume !$_$_condition_$576;
	assume 0 <= SecMask_$_465[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N];
	assume SecMask_$_467 == SecMask_$_465;
	goto anon887;
anon887:
	assume wf(Heap_$_37,SecMask_$_467,SecMask_$_467);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_467);
	assume SecMask_$_468 == SecMask_$_467[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu := SecMask_$_467[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N := SecMask_$_467[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_468);
	if ($_$_condition_$577) { goto anon1931_Then; } else { goto anon1931_Else; }
anon1931_Then:
	assume $_$_condition_$577;
	assume SecMask_$_468[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N] < 0;
	assume SecMask_$_469 == SecMask_$_468[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu := SecMask_$_468[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N := 0]];
	assume SecMask_$_470 == SecMask_$_469;
	goto anon889;
anon1931_Else:
	assume !$_$_condition_$577;
	assume 0 <= SecMask_$_468[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N];
	assume SecMask_$_470 == SecMask_$_468;
	goto anon889;
anon889:
	assume wf(Heap_$_37,SecMask_$_470,SecMask_$_470);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_470);
	if ($_$_condition_$578) { goto anon1932_Then; } else { goto anon1932_Else; }
anon1932_Then:
	assume $_$_condition_$578;
	assume $_$_condition_$578 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null);
	assume SecMask_$_471 == SecMask_$_470[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight := SecMask_$_470[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R := SecMask_$_470[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R] - Fractions(100)]];
	if ($_$_condition_$579) { goto anon1933_Then; } else { goto anon1933_Else; }
anon1932_Else:
	assume !$_$_condition_$578;
	assume $_$_condition_$578 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null;
	assume SecMask_$_516 == SecMask_$_470;
	goto anon956;
anon1933_Then:
	assume $_$_condition_$579;
	assume SecMask_$_471[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R] < 0;
	assume SecMask_$_472 == SecMask_$_471[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight := SecMask_$_471[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R := 0]];
	assume SecMask_$_473 == SecMask_$_472;
	goto anon892;
anon1933_Else:
	assume !$_$_condition_$579;
	assume 0 <= SecMask_$_471[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R];
	assume SecMask_$_473 == SecMask_$_471;
	goto anon892;
anon956:
	assume wf(Heap_$_37,SecMask_$_516,SecMask_$_516);
	assume SecMask_$_517 == SecMask_$_516;
	goto anon957;
anon892:
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[this,Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[this,Node.next]);
	if ($_$_condition_$580) { goto anon1934_Then; } else { goto anon1934_Else; }
anon1934_Then:
	assume $_$_condition_$580;
	assume $_$_condition_$580 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume (((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$581) { goto anon1935_Then; } else { goto anon1935_Else; }
anon1934_Else:
	assume !$_$_condition_$580;
	assume $_$_condition_$580 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume !((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume SecMask_$_515 == SecMask_$_473;
	goto anon955;
anon1935_Then:
	assume $_$_condition_$581;
	assume $_$_condition_$581 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume (((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0;
	goto $branchMerge_107;
anon1935_Else:
	assume !$_$_condition_$581;
	assume $_$_condition_$581 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume !((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$583) { goto anon1936_Then; } else { goto anon1936_Else; }
anon955:
	assume wf(Heap_$_37,SecMask_$_515,SecMask_$_515);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_515);
	assume SecMask_$_516 == SecMask_$_515;
	goto anon956;
anon1938_Then:
	assume $_$_condition_$582;
	assume $_$_condition_$582 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu],Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu]);
	goto anon902;
anon1938_Else:
	assume !$_$_condition_$582;
	assume $_$_condition_$582 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null;
	goto anon902;
anon1936_Then:
	assume $_$_condition_$583;
	assume $_$_condition_$583 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume ((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1;
	goto $branchMerge_107;
anon1936_Else:
	assume !$_$_condition_$583;
	assume $_$_condition_$583 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume !(((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	if ($_$_condition_$585) { goto anon1937_Then; } else { goto anon1937_Else; }
anon1937_Then:
	assume $_$_condition_$585;
	assume $_$_condition_$585 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume (((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1;
	goto $branchMerge_107;
anon1937_Else:
	assume !$_$_condition_$585;
	assume $_$_condition_$585 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume !((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	goto $branchMerge_107;
anon902:
	assume SecMask_$_474 == SecMask_$_473[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev := SecMask_$_473[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N := SecMask_$_473[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_474);
	if ($_$_condition_$588) { goto anon1939_Then; } else { goto anon1939_Else; }
anon1939_Then:
	assume $_$_condition_$588;
	assume SecMask_$_474[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N] < 0;
	assume SecMask_$_475 == SecMask_$_474[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev := SecMask_$_474[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N := 0]];
	assume SecMask_$_476 == SecMask_$_475;
	goto anon904;
anon1939_Else:
	assume !$_$_condition_$588;
	assume 0 <= SecMask_$_474[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N];
	assume SecMask_$_476 == SecMask_$_474;
	goto anon904;
anon904:
	assume wf(Heap_$_37,SecMask_$_476,SecMask_$_476);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_476);
	assume SecMask_$_477 == SecMask_$_476[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next := SecMask_$_476[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N := SecMask_$_476[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_477);
	if ($_$_condition_$589) { goto anon1940_Then; } else { goto anon1940_Else; }
anon1940_Then:
	assume $_$_condition_$589;
	assume SecMask_$_477[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N] < 0;
	assume SecMask_$_478 == SecMask_$_477[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next := SecMask_$_477[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N := 0]];
	assume SecMask_$_479 == SecMask_$_478;
	goto anon906;
anon1940_Else:
	assume !$_$_condition_$589;
	assume 0 <= SecMask_$_477[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N];
	assume SecMask_$_479 == SecMask_$_477;
	goto anon906;
anon906:
	assume wf(Heap_$_37,SecMask_$_479,SecMask_$_479);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_479);
	assume SecMask_$_480 == SecMask_$_479[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu := SecMask_$_479[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N := SecMask_$_479[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_480);
	if ($_$_condition_$590) { goto anon1941_Then; } else { goto anon1941_Else; }
anon1941_Then:
	assume $_$_condition_$590;
	assume SecMask_$_480[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N] < 0;
	assume SecMask_$_481 == SecMask_$_480[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu := SecMask_$_480[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N := 0]];
	assume SecMask_$_482 == SecMask_$_481;
	goto anon908;
anon1941_Else:
	assume !$_$_condition_$590;
	assume 0 <= SecMask_$_480[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N];
	assume SecMask_$_482 == SecMask_$_480;
	goto anon908;
anon908:
	assume wf(Heap_$_37,SecMask_$_482,SecMask_$_482);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_482);
	if ($_$_condition_$591) { goto anon1942_Then; } else { goto anon1942_Else; }
anon1942_Then:
	assume $_$_condition_$591;
	assume $_$_condition_$591 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null);
	assume SecMask_$_483 == SecMask_$_482[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight := SecMask_$_482[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R := SecMask_$_482[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R] - Fractions(100)]];
	if ($_$_condition_$592) { goto anon1943_Then; } else { goto anon1943_Else; }
anon1942_Else:
	assume !$_$_condition_$591;
	assume $_$_condition_$591 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null;
	assume SecMask_$_514 == SecMask_$_482;
	goto anon954;
anon1943_Then:
	assume $_$_condition_$592;
	assume SecMask_$_483[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R] < 0;
	assume SecMask_$_484 == SecMask_$_483[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight := SecMask_$_483[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R := 0]];
	assume SecMask_$_485 == SecMask_$_484;
	goto anon911;
anon1943_Else:
	assume !$_$_condition_$592;
	assume 0 <= SecMask_$_483[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R];
	assume SecMask_$_485 == SecMask_$_483;
	goto anon911;
anon954:
	assume wf(Heap_$_37,SecMask_$_514,SecMask_$_514);
	assume SecMask_$_515 == SecMask_$_514;
	goto anon955;
anon911:
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[this,Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[this,Node.next]);
	if ($_$_condition_$593) { goto anon1944_Then; } else { goto anon1944_Else; }
anon1944_Then:
	assume $_$_condition_$593;
	assume $_$_condition_$593 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume (((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$594) { goto anon1945_Then; } else { goto anon1945_Else; }
anon1944_Else:
	assume !$_$_condition_$593;
	assume $_$_condition_$593 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume !((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume SecMask_$_513 == SecMask_$_485;
	goto anon953;
anon1945_Then:
	assume $_$_condition_$594;
	assume $_$_condition_$594 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume (((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0;
	goto $branchMerge_108;
anon1945_Else:
	assume !$_$_condition_$594;
	assume $_$_condition_$594 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume !((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$596) { goto anon1946_Then; } else { goto anon1946_Else; }
anon953:
	assume wf(Heap_$_37,SecMask_$_513,SecMask_$_513);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_513);
	assume SecMask_$_514 == SecMask_$_513;
	goto anon954;
anon1948_Then:
	assume $_$_condition_$595;
	assume $_$_condition_$595 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu],Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu]);
	goto anon921;
anon1948_Else:
	assume !$_$_condition_$595;
	assume $_$_condition_$595 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null;
	goto anon921;
anon1946_Then:
	assume $_$_condition_$596;
	assume $_$_condition_$596 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume ((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1;
	goto $branchMerge_108;
anon1946_Else:
	assume !$_$_condition_$596;
	assume $_$_condition_$596 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume !(((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	if ($_$_condition_$598) { goto anon1947_Then; } else { goto anon1947_Else; }
anon1947_Then:
	assume $_$_condition_$598;
	assume $_$_condition_$598 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume (((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1;
	goto $branchMerge_108;
anon1947_Else:
	assume !$_$_condition_$598;
	assume $_$_condition_$598 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume !((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	goto $branchMerge_108;
anon921:
	assume SecMask_$_486 == SecMask_$_485[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev := SecMask_$_485[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N := SecMask_$_485[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_486);
	if ($_$_condition_$601) { goto anon1949_Then; } else { goto anon1949_Else; }
anon1949_Then:
	assume $_$_condition_$601;
	assume SecMask_$_486[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N] < 0;
	assume SecMask_$_487 == SecMask_$_486[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev := SecMask_$_486[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N := 0]];
	assume SecMask_$_488 == SecMask_$_487;
	goto anon923;
anon1949_Else:
	assume !$_$_condition_$601;
	assume 0 <= SecMask_$_486[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N];
	assume SecMask_$_488 == SecMask_$_486;
	goto anon923;
anon923:
	assume wf(Heap_$_37,SecMask_$_488,SecMask_$_488);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_488);
	assume SecMask_$_489 == SecMask_$_488[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next := SecMask_$_488[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N := SecMask_$_488[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_489);
	if ($_$_condition_$602) { goto anon1950_Then; } else { goto anon1950_Else; }
anon1950_Then:
	assume $_$_condition_$602;
	assume SecMask_$_489[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N] < 0;
	assume SecMask_$_490 == SecMask_$_489[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next := SecMask_$_489[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N := 0]];
	assume SecMask_$_491 == SecMask_$_490;
	goto anon925;
anon1950_Else:
	assume !$_$_condition_$602;
	assume 0 <= SecMask_$_489[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N];
	assume SecMask_$_491 == SecMask_$_489;
	goto anon925;
anon925:
	assume wf(Heap_$_37,SecMask_$_491,SecMask_$_491);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_491);
	assume SecMask_$_492 == SecMask_$_491[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu := SecMask_$_491[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N := SecMask_$_491[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_492);
	if ($_$_condition_$603) { goto anon1951_Then; } else { goto anon1951_Else; }
anon1951_Then:
	assume $_$_condition_$603;
	assume SecMask_$_492[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N] < 0;
	assume SecMask_$_493 == SecMask_$_492[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu := SecMask_$_492[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N := 0]];
	assume SecMask_$_494 == SecMask_$_493;
	goto anon927;
anon1951_Else:
	assume !$_$_condition_$603;
	assume 0 <= SecMask_$_492[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N];
	assume SecMask_$_494 == SecMask_$_492;
	goto anon927;
anon927:
	assume wf(Heap_$_37,SecMask_$_494,SecMask_$_494);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_494);
	if ($_$_condition_$604) { goto anon1952_Then; } else { goto anon1952_Else; }
anon1952_Then:
	assume $_$_condition_$604;
	assume $_$_condition_$604 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null);
	assume SecMask_$_495 == SecMask_$_494[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight := SecMask_$_494[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R := SecMask_$_494[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R] - Fractions(100)]];
	if ($_$_condition_$605) { goto anon1953_Then; } else { goto anon1953_Else; }
anon1952_Else:
	assume !$_$_condition_$604;
	assume $_$_condition_$604 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null;
	assume SecMask_$_512 == SecMask_$_494;
	goto anon952;
anon1953_Then:
	assume $_$_condition_$605;
	assume SecMask_$_495[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R] < 0;
	assume SecMask_$_496 == SecMask_$_495[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight := SecMask_$_495[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R := 0]];
	assume SecMask_$_497 == SecMask_$_496;
	goto anon930;
anon1953_Else:
	assume !$_$_condition_$605;
	assume 0 <= SecMask_$_495[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R];
	assume SecMask_$_497 == SecMask_$_495;
	goto anon930;
anon952:
	assume wf(Heap_$_37,SecMask_$_512,SecMask_$_512);
	assume SecMask_$_513 == SecMask_$_512;
	goto anon953;
anon930:
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[this,Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[this,Node.next]);
	if ($_$_condition_$606) { goto anon1954_Then; } else { goto anon1954_Else; }
anon1954_Then:
	assume $_$_condition_$606;
	assume $_$_condition_$606 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume (((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$607) { goto anon1955_Then; } else { goto anon1955_Else; }
anon1954_Else:
	assume !$_$_condition_$606;
	assume $_$_condition_$606 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume !((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume SecMask_$_511 == SecMask_$_497;
	goto anon951;
anon1955_Then:
	assume $_$_condition_$607;
	assume $_$_condition_$607 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume (((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0;
	goto $branchMerge_109;
anon1955_Else:
	assume !$_$_condition_$607;
	assume $_$_condition_$607 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume !((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$609) { goto anon1956_Then; } else { goto anon1956_Else; }
anon951:
	assume wf(Heap_$_37,SecMask_$_511,SecMask_$_511);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_511);
	assume SecMask_$_512 == SecMask_$_511;
	goto anon952;
anon1958_Then:
	assume $_$_condition_$608;
	assume $_$_condition_$608 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu],Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu]);
	goto anon940;
anon1958_Else:
	assume !$_$_condition_$608;
	assume $_$_condition_$608 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null;
	goto anon940;
anon1956_Then:
	assume $_$_condition_$609;
	assume $_$_condition_$609 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume ((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1;
	goto $branchMerge_109;
anon1956_Else:
	assume !$_$_condition_$609;
	assume $_$_condition_$609 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume !(((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	if ($_$_condition_$611) { goto anon1957_Then; } else { goto anon1957_Else; }
anon1957_Then:
	assume $_$_condition_$611;
	assume $_$_condition_$611 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume (((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1;
	goto $branchMerge_109;
anon1957_Else:
	assume !$_$_condition_$611;
	assume $_$_condition_$611 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume !((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	goto $branchMerge_109;
anon940:
	assume SecMask_$_498 == SecMask_$_497[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev := SecMask_$_497[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N := SecMask_$_497[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_498);
	if ($_$_condition_$614) { goto anon1959_Then; } else { goto anon1959_Else; }
anon1959_Then:
	assume $_$_condition_$614;
	assume SecMask_$_498[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N] < 0;
	assume SecMask_$_499 == SecMask_$_498[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev := SecMask_$_498[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N := 0]];
	assume SecMask_$_500 == SecMask_$_499;
	goto anon942;
anon1959_Else:
	assume !$_$_condition_$614;
	assume 0 <= SecMask_$_498[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N];
	assume SecMask_$_500 == SecMask_$_498;
	goto anon942;
anon942:
	assume wf(Heap_$_37,SecMask_$_500,SecMask_$_500);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_500);
	assume SecMask_$_501 == SecMask_$_500[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next := SecMask_$_500[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N := SecMask_$_500[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_501);
	if ($_$_condition_$615) { goto anon1960_Then; } else { goto anon1960_Else; }
anon1960_Then:
	assume $_$_condition_$615;
	assume SecMask_$_501[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N] < 0;
	assume SecMask_$_502 == SecMask_$_501[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next := SecMask_$_501[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N := 0]];
	assume SecMask_$_503 == SecMask_$_502;
	goto anon944;
anon1960_Else:
	assume !$_$_condition_$615;
	assume 0 <= SecMask_$_501[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N];
	assume SecMask_$_503 == SecMask_$_501;
	goto anon944;
anon944:
	assume wf(Heap_$_37,SecMask_$_503,SecMask_$_503);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_503);
	assume SecMask_$_504 == SecMask_$_503[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu := SecMask_$_503[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N := SecMask_$_503[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_504);
	if ($_$_condition_$616) { goto anon1961_Then; } else { goto anon1961_Else; }
anon1961_Then:
	assume $_$_condition_$616;
	assume SecMask_$_504[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N] < 0;
	assume SecMask_$_505 == SecMask_$_504[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu := SecMask_$_504[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N := 0]];
	assume SecMask_$_506 == SecMask_$_505;
	goto anon946;
anon1961_Else:
	assume !$_$_condition_$616;
	assume 0 <= SecMask_$_504[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N];
	assume SecMask_$_506 == SecMask_$_504;
	goto anon946;
anon946:
	assume wf(Heap_$_37,SecMask_$_506,SecMask_$_506);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_506);
	if ($_$_condition_$617) { goto anon1962_Then; } else { goto anon1962_Else; }
anon1962_Then:
	assume $_$_condition_$617;
	assume $_$_condition_$617 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null);
	assume SecMask_$_507 == SecMask_$_506[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight := SecMask_$_506[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R := SecMask_$_506[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R] - Fractions(100)]];
	if ($_$_condition_$618) { goto anon1963_Then; } else { goto anon1963_Else; }
anon1962_Else:
	assume !$_$_condition_$617;
	assume $_$_condition_$617 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null;
	assume SecMask_$_510 == SecMask_$_506;
	goto anon950;
anon1963_Then:
	assume $_$_condition_$618;
	assume SecMask_$_507[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R] < 0;
	assume SecMask_$_508 == SecMask_$_507[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight := SecMask_$_507[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R := 0]];
	assume SecMask_$_509 == SecMask_$_508;
	goto anon949;
anon1963_Else:
	assume !$_$_condition_$618;
	assume 0 <= SecMask_$_507[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[this,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R];
	assume SecMask_$_509 == SecMask_$_507;
	goto anon949;
anon950:
	assume wf(Heap_$_37,SecMask_$_510,SecMask_$_510);
	assume SecMask_$_511 == SecMask_$_510;
	goto anon951;
anon949:
	assume wf(Heap_$_37,SecMask_$_509,SecMask_$_509);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_509);
	assume SecMask_$_510 == SecMask_$_509;
	goto anon950;
anon975:
	assume IsGoodMask(exhaleMask#_654_$_0);
	assume wf(Heap_$_37,exhaleMask#_654_$_0,SecMask_$_533);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_533);
	if ($_$_condition_$620) { goto anon1965_Then; } else { goto anon1965_Else; }
anon1965_Then:
	assume $_$_condition_$620;
	assume $_$_condition_$620 <==> (!(oldNext#4_$_0 == null));
	assume !(oldNext#4_$_0 == null);
	assert { :msg "  30.5: The postcondition at 41.18 might not hold. The permission at 41.36 might not be positive." } Fractions(100) > 0;
	assert { :msg "  30.5: The postcondition at 41.18 might not hold. Insufficient fraction at 41.36 for Node.inv." } (Fractions(100) <= exhaleMask#_654_$_0[oldNext#4_$_0,Node.inv][perm$R]) && ((Fractions(100) == exhaleMask#_654_$_0[oldNext#4_$_0,Node.inv][perm$R]) ==> (0 <= exhaleMask#_654_$_0[oldNext#4_$_0,Node.inv][perm$N]));
	assume exhaleMask#_654_$_1 == exhaleMask#_654_$_0[oldNext#4_$_0,Node.inv := exhaleMask#_654_$_0[oldNext#4_$_0,Node.inv][perm$R := exhaleMask#_654_$_0[oldNext#4_$_0,Node.inv][perm$R] - Fractions(100)]];
	if ($_$_condition_$621) { goto anon1966_Then; } else { goto anon1966_Else; }
anon1965_Else:
	assume !$_$_condition_$620;
	assume $_$_condition_$620 <==> (!(oldNext#4_$_0 == null));
	assume oldNext#4_$_0 == null;
	assume SecMask_$_860 == SecMask_$_533;
	assume exhaleMask#_654_$_2 == exhaleMask#_654_$_0;
	goto anon1488;
anon1966_Then:
	assume $_$_condition_$621;
	assume $_$_condition_$621 <==> (((false || ((((((((((((((((((((((predVer#_643_$_1 == Heap_$_37[oldNext#4_$_0,Node.inv]) && (predRec#_642_$_0 == oldNext#4_$_0)) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_644_$_0)) || ((((((((((((((((((predVer#_598_$_0 == Heap_$_37[oldNext#4_$_0,Node.inv]) && (this == oldNext#4_$_0)) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_476_$_0) && cond#_430_$_1) && cond#_452_$_0) && true)) || ((((predVer#_321_$_0 == Heap_$_37[oldNext#4_$_0,Node.inv]) && (this == oldNext#4_$_0)) && true) && true));
	assume ((false || ((((((((((((((((((((((predVer#_643_$_1 == Heap_$_37[oldNext#4_$_0,Node.inv]) && (predRec#_642_$_0 == oldNext#4_$_0)) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_644_$_0)) || ((((((((((((((((((predVer#_598_$_0 == Heap_$_37[oldNext#4_$_0,Node.inv]) && (this == oldNext#4_$_0)) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_476_$_0) && cond#_430_$_1) && cond#_452_$_0) && true)) || ((((predVer#_321_$_0 == Heap_$_37[oldNext#4_$_0,Node.inv]) && (this == oldNext#4_$_0)) && true) && true);
	if ($_$_condition_$622) { goto anon1967_Then; } else { goto anon1967_Else; }
anon1966_Else:
	assume !$_$_condition_$621;
	assume $_$_condition_$621 <==> (((false || ((((((((((((((((((((((predVer#_643_$_1 == Heap_$_37[oldNext#4_$_0,Node.inv]) && (predRec#_642_$_0 == oldNext#4_$_0)) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_644_$_0)) || ((((((((((((((((((predVer#_598_$_0 == Heap_$_37[oldNext#4_$_0,Node.inv]) && (this == oldNext#4_$_0)) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_476_$_0) && cond#_430_$_1) && cond#_452_$_0) && true)) || ((((predVer#_321_$_0 == Heap_$_37[oldNext#4_$_0,Node.inv]) && (this == oldNext#4_$_0)) && true) && true));
	assume !(((false || ((((((((((((((((((((((predVer#_643_$_1 == Heap_$_37[oldNext#4_$_0,Node.inv]) && (predRec#_642_$_0 == oldNext#4_$_0)) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_644_$_0)) || ((((((((((((((((((predVer#_598_$_0 == Heap_$_37[oldNext#4_$_0,Node.inv]) && (this == oldNext#4_$_0)) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_476_$_0) && cond#_430_$_1) && cond#_452_$_0) && true)) || ((((predVer#_321_$_0 == Heap_$_37[oldNext#4_$_0,Node.inv]) && (this == oldNext#4_$_0)) && true) && true));
	assume SecMask_$_859 == SecMask_$_533;
	goto $branchMerge_110;
anon1488:
	assume IsGoodExhaleState(exhaleHeap#_653_$_0,Heap_$_37,exhaleMask#_654_$_2,SecMask_$_860);
	assume IsGoodMask(exhaleMask#_654_$_2);
	assume wf(exhaleHeap#_653_$_0,exhaleMask#_654_$_2,SecMask_$_860);
	assert { :msg "  30.5: Method might lock/unlock more than allowed." } (forall  lk#_935 : ref :: {exhaleHeap#_653_$_0[lk#_935,held]} {exhaleHeap#_653_$_0[lk#_935,rdheld]} ( (((0 < exhaleHeap#_653_$_0[lk#_935,held]) <==> (0 < Heap[lk#_935,held])) && (exhaleHeap#_653_$_0[lk#_935,rdheld] <==> Heap[lk#_935,rdheld])) || false ));
	assert { :msg "  30.5: Method body is not allowed to leave any debt." } (forall  ch : ref :: ( (ch == null) || (0 <= ZeroCredits[ch]) ));
	goto $exit;
anon1967_Then:
	assume $_$_condition_$622;
	assume $_$_condition_$622 <==> ((((predVer#_321_$_0 == Heap_$_37[oldNext#4_$_0,Node.inv]) && (this == oldNext#4_$_0)) && true) && true);
	assume (((predVer#_321_$_0 == Heap_$_37[oldNext#4_$_0,Node.inv]) && (this == oldNext#4_$_0)) && true) && true;
	goto $branchMerge_111;
anon1967_Else:
	assume !$_$_condition_$622;
	assume $_$_condition_$622 <==> ((((predVer#_321_$_0 == Heap_$_37[oldNext#4_$_0,Node.inv]) && (this == oldNext#4_$_0)) && true) && true);
	assume !((((predVer#_321_$_0 == Heap_$_37[oldNext#4_$_0,Node.inv]) && (this == oldNext#4_$_0)) && true) && true);
	if ($_$_condition_$625) { goto anon1968_Then; } else { goto anon1968_Else; }
anon2209_Then:
	assume $_$_condition_$623;
	assume $_$_condition_$623 <==> (!CanRead(exhaleMask#_654_$_1,SecMask_$_859,oldNext#4_$_0,Node.inv));
	assume !CanRead(exhaleMask#_654_$_1,SecMask_$_859,oldNext#4_$_0,Node.inv);
	assume Heap_$_37[oldNext#4_$_0,Node.inv] < exhaleHeap#_653_$_0[oldNext#4_$_0,Node.inv];
	goto anon1487;
anon2209_Else:
	assume !$_$_condition_$623;
	assume $_$_condition_$623 <==> (!CanRead(exhaleMask#_654_$_1,SecMask_$_859,oldNext#4_$_0,Node.inv));
	assume CanRead(exhaleMask#_654_$_1,SecMask_$_859,oldNext#4_$_0,Node.inv);
	goto anon1487;
anon1969_Then:
	assume $_$_condition_$624;
	assume $_$_condition_$624 <==> (!(Heap_$_37[oldNext#4_$_0,Node.prev] == null));
	assume !(Heap_$_37[oldNext#4_$_0,Node.prev] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],mu],Heap_$_37[oldNext#4_$_0,mu]);
	goto $branchMerge_112;
anon1969_Else:
	assume !$_$_condition_$624;
	assume $_$_condition_$624 <==> (!(Heap_$_37[oldNext#4_$_0,Node.prev] == null));
	assume Heap_$_37[oldNext#4_$_0,Node.prev] == null;
	goto $branchMerge_112;
anon1968_Then:
	assume $_$_condition_$625;
	assume $_$_condition_$625 <==> ((((((((((((((((((predVer#_598_$_0 == Heap_$_37[oldNext#4_$_0,Node.inv]) && (this == oldNext#4_$_0)) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_476_$_0) && cond#_430_$_1) && cond#_452_$_0) && true);
	assume (((((((((((((((((predVer#_598_$_0 == Heap_$_37[oldNext#4_$_0,Node.inv]) && (this == oldNext#4_$_0)) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_476_$_0) && cond#_430_$_1) && cond#_452_$_0) && true;
	goto $branchMerge_111;
anon1968_Else:
	assume !$_$_condition_$625;
	assume $_$_condition_$625 <==> ((((((((((((((((((predVer#_598_$_0 == Heap_$_37[oldNext#4_$_0,Node.inv]) && (this == oldNext#4_$_0)) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_476_$_0) && cond#_430_$_1) && cond#_452_$_0) && true);
	assume !((((((((((((((((((predVer#_598_$_0 == Heap_$_37[oldNext#4_$_0,Node.inv]) && (this == oldNext#4_$_0)) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_476_$_0) && cond#_430_$_1) && cond#_452_$_0) && true);
	goto $branchMerge_111;
anon1970_Then:
	assume $_$_condition_$628;
	assume $_$_condition_$628 <==> (!(Heap_$_37[oldNext#4_$_0,Node.next] == null));
	assume !(Heap_$_37[oldNext#4_$_0,Node.next] == null);
	assume MuBelow(Heap_$_37[oldNext#4_$_0,mu],Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],mu]);
	goto anon986;
anon1970_Else:
	assume !$_$_condition_$628;
	assume $_$_condition_$628 <==> (!(Heap_$_37[oldNext#4_$_0,Node.next] == null));
	assume Heap_$_37[oldNext#4_$_0,Node.next] == null;
	goto anon986;
anon986:
	assume SecMask_$_534 == SecMask_$_533[oldNext#4_$_0,Node.prev := SecMask_$_533[oldNext#4_$_0,Node.prev][perm$N := SecMask_$_533[oldNext#4_$_0,Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_534);
	if ($_$_condition_$630) { goto anon1971_Then; } else { goto anon1971_Else; }
anon1971_Then:
	assume $_$_condition_$630;
	assume SecMask_$_534[oldNext#4_$_0,Node.prev][perm$N] < 0;
	assume SecMask_$_535 == SecMask_$_534[oldNext#4_$_0,Node.prev := SecMask_$_534[oldNext#4_$_0,Node.prev][perm$N := 0]];
	assume SecMask_$_536 == SecMask_$_535;
	goto anon988;
anon1971_Else:
	assume !$_$_condition_$630;
	assume 0 <= SecMask_$_534[oldNext#4_$_0,Node.prev][perm$N];
	assume SecMask_$_536 == SecMask_$_534;
	goto anon988;
anon988:
	assume wf(Heap_$_37,SecMask_$_536,SecMask_$_536);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_536);
	assume SecMask_$_537 == SecMask_$_536[oldNext#4_$_0,Node.next := SecMask_$_536[oldNext#4_$_0,Node.next][perm$N := SecMask_$_536[oldNext#4_$_0,Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_537);
	if ($_$_condition_$631) { goto anon1972_Then; } else { goto anon1972_Else; }
anon1972_Then:
	assume $_$_condition_$631;
	assume SecMask_$_537[oldNext#4_$_0,Node.next][perm$N] < 0;
	assume SecMask_$_538 == SecMask_$_537[oldNext#4_$_0,Node.next := SecMask_$_537[oldNext#4_$_0,Node.next][perm$N := 0]];
	assume SecMask_$_539 == SecMask_$_538;
	goto anon990;
anon1972_Else:
	assume !$_$_condition_$631;
	assume 0 <= SecMask_$_537[oldNext#4_$_0,Node.next][perm$N];
	assume SecMask_$_539 == SecMask_$_537;
	goto anon990;
anon990:
	assume wf(Heap_$_37,SecMask_$_539,SecMask_$_539);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_539);
	assume SecMask_$_540 == SecMask_$_539[oldNext#4_$_0,mu := SecMask_$_539[oldNext#4_$_0,mu][perm$N := SecMask_$_539[oldNext#4_$_0,mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_540);
	if ($_$_condition_$632) { goto anon1973_Then; } else { goto anon1973_Else; }
anon1973_Then:
	assume $_$_condition_$632;
	assume SecMask_$_540[oldNext#4_$_0,mu][perm$N] < 0;
	assume SecMask_$_541 == SecMask_$_540[oldNext#4_$_0,mu := SecMask_$_540[oldNext#4_$_0,mu][perm$N := 0]];
	assume SecMask_$_542 == SecMask_$_541;
	goto anon992;
anon1973_Else:
	assume !$_$_condition_$632;
	assume 0 <= SecMask_$_540[oldNext#4_$_0,mu][perm$N];
	assume SecMask_$_542 == SecMask_$_540;
	goto anon992;
anon992:
	assume wf(Heap_$_37,SecMask_$_542,SecMask_$_542);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_542);
	if ($_$_condition_$633) { goto anon1974_Then; } else { goto anon1974_Else; }
anon1974_Then:
	assume $_$_condition_$633;
	assume $_$_condition_$633 <==> (!(Heap_$_37[oldNext#4_$_0,Node.prev] == null));
	assume !(Heap_$_37[oldNext#4_$_0,Node.prev] == null);
	assume SecMask_$_543 == SecMask_$_542[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft := SecMask_$_542[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft][perm$R := SecMask_$_542[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft][perm$R] - Fractions(100)]];
	if ($_$_condition_$634) { goto anon1975_Then; } else { goto anon1975_Else; }
anon1974_Else:
	assume !$_$_condition_$633;
	assume $_$_condition_$633 <==> (!(Heap_$_37[oldNext#4_$_0,Node.prev] == null));
	assume Heap_$_37[oldNext#4_$_0,Node.prev] == null;
	assume SecMask_$_700 == SecMask_$_542;
	goto $branchMerge_113;
anon1975_Then:
	assume $_$_condition_$634;
	assume SecMask_$_543[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft][perm$R] < 0;
	assume SecMask_$_544 == SecMask_$_543[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft := SecMask_$_543[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft][perm$R := 0]];
	assume SecMask_$_545 == SecMask_$_544;
	goto $branchMerge_114;
anon1975_Else:
	assume !$_$_condition_$634;
	assume 0 <= SecMask_$_543[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft][perm$R];
	assume SecMask_$_545 == SecMask_$_543;
	goto $branchMerge_114;
anon2097_Then:
	assume $_$_condition_$635;
	assume $_$_condition_$635 <==> (!(Heap_$_37[oldNext#4_$_0,Node.next] == null));
	assume !(Heap_$_37[oldNext#4_$_0,Node.next] == null);
	assume SecMask_$_701 == SecMask_$_700[Heap_$_37[oldNext#4_$_0,Node.next],Node.invRight := SecMask_$_700[Heap_$_37[oldNext#4_$_0,Node.next],Node.invRight][perm$R := SecMask_$_700[Heap_$_37[oldNext#4_$_0,Node.next],Node.invRight][perm$R] - Fractions(100)]];
	if ($_$_condition_$803) { goto anon2098_Then; } else { goto anon2098_Else; }
anon2097_Else:
	assume !$_$_condition_$635;
	assume $_$_condition_$635 <==> (!(Heap_$_37[oldNext#4_$_0,Node.next] == null));
	assume Heap_$_37[oldNext#4_$_0,Node.next] == null;
	assume SecMask_$_858 == SecMask_$_700;
	goto anon1484;
anon1976_Then:
	assume $_$_condition_$636;
	assume $_$_condition_$636 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[oldNext#4_$_0,Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[oldNext#4_$_0,Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[oldNext#4_$_0,Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[oldNext#4_$_0,Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[oldNext#4_$_0,Node.prev])) && true) && predFlag#_348_$_0));
	assume ((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[oldNext#4_$_0,Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[oldNext#4_$_0,Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[oldNext#4_$_0,Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[oldNext#4_$_0,Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[oldNext#4_$_0,Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$638) { goto anon1977_Then; } else { goto anon1977_Else; }
anon1976_Else:
	assume !$_$_condition_$636;
	assume $_$_condition_$636 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[oldNext#4_$_0,Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[oldNext#4_$_0,Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[oldNext#4_$_0,Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[oldNext#4_$_0,Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[oldNext#4_$_0,Node.prev])) && true) && predFlag#_348_$_0));
	assume !(((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[oldNext#4_$_0,Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[oldNext#4_$_0,Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[oldNext#4_$_0,Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[oldNext#4_$_0,Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[oldNext#4_$_0,Node.prev])) && true) && predFlag#_348_$_0));
	assume SecMask_$_699 == SecMask_$_545;
	goto anon1248;
anon1977_Then:
	assume $_$_condition_$638;
	assume $_$_condition_$638 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[oldNext#4_$_0,Node.prev])) && true) && predFlag#_348_$_0);
	assume (((predVer#_347_$_1 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[oldNext#4_$_0,Node.prev])) && true) && predFlag#_348_$_0;
	goto $branchMerge_115;
anon1977_Else:
	assume !$_$_condition_$638;
	assume $_$_condition_$638 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[oldNext#4_$_0,Node.prev])) && true) && predFlag#_348_$_0);
	assume !((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[oldNext#4_$_0,Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$640) { goto anon1978_Then; } else { goto anon1978_Else; }
anon1248:
	assume wf(Heap_$_37,SecMask_$_699,SecMask_$_699);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_699);
	assume SecMask_$_700 == SecMask_$_699;
	goto $branchMerge_113;
anon1981_Then:
	assume $_$_condition_$639;
	assume $_$_condition_$639 <==> (!(Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],mu],Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],mu]);
	goto anon1007;
anon1981_Else:
	assume !$_$_condition_$639;
	assume $_$_condition_$639 <==> (!(Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev] == null;
	goto anon1007;
anon1978_Then:
	assume $_$_condition_$640;
	assume $_$_condition_$640 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[oldNext#4_$_0,Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume ((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[oldNext#4_$_0,Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1;
	goto $branchMerge_115;
anon1978_Else:
	assume !$_$_condition_$640;
	assume $_$_condition_$640 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[oldNext#4_$_0,Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume !(((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[oldNext#4_$_0,Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	if ($_$_condition_$642) { goto anon1979_Then; } else { goto anon1979_Else; }
anon1979_Then:
	assume $_$_condition_$642;
	assume $_$_condition_$642 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[oldNext#4_$_0,Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume (((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[oldNext#4_$_0,Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1;
	goto $branchMerge_115;
anon1979_Else:
	assume !$_$_condition_$642;
	assume $_$_condition_$642 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[oldNext#4_$_0,Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume !((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[oldNext#4_$_0,Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	if ($_$_condition_$644) { goto anon1980_Then; } else { goto anon1980_Else; }
anon1980_Then:
	assume $_$_condition_$644;
	assume $_$_condition_$644 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[oldNext#4_$_0,Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume (((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[oldNext#4_$_0,Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2;
	goto $branchMerge_115;
anon1980_Else:
	assume !$_$_condition_$644;
	assume $_$_condition_$644 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[oldNext#4_$_0,Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume !((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[oldNext#4_$_0,Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	goto $branchMerge_115;
anon1007:
	assume SecMask_$_546 == SecMask_$_545[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev := SecMask_$_545[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev][perm$N := SecMask_$_545[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_546);
	if ($_$_condition_$647) { goto anon1982_Then; } else { goto anon1982_Else; }
anon1982_Then:
	assume $_$_condition_$647;
	assume SecMask_$_546[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev][perm$N] < 0;
	assume SecMask_$_547 == SecMask_$_546[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev := SecMask_$_546[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev][perm$N := 0]];
	assume SecMask_$_548 == SecMask_$_547;
	goto anon1009;
anon1982_Else:
	assume !$_$_condition_$647;
	assume 0 <= SecMask_$_546[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev][perm$N];
	assume SecMask_$_548 == SecMask_$_546;
	goto anon1009;
anon1009:
	assume wf(Heap_$_37,SecMask_$_548,SecMask_$_548);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_548);
	assume SecMask_$_549 == SecMask_$_548[Heap_$_37[oldNext#4_$_0,Node.prev],Node.next := SecMask_$_548[Heap_$_37[oldNext#4_$_0,Node.prev],Node.next][perm$N := SecMask_$_548[Heap_$_37[oldNext#4_$_0,Node.prev],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_549);
	if ($_$_condition_$648) { goto anon1983_Then; } else { goto anon1983_Else; }
anon1983_Then:
	assume $_$_condition_$648;
	assume SecMask_$_549[Heap_$_37[oldNext#4_$_0,Node.prev],Node.next][perm$N] < 0;
	assume SecMask_$_550 == SecMask_$_549[Heap_$_37[oldNext#4_$_0,Node.prev],Node.next := SecMask_$_549[Heap_$_37[oldNext#4_$_0,Node.prev],Node.next][perm$N := 0]];
	assume SecMask_$_551 == SecMask_$_550;
	goto anon1011;
anon1983_Else:
	assume !$_$_condition_$648;
	assume 0 <= SecMask_$_549[Heap_$_37[oldNext#4_$_0,Node.prev],Node.next][perm$N];
	assume SecMask_$_551 == SecMask_$_549;
	goto anon1011;
anon1011:
	assume wf(Heap_$_37,SecMask_$_551,SecMask_$_551);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_551);
	assume SecMask_$_552 == SecMask_$_551[Heap_$_37[oldNext#4_$_0,Node.prev],mu := SecMask_$_551[Heap_$_37[oldNext#4_$_0,Node.prev],mu][perm$N := SecMask_$_551[Heap_$_37[oldNext#4_$_0,Node.prev],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_552);
	if ($_$_condition_$649) { goto anon1984_Then; } else { goto anon1984_Else; }
anon1984_Then:
	assume $_$_condition_$649;
	assume SecMask_$_552[Heap_$_37[oldNext#4_$_0,Node.prev],mu][perm$N] < 0;
	assume SecMask_$_553 == SecMask_$_552[Heap_$_37[oldNext#4_$_0,Node.prev],mu := SecMask_$_552[Heap_$_37[oldNext#4_$_0,Node.prev],mu][perm$N := 0]];
	assume SecMask_$_554 == SecMask_$_553;
	goto anon1013;
anon1984_Else:
	assume !$_$_condition_$649;
	assume 0 <= SecMask_$_552[Heap_$_37[oldNext#4_$_0,Node.prev],mu][perm$N];
	assume SecMask_$_554 == SecMask_$_552;
	goto anon1013;
anon1013:
	assume wf(Heap_$_37,SecMask_$_554,SecMask_$_554);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_554);
	if ($_$_condition_$650) { goto anon1985_Then; } else { goto anon1985_Else; }
anon1985_Then:
	assume $_$_condition_$650;
	assume $_$_condition_$650 <==> (!(Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev] == null);
	assume SecMask_$_555 == SecMask_$_554[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft := SecMask_$_554[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft][perm$R := SecMask_$_554[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft][perm$R] - Fractions(100)]];
	if ($_$_condition_$651) { goto anon1986_Then; } else { goto anon1986_Else; }
anon1985_Else:
	assume !$_$_condition_$650;
	assume $_$_condition_$650 <==> (!(Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev] == null;
	assume SecMask_$_698 == SecMask_$_554;
	goto anon1247;
anon1986_Then:
	assume $_$_condition_$651;
	assume SecMask_$_555[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft][perm$R] < 0;
	assume SecMask_$_556 == SecMask_$_555[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft := SecMask_$_555[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft][perm$R := 0]];
	assume SecMask_$_557 == SecMask_$_556;
	goto anon1016;
anon1986_Else:
	assume !$_$_condition_$651;
	assume 0 <= SecMask_$_555[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft][perm$R];
	assume SecMask_$_557 == SecMask_$_555;
	goto anon1016;
anon1247:
	assume wf(Heap_$_37,SecMask_$_698,SecMask_$_698);
	assume SecMask_$_699 == SecMask_$_698;
	goto anon1248;
anon1016:
	assume !(Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev] == Heap_$_37[oldNext#4_$_0,Node.prev]);
	if ($_$_condition_$652) { goto anon1987_Then; } else { goto anon1987_Else; }
anon1987_Then:
	assume $_$_condition_$652;
	assume $_$_condition_$652 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume ((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$653) { goto anon1988_Then; } else { goto anon1988_Else; }
anon1987_Else:
	assume !$_$_condition_$652;
	assume $_$_condition_$652 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume !(((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume SecMask_$_697 == SecMask_$_557;
	goto anon1246;
anon1988_Then:
	assume $_$_condition_$653;
	assume $_$_condition_$653 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume (((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev])) && true) && predFlag#_348_$_0;
	goto $branchMerge_116;
anon1988_Else:
	assume !$_$_condition_$653;
	assume $_$_condition_$653 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume !((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$655) { goto anon1989_Then; } else { goto anon1989_Else; }
anon1246:
	assume wf(Heap_$_37,SecMask_$_697,SecMask_$_697);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_697);
	assume SecMask_$_698 == SecMask_$_697;
	goto anon1247;
anon1992_Then:
	assume $_$_condition_$654;
	assume $_$_condition_$654 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],mu],Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],mu]);
	goto anon1028;
anon1992_Else:
	assume !$_$_condition_$654;
	assume $_$_condition_$654 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev] == null;
	goto anon1028;
anon1989_Then:
	assume $_$_condition_$655;
	assume $_$_condition_$655 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume ((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1;
	goto $branchMerge_116;
anon1989_Else:
	assume !$_$_condition_$655;
	assume $_$_condition_$655 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume !(((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	if ($_$_condition_$657) { goto anon1990_Then; } else { goto anon1990_Else; }
anon1990_Then:
	assume $_$_condition_$657;
	assume $_$_condition_$657 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume (((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1;
	goto $branchMerge_116;
anon1990_Else:
	assume !$_$_condition_$657;
	assume $_$_condition_$657 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume !((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	if ($_$_condition_$659) { goto anon1991_Then; } else { goto anon1991_Else; }
anon1991_Then:
	assume $_$_condition_$659;
	assume $_$_condition_$659 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume (((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2;
	goto $branchMerge_116;
anon1991_Else:
	assume !$_$_condition_$659;
	assume $_$_condition_$659 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume !((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	goto $branchMerge_116;
anon1028:
	assume SecMask_$_558 == SecMask_$_557[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev := SecMask_$_557[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev][perm$N := SecMask_$_557[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_558);
	if ($_$_condition_$662) { goto anon1993_Then; } else { goto anon1993_Else; }
anon1993_Then:
	assume $_$_condition_$662;
	assume SecMask_$_558[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev][perm$N] < 0;
	assume SecMask_$_559 == SecMask_$_558[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev := SecMask_$_558[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev][perm$N := 0]];
	assume SecMask_$_560 == SecMask_$_559;
	goto anon1030;
anon1993_Else:
	assume !$_$_condition_$662;
	assume 0 <= SecMask_$_558[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev][perm$N];
	assume SecMask_$_560 == SecMask_$_558;
	goto anon1030;
anon1030:
	assume wf(Heap_$_37,SecMask_$_560,SecMask_$_560);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_560);
	assume SecMask_$_561 == SecMask_$_560[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.next := SecMask_$_560[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.next][perm$N := SecMask_$_560[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_561);
	if ($_$_condition_$663) { goto anon1994_Then; } else { goto anon1994_Else; }
anon1994_Then:
	assume $_$_condition_$663;
	assume SecMask_$_561[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.next][perm$N] < 0;
	assume SecMask_$_562 == SecMask_$_561[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.next := SecMask_$_561[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.next][perm$N := 0]];
	assume SecMask_$_563 == SecMask_$_562;
	goto anon1032;
anon1994_Else:
	assume !$_$_condition_$663;
	assume 0 <= SecMask_$_561[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.next][perm$N];
	assume SecMask_$_563 == SecMask_$_561;
	goto anon1032;
anon1032:
	assume wf(Heap_$_37,SecMask_$_563,SecMask_$_563);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_563);
	assume SecMask_$_564 == SecMask_$_563[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],mu := SecMask_$_563[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],mu][perm$N := SecMask_$_563[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_564);
	if ($_$_condition_$664) { goto anon1995_Then; } else { goto anon1995_Else; }
anon1995_Then:
	assume $_$_condition_$664;
	assume SecMask_$_564[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],mu][perm$N] < 0;
	assume SecMask_$_565 == SecMask_$_564[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],mu := SecMask_$_564[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],mu][perm$N := 0]];
	assume SecMask_$_566 == SecMask_$_565;
	goto anon1034;
anon1995_Else:
	assume !$_$_condition_$664;
	assume 0 <= SecMask_$_564[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],mu][perm$N];
	assume SecMask_$_566 == SecMask_$_564;
	goto anon1034;
anon1034:
	assume wf(Heap_$_37,SecMask_$_566,SecMask_$_566);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_566);
	if ($_$_condition_$665) { goto anon1996_Then; } else { goto anon1996_Else; }
anon1996_Then:
	assume $_$_condition_$665;
	assume $_$_condition_$665 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev] == null);
	assume SecMask_$_567 == SecMask_$_566[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_566[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := SecMask_$_566[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] - Fractions(100)]];
	if ($_$_condition_$666) { goto anon1997_Then; } else { goto anon1997_Else; }
anon1996_Else:
	assume !$_$_condition_$665;
	assume $_$_condition_$665 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev] == null;
	assume SecMask_$_696 == SecMask_$_566;
	goto anon1245;
anon1997_Then:
	assume $_$_condition_$666;
	assume SecMask_$_567[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] < 0;
	assume SecMask_$_568 == SecMask_$_567[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_567[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := 0]];
	assume SecMask_$_569 == SecMask_$_568;
	goto anon1037;
anon1997_Else:
	assume !$_$_condition_$666;
	assume 0 <= SecMask_$_567[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R];
	assume SecMask_$_569 == SecMask_$_567;
	goto anon1037;
anon1245:
	assume wf(Heap_$_37,SecMask_$_696,SecMask_$_696);
	assume SecMask_$_697 == SecMask_$_696;
	goto anon1246;
anon1037:
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev] == Heap_$_37[oldNext#4_$_0,Node.prev]);
	if ($_$_condition_$667) { goto anon1998_Then; } else { goto anon1998_Else; }
anon1998_Then:
	assume $_$_condition_$667;
	assume $_$_condition_$667 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume ((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$668) { goto anon1999_Then; } else { goto anon1999_Else; }
anon1998_Else:
	assume !$_$_condition_$667;
	assume $_$_condition_$667 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume !(((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume SecMask_$_695 == SecMask_$_569;
	goto anon1244;
anon1999_Then:
	assume $_$_condition_$668;
	assume $_$_condition_$668 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume (((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0;
	goto $branchMerge_117;
anon1999_Else:
	assume !$_$_condition_$668;
	assume $_$_condition_$668 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume !((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$670) { goto anon2000_Then; } else { goto anon2000_Else; }
anon1244:
	assume wf(Heap_$_37,SecMask_$_695,SecMask_$_695);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_695);
	assume SecMask_$_696 == SecMask_$_695;
	goto anon1245;
anon2003_Then:
	assume $_$_condition_$669;
	assume $_$_condition_$669 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],mu],Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],mu]);
	goto anon1049;
anon2003_Else:
	assume !$_$_condition_$669;
	assume $_$_condition_$669 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev] == null;
	goto anon1049;
anon2000_Then:
	assume $_$_condition_$670;
	assume $_$_condition_$670 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume ((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1;
	goto $branchMerge_117;
anon2000_Else:
	assume !$_$_condition_$670;
	assume $_$_condition_$670 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume !(((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	if ($_$_condition_$672) { goto anon2001_Then; } else { goto anon2001_Else; }
anon2001_Then:
	assume $_$_condition_$672;
	assume $_$_condition_$672 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume (((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1;
	goto $branchMerge_117;
anon2001_Else:
	assume !$_$_condition_$672;
	assume $_$_condition_$672 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume !((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	if ($_$_condition_$674) { goto anon2002_Then; } else { goto anon2002_Else; }
anon2002_Then:
	assume $_$_condition_$674;
	assume $_$_condition_$674 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume (((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2;
	goto $branchMerge_117;
anon2002_Else:
	assume !$_$_condition_$674;
	assume $_$_condition_$674 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume !((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	goto $branchMerge_117;
anon1049:
	assume SecMask_$_570 == SecMask_$_569[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev := SecMask_$_569[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev][perm$N := SecMask_$_569[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_570);
	if ($_$_condition_$677) { goto anon2004_Then; } else { goto anon2004_Else; }
anon2004_Then:
	assume $_$_condition_$677;
	assume SecMask_$_570[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev][perm$N] < 0;
	assume SecMask_$_571 == SecMask_$_570[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev := SecMask_$_570[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev][perm$N := 0]];
	assume SecMask_$_572 == SecMask_$_571;
	goto anon1051;
anon2004_Else:
	assume !$_$_condition_$677;
	assume 0 <= SecMask_$_570[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev][perm$N];
	assume SecMask_$_572 == SecMask_$_570;
	goto anon1051;
anon1051:
	assume wf(Heap_$_37,SecMask_$_572,SecMask_$_572);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_572);
	assume SecMask_$_573 == SecMask_$_572[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.next := SecMask_$_572[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.next][perm$N := SecMask_$_572[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_573);
	if ($_$_condition_$678) { goto anon2005_Then; } else { goto anon2005_Else; }
anon2005_Then:
	assume $_$_condition_$678;
	assume SecMask_$_573[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.next][perm$N] < 0;
	assume SecMask_$_574 == SecMask_$_573[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.next := SecMask_$_573[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.next][perm$N := 0]];
	assume SecMask_$_575 == SecMask_$_574;
	goto anon1053;
anon2005_Else:
	assume !$_$_condition_$678;
	assume 0 <= SecMask_$_573[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.next][perm$N];
	assume SecMask_$_575 == SecMask_$_573;
	goto anon1053;
anon1053:
	assume wf(Heap_$_37,SecMask_$_575,SecMask_$_575);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_575);
	assume SecMask_$_576 == SecMask_$_575[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],mu := SecMask_$_575[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],mu][perm$N := SecMask_$_575[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_576);
	if ($_$_condition_$679) { goto anon2006_Then; } else { goto anon2006_Else; }
anon2006_Then:
	assume $_$_condition_$679;
	assume SecMask_$_576[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],mu][perm$N] < 0;
	assume SecMask_$_577 == SecMask_$_576[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],mu := SecMask_$_576[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],mu][perm$N := 0]];
	assume SecMask_$_578 == SecMask_$_577;
	goto anon1055;
anon2006_Else:
	assume !$_$_condition_$679;
	assume 0 <= SecMask_$_576[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],mu][perm$N];
	assume SecMask_$_578 == SecMask_$_576;
	goto anon1055;
anon1055:
	assume wf(Heap_$_37,SecMask_$_578,SecMask_$_578);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_578);
	if ($_$_condition_$680) { goto anon2007_Then; } else { goto anon2007_Else; }
anon2007_Then:
	assume $_$_condition_$680;
	assume $_$_condition_$680 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev] == null);
	assume SecMask_$_579 == SecMask_$_578[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_578[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := SecMask_$_578[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] - Fractions(100)]];
	if ($_$_condition_$681) { goto anon2008_Then; } else { goto anon2008_Else; }
anon2007_Else:
	assume !$_$_condition_$680;
	assume $_$_condition_$680 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev] == null;
	assume SecMask_$_694 == SecMask_$_578;
	goto anon1243;
anon2008_Then:
	assume $_$_condition_$681;
	assume SecMask_$_579[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] < 0;
	assume SecMask_$_580 == SecMask_$_579[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_579[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := 0]];
	assume SecMask_$_581 == SecMask_$_580;
	goto anon1058;
anon2008_Else:
	assume !$_$_condition_$681;
	assume 0 <= SecMask_$_579[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R];
	assume SecMask_$_581 == SecMask_$_579;
	goto anon1058;
anon1243:
	assume wf(Heap_$_37,SecMask_$_694,SecMask_$_694);
	assume SecMask_$_695 == SecMask_$_694;
	goto anon1244;
anon1058:
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[oldNext#4_$_0,Node.prev]);
	if ($_$_condition_$682) { goto anon2009_Then; } else { goto anon2009_Else; }
anon2009_Then:
	assume $_$_condition_$682;
	assume $_$_condition_$682 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume ((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$683) { goto anon2010_Then; } else { goto anon2010_Else; }
anon2009_Else:
	assume !$_$_condition_$682;
	assume $_$_condition_$682 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume !(((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume SecMask_$_693 == SecMask_$_581;
	goto anon1242;
anon2010_Then:
	assume $_$_condition_$683;
	assume $_$_condition_$683 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume (((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0;
	goto $branchMerge_118;
anon2010_Else:
	assume !$_$_condition_$683;
	assume $_$_condition_$683 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume !((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$685) { goto anon2011_Then; } else { goto anon2011_Else; }
anon1242:
	assume wf(Heap_$_37,SecMask_$_693,SecMask_$_693);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_693);
	assume SecMask_$_694 == SecMask_$_693;
	goto anon1243;
anon2014_Then:
	assume $_$_condition_$684;
	assume $_$_condition_$684 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu],Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],mu]);
	goto anon1070;
anon2014_Else:
	assume !$_$_condition_$684;
	assume $_$_condition_$684 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null;
	goto anon1070;
anon2011_Then:
	assume $_$_condition_$685;
	assume $_$_condition_$685 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume ((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1;
	goto $branchMerge_118;
anon2011_Else:
	assume !$_$_condition_$685;
	assume $_$_condition_$685 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume !(((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	if ($_$_condition_$687) { goto anon2012_Then; } else { goto anon2012_Else; }
anon2012_Then:
	assume $_$_condition_$687;
	assume $_$_condition_$687 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume (((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1;
	goto $branchMerge_118;
anon2012_Else:
	assume !$_$_condition_$687;
	assume $_$_condition_$687 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume !((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	if ($_$_condition_$689) { goto anon2013_Then; } else { goto anon2013_Else; }
anon2013_Then:
	assume $_$_condition_$689;
	assume $_$_condition_$689 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume (((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2;
	goto $branchMerge_118;
anon2013_Else:
	assume !$_$_condition_$689;
	assume $_$_condition_$689 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume !((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	goto $branchMerge_118;
anon1070:
	assume SecMask_$_582 == SecMask_$_581[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev := SecMask_$_581[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N := SecMask_$_581[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_582);
	if ($_$_condition_$692) { goto anon2015_Then; } else { goto anon2015_Else; }
anon2015_Then:
	assume $_$_condition_$692;
	assume SecMask_$_582[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N] < 0;
	assume SecMask_$_583 == SecMask_$_582[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev := SecMask_$_582[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N := 0]];
	assume SecMask_$_584 == SecMask_$_583;
	goto anon1072;
anon2015_Else:
	assume !$_$_condition_$692;
	assume 0 <= SecMask_$_582[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N];
	assume SecMask_$_584 == SecMask_$_582;
	goto anon1072;
anon1072:
	assume wf(Heap_$_37,SecMask_$_584,SecMask_$_584);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_584);
	assume SecMask_$_585 == SecMask_$_584[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.next := SecMask_$_584[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N := SecMask_$_584[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_585);
	if ($_$_condition_$693) { goto anon2016_Then; } else { goto anon2016_Else; }
anon2016_Then:
	assume $_$_condition_$693;
	assume SecMask_$_585[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N] < 0;
	assume SecMask_$_586 == SecMask_$_585[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.next := SecMask_$_585[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N := 0]];
	assume SecMask_$_587 == SecMask_$_586;
	goto anon1074;
anon2016_Else:
	assume !$_$_condition_$693;
	assume 0 <= SecMask_$_585[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N];
	assume SecMask_$_587 == SecMask_$_585;
	goto anon1074;
anon1074:
	assume wf(Heap_$_37,SecMask_$_587,SecMask_$_587);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_587);
	assume SecMask_$_588 == SecMask_$_587[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],mu := SecMask_$_587[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N := SecMask_$_587[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_588);
	if ($_$_condition_$694) { goto anon2017_Then; } else { goto anon2017_Else; }
anon2017_Then:
	assume $_$_condition_$694;
	assume SecMask_$_588[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N] < 0;
	assume SecMask_$_589 == SecMask_$_588[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],mu := SecMask_$_588[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N := 0]];
	assume SecMask_$_590 == SecMask_$_589;
	goto anon1076;
anon2017_Else:
	assume !$_$_condition_$694;
	assume 0 <= SecMask_$_588[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N];
	assume SecMask_$_590 == SecMask_$_588;
	goto anon1076;
anon1076:
	assume wf(Heap_$_37,SecMask_$_590,SecMask_$_590);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_590);
	if ($_$_condition_$695) { goto anon2018_Then; } else { goto anon2018_Else; }
anon2018_Then:
	assume $_$_condition_$695;
	assume $_$_condition_$695 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null);
	assume SecMask_$_591 == SecMask_$_590[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_590[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := SecMask_$_590[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] - Fractions(100)]];
	if ($_$_condition_$696) { goto anon2019_Then; } else { goto anon2019_Else; }
anon2018_Else:
	assume !$_$_condition_$695;
	assume $_$_condition_$695 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null;
	assume SecMask_$_692 == SecMask_$_590;
	goto anon1241;
anon2019_Then:
	assume $_$_condition_$696;
	assume SecMask_$_591[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] < 0;
	assume SecMask_$_592 == SecMask_$_591[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_591[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := 0]];
	assume SecMask_$_593 == SecMask_$_592;
	goto anon1079;
anon2019_Else:
	assume !$_$_condition_$696;
	assume 0 <= SecMask_$_591[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R];
	assume SecMask_$_593 == SecMask_$_591;
	goto anon1079;
anon1241:
	assume wf(Heap_$_37,SecMask_$_692,SecMask_$_692);
	assume SecMask_$_693 == SecMask_$_692;
	goto anon1242;
anon1079:
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[oldNext#4_$_0,Node.prev]);
	if ($_$_condition_$697) { goto anon2020_Then; } else { goto anon2020_Else; }
anon2020_Then:
	assume $_$_condition_$697;
	assume $_$_condition_$697 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume ((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$698) { goto anon2021_Then; } else { goto anon2021_Else; }
anon2020_Else:
	assume !$_$_condition_$697;
	assume $_$_condition_$697 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume !(((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume SecMask_$_691 == SecMask_$_593;
	goto anon1240;
anon2021_Then:
	assume $_$_condition_$698;
	assume $_$_condition_$698 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume (((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0;
	goto $branchMerge_119;
anon2021_Else:
	assume !$_$_condition_$698;
	assume $_$_condition_$698 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume !((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$700) { goto anon2022_Then; } else { goto anon2022_Else; }
anon1240:
	assume wf(Heap_$_37,SecMask_$_691,SecMask_$_691);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_691);
	assume SecMask_$_692 == SecMask_$_691;
	goto anon1241;
anon2025_Then:
	assume $_$_condition_$699;
	assume $_$_condition_$699 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu],Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu]);
	goto anon1091;
anon2025_Else:
	assume !$_$_condition_$699;
	assume $_$_condition_$699 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null;
	goto anon1091;
anon2022_Then:
	assume $_$_condition_$700;
	assume $_$_condition_$700 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume ((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1;
	goto $branchMerge_119;
anon2022_Else:
	assume !$_$_condition_$700;
	assume $_$_condition_$700 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume !(((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	if ($_$_condition_$702) { goto anon2023_Then; } else { goto anon2023_Else; }
anon2023_Then:
	assume $_$_condition_$702;
	assume $_$_condition_$702 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume (((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1;
	goto $branchMerge_119;
anon2023_Else:
	assume !$_$_condition_$702;
	assume $_$_condition_$702 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume !((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	if ($_$_condition_$704) { goto anon2024_Then; } else { goto anon2024_Else; }
anon2024_Then:
	assume $_$_condition_$704;
	assume $_$_condition_$704 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume (((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2;
	goto $branchMerge_119;
anon2024_Else:
	assume !$_$_condition_$704;
	assume $_$_condition_$704 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume !((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	goto $branchMerge_119;
anon1091:
	assume SecMask_$_594 == SecMask_$_593[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev := SecMask_$_593[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N := SecMask_$_593[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_594);
	if ($_$_condition_$707) { goto anon2026_Then; } else { goto anon2026_Else; }
anon2026_Then:
	assume $_$_condition_$707;
	assume SecMask_$_594[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N] < 0;
	assume SecMask_$_595 == SecMask_$_594[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev := SecMask_$_594[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N := 0]];
	assume SecMask_$_596 == SecMask_$_595;
	goto anon1093;
anon2026_Else:
	assume !$_$_condition_$707;
	assume 0 <= SecMask_$_594[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N];
	assume SecMask_$_596 == SecMask_$_594;
	goto anon1093;
anon1093:
	assume wf(Heap_$_37,SecMask_$_596,SecMask_$_596);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_596);
	assume SecMask_$_597 == SecMask_$_596[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next := SecMask_$_596[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N := SecMask_$_596[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_597);
	if ($_$_condition_$708) { goto anon2027_Then; } else { goto anon2027_Else; }
anon2027_Then:
	assume $_$_condition_$708;
	assume SecMask_$_597[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N] < 0;
	assume SecMask_$_598 == SecMask_$_597[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next := SecMask_$_597[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N := 0]];
	assume SecMask_$_599 == SecMask_$_598;
	goto anon1095;
anon2027_Else:
	assume !$_$_condition_$708;
	assume 0 <= SecMask_$_597[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N];
	assume SecMask_$_599 == SecMask_$_597;
	goto anon1095;
anon1095:
	assume wf(Heap_$_37,SecMask_$_599,SecMask_$_599);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_599);
	assume SecMask_$_600 == SecMask_$_599[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu := SecMask_$_599[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N := SecMask_$_599[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_600);
	if ($_$_condition_$709) { goto anon2028_Then; } else { goto anon2028_Else; }
anon2028_Then:
	assume $_$_condition_$709;
	assume SecMask_$_600[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N] < 0;
	assume SecMask_$_601 == SecMask_$_600[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu := SecMask_$_600[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N := 0]];
	assume SecMask_$_602 == SecMask_$_601;
	goto anon1097;
anon2028_Else:
	assume !$_$_condition_$709;
	assume 0 <= SecMask_$_600[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N];
	assume SecMask_$_602 == SecMask_$_600;
	goto anon1097;
anon1097:
	assume wf(Heap_$_37,SecMask_$_602,SecMask_$_602);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_602);
	if ($_$_condition_$710) { goto anon2029_Then; } else { goto anon2029_Else; }
anon2029_Then:
	assume $_$_condition_$710;
	assume $_$_condition_$710 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null);
	assume SecMask_$_603 == SecMask_$_602[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_602[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := SecMask_$_602[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] - Fractions(100)]];
	if ($_$_condition_$711) { goto anon2030_Then; } else { goto anon2030_Else; }
anon2029_Else:
	assume !$_$_condition_$710;
	assume $_$_condition_$710 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null;
	assume SecMask_$_690 == SecMask_$_602;
	goto anon1239;
anon2030_Then:
	assume $_$_condition_$711;
	assume SecMask_$_603[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] < 0;
	assume SecMask_$_604 == SecMask_$_603[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_603[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := 0]];
	assume SecMask_$_605 == SecMask_$_604;
	goto anon1100;
anon2030_Else:
	assume !$_$_condition_$711;
	assume 0 <= SecMask_$_603[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R];
	assume SecMask_$_605 == SecMask_$_603;
	goto anon1100;
anon1239:
	assume wf(Heap_$_37,SecMask_$_690,SecMask_$_690);
	assume SecMask_$_691 == SecMask_$_690;
	goto anon1240;
anon1100:
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[oldNext#4_$_0,Node.prev]);
	if ($_$_condition_$712) { goto anon2031_Then; } else { goto anon2031_Else; }
anon2031_Then:
	assume $_$_condition_$712;
	assume $_$_condition_$712 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume ((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$713) { goto anon2032_Then; } else { goto anon2032_Else; }
anon2031_Else:
	assume !$_$_condition_$712;
	assume $_$_condition_$712 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume !(((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume SecMask_$_689 == SecMask_$_605;
	goto anon1238;
anon2032_Then:
	assume $_$_condition_$713;
	assume $_$_condition_$713 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume (((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0;
	goto $branchMerge_120;
anon2032_Else:
	assume !$_$_condition_$713;
	assume $_$_condition_$713 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume !((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$715) { goto anon2033_Then; } else { goto anon2033_Else; }
anon1238:
	assume wf(Heap_$_37,SecMask_$_689,SecMask_$_689);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_689);
	assume SecMask_$_690 == SecMask_$_689;
	goto anon1239;
anon2036_Then:
	assume $_$_condition_$714;
	assume $_$_condition_$714 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu],Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu]);
	goto anon1112;
anon2036_Else:
	assume !$_$_condition_$714;
	assume $_$_condition_$714 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null;
	goto anon1112;
anon2033_Then:
	assume $_$_condition_$715;
	assume $_$_condition_$715 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume ((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1;
	goto $branchMerge_120;
anon2033_Else:
	assume !$_$_condition_$715;
	assume $_$_condition_$715 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume !(((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	if ($_$_condition_$717) { goto anon2034_Then; } else { goto anon2034_Else; }
anon2034_Then:
	assume $_$_condition_$717;
	assume $_$_condition_$717 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume (((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1;
	goto $branchMerge_120;
anon2034_Else:
	assume !$_$_condition_$717;
	assume $_$_condition_$717 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume !((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	if ($_$_condition_$719) { goto anon2035_Then; } else { goto anon2035_Else; }
anon2035_Then:
	assume $_$_condition_$719;
	assume $_$_condition_$719 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume (((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2;
	goto $branchMerge_120;
anon2035_Else:
	assume !$_$_condition_$719;
	assume $_$_condition_$719 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume !((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	goto $branchMerge_120;
anon1112:
	assume SecMask_$_606 == SecMask_$_605[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev := SecMask_$_605[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N := SecMask_$_605[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_606);
	if ($_$_condition_$722) { goto anon2037_Then; } else { goto anon2037_Else; }
anon2037_Then:
	assume $_$_condition_$722;
	assume SecMask_$_606[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N] < 0;
	assume SecMask_$_607 == SecMask_$_606[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev := SecMask_$_606[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N := 0]];
	assume SecMask_$_608 == SecMask_$_607;
	goto anon1114;
anon2037_Else:
	assume !$_$_condition_$722;
	assume 0 <= SecMask_$_606[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N];
	assume SecMask_$_608 == SecMask_$_606;
	goto anon1114;
anon1114:
	assume wf(Heap_$_37,SecMask_$_608,SecMask_$_608);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_608);
	assume SecMask_$_609 == SecMask_$_608[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next := SecMask_$_608[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N := SecMask_$_608[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_609);
	if ($_$_condition_$723) { goto anon2038_Then; } else { goto anon2038_Else; }
anon2038_Then:
	assume $_$_condition_$723;
	assume SecMask_$_609[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N] < 0;
	assume SecMask_$_610 == SecMask_$_609[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next := SecMask_$_609[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N := 0]];
	assume SecMask_$_611 == SecMask_$_610;
	goto anon1116;
anon2038_Else:
	assume !$_$_condition_$723;
	assume 0 <= SecMask_$_609[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N];
	assume SecMask_$_611 == SecMask_$_609;
	goto anon1116;
anon1116:
	assume wf(Heap_$_37,SecMask_$_611,SecMask_$_611);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_611);
	assume SecMask_$_612 == SecMask_$_611[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu := SecMask_$_611[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N := SecMask_$_611[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_612);
	if ($_$_condition_$724) { goto anon2039_Then; } else { goto anon2039_Else; }
anon2039_Then:
	assume $_$_condition_$724;
	assume SecMask_$_612[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N] < 0;
	assume SecMask_$_613 == SecMask_$_612[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu := SecMask_$_612[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N := 0]];
	assume SecMask_$_614 == SecMask_$_613;
	goto anon1118;
anon2039_Else:
	assume !$_$_condition_$724;
	assume 0 <= SecMask_$_612[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N];
	assume SecMask_$_614 == SecMask_$_612;
	goto anon1118;
anon1118:
	assume wf(Heap_$_37,SecMask_$_614,SecMask_$_614);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_614);
	if ($_$_condition_$725) { goto anon2040_Then; } else { goto anon2040_Else; }
anon2040_Then:
	assume $_$_condition_$725;
	assume $_$_condition_$725 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null);
	assume SecMask_$_615 == SecMask_$_614[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_614[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := SecMask_$_614[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] - Fractions(100)]];
	if ($_$_condition_$726) { goto anon2041_Then; } else { goto anon2041_Else; }
anon2040_Else:
	assume !$_$_condition_$725;
	assume $_$_condition_$725 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null;
	assume SecMask_$_688 == SecMask_$_614;
	goto anon1237;
anon2041_Then:
	assume $_$_condition_$726;
	assume SecMask_$_615[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] < 0;
	assume SecMask_$_616 == SecMask_$_615[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_615[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := 0]];
	assume SecMask_$_617 == SecMask_$_616;
	goto anon1121;
anon2041_Else:
	assume !$_$_condition_$726;
	assume 0 <= SecMask_$_615[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R];
	assume SecMask_$_617 == SecMask_$_615;
	goto anon1121;
anon1237:
	assume wf(Heap_$_37,SecMask_$_688,SecMask_$_688);
	assume SecMask_$_689 == SecMask_$_688;
	goto anon1238;
anon1121:
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[oldNext#4_$_0,Node.prev]);
	if ($_$_condition_$727) { goto anon2042_Then; } else { goto anon2042_Else; }
anon2042_Then:
	assume $_$_condition_$727;
	assume $_$_condition_$727 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume ((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$728) { goto anon2043_Then; } else { goto anon2043_Else; }
anon2042_Else:
	assume !$_$_condition_$727;
	assume $_$_condition_$727 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume !(((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume SecMask_$_687 == SecMask_$_617;
	goto anon1236;
anon2043_Then:
	assume $_$_condition_$728;
	assume $_$_condition_$728 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume (((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0;
	goto $branchMerge_121;
anon2043_Else:
	assume !$_$_condition_$728;
	assume $_$_condition_$728 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume !((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$730) { goto anon2044_Then; } else { goto anon2044_Else; }
anon1236:
	assume wf(Heap_$_37,SecMask_$_687,SecMask_$_687);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_687);
	assume SecMask_$_688 == SecMask_$_687;
	goto anon1237;
anon2047_Then:
	assume $_$_condition_$729;
	assume $_$_condition_$729 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu],Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu]);
	goto anon1133;
anon2047_Else:
	assume !$_$_condition_$729;
	assume $_$_condition_$729 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null;
	goto anon1133;
anon2044_Then:
	assume $_$_condition_$730;
	assume $_$_condition_$730 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume ((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1;
	goto $branchMerge_121;
anon2044_Else:
	assume !$_$_condition_$730;
	assume $_$_condition_$730 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume !(((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	if ($_$_condition_$732) { goto anon2045_Then; } else { goto anon2045_Else; }
anon2045_Then:
	assume $_$_condition_$732;
	assume $_$_condition_$732 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume (((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1;
	goto $branchMerge_121;
anon2045_Else:
	assume !$_$_condition_$732;
	assume $_$_condition_$732 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume !((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	if ($_$_condition_$734) { goto anon2046_Then; } else { goto anon2046_Else; }
anon2046_Then:
	assume $_$_condition_$734;
	assume $_$_condition_$734 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume (((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2;
	goto $branchMerge_121;
anon2046_Else:
	assume !$_$_condition_$734;
	assume $_$_condition_$734 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume !((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	goto $branchMerge_121;
anon1133:
	assume SecMask_$_618 == SecMask_$_617[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev := SecMask_$_617[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N := SecMask_$_617[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_618);
	if ($_$_condition_$737) { goto anon2048_Then; } else { goto anon2048_Else; }
anon2048_Then:
	assume $_$_condition_$737;
	assume SecMask_$_618[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N] < 0;
	assume SecMask_$_619 == SecMask_$_618[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev := SecMask_$_618[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N := 0]];
	assume SecMask_$_620 == SecMask_$_619;
	goto anon1135;
anon2048_Else:
	assume !$_$_condition_$737;
	assume 0 <= SecMask_$_618[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N];
	assume SecMask_$_620 == SecMask_$_618;
	goto anon1135;
anon1135:
	assume wf(Heap_$_37,SecMask_$_620,SecMask_$_620);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_620);
	assume SecMask_$_621 == SecMask_$_620[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next := SecMask_$_620[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N := SecMask_$_620[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_621);
	if ($_$_condition_$738) { goto anon2049_Then; } else { goto anon2049_Else; }
anon2049_Then:
	assume $_$_condition_$738;
	assume SecMask_$_621[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N] < 0;
	assume SecMask_$_622 == SecMask_$_621[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next := SecMask_$_621[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N := 0]];
	assume SecMask_$_623 == SecMask_$_622;
	goto anon1137;
anon2049_Else:
	assume !$_$_condition_$738;
	assume 0 <= SecMask_$_621[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N];
	assume SecMask_$_623 == SecMask_$_621;
	goto anon1137;
anon1137:
	assume wf(Heap_$_37,SecMask_$_623,SecMask_$_623);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_623);
	assume SecMask_$_624 == SecMask_$_623[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu := SecMask_$_623[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N := SecMask_$_623[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_624);
	if ($_$_condition_$739) { goto anon2050_Then; } else { goto anon2050_Else; }
anon2050_Then:
	assume $_$_condition_$739;
	assume SecMask_$_624[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N] < 0;
	assume SecMask_$_625 == SecMask_$_624[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu := SecMask_$_624[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N := 0]];
	assume SecMask_$_626 == SecMask_$_625;
	goto anon1139;
anon2050_Else:
	assume !$_$_condition_$739;
	assume 0 <= SecMask_$_624[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N];
	assume SecMask_$_626 == SecMask_$_624;
	goto anon1139;
anon1139:
	assume wf(Heap_$_37,SecMask_$_626,SecMask_$_626);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_626);
	if ($_$_condition_$740) { goto anon2051_Then; } else { goto anon2051_Else; }
anon2051_Then:
	assume $_$_condition_$740;
	assume $_$_condition_$740 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null);
	assume SecMask_$_627 == SecMask_$_626[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_626[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := SecMask_$_626[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] - Fractions(100)]];
	if ($_$_condition_$741) { goto anon2052_Then; } else { goto anon2052_Else; }
anon2051_Else:
	assume !$_$_condition_$740;
	assume $_$_condition_$740 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null;
	assume SecMask_$_686 == SecMask_$_626;
	goto anon1235;
anon2052_Then:
	assume $_$_condition_$741;
	assume SecMask_$_627[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] < 0;
	assume SecMask_$_628 == SecMask_$_627[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_627[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := 0]];
	assume SecMask_$_629 == SecMask_$_628;
	goto anon1142;
anon2052_Else:
	assume !$_$_condition_$741;
	assume 0 <= SecMask_$_627[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R];
	assume SecMask_$_629 == SecMask_$_627;
	goto anon1142;
anon1235:
	assume wf(Heap_$_37,SecMask_$_686,SecMask_$_686);
	assume SecMask_$_687 == SecMask_$_686;
	goto anon1236;
anon1142:
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[oldNext#4_$_0,Node.prev]);
	if ($_$_condition_$742) { goto anon2053_Then; } else { goto anon2053_Else; }
anon2053_Then:
	assume $_$_condition_$742;
	assume $_$_condition_$742 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume ((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$743) { goto anon2054_Then; } else { goto anon2054_Else; }
anon2053_Else:
	assume !$_$_condition_$742;
	assume $_$_condition_$742 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume !(((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume SecMask_$_685 == SecMask_$_629;
	goto anon1234;
anon2054_Then:
	assume $_$_condition_$743;
	assume $_$_condition_$743 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume (((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0;
	goto $branchMerge_122;
anon2054_Else:
	assume !$_$_condition_$743;
	assume $_$_condition_$743 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume !((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$745) { goto anon2055_Then; } else { goto anon2055_Else; }
anon1234:
	assume wf(Heap_$_37,SecMask_$_685,SecMask_$_685);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_685);
	assume SecMask_$_686 == SecMask_$_685;
	goto anon1235;
anon2058_Then:
	assume $_$_condition_$744;
	assume $_$_condition_$744 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu],Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu]);
	goto anon1154;
anon2058_Else:
	assume !$_$_condition_$744;
	assume $_$_condition_$744 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null;
	goto anon1154;
anon2055_Then:
	assume $_$_condition_$745;
	assume $_$_condition_$745 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume ((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1;
	goto $branchMerge_122;
anon2055_Else:
	assume !$_$_condition_$745;
	assume $_$_condition_$745 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume !(((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	if ($_$_condition_$747) { goto anon2056_Then; } else { goto anon2056_Else; }
anon2056_Then:
	assume $_$_condition_$747;
	assume $_$_condition_$747 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume (((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1;
	goto $branchMerge_122;
anon2056_Else:
	assume !$_$_condition_$747;
	assume $_$_condition_$747 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume !((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	if ($_$_condition_$749) { goto anon2057_Then; } else { goto anon2057_Else; }
anon2057_Then:
	assume $_$_condition_$749;
	assume $_$_condition_$749 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume (((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2;
	goto $branchMerge_122;
anon2057_Else:
	assume !$_$_condition_$749;
	assume $_$_condition_$749 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume !((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	goto $branchMerge_122;
anon1154:
	assume SecMask_$_630 == SecMask_$_629[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev := SecMask_$_629[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N := SecMask_$_629[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_630);
	if ($_$_condition_$752) { goto anon2059_Then; } else { goto anon2059_Else; }
anon2059_Then:
	assume $_$_condition_$752;
	assume SecMask_$_630[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N] < 0;
	assume SecMask_$_631 == SecMask_$_630[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev := SecMask_$_630[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N := 0]];
	assume SecMask_$_632 == SecMask_$_631;
	goto anon1156;
anon2059_Else:
	assume !$_$_condition_$752;
	assume 0 <= SecMask_$_630[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N];
	assume SecMask_$_632 == SecMask_$_630;
	goto anon1156;
anon1156:
	assume wf(Heap_$_37,SecMask_$_632,SecMask_$_632);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_632);
	assume SecMask_$_633 == SecMask_$_632[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next := SecMask_$_632[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N := SecMask_$_632[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_633);
	if ($_$_condition_$753) { goto anon2060_Then; } else { goto anon2060_Else; }
anon2060_Then:
	assume $_$_condition_$753;
	assume SecMask_$_633[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N] < 0;
	assume SecMask_$_634 == SecMask_$_633[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next := SecMask_$_633[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N := 0]];
	assume SecMask_$_635 == SecMask_$_634;
	goto anon1158;
anon2060_Else:
	assume !$_$_condition_$753;
	assume 0 <= SecMask_$_633[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N];
	assume SecMask_$_635 == SecMask_$_633;
	goto anon1158;
anon1158:
	assume wf(Heap_$_37,SecMask_$_635,SecMask_$_635);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_635);
	assume SecMask_$_636 == SecMask_$_635[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu := SecMask_$_635[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N := SecMask_$_635[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_636);
	if ($_$_condition_$754) { goto anon2061_Then; } else { goto anon2061_Else; }
anon2061_Then:
	assume $_$_condition_$754;
	assume SecMask_$_636[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N] < 0;
	assume SecMask_$_637 == SecMask_$_636[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu := SecMask_$_636[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N := 0]];
	assume SecMask_$_638 == SecMask_$_637;
	goto anon1160;
anon2061_Else:
	assume !$_$_condition_$754;
	assume 0 <= SecMask_$_636[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N];
	assume SecMask_$_638 == SecMask_$_636;
	goto anon1160;
anon1160:
	assume wf(Heap_$_37,SecMask_$_638,SecMask_$_638);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_638);
	if ($_$_condition_$755) { goto anon2062_Then; } else { goto anon2062_Else; }
anon2062_Then:
	assume $_$_condition_$755;
	assume $_$_condition_$755 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null);
	assume SecMask_$_639 == SecMask_$_638[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_638[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := SecMask_$_638[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] - Fractions(100)]];
	if ($_$_condition_$756) { goto anon2063_Then; } else { goto anon2063_Else; }
anon2062_Else:
	assume !$_$_condition_$755;
	assume $_$_condition_$755 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null;
	assume SecMask_$_684 == SecMask_$_638;
	goto anon1233;
anon2063_Then:
	assume $_$_condition_$756;
	assume SecMask_$_639[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] < 0;
	assume SecMask_$_640 == SecMask_$_639[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_639[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := 0]];
	assume SecMask_$_641 == SecMask_$_640;
	goto anon1163;
anon2063_Else:
	assume !$_$_condition_$756;
	assume 0 <= SecMask_$_639[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R];
	assume SecMask_$_641 == SecMask_$_639;
	goto anon1163;
anon1233:
	assume wf(Heap_$_37,SecMask_$_684,SecMask_$_684);
	assume SecMask_$_685 == SecMask_$_684;
	goto anon1234;
anon1163:
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[oldNext#4_$_0,Node.prev]);
	if ($_$_condition_$757) { goto anon2064_Then; } else { goto anon2064_Else; }
anon2064_Then:
	assume $_$_condition_$757;
	assume $_$_condition_$757 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume ((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$758) { goto anon2065_Then; } else { goto anon2065_Else; }
anon2064_Else:
	assume !$_$_condition_$757;
	assume $_$_condition_$757 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume !(((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume SecMask_$_683 == SecMask_$_641;
	goto anon1232;
anon2065_Then:
	assume $_$_condition_$758;
	assume $_$_condition_$758 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume (((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0;
	goto $branchMerge_123;
anon2065_Else:
	assume !$_$_condition_$758;
	assume $_$_condition_$758 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume !((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$760) { goto anon2066_Then; } else { goto anon2066_Else; }
anon1232:
	assume wf(Heap_$_37,SecMask_$_683,SecMask_$_683);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_683);
	assume SecMask_$_684 == SecMask_$_683;
	goto anon1233;
anon2069_Then:
	assume $_$_condition_$759;
	assume $_$_condition_$759 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu],Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu]);
	goto anon1175;
anon2069_Else:
	assume !$_$_condition_$759;
	assume $_$_condition_$759 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null;
	goto anon1175;
anon2066_Then:
	assume $_$_condition_$760;
	assume $_$_condition_$760 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume ((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1;
	goto $branchMerge_123;
anon2066_Else:
	assume !$_$_condition_$760;
	assume $_$_condition_$760 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume !(((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	if ($_$_condition_$762) { goto anon2067_Then; } else { goto anon2067_Else; }
anon2067_Then:
	assume $_$_condition_$762;
	assume $_$_condition_$762 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume (((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1;
	goto $branchMerge_123;
anon2067_Else:
	assume !$_$_condition_$762;
	assume $_$_condition_$762 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume !((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	if ($_$_condition_$764) { goto anon2068_Then; } else { goto anon2068_Else; }
anon2068_Then:
	assume $_$_condition_$764;
	assume $_$_condition_$764 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume (((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2;
	goto $branchMerge_123;
anon2068_Else:
	assume !$_$_condition_$764;
	assume $_$_condition_$764 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume !((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	goto $branchMerge_123;
anon1175:
	assume SecMask_$_642 == SecMask_$_641[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev := SecMask_$_641[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N := SecMask_$_641[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_642);
	if ($_$_condition_$767) { goto anon2070_Then; } else { goto anon2070_Else; }
anon2070_Then:
	assume $_$_condition_$767;
	assume SecMask_$_642[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N] < 0;
	assume SecMask_$_643 == SecMask_$_642[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev := SecMask_$_642[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N := 0]];
	assume SecMask_$_644 == SecMask_$_643;
	goto anon1177;
anon2070_Else:
	assume !$_$_condition_$767;
	assume 0 <= SecMask_$_642[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N];
	assume SecMask_$_644 == SecMask_$_642;
	goto anon1177;
anon1177:
	assume wf(Heap_$_37,SecMask_$_644,SecMask_$_644);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_644);
	assume SecMask_$_645 == SecMask_$_644[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next := SecMask_$_644[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N := SecMask_$_644[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_645);
	if ($_$_condition_$768) { goto anon2071_Then; } else { goto anon2071_Else; }
anon2071_Then:
	assume $_$_condition_$768;
	assume SecMask_$_645[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N] < 0;
	assume SecMask_$_646 == SecMask_$_645[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next := SecMask_$_645[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N := 0]];
	assume SecMask_$_647 == SecMask_$_646;
	goto anon1179;
anon2071_Else:
	assume !$_$_condition_$768;
	assume 0 <= SecMask_$_645[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N];
	assume SecMask_$_647 == SecMask_$_645;
	goto anon1179;
anon1179:
	assume wf(Heap_$_37,SecMask_$_647,SecMask_$_647);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_647);
	assume SecMask_$_648 == SecMask_$_647[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu := SecMask_$_647[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N := SecMask_$_647[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_648);
	if ($_$_condition_$769) { goto anon2072_Then; } else { goto anon2072_Else; }
anon2072_Then:
	assume $_$_condition_$769;
	assume SecMask_$_648[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N] < 0;
	assume SecMask_$_649 == SecMask_$_648[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu := SecMask_$_648[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N := 0]];
	assume SecMask_$_650 == SecMask_$_649;
	goto anon1181;
anon2072_Else:
	assume !$_$_condition_$769;
	assume 0 <= SecMask_$_648[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N];
	assume SecMask_$_650 == SecMask_$_648;
	goto anon1181;
anon1181:
	assume wf(Heap_$_37,SecMask_$_650,SecMask_$_650);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_650);
	if ($_$_condition_$770) { goto anon2073_Then; } else { goto anon2073_Else; }
anon2073_Then:
	assume $_$_condition_$770;
	assume $_$_condition_$770 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null);
	assume SecMask_$_651 == SecMask_$_650[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_650[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := SecMask_$_650[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] - Fractions(100)]];
	if ($_$_condition_$771) { goto anon2074_Then; } else { goto anon2074_Else; }
anon2073_Else:
	assume !$_$_condition_$770;
	assume $_$_condition_$770 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null;
	assume SecMask_$_682 == SecMask_$_650;
	goto anon1231;
anon2074_Then:
	assume $_$_condition_$771;
	assume SecMask_$_651[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] < 0;
	assume SecMask_$_652 == SecMask_$_651[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_651[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := 0]];
	assume SecMask_$_653 == SecMask_$_652;
	goto anon1184;
anon2074_Else:
	assume !$_$_condition_$771;
	assume 0 <= SecMask_$_651[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R];
	assume SecMask_$_653 == SecMask_$_651;
	goto anon1184;
anon1231:
	assume wf(Heap_$_37,SecMask_$_682,SecMask_$_682);
	assume SecMask_$_683 == SecMask_$_682;
	goto anon1232;
anon1184:
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[oldNext#4_$_0,Node.prev]);
	if ($_$_condition_$772) { goto anon2075_Then; } else { goto anon2075_Else; }
anon2075_Then:
	assume $_$_condition_$772;
	assume $_$_condition_$772 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume ((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$773) { goto anon2076_Then; } else { goto anon2076_Else; }
anon2075_Else:
	assume !$_$_condition_$772;
	assume $_$_condition_$772 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume !(((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume SecMask_$_681 == SecMask_$_653;
	goto anon1230;
anon2076_Then:
	assume $_$_condition_$773;
	assume $_$_condition_$773 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume (((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0;
	goto $branchMerge_124;
anon2076_Else:
	assume !$_$_condition_$773;
	assume $_$_condition_$773 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume !((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$775) { goto anon2077_Then; } else { goto anon2077_Else; }
anon1230:
	assume wf(Heap_$_37,SecMask_$_681,SecMask_$_681);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_681);
	assume SecMask_$_682 == SecMask_$_681;
	goto anon1231;
anon2080_Then:
	assume $_$_condition_$774;
	assume $_$_condition_$774 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu],Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu]);
	goto anon1196;
anon2080_Else:
	assume !$_$_condition_$774;
	assume $_$_condition_$774 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null;
	goto anon1196;
anon2077_Then:
	assume $_$_condition_$775;
	assume $_$_condition_$775 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume ((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1;
	goto $branchMerge_124;
anon2077_Else:
	assume !$_$_condition_$775;
	assume $_$_condition_$775 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume !(((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	if ($_$_condition_$777) { goto anon2078_Then; } else { goto anon2078_Else; }
anon2078_Then:
	assume $_$_condition_$777;
	assume $_$_condition_$777 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume (((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1;
	goto $branchMerge_124;
anon2078_Else:
	assume !$_$_condition_$777;
	assume $_$_condition_$777 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume !((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	if ($_$_condition_$779) { goto anon2079_Then; } else { goto anon2079_Else; }
anon2079_Then:
	assume $_$_condition_$779;
	assume $_$_condition_$779 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume (((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2;
	goto $branchMerge_124;
anon2079_Else:
	assume !$_$_condition_$779;
	assume $_$_condition_$779 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume !((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	goto $branchMerge_124;
anon1196:
	assume SecMask_$_654 == SecMask_$_653[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev := SecMask_$_653[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N := SecMask_$_653[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_654);
	if ($_$_condition_$782) { goto anon2081_Then; } else { goto anon2081_Else; }
anon2081_Then:
	assume $_$_condition_$782;
	assume SecMask_$_654[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N] < 0;
	assume SecMask_$_655 == SecMask_$_654[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev := SecMask_$_654[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N := 0]];
	assume SecMask_$_656 == SecMask_$_655;
	goto anon1198;
anon2081_Else:
	assume !$_$_condition_$782;
	assume 0 <= SecMask_$_654[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N];
	assume SecMask_$_656 == SecMask_$_654;
	goto anon1198;
anon1198:
	assume wf(Heap_$_37,SecMask_$_656,SecMask_$_656);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_656);
	assume SecMask_$_657 == SecMask_$_656[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next := SecMask_$_656[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N := SecMask_$_656[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_657);
	if ($_$_condition_$783) { goto anon2082_Then; } else { goto anon2082_Else; }
anon2082_Then:
	assume $_$_condition_$783;
	assume SecMask_$_657[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N] < 0;
	assume SecMask_$_658 == SecMask_$_657[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next := SecMask_$_657[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N := 0]];
	assume SecMask_$_659 == SecMask_$_658;
	goto anon1200;
anon2082_Else:
	assume !$_$_condition_$783;
	assume 0 <= SecMask_$_657[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N];
	assume SecMask_$_659 == SecMask_$_657;
	goto anon1200;
anon1200:
	assume wf(Heap_$_37,SecMask_$_659,SecMask_$_659);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_659);
	assume SecMask_$_660 == SecMask_$_659[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu := SecMask_$_659[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N := SecMask_$_659[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_660);
	if ($_$_condition_$784) { goto anon2083_Then; } else { goto anon2083_Else; }
anon2083_Then:
	assume $_$_condition_$784;
	assume SecMask_$_660[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N] < 0;
	assume SecMask_$_661 == SecMask_$_660[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu := SecMask_$_660[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N := 0]];
	assume SecMask_$_662 == SecMask_$_661;
	goto anon1202;
anon2083_Else:
	assume !$_$_condition_$784;
	assume 0 <= SecMask_$_660[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N];
	assume SecMask_$_662 == SecMask_$_660;
	goto anon1202;
anon1202:
	assume wf(Heap_$_37,SecMask_$_662,SecMask_$_662);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_662);
	if ($_$_condition_$785) { goto anon2084_Then; } else { goto anon2084_Else; }
anon2084_Then:
	assume $_$_condition_$785;
	assume $_$_condition_$785 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null);
	assume SecMask_$_663 == SecMask_$_662[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_662[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := SecMask_$_662[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] - Fractions(100)]];
	if ($_$_condition_$786) { goto anon2085_Then; } else { goto anon2085_Else; }
anon2084_Else:
	assume !$_$_condition_$785;
	assume $_$_condition_$785 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null;
	assume SecMask_$_680 == SecMask_$_662;
	goto anon1229;
anon2085_Then:
	assume $_$_condition_$786;
	assume SecMask_$_663[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] < 0;
	assume SecMask_$_664 == SecMask_$_663[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_663[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := 0]];
	assume SecMask_$_665 == SecMask_$_664;
	goto anon1205;
anon2085_Else:
	assume !$_$_condition_$786;
	assume 0 <= SecMask_$_663[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R];
	assume SecMask_$_665 == SecMask_$_663;
	goto anon1205;
anon1229:
	assume wf(Heap_$_37,SecMask_$_680,SecMask_$_680);
	assume SecMask_$_681 == SecMask_$_680;
	goto anon1230;
anon1205:
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == Heap_$_37[oldNext#4_$_0,Node.prev]);
	if ($_$_condition_$787) { goto anon2086_Then; } else { goto anon2086_Else; }
anon2086_Then:
	assume $_$_condition_$787;
	assume $_$_condition_$787 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume ((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$788) { goto anon2087_Then; } else { goto anon2087_Else; }
anon2086_Else:
	assume !$_$_condition_$787;
	assume $_$_condition_$787 <==> (((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume !(((((false || ((((((((((((((((((((((predVer#_633_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_632_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_634_$_1)) || ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2)) || ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1)) || (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1)) || ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0));
	assume SecMask_$_679 == SecMask_$_665;
	goto anon1228;
anon2087_Then:
	assume $_$_condition_$788;
	assume $_$_condition_$788 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume (((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0;
	goto $branchMerge_125;
anon2087_Else:
	assume !$_$_condition_$788;
	assume $_$_condition_$788 <==> ((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	assume !((((predVer#_347_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_346_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && predFlag#_348_$_0);
	if ($_$_condition_$790) { goto anon2088_Then; } else { goto anon2088_Else; }
anon1228:
	assume wf(Heap_$_37,SecMask_$_679,SecMask_$_679);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_679);
	assume SecMask_$_680 == SecMask_$_679;
	goto anon1229;
anon2091_Then:
	assume $_$_condition_$789;
	assume $_$_condition_$789 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu],Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu]);
	goto anon1217;
anon2091_Else:
	assume !$_$_condition_$789;
	assume $_$_condition_$789 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null;
	goto anon1217;
anon2088_Then:
	assume $_$_condition_$790;
	assume $_$_condition_$790 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume ((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1;
	goto $branchMerge_125;
anon2088_Else:
	assume !$_$_condition_$790;
	assume $_$_condition_$790 <==> (((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	assume !(((((predVer#_378_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_377_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && predFlag#_379_$_1);
	if ($_$_condition_$792) { goto anon2089_Then; } else { goto anon2089_Else; }
anon2089_Then:
	assume $_$_condition_$792;
	assume $_$_condition_$792 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume (((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1;
	goto $branchMerge_125;
anon2089_Else:
	assume !$_$_condition_$792;
	assume $_$_condition_$792 <==> ((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	assume !((((((predVer#_400_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_399_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_386_$_1) && predFlag#_401_$_1);
	if ($_$_condition_$794) { goto anon2090_Then; } else { goto anon2090_Else; }
anon2090_Then:
	assume $_$_condition_$794;
	assume $_$_condition_$794 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume (((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2;
	goto $branchMerge_125;
anon2090_Else:
	assume !$_$_condition_$794;
	assume $_$_condition_$794 <==> ((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	assume !((((((((((((((((((((((predVer#_623_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft]) && (predRec#_622_$_3 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_620_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_621_$_2) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_624_$_2);
	goto $branchMerge_125;
anon1217:
	assume SecMask_$_666 == SecMask_$_665[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev := SecMask_$_665[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N := SecMask_$_665[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_666);
	if ($_$_condition_$797) { goto anon2092_Then; } else { goto anon2092_Else; }
anon2092_Then:
	assume $_$_condition_$797;
	assume SecMask_$_666[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N] < 0;
	assume SecMask_$_667 == SecMask_$_666[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev := SecMask_$_666[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N := 0]];
	assume SecMask_$_668 == SecMask_$_667;
	goto anon1219;
anon2092_Else:
	assume !$_$_condition_$797;
	assume 0 <= SecMask_$_666[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev][perm$N];
	assume SecMask_$_668 == SecMask_$_666;
	goto anon1219;
anon1219:
	assume wf(Heap_$_37,SecMask_$_668,SecMask_$_668);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_668);
	assume SecMask_$_669 == SecMask_$_668[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next := SecMask_$_668[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N := SecMask_$_668[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_669);
	if ($_$_condition_$798) { goto anon2093_Then; } else { goto anon2093_Else; }
anon2093_Then:
	assume $_$_condition_$798;
	assume SecMask_$_669[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N] < 0;
	assume SecMask_$_670 == SecMask_$_669[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next := SecMask_$_669[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N := 0]];
	assume SecMask_$_671 == SecMask_$_670;
	goto anon1221;
anon2093_Else:
	assume !$_$_condition_$798;
	assume 0 <= SecMask_$_669[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.next][perm$N];
	assume SecMask_$_671 == SecMask_$_669;
	goto anon1221;
anon1221:
	assume wf(Heap_$_37,SecMask_$_671,SecMask_$_671);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_671);
	assume SecMask_$_672 == SecMask_$_671[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu := SecMask_$_671[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N := SecMask_$_671[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_672);
	if ($_$_condition_$799) { goto anon2094_Then; } else { goto anon2094_Else; }
anon2094_Then:
	assume $_$_condition_$799;
	assume SecMask_$_672[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N] < 0;
	assume SecMask_$_673 == SecMask_$_672[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu := SecMask_$_672[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N := 0]];
	assume SecMask_$_674 == SecMask_$_673;
	goto anon1223;
anon2094_Else:
	assume !$_$_condition_$799;
	assume 0 <= SecMask_$_672[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],mu][perm$N];
	assume SecMask_$_674 == SecMask_$_672;
	goto anon1223;
anon1223:
	assume wf(Heap_$_37,SecMask_$_674,SecMask_$_674);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_674);
	if ($_$_condition_$800) { goto anon2095_Then; } else { goto anon2095_Else; }
anon2095_Then:
	assume $_$_condition_$800;
	assume $_$_condition_$800 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null);
	assume SecMask_$_675 == SecMask_$_674[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_674[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := SecMask_$_674[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] - Fractions(100)]];
	if ($_$_condition_$801) { goto anon2096_Then; } else { goto anon2096_Else; }
anon2095_Else:
	assume !$_$_condition_$800;
	assume $_$_condition_$800 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev] == null;
	assume SecMask_$_678 == SecMask_$_674;
	goto anon1227;
anon2096_Then:
	assume $_$_condition_$801;
	assume SecMask_$_675[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R] < 0;
	assume SecMask_$_676 == SecMask_$_675[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft := SecMask_$_675[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R := 0]];
	assume SecMask_$_677 == SecMask_$_676;
	goto anon1226;
anon2096_Else:
	assume !$_$_condition_$801;
	assume 0 <= SecMask_$_675[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.prev],Node.invLeft][perm$R];
	assume SecMask_$_677 == SecMask_$_675;
	goto anon1226;
anon1227:
	assume wf(Heap_$_37,SecMask_$_678,SecMask_$_678);
	assume SecMask_$_679 == SecMask_$_678;
	goto anon1228;
anon1226:
	assume wf(Heap_$_37,SecMask_$_677,SecMask_$_677);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_677);
	assume SecMask_$_678 == SecMask_$_677;
	goto anon1227;
anon2098_Then:
	assume $_$_condition_$803;
	assume SecMask_$_701[Heap_$_37[oldNext#4_$_0,Node.next],Node.invRight][perm$R] < 0;
	assume SecMask_$_702 == SecMask_$_701[Heap_$_37[oldNext#4_$_0,Node.next],Node.invRight := SecMask_$_701[Heap_$_37[oldNext#4_$_0,Node.next],Node.invRight][perm$R := 0]];
	assume SecMask_$_703 == SecMask_$_702;
	goto $branchMerge_126;
anon2098_Else:
	assume !$_$_condition_$803;
	assume 0 <= SecMask_$_701[Heap_$_37[oldNext#4_$_0,Node.next],Node.invRight][perm$R];
	assume SecMask_$_703 == SecMask_$_701;
	goto $branchMerge_126;
anon1484:
	assume wf(Heap_$_37,SecMask_$_858,SecMask_$_858);
	assume SecMask_$_859 == SecMask_$_858;
	goto $branchMerge_110;
anon2099_Then:
	assume $_$_condition_$804;
	assume $_$_condition_$804 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[oldNext#4_$_0,Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[oldNext#4_$_0,Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[oldNext#4_$_0,Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[oldNext#4_$_0,Node.next])) && true) && predFlag#_357_$_0));
	assume (((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[oldNext#4_$_0,Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[oldNext#4_$_0,Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[oldNext#4_$_0,Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[oldNext#4_$_0,Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$806) { goto anon2100_Then; } else { goto anon2100_Else; }
anon2099_Else:
	assume !$_$_condition_$804;
	assume $_$_condition_$804 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[oldNext#4_$_0,Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[oldNext#4_$_0,Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[oldNext#4_$_0,Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[oldNext#4_$_0,Node.next])) && true) && predFlag#_357_$_0));
	assume !((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[oldNext#4_$_0,Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[oldNext#4_$_0,Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[oldNext#4_$_0,Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[oldNext#4_$_0,Node.next])) && true) && predFlag#_357_$_0));
	assume SecMask_$_857 == SecMask_$_703;
	goto anon1483;
anon2100_Then:
	assume $_$_condition_$806;
	assume $_$_condition_$806 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[oldNext#4_$_0,Node.next])) && true) && predFlag#_357_$_0);
	assume (((predVer#_356_$_1 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[oldNext#4_$_0,Node.next])) && true) && predFlag#_357_$_0;
	goto $branchMerge_127;
anon2100_Else:
	assume !$_$_condition_$806;
	assume $_$_condition_$806 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[oldNext#4_$_0,Node.next])) && true) && predFlag#_357_$_0);
	assume !((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[oldNext#4_$_0,Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$808) { goto anon2101_Then; } else { goto anon2101_Else; }
anon1483:
	assume wf(Heap_$_37,SecMask_$_857,SecMask_$_857);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_857);
	assume SecMask_$_858 == SecMask_$_857;
	goto anon1484;
anon2103_Then:
	assume $_$_condition_$807;
	assume $_$_condition_$807 <==> (!(Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],mu],Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],mu]);
	goto anon1262;
anon2103_Else:
	assume !$_$_condition_$807;
	assume $_$_condition_$807 <==> (!(Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next] == null;
	goto anon1262;
anon2101_Then:
	assume $_$_condition_$808;
	assume $_$_condition_$808 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[oldNext#4_$_0,Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume ((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[oldNext#4_$_0,Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1;
	goto $branchMerge_127;
anon2101_Else:
	assume !$_$_condition_$808;
	assume $_$_condition_$808 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[oldNext#4_$_0,Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume !(((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[oldNext#4_$_0,Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	if ($_$_condition_$810) { goto anon2102_Then; } else { goto anon2102_Else; }
anon2102_Then:
	assume $_$_condition_$810;
	assume $_$_condition_$810 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[oldNext#4_$_0,Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume (((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[oldNext#4_$_0,Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1;
	goto $branchMerge_127;
anon2102_Else:
	assume !$_$_condition_$810;
	assume $_$_condition_$810 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[oldNext#4_$_0,Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume !((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[oldNext#4_$_0,Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	goto $branchMerge_127;
anon1262:
	assume SecMask_$_704 == SecMask_$_703[Heap_$_37[oldNext#4_$_0,Node.next],Node.prev := SecMask_$_703[Heap_$_37[oldNext#4_$_0,Node.next],Node.prev][perm$N := SecMask_$_703[Heap_$_37[oldNext#4_$_0,Node.next],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_704);
	if ($_$_condition_$813) { goto anon2104_Then; } else { goto anon2104_Else; }
anon2104_Then:
	assume $_$_condition_$813;
	assume SecMask_$_704[Heap_$_37[oldNext#4_$_0,Node.next],Node.prev][perm$N] < 0;
	assume SecMask_$_705 == SecMask_$_704[Heap_$_37[oldNext#4_$_0,Node.next],Node.prev := SecMask_$_704[Heap_$_37[oldNext#4_$_0,Node.next],Node.prev][perm$N := 0]];
	assume SecMask_$_706 == SecMask_$_705;
	goto anon1264;
anon2104_Else:
	assume !$_$_condition_$813;
	assume 0 <= SecMask_$_704[Heap_$_37[oldNext#4_$_0,Node.next],Node.prev][perm$N];
	assume SecMask_$_706 == SecMask_$_704;
	goto anon1264;
anon1264:
	assume wf(Heap_$_37,SecMask_$_706,SecMask_$_706);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_706);
	assume SecMask_$_707 == SecMask_$_706[Heap_$_37[oldNext#4_$_0,Node.next],Node.next := SecMask_$_706[Heap_$_37[oldNext#4_$_0,Node.next],Node.next][perm$N := SecMask_$_706[Heap_$_37[oldNext#4_$_0,Node.next],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_707);
	if ($_$_condition_$814) { goto anon2105_Then; } else { goto anon2105_Else; }
anon2105_Then:
	assume $_$_condition_$814;
	assume SecMask_$_707[Heap_$_37[oldNext#4_$_0,Node.next],Node.next][perm$N] < 0;
	assume SecMask_$_708 == SecMask_$_707[Heap_$_37[oldNext#4_$_0,Node.next],Node.next := SecMask_$_707[Heap_$_37[oldNext#4_$_0,Node.next],Node.next][perm$N := 0]];
	assume SecMask_$_709 == SecMask_$_708;
	goto anon1266;
anon2105_Else:
	assume !$_$_condition_$814;
	assume 0 <= SecMask_$_707[Heap_$_37[oldNext#4_$_0,Node.next],Node.next][perm$N];
	assume SecMask_$_709 == SecMask_$_707;
	goto anon1266;
anon1266:
	assume wf(Heap_$_37,SecMask_$_709,SecMask_$_709);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_709);
	assume SecMask_$_710 == SecMask_$_709[Heap_$_37[oldNext#4_$_0,Node.next],mu := SecMask_$_709[Heap_$_37[oldNext#4_$_0,Node.next],mu][perm$N := SecMask_$_709[Heap_$_37[oldNext#4_$_0,Node.next],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_710);
	if ($_$_condition_$815) { goto anon2106_Then; } else { goto anon2106_Else; }
anon2106_Then:
	assume $_$_condition_$815;
	assume SecMask_$_710[Heap_$_37[oldNext#4_$_0,Node.next],mu][perm$N] < 0;
	assume SecMask_$_711 == SecMask_$_710[Heap_$_37[oldNext#4_$_0,Node.next],mu := SecMask_$_710[Heap_$_37[oldNext#4_$_0,Node.next],mu][perm$N := 0]];
	assume SecMask_$_712 == SecMask_$_711;
	goto anon1268;
anon2106_Else:
	assume !$_$_condition_$815;
	assume 0 <= SecMask_$_710[Heap_$_37[oldNext#4_$_0,Node.next],mu][perm$N];
	assume SecMask_$_712 == SecMask_$_710;
	goto anon1268;
anon1268:
	assume wf(Heap_$_37,SecMask_$_712,SecMask_$_712);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_712);
	if ($_$_condition_$816) { goto anon2107_Then; } else { goto anon2107_Else; }
anon2107_Then:
	assume $_$_condition_$816;
	assume $_$_condition_$816 <==> (!(Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next] == null);
	assume SecMask_$_713 == SecMask_$_712[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.invRight := SecMask_$_712[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.invRight][perm$R := SecMask_$_712[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.invRight][perm$R] - Fractions(100)]];
	if ($_$_condition_$817) { goto anon2108_Then; } else { goto anon2108_Else; }
anon2107_Else:
	assume !$_$_condition_$816;
	assume $_$_condition_$816 <==> (!(Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next] == null;
	assume SecMask_$_856 == SecMask_$_712;
	goto anon1482;
anon2108_Then:
	assume $_$_condition_$817;
	assume SecMask_$_713[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.invRight][perm$R] < 0;
	assume SecMask_$_714 == SecMask_$_713[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.invRight := SecMask_$_713[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.invRight][perm$R := 0]];
	assume SecMask_$_715 == SecMask_$_714;
	goto anon1271;
anon2108_Else:
	assume !$_$_condition_$817;
	assume 0 <= SecMask_$_713[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.invRight][perm$R];
	assume SecMask_$_715 == SecMask_$_713;
	goto anon1271;
anon1482:
	assume wf(Heap_$_37,SecMask_$_856,SecMask_$_856);
	assume SecMask_$_857 == SecMask_$_856;
	goto anon1483;
anon1271:
	assume !(Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next] == Heap_$_37[oldNext#4_$_0,Node.next]);
	if ($_$_condition_$818) { goto anon2109_Then; } else { goto anon2109_Else; }
anon2109_Then:
	assume $_$_condition_$818;
	assume $_$_condition_$818 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume (((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$819) { goto anon2110_Then; } else { goto anon2110_Else; }
anon2109_Else:
	assume !$_$_condition_$818;
	assume $_$_condition_$818 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume !((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume SecMask_$_855 == SecMask_$_715;
	goto anon1481;
anon2110_Then:
	assume $_$_condition_$819;
	assume $_$_condition_$819 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume (((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next])) && true) && predFlag#_357_$_0;
	goto $branchMerge_128;
anon2110_Else:
	assume !$_$_condition_$819;
	assume $_$_condition_$819 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume !((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$821) { goto anon2111_Then; } else { goto anon2111_Else; }
anon1481:
	assume wf(Heap_$_37,SecMask_$_855,SecMask_$_855);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_855);
	assume SecMask_$_856 == SecMask_$_855;
	goto anon1482;
anon2113_Then:
	assume $_$_condition_$820;
	assume $_$_condition_$820 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],mu],Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],mu]);
	goto anon1281;
anon2113_Else:
	assume !$_$_condition_$820;
	assume $_$_condition_$820 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next] == null;
	goto anon1281;
anon2111_Then:
	assume $_$_condition_$821;
	assume $_$_condition_$821 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume ((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1;
	goto $branchMerge_128;
anon2111_Else:
	assume !$_$_condition_$821;
	assume $_$_condition_$821 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume !(((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	if ($_$_condition_$823) { goto anon2112_Then; } else { goto anon2112_Else; }
anon2112_Then:
	assume $_$_condition_$823;
	assume $_$_condition_$823 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume (((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1;
	goto $branchMerge_128;
anon2112_Else:
	assume !$_$_condition_$823;
	assume $_$_condition_$823 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume !((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	goto $branchMerge_128;
anon1281:
	assume SecMask_$_716 == SecMask_$_715[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.prev := SecMask_$_715[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.prev][perm$N := SecMask_$_715[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_716);
	if ($_$_condition_$826) { goto anon2114_Then; } else { goto anon2114_Else; }
anon2114_Then:
	assume $_$_condition_$826;
	assume SecMask_$_716[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.prev][perm$N] < 0;
	assume SecMask_$_717 == SecMask_$_716[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.prev := SecMask_$_716[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.prev][perm$N := 0]];
	assume SecMask_$_718 == SecMask_$_717;
	goto anon1283;
anon2114_Else:
	assume !$_$_condition_$826;
	assume 0 <= SecMask_$_716[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.prev][perm$N];
	assume SecMask_$_718 == SecMask_$_716;
	goto anon1283;
anon1283:
	assume wf(Heap_$_37,SecMask_$_718,SecMask_$_718);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_718);
	assume SecMask_$_719 == SecMask_$_718[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next := SecMask_$_718[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next][perm$N := SecMask_$_718[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_719);
	if ($_$_condition_$827) { goto anon2115_Then; } else { goto anon2115_Else; }
anon2115_Then:
	assume $_$_condition_$827;
	assume SecMask_$_719[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next][perm$N] < 0;
	assume SecMask_$_720 == SecMask_$_719[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next := SecMask_$_719[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next][perm$N := 0]];
	assume SecMask_$_721 == SecMask_$_720;
	goto anon1285;
anon2115_Else:
	assume !$_$_condition_$827;
	assume 0 <= SecMask_$_719[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next][perm$N];
	assume SecMask_$_721 == SecMask_$_719;
	goto anon1285;
anon1285:
	assume wf(Heap_$_37,SecMask_$_721,SecMask_$_721);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_721);
	assume SecMask_$_722 == SecMask_$_721[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],mu := SecMask_$_721[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],mu][perm$N := SecMask_$_721[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_722);
	if ($_$_condition_$828) { goto anon2116_Then; } else { goto anon2116_Else; }
anon2116_Then:
	assume $_$_condition_$828;
	assume SecMask_$_722[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],mu][perm$N] < 0;
	assume SecMask_$_723 == SecMask_$_722[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],mu := SecMask_$_722[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],mu][perm$N := 0]];
	assume SecMask_$_724 == SecMask_$_723;
	goto anon1287;
anon2116_Else:
	assume !$_$_condition_$828;
	assume 0 <= SecMask_$_722[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],mu][perm$N];
	assume SecMask_$_724 == SecMask_$_722;
	goto anon1287;
anon1287:
	assume wf(Heap_$_37,SecMask_$_724,SecMask_$_724);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_724);
	if ($_$_condition_$829) { goto anon2117_Then; } else { goto anon2117_Else; }
anon2117_Then:
	assume $_$_condition_$829;
	assume $_$_condition_$829 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next] == null);
	assume SecMask_$_725 == SecMask_$_724[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.invRight := SecMask_$_724[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.invRight][perm$R := SecMask_$_724[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.invRight][perm$R] - Fractions(100)]];
	if ($_$_condition_$830) { goto anon2118_Then; } else { goto anon2118_Else; }
anon2117_Else:
	assume !$_$_condition_$829;
	assume $_$_condition_$829 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next] == null;
	assume SecMask_$_854 == SecMask_$_724;
	goto anon1480;
anon2118_Then:
	assume $_$_condition_$830;
	assume SecMask_$_725[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.invRight][perm$R] < 0;
	assume SecMask_$_726 == SecMask_$_725[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.invRight := SecMask_$_725[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.invRight][perm$R := 0]];
	assume SecMask_$_727 == SecMask_$_726;
	goto anon1290;
anon2118_Else:
	assume !$_$_condition_$830;
	assume 0 <= SecMask_$_725[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.invRight][perm$R];
	assume SecMask_$_727 == SecMask_$_725;
	goto anon1290;
anon1480:
	assume wf(Heap_$_37,SecMask_$_854,SecMask_$_854);
	assume SecMask_$_855 == SecMask_$_854;
	goto anon1481;
anon1290:
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next] == Heap_$_37[oldNext#4_$_0,Node.next]);
	if ($_$_condition_$831) { goto anon2119_Then; } else { goto anon2119_Else; }
anon2119_Then:
	assume $_$_condition_$831;
	assume $_$_condition_$831 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume (((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$832) { goto anon2120_Then; } else { goto anon2120_Else; }
anon2119_Else:
	assume !$_$_condition_$831;
	assume $_$_condition_$831 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume !((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume SecMask_$_853 == SecMask_$_727;
	goto anon1479;
anon2120_Then:
	assume $_$_condition_$832;
	assume $_$_condition_$832 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume (((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0;
	goto $branchMerge_129;
anon2120_Else:
	assume !$_$_condition_$832;
	assume $_$_condition_$832 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume !((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$834) { goto anon2121_Then; } else { goto anon2121_Else; }
anon1479:
	assume wf(Heap_$_37,SecMask_$_853,SecMask_$_853);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_853);
	assume SecMask_$_854 == SecMask_$_853;
	goto anon1480;
anon2123_Then:
	assume $_$_condition_$833;
	assume $_$_condition_$833 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],mu],Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],mu]);
	goto anon1300;
anon2123_Else:
	assume !$_$_condition_$833;
	assume $_$_condition_$833 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next] == null;
	goto anon1300;
anon2121_Then:
	assume $_$_condition_$834;
	assume $_$_condition_$834 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume ((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1;
	goto $branchMerge_129;
anon2121_Else:
	assume !$_$_condition_$834;
	assume $_$_condition_$834 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume !(((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	if ($_$_condition_$836) { goto anon2122_Then; } else { goto anon2122_Else; }
anon2122_Then:
	assume $_$_condition_$836;
	assume $_$_condition_$836 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume (((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1;
	goto $branchMerge_129;
anon2122_Else:
	assume !$_$_condition_$836;
	assume $_$_condition_$836 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume !((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	goto $branchMerge_129;
anon1300:
	assume SecMask_$_728 == SecMask_$_727[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.prev := SecMask_$_727[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.prev][perm$N := SecMask_$_727[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_728);
	if ($_$_condition_$839) { goto anon2124_Then; } else { goto anon2124_Else; }
anon2124_Then:
	assume $_$_condition_$839;
	assume SecMask_$_728[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.prev][perm$N] < 0;
	assume SecMask_$_729 == SecMask_$_728[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.prev := SecMask_$_728[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.prev][perm$N := 0]];
	assume SecMask_$_730 == SecMask_$_729;
	goto anon1302;
anon2124_Else:
	assume !$_$_condition_$839;
	assume 0 <= SecMask_$_728[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.prev][perm$N];
	assume SecMask_$_730 == SecMask_$_728;
	goto anon1302;
anon1302:
	assume wf(Heap_$_37,SecMask_$_730,SecMask_$_730);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_730);
	assume SecMask_$_731 == SecMask_$_730[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next := SecMask_$_730[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next][perm$N := SecMask_$_730[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_731);
	if ($_$_condition_$840) { goto anon2125_Then; } else { goto anon2125_Else; }
anon2125_Then:
	assume $_$_condition_$840;
	assume SecMask_$_731[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next][perm$N] < 0;
	assume SecMask_$_732 == SecMask_$_731[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next := SecMask_$_731[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next][perm$N := 0]];
	assume SecMask_$_733 == SecMask_$_732;
	goto anon1304;
anon2125_Else:
	assume !$_$_condition_$840;
	assume 0 <= SecMask_$_731[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next][perm$N];
	assume SecMask_$_733 == SecMask_$_731;
	goto anon1304;
anon1304:
	assume wf(Heap_$_37,SecMask_$_733,SecMask_$_733);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_733);
	assume SecMask_$_734 == SecMask_$_733[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],mu := SecMask_$_733[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],mu][perm$N := SecMask_$_733[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_734);
	if ($_$_condition_$841) { goto anon2126_Then; } else { goto anon2126_Else; }
anon2126_Then:
	assume $_$_condition_$841;
	assume SecMask_$_734[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],mu][perm$N] < 0;
	assume SecMask_$_735 == SecMask_$_734[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],mu := SecMask_$_734[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],mu][perm$N := 0]];
	assume SecMask_$_736 == SecMask_$_735;
	goto anon1306;
anon2126_Else:
	assume !$_$_condition_$841;
	assume 0 <= SecMask_$_734[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],mu][perm$N];
	assume SecMask_$_736 == SecMask_$_734;
	goto anon1306;
anon1306:
	assume wf(Heap_$_37,SecMask_$_736,SecMask_$_736);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_736);
	if ($_$_condition_$842) { goto anon2127_Then; } else { goto anon2127_Else; }
anon2127_Then:
	assume $_$_condition_$842;
	assume $_$_condition_$842 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next] == null);
	assume SecMask_$_737 == SecMask_$_736[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.invRight := SecMask_$_736[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R := SecMask_$_736[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R] - Fractions(100)]];
	if ($_$_condition_$843) { goto anon2128_Then; } else { goto anon2128_Else; }
anon2127_Else:
	assume !$_$_condition_$842;
	assume $_$_condition_$842 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next] == null;
	assume SecMask_$_852 == SecMask_$_736;
	goto anon1478;
anon2128_Then:
	assume $_$_condition_$843;
	assume SecMask_$_737[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R] < 0;
	assume SecMask_$_738 == SecMask_$_737[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.invRight := SecMask_$_737[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R := 0]];
	assume SecMask_$_739 == SecMask_$_738;
	goto anon1309;
anon2128_Else:
	assume !$_$_condition_$843;
	assume 0 <= SecMask_$_737[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R];
	assume SecMask_$_739 == SecMask_$_737;
	goto anon1309;
anon1478:
	assume wf(Heap_$_37,SecMask_$_852,SecMask_$_852);
	assume SecMask_$_853 == SecMask_$_852;
	goto anon1479;
anon1309:
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next] == Heap_$_37[oldNext#4_$_0,Node.next]);
	if ($_$_condition_$844) { goto anon2129_Then; } else { goto anon2129_Else; }
anon2129_Then:
	assume $_$_condition_$844;
	assume $_$_condition_$844 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume (((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$845) { goto anon2130_Then; } else { goto anon2130_Else; }
anon2129_Else:
	assume !$_$_condition_$844;
	assume $_$_condition_$844 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume !((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume SecMask_$_851 == SecMask_$_739;
	goto anon1477;
anon2130_Then:
	assume $_$_condition_$845;
	assume $_$_condition_$845 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume (((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0;
	goto $branchMerge_130;
anon2130_Else:
	assume !$_$_condition_$845;
	assume $_$_condition_$845 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume !((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$847) { goto anon2131_Then; } else { goto anon2131_Else; }
anon1477:
	assume wf(Heap_$_37,SecMask_$_851,SecMask_$_851);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_851);
	assume SecMask_$_852 == SecMask_$_851;
	goto anon1478;
anon2133_Then:
	assume $_$_condition_$846;
	assume $_$_condition_$846 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],mu],Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],mu]);
	goto anon1319;
anon2133_Else:
	assume !$_$_condition_$846;
	assume $_$_condition_$846 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next] == null;
	goto anon1319;
anon2131_Then:
	assume $_$_condition_$847;
	assume $_$_condition_$847 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume ((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1;
	goto $branchMerge_130;
anon2131_Else:
	assume !$_$_condition_$847;
	assume $_$_condition_$847 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume !(((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	if ($_$_condition_$849) { goto anon2132_Then; } else { goto anon2132_Else; }
anon2132_Then:
	assume $_$_condition_$849;
	assume $_$_condition_$849 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume (((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1;
	goto $branchMerge_130;
anon2132_Else:
	assume !$_$_condition_$849;
	assume $_$_condition_$849 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume !((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	goto $branchMerge_130;
anon1319:
	assume SecMask_$_740 == SecMask_$_739[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.prev := SecMask_$_739[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N := SecMask_$_739[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_740);
	if ($_$_condition_$852) { goto anon2134_Then; } else { goto anon2134_Else; }
anon2134_Then:
	assume $_$_condition_$852;
	assume SecMask_$_740[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N] < 0;
	assume SecMask_$_741 == SecMask_$_740[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.prev := SecMask_$_740[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N := 0]];
	assume SecMask_$_742 == SecMask_$_741;
	goto anon1321;
anon2134_Else:
	assume !$_$_condition_$852;
	assume 0 <= SecMask_$_740[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N];
	assume SecMask_$_742 == SecMask_$_740;
	goto anon1321;
anon1321:
	assume wf(Heap_$_37,SecMask_$_742,SecMask_$_742);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_742);
	assume SecMask_$_743 == SecMask_$_742[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next := SecMask_$_742[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next][perm$N := SecMask_$_742[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_743);
	if ($_$_condition_$853) { goto anon2135_Then; } else { goto anon2135_Else; }
anon2135_Then:
	assume $_$_condition_$853;
	assume SecMask_$_743[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next][perm$N] < 0;
	assume SecMask_$_744 == SecMask_$_743[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next := SecMask_$_743[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next][perm$N := 0]];
	assume SecMask_$_745 == SecMask_$_744;
	goto anon1323;
anon2135_Else:
	assume !$_$_condition_$853;
	assume 0 <= SecMask_$_743[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next][perm$N];
	assume SecMask_$_745 == SecMask_$_743;
	goto anon1323;
anon1323:
	assume wf(Heap_$_37,SecMask_$_745,SecMask_$_745);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_745);
	assume SecMask_$_746 == SecMask_$_745[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],mu := SecMask_$_745[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],mu][perm$N := SecMask_$_745[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_746);
	if ($_$_condition_$854) { goto anon2136_Then; } else { goto anon2136_Else; }
anon2136_Then:
	assume $_$_condition_$854;
	assume SecMask_$_746[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],mu][perm$N] < 0;
	assume SecMask_$_747 == SecMask_$_746[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],mu := SecMask_$_746[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],mu][perm$N := 0]];
	assume SecMask_$_748 == SecMask_$_747;
	goto anon1325;
anon2136_Else:
	assume !$_$_condition_$854;
	assume 0 <= SecMask_$_746[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],mu][perm$N];
	assume SecMask_$_748 == SecMask_$_746;
	goto anon1325;
anon1325:
	assume wf(Heap_$_37,SecMask_$_748,SecMask_$_748);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_748);
	if ($_$_condition_$855) { goto anon2137_Then; } else { goto anon2137_Else; }
anon2137_Then:
	assume $_$_condition_$855;
	assume $_$_condition_$855 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next] == null);
	assume SecMask_$_749 == SecMask_$_748[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight := SecMask_$_748[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R := SecMask_$_748[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R] - Fractions(100)]];
	if ($_$_condition_$856) { goto anon2138_Then; } else { goto anon2138_Else; }
anon2137_Else:
	assume !$_$_condition_$855;
	assume $_$_condition_$855 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next] == null;
	assume SecMask_$_850 == SecMask_$_748;
	goto anon1476;
anon2138_Then:
	assume $_$_condition_$856;
	assume SecMask_$_749[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R] < 0;
	assume SecMask_$_750 == SecMask_$_749[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight := SecMask_$_749[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R := 0]];
	assume SecMask_$_751 == SecMask_$_750;
	goto anon1328;
anon2138_Else:
	assume !$_$_condition_$856;
	assume 0 <= SecMask_$_749[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R];
	assume SecMask_$_751 == SecMask_$_749;
	goto anon1328;
anon1476:
	assume wf(Heap_$_37,SecMask_$_850,SecMask_$_850);
	assume SecMask_$_851 == SecMask_$_850;
	goto anon1477;
anon1328:
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[oldNext#4_$_0,Node.next]);
	if ($_$_condition_$857) { goto anon2139_Then; } else { goto anon2139_Else; }
anon2139_Then:
	assume $_$_condition_$857;
	assume $_$_condition_$857 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume (((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$858) { goto anon2140_Then; } else { goto anon2140_Else; }
anon2139_Else:
	assume !$_$_condition_$857;
	assume $_$_condition_$857 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume !((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume SecMask_$_849 == SecMask_$_751;
	goto anon1475;
anon2140_Then:
	assume $_$_condition_$858;
	assume $_$_condition_$858 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume (((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0;
	goto $branchMerge_131;
anon2140_Else:
	assume !$_$_condition_$858;
	assume $_$_condition_$858 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume !((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$860) { goto anon2141_Then; } else { goto anon2141_Else; }
anon1475:
	assume wf(Heap_$_37,SecMask_$_849,SecMask_$_849);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_849);
	assume SecMask_$_850 == SecMask_$_849;
	goto anon1476;
anon2143_Then:
	assume $_$_condition_$859;
	assume $_$_condition_$859 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],mu],Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu]);
	goto anon1338;
anon2143_Else:
	assume !$_$_condition_$859;
	assume $_$_condition_$859 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null;
	goto anon1338;
anon2141_Then:
	assume $_$_condition_$860;
	assume $_$_condition_$860 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume ((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1;
	goto $branchMerge_131;
anon2141_Else:
	assume !$_$_condition_$860;
	assume $_$_condition_$860 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume !(((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	if ($_$_condition_$862) { goto anon2142_Then; } else { goto anon2142_Else; }
anon2142_Then:
	assume $_$_condition_$862;
	assume $_$_condition_$862 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume (((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1;
	goto $branchMerge_131;
anon2142_Else:
	assume !$_$_condition_$862;
	assume $_$_condition_$862 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume !((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	goto $branchMerge_131;
anon1338:
	assume SecMask_$_752 == SecMask_$_751[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev := SecMask_$_751[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N := SecMask_$_751[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_752);
	if ($_$_condition_$865) { goto anon2144_Then; } else { goto anon2144_Else; }
anon2144_Then:
	assume $_$_condition_$865;
	assume SecMask_$_752[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N] < 0;
	assume SecMask_$_753 == SecMask_$_752[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev := SecMask_$_752[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N := 0]];
	assume SecMask_$_754 == SecMask_$_753;
	goto anon1340;
anon2144_Else:
	assume !$_$_condition_$865;
	assume 0 <= SecMask_$_752[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N];
	assume SecMask_$_754 == SecMask_$_752;
	goto anon1340;
anon1340:
	assume wf(Heap_$_37,SecMask_$_754,SecMask_$_754);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_754);
	assume SecMask_$_755 == SecMask_$_754[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next := SecMask_$_754[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N := SecMask_$_754[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_755);
	if ($_$_condition_$866) { goto anon2145_Then; } else { goto anon2145_Else; }
anon2145_Then:
	assume $_$_condition_$866;
	assume SecMask_$_755[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N] < 0;
	assume SecMask_$_756 == SecMask_$_755[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next := SecMask_$_755[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N := 0]];
	assume SecMask_$_757 == SecMask_$_756;
	goto anon1342;
anon2145_Else:
	assume !$_$_condition_$866;
	assume 0 <= SecMask_$_755[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N];
	assume SecMask_$_757 == SecMask_$_755;
	goto anon1342;
anon1342:
	assume wf(Heap_$_37,SecMask_$_757,SecMask_$_757);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_757);
	assume SecMask_$_758 == SecMask_$_757[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],mu := SecMask_$_757[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N := SecMask_$_757[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_758);
	if ($_$_condition_$867) { goto anon2146_Then; } else { goto anon2146_Else; }
anon2146_Then:
	assume $_$_condition_$867;
	assume SecMask_$_758[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N] < 0;
	assume SecMask_$_759 == SecMask_$_758[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],mu := SecMask_$_758[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N := 0]];
	assume SecMask_$_760 == SecMask_$_759;
	goto anon1344;
anon2146_Else:
	assume !$_$_condition_$867;
	assume 0 <= SecMask_$_758[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N];
	assume SecMask_$_760 == SecMask_$_758;
	goto anon1344;
anon1344:
	assume wf(Heap_$_37,SecMask_$_760,SecMask_$_760);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_760);
	if ($_$_condition_$868) { goto anon2147_Then; } else { goto anon2147_Else; }
anon2147_Then:
	assume $_$_condition_$868;
	assume $_$_condition_$868 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null);
	assume SecMask_$_761 == SecMask_$_760[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight := SecMask_$_760[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R := SecMask_$_760[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R] - Fractions(100)]];
	if ($_$_condition_$869) { goto anon2148_Then; } else { goto anon2148_Else; }
anon2147_Else:
	assume !$_$_condition_$868;
	assume $_$_condition_$868 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null;
	assume SecMask_$_848 == SecMask_$_760;
	goto anon1474;
anon2148_Then:
	assume $_$_condition_$869;
	assume SecMask_$_761[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R] < 0;
	assume SecMask_$_762 == SecMask_$_761[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight := SecMask_$_761[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R := 0]];
	assume SecMask_$_763 == SecMask_$_762;
	goto anon1347;
anon2148_Else:
	assume !$_$_condition_$869;
	assume 0 <= SecMask_$_761[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R];
	assume SecMask_$_763 == SecMask_$_761;
	goto anon1347;
anon1474:
	assume wf(Heap_$_37,SecMask_$_848,SecMask_$_848);
	assume SecMask_$_849 == SecMask_$_848;
	goto anon1475;
anon1347:
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[oldNext#4_$_0,Node.next]);
	if ($_$_condition_$870) { goto anon2149_Then; } else { goto anon2149_Else; }
anon2149_Then:
	assume $_$_condition_$870;
	assume $_$_condition_$870 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume (((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$871) { goto anon2150_Then; } else { goto anon2150_Else; }
anon2149_Else:
	assume !$_$_condition_$870;
	assume $_$_condition_$870 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume !((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume SecMask_$_847 == SecMask_$_763;
	goto anon1473;
anon2150_Then:
	assume $_$_condition_$871;
	assume $_$_condition_$871 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume (((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0;
	goto $branchMerge_132;
anon2150_Else:
	assume !$_$_condition_$871;
	assume $_$_condition_$871 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume !((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$873) { goto anon2151_Then; } else { goto anon2151_Else; }
anon1473:
	assume wf(Heap_$_37,SecMask_$_847,SecMask_$_847);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_847);
	assume SecMask_$_848 == SecMask_$_847;
	goto anon1474;
anon2153_Then:
	assume $_$_condition_$872;
	assume $_$_condition_$872 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu],Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu]);
	goto anon1357;
anon2153_Else:
	assume !$_$_condition_$872;
	assume $_$_condition_$872 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null;
	goto anon1357;
anon2151_Then:
	assume $_$_condition_$873;
	assume $_$_condition_$873 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume ((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1;
	goto $branchMerge_132;
anon2151_Else:
	assume !$_$_condition_$873;
	assume $_$_condition_$873 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume !(((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	if ($_$_condition_$875) { goto anon2152_Then; } else { goto anon2152_Else; }
anon2152_Then:
	assume $_$_condition_$875;
	assume $_$_condition_$875 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume (((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1;
	goto $branchMerge_132;
anon2152_Else:
	assume !$_$_condition_$875;
	assume $_$_condition_$875 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume !((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	goto $branchMerge_132;
anon1357:
	assume SecMask_$_764 == SecMask_$_763[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev := SecMask_$_763[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N := SecMask_$_763[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_764);
	if ($_$_condition_$878) { goto anon2154_Then; } else { goto anon2154_Else; }
anon2154_Then:
	assume $_$_condition_$878;
	assume SecMask_$_764[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N] < 0;
	assume SecMask_$_765 == SecMask_$_764[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev := SecMask_$_764[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N := 0]];
	assume SecMask_$_766 == SecMask_$_765;
	goto anon1359;
anon2154_Else:
	assume !$_$_condition_$878;
	assume 0 <= SecMask_$_764[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N];
	assume SecMask_$_766 == SecMask_$_764;
	goto anon1359;
anon1359:
	assume wf(Heap_$_37,SecMask_$_766,SecMask_$_766);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_766);
	assume SecMask_$_767 == SecMask_$_766[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next := SecMask_$_766[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N := SecMask_$_766[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_767);
	if ($_$_condition_$879) { goto anon2155_Then; } else { goto anon2155_Else; }
anon2155_Then:
	assume $_$_condition_$879;
	assume SecMask_$_767[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N] < 0;
	assume SecMask_$_768 == SecMask_$_767[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next := SecMask_$_767[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N := 0]];
	assume SecMask_$_769 == SecMask_$_768;
	goto anon1361;
anon2155_Else:
	assume !$_$_condition_$879;
	assume 0 <= SecMask_$_767[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N];
	assume SecMask_$_769 == SecMask_$_767;
	goto anon1361;
anon1361:
	assume wf(Heap_$_37,SecMask_$_769,SecMask_$_769);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_769);
	assume SecMask_$_770 == SecMask_$_769[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu := SecMask_$_769[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N := SecMask_$_769[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_770);
	if ($_$_condition_$880) { goto anon2156_Then; } else { goto anon2156_Else; }
anon2156_Then:
	assume $_$_condition_$880;
	assume SecMask_$_770[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N] < 0;
	assume SecMask_$_771 == SecMask_$_770[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu := SecMask_$_770[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N := 0]];
	assume SecMask_$_772 == SecMask_$_771;
	goto anon1363;
anon2156_Else:
	assume !$_$_condition_$880;
	assume 0 <= SecMask_$_770[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N];
	assume SecMask_$_772 == SecMask_$_770;
	goto anon1363;
anon1363:
	assume wf(Heap_$_37,SecMask_$_772,SecMask_$_772);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_772);
	if ($_$_condition_$881) { goto anon2157_Then; } else { goto anon2157_Else; }
anon2157_Then:
	assume $_$_condition_$881;
	assume $_$_condition_$881 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null);
	assume SecMask_$_773 == SecMask_$_772[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight := SecMask_$_772[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R := SecMask_$_772[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R] - Fractions(100)]];
	if ($_$_condition_$882) { goto anon2158_Then; } else { goto anon2158_Else; }
anon2157_Else:
	assume !$_$_condition_$881;
	assume $_$_condition_$881 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null;
	assume SecMask_$_846 == SecMask_$_772;
	goto anon1472;
anon2158_Then:
	assume $_$_condition_$882;
	assume SecMask_$_773[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R] < 0;
	assume SecMask_$_774 == SecMask_$_773[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight := SecMask_$_773[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R := 0]];
	assume SecMask_$_775 == SecMask_$_774;
	goto anon1366;
anon2158_Else:
	assume !$_$_condition_$882;
	assume 0 <= SecMask_$_773[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R];
	assume SecMask_$_775 == SecMask_$_773;
	goto anon1366;
anon1472:
	assume wf(Heap_$_37,SecMask_$_846,SecMask_$_846);
	assume SecMask_$_847 == SecMask_$_846;
	goto anon1473;
anon1366:
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[oldNext#4_$_0,Node.next]);
	if ($_$_condition_$883) { goto anon2159_Then; } else { goto anon2159_Else; }
anon2159_Then:
	assume $_$_condition_$883;
	assume $_$_condition_$883 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume (((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$884) { goto anon2160_Then; } else { goto anon2160_Else; }
anon2159_Else:
	assume !$_$_condition_$883;
	assume $_$_condition_$883 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume !((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume SecMask_$_845 == SecMask_$_775;
	goto anon1471;
anon2160_Then:
	assume $_$_condition_$884;
	assume $_$_condition_$884 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume (((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0;
	goto $branchMerge_133;
anon2160_Else:
	assume !$_$_condition_$884;
	assume $_$_condition_$884 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume !((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$886) { goto anon2161_Then; } else { goto anon2161_Else; }
anon1471:
	assume wf(Heap_$_37,SecMask_$_845,SecMask_$_845);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_845);
	assume SecMask_$_846 == SecMask_$_845;
	goto anon1472;
anon2163_Then:
	assume $_$_condition_$885;
	assume $_$_condition_$885 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu],Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu]);
	goto anon1376;
anon2163_Else:
	assume !$_$_condition_$885;
	assume $_$_condition_$885 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null;
	goto anon1376;
anon2161_Then:
	assume $_$_condition_$886;
	assume $_$_condition_$886 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume ((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1;
	goto $branchMerge_133;
anon2161_Else:
	assume !$_$_condition_$886;
	assume $_$_condition_$886 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume !(((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	if ($_$_condition_$888) { goto anon2162_Then; } else { goto anon2162_Else; }
anon2162_Then:
	assume $_$_condition_$888;
	assume $_$_condition_$888 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume (((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1;
	goto $branchMerge_133;
anon2162_Else:
	assume !$_$_condition_$888;
	assume $_$_condition_$888 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume !((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	goto $branchMerge_133;
anon1376:
	assume SecMask_$_776 == SecMask_$_775[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev := SecMask_$_775[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N := SecMask_$_775[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_776);
	if ($_$_condition_$891) { goto anon2164_Then; } else { goto anon2164_Else; }
anon2164_Then:
	assume $_$_condition_$891;
	assume SecMask_$_776[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N] < 0;
	assume SecMask_$_777 == SecMask_$_776[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev := SecMask_$_776[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N := 0]];
	assume SecMask_$_778 == SecMask_$_777;
	goto anon1378;
anon2164_Else:
	assume !$_$_condition_$891;
	assume 0 <= SecMask_$_776[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N];
	assume SecMask_$_778 == SecMask_$_776;
	goto anon1378;
anon1378:
	assume wf(Heap_$_37,SecMask_$_778,SecMask_$_778);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_778);
	assume SecMask_$_779 == SecMask_$_778[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next := SecMask_$_778[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N := SecMask_$_778[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_779);
	if ($_$_condition_$892) { goto anon2165_Then; } else { goto anon2165_Else; }
anon2165_Then:
	assume $_$_condition_$892;
	assume SecMask_$_779[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N] < 0;
	assume SecMask_$_780 == SecMask_$_779[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next := SecMask_$_779[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N := 0]];
	assume SecMask_$_781 == SecMask_$_780;
	goto anon1380;
anon2165_Else:
	assume !$_$_condition_$892;
	assume 0 <= SecMask_$_779[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N];
	assume SecMask_$_781 == SecMask_$_779;
	goto anon1380;
anon1380:
	assume wf(Heap_$_37,SecMask_$_781,SecMask_$_781);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_781);
	assume SecMask_$_782 == SecMask_$_781[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu := SecMask_$_781[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N := SecMask_$_781[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_782);
	if ($_$_condition_$893) { goto anon2166_Then; } else { goto anon2166_Else; }
anon2166_Then:
	assume $_$_condition_$893;
	assume SecMask_$_782[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N] < 0;
	assume SecMask_$_783 == SecMask_$_782[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu := SecMask_$_782[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N := 0]];
	assume SecMask_$_784 == SecMask_$_783;
	goto anon1382;
anon2166_Else:
	assume !$_$_condition_$893;
	assume 0 <= SecMask_$_782[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N];
	assume SecMask_$_784 == SecMask_$_782;
	goto anon1382;
anon1382:
	assume wf(Heap_$_37,SecMask_$_784,SecMask_$_784);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_784);
	if ($_$_condition_$894) { goto anon2167_Then; } else { goto anon2167_Else; }
anon2167_Then:
	assume $_$_condition_$894;
	assume $_$_condition_$894 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null);
	assume SecMask_$_785 == SecMask_$_784[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight := SecMask_$_784[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R := SecMask_$_784[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R] - Fractions(100)]];
	if ($_$_condition_$895) { goto anon2168_Then; } else { goto anon2168_Else; }
anon2167_Else:
	assume !$_$_condition_$894;
	assume $_$_condition_$894 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null;
	assume SecMask_$_844 == SecMask_$_784;
	goto anon1470;
anon2168_Then:
	assume $_$_condition_$895;
	assume SecMask_$_785[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R] < 0;
	assume SecMask_$_786 == SecMask_$_785[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight := SecMask_$_785[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R := 0]];
	assume SecMask_$_787 == SecMask_$_786;
	goto anon1385;
anon2168_Else:
	assume !$_$_condition_$895;
	assume 0 <= SecMask_$_785[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R];
	assume SecMask_$_787 == SecMask_$_785;
	goto anon1385;
anon1470:
	assume wf(Heap_$_37,SecMask_$_844,SecMask_$_844);
	assume SecMask_$_845 == SecMask_$_844;
	goto anon1471;
anon1385:
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[oldNext#4_$_0,Node.next]);
	if ($_$_condition_$896) { goto anon2169_Then; } else { goto anon2169_Else; }
anon2169_Then:
	assume $_$_condition_$896;
	assume $_$_condition_$896 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume (((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$897) { goto anon2170_Then; } else { goto anon2170_Else; }
anon2169_Else:
	assume !$_$_condition_$896;
	assume $_$_condition_$896 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume !((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume SecMask_$_843 == SecMask_$_787;
	goto anon1469;
anon2170_Then:
	assume $_$_condition_$897;
	assume $_$_condition_$897 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume (((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0;
	goto $branchMerge_134;
anon2170_Else:
	assume !$_$_condition_$897;
	assume $_$_condition_$897 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume !((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$899) { goto anon2171_Then; } else { goto anon2171_Else; }
anon1469:
	assume wf(Heap_$_37,SecMask_$_843,SecMask_$_843);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_843);
	assume SecMask_$_844 == SecMask_$_843;
	goto anon1470;
anon2173_Then:
	assume $_$_condition_$898;
	assume $_$_condition_$898 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu],Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu]);
	goto anon1395;
anon2173_Else:
	assume !$_$_condition_$898;
	assume $_$_condition_$898 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null;
	goto anon1395;
anon2171_Then:
	assume $_$_condition_$899;
	assume $_$_condition_$899 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume ((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1;
	goto $branchMerge_134;
anon2171_Else:
	assume !$_$_condition_$899;
	assume $_$_condition_$899 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume !(((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	if ($_$_condition_$901) { goto anon2172_Then; } else { goto anon2172_Else; }
anon2172_Then:
	assume $_$_condition_$901;
	assume $_$_condition_$901 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume (((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1;
	goto $branchMerge_134;
anon2172_Else:
	assume !$_$_condition_$901;
	assume $_$_condition_$901 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume !((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	goto $branchMerge_134;
anon1395:
	assume SecMask_$_788 == SecMask_$_787[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev := SecMask_$_787[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N := SecMask_$_787[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_788);
	if ($_$_condition_$904) { goto anon2174_Then; } else { goto anon2174_Else; }
anon2174_Then:
	assume $_$_condition_$904;
	assume SecMask_$_788[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N] < 0;
	assume SecMask_$_789 == SecMask_$_788[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev := SecMask_$_788[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N := 0]];
	assume SecMask_$_790 == SecMask_$_789;
	goto anon1397;
anon2174_Else:
	assume !$_$_condition_$904;
	assume 0 <= SecMask_$_788[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N];
	assume SecMask_$_790 == SecMask_$_788;
	goto anon1397;
anon1397:
	assume wf(Heap_$_37,SecMask_$_790,SecMask_$_790);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_790);
	assume SecMask_$_791 == SecMask_$_790[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next := SecMask_$_790[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N := SecMask_$_790[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_791);
	if ($_$_condition_$905) { goto anon2175_Then; } else { goto anon2175_Else; }
anon2175_Then:
	assume $_$_condition_$905;
	assume SecMask_$_791[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N] < 0;
	assume SecMask_$_792 == SecMask_$_791[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next := SecMask_$_791[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N := 0]];
	assume SecMask_$_793 == SecMask_$_792;
	goto anon1399;
anon2175_Else:
	assume !$_$_condition_$905;
	assume 0 <= SecMask_$_791[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N];
	assume SecMask_$_793 == SecMask_$_791;
	goto anon1399;
anon1399:
	assume wf(Heap_$_37,SecMask_$_793,SecMask_$_793);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_793);
	assume SecMask_$_794 == SecMask_$_793[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu := SecMask_$_793[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N := SecMask_$_793[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_794);
	if ($_$_condition_$906) { goto anon2176_Then; } else { goto anon2176_Else; }
anon2176_Then:
	assume $_$_condition_$906;
	assume SecMask_$_794[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N] < 0;
	assume SecMask_$_795 == SecMask_$_794[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu := SecMask_$_794[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N := 0]];
	assume SecMask_$_796 == SecMask_$_795;
	goto anon1401;
anon2176_Else:
	assume !$_$_condition_$906;
	assume 0 <= SecMask_$_794[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N];
	assume SecMask_$_796 == SecMask_$_794;
	goto anon1401;
anon1401:
	assume wf(Heap_$_37,SecMask_$_796,SecMask_$_796);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_796);
	if ($_$_condition_$907) { goto anon2177_Then; } else { goto anon2177_Else; }
anon2177_Then:
	assume $_$_condition_$907;
	assume $_$_condition_$907 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null);
	assume SecMask_$_797 == SecMask_$_796[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight := SecMask_$_796[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R := SecMask_$_796[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R] - Fractions(100)]];
	if ($_$_condition_$908) { goto anon2178_Then; } else { goto anon2178_Else; }
anon2177_Else:
	assume !$_$_condition_$907;
	assume $_$_condition_$907 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null;
	assume SecMask_$_842 == SecMask_$_796;
	goto anon1468;
anon2178_Then:
	assume $_$_condition_$908;
	assume SecMask_$_797[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R] < 0;
	assume SecMask_$_798 == SecMask_$_797[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight := SecMask_$_797[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R := 0]];
	assume SecMask_$_799 == SecMask_$_798;
	goto anon1404;
anon2178_Else:
	assume !$_$_condition_$908;
	assume 0 <= SecMask_$_797[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R];
	assume SecMask_$_799 == SecMask_$_797;
	goto anon1404;
anon1468:
	assume wf(Heap_$_37,SecMask_$_842,SecMask_$_842);
	assume SecMask_$_843 == SecMask_$_842;
	goto anon1469;
anon1404:
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[oldNext#4_$_0,Node.next]);
	if ($_$_condition_$909) { goto anon2179_Then; } else { goto anon2179_Else; }
anon2179_Then:
	assume $_$_condition_$909;
	assume $_$_condition_$909 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume (((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$910) { goto anon2180_Then; } else { goto anon2180_Else; }
anon2179_Else:
	assume !$_$_condition_$909;
	assume $_$_condition_$909 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume !((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume SecMask_$_841 == SecMask_$_799;
	goto anon1467;
anon2180_Then:
	assume $_$_condition_$910;
	assume $_$_condition_$910 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume (((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0;
	goto $branchMerge_135;
anon2180_Else:
	assume !$_$_condition_$910;
	assume $_$_condition_$910 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume !((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$912) { goto anon2181_Then; } else { goto anon2181_Else; }
anon1467:
	assume wf(Heap_$_37,SecMask_$_841,SecMask_$_841);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_841);
	assume SecMask_$_842 == SecMask_$_841;
	goto anon1468;
anon2183_Then:
	assume $_$_condition_$911;
	assume $_$_condition_$911 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu],Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu]);
	goto anon1414;
anon2183_Else:
	assume !$_$_condition_$911;
	assume $_$_condition_$911 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null;
	goto anon1414;
anon2181_Then:
	assume $_$_condition_$912;
	assume $_$_condition_$912 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume ((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1;
	goto $branchMerge_135;
anon2181_Else:
	assume !$_$_condition_$912;
	assume $_$_condition_$912 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume !(((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	if ($_$_condition_$914) { goto anon2182_Then; } else { goto anon2182_Else; }
anon2182_Then:
	assume $_$_condition_$914;
	assume $_$_condition_$914 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume (((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1;
	goto $branchMerge_135;
anon2182_Else:
	assume !$_$_condition_$914;
	assume $_$_condition_$914 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume !((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	goto $branchMerge_135;
anon1414:
	assume SecMask_$_800 == SecMask_$_799[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev := SecMask_$_799[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N := SecMask_$_799[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_800);
	if ($_$_condition_$917) { goto anon2184_Then; } else { goto anon2184_Else; }
anon2184_Then:
	assume $_$_condition_$917;
	assume SecMask_$_800[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N] < 0;
	assume SecMask_$_801 == SecMask_$_800[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev := SecMask_$_800[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N := 0]];
	assume SecMask_$_802 == SecMask_$_801;
	goto anon1416;
anon2184_Else:
	assume !$_$_condition_$917;
	assume 0 <= SecMask_$_800[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N];
	assume SecMask_$_802 == SecMask_$_800;
	goto anon1416;
anon1416:
	assume wf(Heap_$_37,SecMask_$_802,SecMask_$_802);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_802);
	assume SecMask_$_803 == SecMask_$_802[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next := SecMask_$_802[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N := SecMask_$_802[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_803);
	if ($_$_condition_$918) { goto anon2185_Then; } else { goto anon2185_Else; }
anon2185_Then:
	assume $_$_condition_$918;
	assume SecMask_$_803[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N] < 0;
	assume SecMask_$_804 == SecMask_$_803[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next := SecMask_$_803[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N := 0]];
	assume SecMask_$_805 == SecMask_$_804;
	goto anon1418;
anon2185_Else:
	assume !$_$_condition_$918;
	assume 0 <= SecMask_$_803[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N];
	assume SecMask_$_805 == SecMask_$_803;
	goto anon1418;
anon1418:
	assume wf(Heap_$_37,SecMask_$_805,SecMask_$_805);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_805);
	assume SecMask_$_806 == SecMask_$_805[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu := SecMask_$_805[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N := SecMask_$_805[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_806);
	if ($_$_condition_$919) { goto anon2186_Then; } else { goto anon2186_Else; }
anon2186_Then:
	assume $_$_condition_$919;
	assume SecMask_$_806[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N] < 0;
	assume SecMask_$_807 == SecMask_$_806[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu := SecMask_$_806[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N := 0]];
	assume SecMask_$_808 == SecMask_$_807;
	goto anon1420;
anon2186_Else:
	assume !$_$_condition_$919;
	assume 0 <= SecMask_$_806[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N];
	assume SecMask_$_808 == SecMask_$_806;
	goto anon1420;
anon1420:
	assume wf(Heap_$_37,SecMask_$_808,SecMask_$_808);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_808);
	if ($_$_condition_$920) { goto anon2187_Then; } else { goto anon2187_Else; }
anon2187_Then:
	assume $_$_condition_$920;
	assume $_$_condition_$920 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null);
	assume SecMask_$_809 == SecMask_$_808[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight := SecMask_$_808[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R := SecMask_$_808[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R] - Fractions(100)]];
	if ($_$_condition_$921) { goto anon2188_Then; } else { goto anon2188_Else; }
anon2187_Else:
	assume !$_$_condition_$920;
	assume $_$_condition_$920 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null;
	assume SecMask_$_840 == SecMask_$_808;
	goto anon1466;
anon2188_Then:
	assume $_$_condition_$921;
	assume SecMask_$_809[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R] < 0;
	assume SecMask_$_810 == SecMask_$_809[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight := SecMask_$_809[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R := 0]];
	assume SecMask_$_811 == SecMask_$_810;
	goto anon1423;
anon2188_Else:
	assume !$_$_condition_$921;
	assume 0 <= SecMask_$_809[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R];
	assume SecMask_$_811 == SecMask_$_809;
	goto anon1423;
anon1466:
	assume wf(Heap_$_37,SecMask_$_840,SecMask_$_840);
	assume SecMask_$_841 == SecMask_$_840;
	goto anon1467;
anon1423:
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[oldNext#4_$_0,Node.next]);
	if ($_$_condition_$922) { goto anon2189_Then; } else { goto anon2189_Else; }
anon2189_Then:
	assume $_$_condition_$922;
	assume $_$_condition_$922 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume (((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$923) { goto anon2190_Then; } else { goto anon2190_Else; }
anon2189_Else:
	assume !$_$_condition_$922;
	assume $_$_condition_$922 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume !((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume SecMask_$_839 == SecMask_$_811;
	goto anon1465;
anon2190_Then:
	assume $_$_condition_$923;
	assume $_$_condition_$923 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume (((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0;
	goto $branchMerge_136;
anon2190_Else:
	assume !$_$_condition_$923;
	assume $_$_condition_$923 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume !((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$925) { goto anon2191_Then; } else { goto anon2191_Else; }
anon1465:
	assume wf(Heap_$_37,SecMask_$_839,SecMask_$_839);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_839);
	assume SecMask_$_840 == SecMask_$_839;
	goto anon1466;
anon2193_Then:
	assume $_$_condition_$924;
	assume $_$_condition_$924 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu],Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu]);
	goto anon1433;
anon2193_Else:
	assume !$_$_condition_$924;
	assume $_$_condition_$924 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null;
	goto anon1433;
anon2191_Then:
	assume $_$_condition_$925;
	assume $_$_condition_$925 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume ((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1;
	goto $branchMerge_136;
anon2191_Else:
	assume !$_$_condition_$925;
	assume $_$_condition_$925 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume !(((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	if ($_$_condition_$927) { goto anon2192_Then; } else { goto anon2192_Else; }
anon2192_Then:
	assume $_$_condition_$927;
	assume $_$_condition_$927 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume (((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1;
	goto $branchMerge_136;
anon2192_Else:
	assume !$_$_condition_$927;
	assume $_$_condition_$927 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume !((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	goto $branchMerge_136;
anon1433:
	assume SecMask_$_812 == SecMask_$_811[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev := SecMask_$_811[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N := SecMask_$_811[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_812);
	if ($_$_condition_$930) { goto anon2194_Then; } else { goto anon2194_Else; }
anon2194_Then:
	assume $_$_condition_$930;
	assume SecMask_$_812[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N] < 0;
	assume SecMask_$_813 == SecMask_$_812[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev := SecMask_$_812[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N := 0]];
	assume SecMask_$_814 == SecMask_$_813;
	goto anon1435;
anon2194_Else:
	assume !$_$_condition_$930;
	assume 0 <= SecMask_$_812[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N];
	assume SecMask_$_814 == SecMask_$_812;
	goto anon1435;
anon1435:
	assume wf(Heap_$_37,SecMask_$_814,SecMask_$_814);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_814);
	assume SecMask_$_815 == SecMask_$_814[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next := SecMask_$_814[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N := SecMask_$_814[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_815);
	if ($_$_condition_$931) { goto anon2195_Then; } else { goto anon2195_Else; }
anon2195_Then:
	assume $_$_condition_$931;
	assume SecMask_$_815[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N] < 0;
	assume SecMask_$_816 == SecMask_$_815[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next := SecMask_$_815[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N := 0]];
	assume SecMask_$_817 == SecMask_$_816;
	goto anon1437;
anon2195_Else:
	assume !$_$_condition_$931;
	assume 0 <= SecMask_$_815[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N];
	assume SecMask_$_817 == SecMask_$_815;
	goto anon1437;
anon1437:
	assume wf(Heap_$_37,SecMask_$_817,SecMask_$_817);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_817);
	assume SecMask_$_818 == SecMask_$_817[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu := SecMask_$_817[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N := SecMask_$_817[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_818);
	if ($_$_condition_$932) { goto anon2196_Then; } else { goto anon2196_Else; }
anon2196_Then:
	assume $_$_condition_$932;
	assume SecMask_$_818[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N] < 0;
	assume SecMask_$_819 == SecMask_$_818[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu := SecMask_$_818[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N := 0]];
	assume SecMask_$_820 == SecMask_$_819;
	goto anon1439;
anon2196_Else:
	assume !$_$_condition_$932;
	assume 0 <= SecMask_$_818[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N];
	assume SecMask_$_820 == SecMask_$_818;
	goto anon1439;
anon1439:
	assume wf(Heap_$_37,SecMask_$_820,SecMask_$_820);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_820);
	if ($_$_condition_$933) { goto anon2197_Then; } else { goto anon2197_Else; }
anon2197_Then:
	assume $_$_condition_$933;
	assume $_$_condition_$933 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null);
	assume SecMask_$_821 == SecMask_$_820[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight := SecMask_$_820[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R := SecMask_$_820[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R] - Fractions(100)]];
	if ($_$_condition_$934) { goto anon2198_Then; } else { goto anon2198_Else; }
anon2197_Else:
	assume !$_$_condition_$933;
	assume $_$_condition_$933 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null;
	assume SecMask_$_838 == SecMask_$_820;
	goto anon1464;
anon2198_Then:
	assume $_$_condition_$934;
	assume SecMask_$_821[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R] < 0;
	assume SecMask_$_822 == SecMask_$_821[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight := SecMask_$_821[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R := 0]];
	assume SecMask_$_823 == SecMask_$_822;
	goto anon1442;
anon2198_Else:
	assume !$_$_condition_$934;
	assume 0 <= SecMask_$_821[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R];
	assume SecMask_$_823 == SecMask_$_821;
	goto anon1442;
anon1464:
	assume wf(Heap_$_37,SecMask_$_838,SecMask_$_838);
	assume SecMask_$_839 == SecMask_$_838;
	goto anon1465;
anon1442:
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next]);
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == Heap_$_37[oldNext#4_$_0,Node.next]);
	if ($_$_condition_$935) { goto anon2199_Then; } else { goto anon2199_Else; }
anon2199_Then:
	assume $_$_condition_$935;
	assume $_$_condition_$935 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume (((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$936) { goto anon2200_Then; } else { goto anon2200_Else; }
anon2199_Else:
	assume !$_$_condition_$935;
	assume $_$_condition_$935 <==> ((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume !((((false || ((((((((((((((((((((predVer#_611_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_610_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_502_$_1) && cond#_471_$_1) && cond#_549_$_0) && cond#_408_$_0) && cond#_386_$_1) && cond#_573_$_1) && cond#_501_$_0) && cond#_466_$_0) && cond#_477_$_0) && cond#_453_$_1) && cond#_608_$_0) && cond#_476_$_0) && cond#_430_$_1) && cond#_609_$_1) && cond#_452_$_0) && predFlag#_612_$_1)) || ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1)) || (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1)) || ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0));
	assume SecMask_$_837 == SecMask_$_823;
	goto anon1463;
anon2200_Then:
	assume $_$_condition_$936;
	assume $_$_condition_$936 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume (((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0;
	goto $branchMerge_137;
anon2200_Else:
	assume !$_$_condition_$936;
	assume $_$_condition_$936 <==> ((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	assume !((((predVer#_356_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_355_$_1 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && predFlag#_357_$_0);
	if ($_$_condition_$938) { goto anon2201_Then; } else { goto anon2201_Else; }
anon1463:
	assume wf(Heap_$_37,SecMask_$_837,SecMask_$_837);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_837);
	assume SecMask_$_838 == SecMask_$_837;
	goto anon1464;
anon2203_Then:
	assume $_$_condition_$937;
	assume $_$_condition_$937 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null);
	assume MuBelow(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu],Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu]);
	goto anon1452;
anon2203_Else:
	assume !$_$_condition_$937;
	assume $_$_condition_$937 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null;
	goto anon1452;
anon2201_Then:
	assume $_$_condition_$938;
	assume $_$_condition_$938 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume ((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1;
	goto $branchMerge_137;
anon2201_Else:
	assume !$_$_condition_$938;
	assume $_$_condition_$938 <==> (((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	assume !(((((((predVer#_422_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_421_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && predFlag#_423_$_1);
	if ($_$_condition_$940) { goto anon2202_Then; } else { goto anon2202_Else; }
anon2202_Then:
	assume $_$_condition_$940;
	assume $_$_condition_$940 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume (((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1;
	goto $branchMerge_137;
anon2202_Else:
	assume !$_$_condition_$940;
	assume $_$_condition_$940 <==> ((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	assume !((((((((predVer#_444_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight]) && (predRec#_443_$_2 == Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next])) && true) && cond#_364_$_0) && cond#_386_$_1) && cond#_408_$_0) && cond#_430_$_1) && predFlag#_445_$_1);
	goto $branchMerge_137;
anon1452:
	assume SecMask_$_824 == SecMask_$_823[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev := SecMask_$_823[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N := SecMask_$_823[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_824);
	if ($_$_condition_$943) { goto anon2204_Then; } else { goto anon2204_Else; }
anon2204_Then:
	assume $_$_condition_$943;
	assume SecMask_$_824[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N] < 0;
	assume SecMask_$_825 == SecMask_$_824[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev := SecMask_$_824[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N := 0]];
	assume SecMask_$_826 == SecMask_$_825;
	goto anon1454;
anon2204_Else:
	assume !$_$_condition_$943;
	assume 0 <= SecMask_$_824[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.prev][perm$N];
	assume SecMask_$_826 == SecMask_$_824;
	goto anon1454;
anon1454:
	assume wf(Heap_$_37,SecMask_$_826,SecMask_$_826);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_826);
	assume SecMask_$_827 == SecMask_$_826[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next := SecMask_$_826[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N := SecMask_$_826[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_827);
	if ($_$_condition_$944) { goto anon2205_Then; } else { goto anon2205_Else; }
anon2205_Then:
	assume $_$_condition_$944;
	assume SecMask_$_827[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N] < 0;
	assume SecMask_$_828 == SecMask_$_827[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next := SecMask_$_827[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N := 0]];
	assume SecMask_$_829 == SecMask_$_828;
	goto anon1456;
anon2205_Else:
	assume !$_$_condition_$944;
	assume 0 <= SecMask_$_827[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next][perm$N];
	assume SecMask_$_829 == SecMask_$_827;
	goto anon1456;
anon1456:
	assume wf(Heap_$_37,SecMask_$_829,SecMask_$_829);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_829);
	assume SecMask_$_830 == SecMask_$_829[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu := SecMask_$_829[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N := SecMask_$_829[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N] - 1]];
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_830);
	if ($_$_condition_$945) { goto anon2206_Then; } else { goto anon2206_Else; }
anon2206_Then:
	assume $_$_condition_$945;
	assume SecMask_$_830[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N] < 0;
	assume SecMask_$_831 == SecMask_$_830[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu := SecMask_$_830[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N := 0]];
	assume SecMask_$_832 == SecMask_$_831;
	goto anon1458;
anon2206_Else:
	assume !$_$_condition_$945;
	assume 0 <= SecMask_$_830[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],mu][perm$N];
	assume SecMask_$_832 == SecMask_$_830;
	goto anon1458;
anon1458:
	assume wf(Heap_$_37,SecMask_$_832,SecMask_$_832);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_832);
	if ($_$_condition_$946) { goto anon2207_Then; } else { goto anon2207_Else; }
anon2207_Then:
	assume $_$_condition_$946;
	assume $_$_condition_$946 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume !(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null);
	assume SecMask_$_833 == SecMask_$_832[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight := SecMask_$_832[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R := SecMask_$_832[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R] - Fractions(100)]];
	if ($_$_condition_$947) { goto anon2208_Then; } else { goto anon2208_Else; }
anon2207_Else:
	assume !$_$_condition_$946;
	assume $_$_condition_$946 <==> (!(Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null));
	assume Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next] == null;
	assume SecMask_$_836 == SecMask_$_832;
	goto anon1462;
anon2208_Then:
	assume $_$_condition_$947;
	assume SecMask_$_833[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R] < 0;
	assume SecMask_$_834 == SecMask_$_833[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight := SecMask_$_833[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R := 0]];
	assume SecMask_$_835 == SecMask_$_834;
	goto anon1461;
anon2208_Else:
	assume !$_$_condition_$947;
	assume 0 <= SecMask_$_833[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[Heap_$_37[oldNext#4_$_0,Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.next],Node.invRight][perm$R];
	assume SecMask_$_835 == SecMask_$_833;
	goto anon1461;
anon1462:
	assume wf(Heap_$_37,SecMask_$_836,SecMask_$_836);
	assume SecMask_$_837 == SecMask_$_836;
	goto anon1463;
anon1461:
	assume wf(Heap_$_37,SecMask_$_835,SecMask_$_835);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_835);
	assume SecMask_$_836 == SecMask_$_835;
	goto anon1462;
anon1487:
	assume IsGoodMask(exhaleMask#_654_$_1);
	assume wf(Heap_$_37,exhaleMask#_654_$_1,SecMask_$_859);
	assume wf(Heap_$_37,Mask_$_159,SecMask_$_859);
	assume SecMask_$_860 == SecMask_$_859;
	assume exhaleMask#_654_$_2 == exhaleMask#_654_$_1;
	goto anon1488;
$branchMerge_0:
	if ($_$_condition_$1) { goto anon1500_Then; } else { goto anon1500_Else; }
$branchMerge_1:
	if ($_$_condition_$5) { goto anon1511_Then; } else { goto anon1511_Else; }
$branchMerge_2:
	if ($_$_condition_$6) { goto anon1503_Then; } else { goto anon1503_Else; }
$branchMerge_3:
	if ($_$_condition_$13) { goto anon1509_Then; } else { goto anon1509_Else; }
$branchMerge_4:
	if ($_$_condition_$19) { goto anon1521_Then; } else { goto anon1521_Else; }
$branchMerge_5:
	if ($_$_condition_$27) { goto anon1538_Then; } else { goto anon1538_Else; }
$branchMerge_6:
	if ($_$_condition_$46) { goto anon1557_Then; } else { goto anon1557_Else; }
$branchMerge_7:
	if ($_$_condition_$47) { goto anon1551_Then; } else { goto anon1551_Else; }
$branchMerge_8:
	if ($_$_condition_$58) { goto anon1561_Then; } else { goto anon1561_Else; }
$branchMerge_9:
	if ($_$_condition_$69) { goto anon1576_Then; } else { goto anon1576_Else; }
$branchMerge_10:
	if ($_$_condition_$88) { goto anon1595_Then; } else { goto anon1595_Else; }
$branchMerge_11:
	if ($_$_condition_$89) { goto anon1589_Then; } else { goto anon1589_Else; }
$branchMerge_12:
	if ($_$_condition_$100) { goto anon1599_Then; } else { goto anon1599_Else; }
$branchMerge_13:
	if ($_$_condition_$111) { goto anon1609_Then; } else { goto anon1609_Else; }
$branchMerge_14:
	if ($_$_condition_$113) { goto anon1610_Then; } else { goto anon1610_Else; }
$branchMerge_15:
	if ($_$_condition_$115) { goto anon1611_Then; } else { goto anon1611_Else; }
$branchMerge_16:
	if ($_$_condition_$117) { goto anon1612_Then; } else { goto anon1612_Else; }
$branchMerge_17:
	if ($_$_condition_$119) { goto anon1613_Then; } else { goto anon1613_Else; }
$branchMerge_18:
	if ($_$_condition_$121) { goto anon1614_Then; } else { goto anon1614_Else; }
$branchMerge_19:
	if ($_$_condition_$123) { goto anon1615_Then; } else { goto anon1615_Else; }
$branchMerge_20:
	if ($_$_condition_$126) { goto anon1617_Then; } else { goto anon1617_Else; }
$branchMerge_21:
	if ($_$_condition_$128) { goto anon1618_Then; } else { goto anon1618_Else; }
$branchMerge_22:
	if ($_$_condition_$130) { goto anon1619_Then; } else { goto anon1619_Else; }
$branchMerge_23:
	if ($_$_condition_$132) { goto anon1620_Then; } else { goto anon1620_Else; }
$branchMerge_24:
	if ($_$_condition_$134) { goto anon1621_Then; } else { goto anon1621_Else; }
$branchMerge_25:
	if ($_$_condition_$136) { goto anon1622_Then; } else { goto anon1622_Else; }
$branchMerge_26:
	if ($_$_condition_$138) { goto anon1623_Then; } else { goto anon1623_Else; }
$branchMerge_27:
	if ($_$_condition_$141) { goto anon1625_Then; } else { goto anon1625_Else; }
$branchMerge_28:
	if ($_$_condition_$143) { goto anon1626_Then; } else { goto anon1626_Else; }
$branchMerge_29:
	if ($_$_condition_$145) { goto anon1627_Then; } else { goto anon1627_Else; }
$branchMerge_30:
	if ($_$_condition_$147) { goto anon1628_Then; } else { goto anon1628_Else; }
$branchMerge_31:
	if ($_$_condition_$149) { goto anon1629_Then; } else { goto anon1629_Else; }
$branchMerge_32:
	if ($_$_condition_$151) { goto anon1630_Then; } else { goto anon1630_Else; }
$branchMerge_33:
	if ($_$_condition_$153) { goto anon1631_Then; } else { goto anon1631_Else; }
$branchMerge_34:
	if ($_$_condition_$157) { goto anon1634_Then; } else { goto anon1634_Else; }
$branchMerge_35:
	if ($_$_condition_$159) { goto anon1635_Then; } else { goto anon1635_Else; }
$branchMerge_36:
	if ($_$_condition_$161) { goto anon1636_Then; } else { goto anon1636_Else; }
$branchMerge_37:
	if ($_$_condition_$163) { goto anon1637_Then; } else { goto anon1637_Else; }
$branchMerge_38:
	if ($_$_condition_$165) { goto anon1638_Then; } else { goto anon1638_Else; }
$branchMerge_39:
	if ($_$_condition_$167) { goto anon1639_Then; } else { goto anon1639_Else; }
$branchMerge_40:
	if ($_$_condition_$169) { goto anon1640_Then; } else { goto anon1640_Else; }
$branchMerge_41:
	if ($_$_condition_$173) { goto anon1643_Then; } else { goto anon1643_Else; }
$branchMerge_42:
	if ($_$_condition_$175) { goto anon1644_Then; } else { goto anon1644_Else; }
$branchMerge_43:
	if ($_$_condition_$177) { goto anon1645_Then; } else { goto anon1645_Else; }
$branchMerge_44:
	if ($_$_condition_$179) { goto anon1646_Then; } else { goto anon1646_Else; }
$branchMerge_45:
	if ($_$_condition_$181) { goto anon1647_Then; } else { goto anon1647_Else; }
$branchMerge_46:
	if ($_$_condition_$183) { goto anon1648_Then; } else { goto anon1648_Else; }
$branchMerge_47:
	if ($_$_condition_$185) { goto anon1649_Then; } else { goto anon1649_Else; }
$branchMerge_48:
	if ($_$_condition_$190) { goto anon1653_Then; } else { goto anon1653_Else; }
$branchMerge_49:
	if ($_$_condition_$192) { goto anon1654_Then; } else { goto anon1654_Else; }
$branchMerge_50:
	if ($_$_condition_$194) { goto anon1655_Then; } else { goto anon1655_Else; }
$branchMerge_51:
	if ($_$_condition_$197) { goto anon1657_Then; } else { goto anon1657_Else; }
$branchMerge_52:
	if ($_$_condition_$199) { goto anon1658_Then; } else { goto anon1658_Else; }
$branchMerge_53:
	if ($_$_condition_$201) { goto anon1659_Then; } else { goto anon1659_Else; }
$branchMerge_54:
	if ($_$_condition_$206) { goto anon1663_Then; } else { goto anon1663_Else; }
$branchMerge_55:
	if ($_$_condition_$208) { goto anon1664_Then; } else { goto anon1664_Else; }
$branchMerge_56:
	if ($_$_condition_$210) { goto anon1665_Then; } else { goto anon1665_Else; }
$branchMerge_57:
	if ($_$_condition_$213) { goto anon1667_Then; } else { goto anon1667_Else; }
$branchMerge_58:
	if ($_$_condition_$215) { goto anon1668_Then; } else { goto anon1668_Else; }
$branchMerge_59:
	if ($_$_condition_$217) { goto anon1669_Then; } else { goto anon1669_Else; }
$branchMerge_60:
	if ($_$_condition_$220) { goto anon1671_Then; } else { goto anon1671_Else; }
$branchMerge_61:
	if ($_$_condition_$222) { goto anon1672_Then; } else { goto anon1672_Else; }
$branchMerge_62:
	if ($_$_condition_$224) { goto anon1673_Then; } else { goto anon1673_Else; }
$branchMerge_63:
	if ($_$_condition_$227) { goto anon1675_Then; } else { goto anon1675_Else; }
$branchMerge_64:
	if ($_$_condition_$229) { goto anon1676_Then; } else { goto anon1676_Else; }
$branchMerge_65:
	if ($_$_condition_$231) { goto anon1677_Then; } else { goto anon1677_Else; }
$branchMerge_66:
	if ($_$_condition_$235) { goto anon1680_Then; } else { goto anon1680_Else; }
$branchMerge_67:
	if ($_$_condition_$237) { goto anon1681_Then; } else { goto anon1681_Else; }
$branchMerge_68:
	if ($_$_condition_$239) { goto anon1682_Then; } else { goto anon1682_Else; }
$branchMerge_69:
	if ($_$_condition_$242) { goto anon1684_Then; } else { goto anon1684_Else; }
$branchMerge_70:
	if ($_$_condition_$244) { goto anon1685_Then; } else { goto anon1685_Else; }
$branchMerge_71:
	if ($_$_condition_$246) { goto anon1686_Then; } else { goto anon1686_Else; }
$branchMerge_72:
	if ($_$_condition_$250) { goto anon1689_Then; } else { goto anon1689_Else; }
$branchMerge_73:
	if ($_$_condition_$252) { goto anon1690_Then; } else { goto anon1690_Else; }
$branchMerge_74:
	if ($_$_condition_$254) { goto anon1691_Then; } else { goto anon1691_Else; }
$branchMerge_75:
	if ($_$_condition_$257) { goto anon1693_Then; } else { goto anon1693_Else; }
$branchMerge_76:
	if ($_$_condition_$259) { goto anon1694_Then; } else { goto anon1694_Else; }
$branchMerge_77:
	if ($_$_condition_$261) { goto anon1695_Then; } else { goto anon1695_Else; }
$branchMerge_78:
	if ($_$_condition_$264) { goto anon1697_Then; } else { goto anon1697_Else; }
$branchMerge_79:
	if ($_$_condition_$268) { goto anon1700_Then; } else { goto anon1700_Else; }
$branchMerge_80:
	if ($_$_condition_$285) { goto anon1716_Then; } else { goto anon1716_Else; }
$branchMerge_81:
	if ($_$_condition_$289) { goto anon1719_Then; } else { goto anon1719_Else; }
$branchMerge_82:
	if ($_$_condition_$294) { goto anon1964_Then; } else { goto anon1964_Else; }
$branchMerge_83:
	if ($_$_condition_$295) { goto anon1724_Then; } else { goto anon1724_Else; }
$branchMerge_84:
	if ($_$_condition_$299) { goto anon1725_Then; } else { goto anon1725_Else; }
$branchMerge_85:
	if ($_$_condition_$306) { goto anon1852_Then; } else { goto anon1852_Else; }
$branchMerge_86:
	if ($_$_condition_$307) { goto anon1731_Then; } else { goto anon1731_Else; }
$branchMerge_87:
	if ($_$_condition_$310) { goto anon1736_Then; } else { goto anon1736_Else; }
$branchMerge_88:
	if ($_$_condition_$325) { goto anon1747_Then; } else { goto anon1747_Else; }
$branchMerge_89:
	if ($_$_condition_$340) { goto anon1758_Then; } else { goto anon1758_Else; }
$branchMerge_90:
	if ($_$_condition_$355) { goto anon1769_Then; } else { goto anon1769_Else; }
$branchMerge_91:
	if ($_$_condition_$370) { goto anon1780_Then; } else { goto anon1780_Else; }
$branchMerge_92:
	if ($_$_condition_$385) { goto anon1791_Then; } else { goto anon1791_Else; }
$branchMerge_93:
	if ($_$_condition_$400) { goto anon1802_Then; } else { goto anon1802_Else; }
$branchMerge_94:
	if ($_$_condition_$415) { goto anon1813_Then; } else { goto anon1813_Else; }
$branchMerge_95:
	if ($_$_condition_$430) { goto anon1824_Then; } else { goto anon1824_Else; }
$branchMerge_96:
	if ($_$_condition_$445) { goto anon1835_Then; } else { goto anon1835_Else; }
$branchMerge_97:
	if ($_$_condition_$460) { goto anon1846_Then; } else { goto anon1846_Else; }
$branchMerge_98:
	if ($_$_condition_$475) { goto anon1854_Then; } else { goto anon1854_Else; }
$branchMerge_99:
	if ($_$_condition_$478) { goto anon1858_Then; } else { goto anon1858_Else; }
$branchMerge_100:
	if ($_$_condition_$491) { goto anon1868_Then; } else { goto anon1868_Else; }
$branchMerge_101:
	if ($_$_condition_$504) { goto anon1878_Then; } else { goto anon1878_Else; }
$branchMerge_102:
	if ($_$_condition_$517) { goto anon1888_Then; } else { goto anon1888_Else; }
$branchMerge_103:
	if ($_$_condition_$530) { goto anon1898_Then; } else { goto anon1898_Else; }
$branchMerge_104:
	if ($_$_condition_$543) { goto anon1908_Then; } else { goto anon1908_Else; }
$branchMerge_105:
	if ($_$_condition_$556) { goto anon1918_Then; } else { goto anon1918_Else; }
$branchMerge_106:
	if ($_$_condition_$569) { goto anon1928_Then; } else { goto anon1928_Else; }
$branchMerge_107:
	if ($_$_condition_$582) { goto anon1938_Then; } else { goto anon1938_Else; }
$branchMerge_108:
	if ($_$_condition_$595) { goto anon1948_Then; } else { goto anon1948_Else; }
$branchMerge_109:
	if ($_$_condition_$608) { goto anon1958_Then; } else { goto anon1958_Else; }
$branchMerge_110:
	if ($_$_condition_$623) { goto anon2209_Then; } else { goto anon2209_Else; }
$branchMerge_111:
	if ($_$_condition_$624) { goto anon1969_Then; } else { goto anon1969_Else; }
$branchMerge_112:
	if ($_$_condition_$628) { goto anon1970_Then; } else { goto anon1970_Else; }
$branchMerge_113:
	if ($_$_condition_$635) { goto anon2097_Then; } else { goto anon2097_Else; }
$branchMerge_114:
	if ($_$_condition_$636) { goto anon1976_Then; } else { goto anon1976_Else; }
$branchMerge_115:
	if ($_$_condition_$639) { goto anon1981_Then; } else { goto anon1981_Else; }
$branchMerge_116:
	if ($_$_condition_$654) { goto anon1992_Then; } else { goto anon1992_Else; }
$branchMerge_117:
	if ($_$_condition_$669) { goto anon2003_Then; } else { goto anon2003_Else; }
$branchMerge_118:
	if ($_$_condition_$684) { goto anon2014_Then; } else { goto anon2014_Else; }
$branchMerge_119:
	if ($_$_condition_$699) { goto anon2025_Then; } else { goto anon2025_Else; }
$branchMerge_120:
	if ($_$_condition_$714) { goto anon2036_Then; } else { goto anon2036_Else; }
$branchMerge_121:
	if ($_$_condition_$729) { goto anon2047_Then; } else { goto anon2047_Else; }
$branchMerge_122:
	if ($_$_condition_$744) { goto anon2058_Then; } else { goto anon2058_Else; }
$branchMerge_123:
	if ($_$_condition_$759) { goto anon2069_Then; } else { goto anon2069_Else; }
$branchMerge_124:
	if ($_$_condition_$774) { goto anon2080_Then; } else { goto anon2080_Else; }
$branchMerge_125:
	if ($_$_condition_$789) { goto anon2091_Then; } else { goto anon2091_Else; }
$branchMerge_126:
	if ($_$_condition_$804) { goto anon2099_Then; } else { goto anon2099_Else; }
$branchMerge_127:
	if ($_$_condition_$807) { goto anon2103_Then; } else { goto anon2103_Else; }
$branchMerge_128:
	if ($_$_condition_$820) { goto anon2113_Then; } else { goto anon2113_Else; }
$branchMerge_129:
	if ($_$_condition_$833) { goto anon2123_Then; } else { goto anon2123_Else; }
$branchMerge_130:
	if ($_$_condition_$846) { goto anon2133_Then; } else { goto anon2133_Else; }
$branchMerge_131:
	if ($_$_condition_$859) { goto anon2143_Then; } else { goto anon2143_Else; }
$branchMerge_132:
	if ($_$_condition_$872) { goto anon2153_Then; } else { goto anon2153_Else; }
$branchMerge_133:
	if ($_$_condition_$885) { goto anon2163_Then; } else { goto anon2163_Else; }
$branchMerge_134:
	if ($_$_condition_$898) { goto anon2173_Then; } else { goto anon2173_Else; }
$branchMerge_135:
	if ($_$_condition_$911) { goto anon2183_Then; } else { goto anon2183_Else; }
$branchMerge_136:
	if ($_$_condition_$924) { goto anon2193_Then; } else { goto anon2193_Else; }
$branchMerge_137:
	if ($_$_condition_$937) { goto anon2203_Then; } else { goto anon2203_Else; }
}
